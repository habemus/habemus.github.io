(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.habemus = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var asn1 = exports;

asn1.bignum = require('bn.js');

asn1.define = require('./asn1/api').define;
asn1.base = require('./asn1/base');
asn1.constants = require('./asn1/constants');
asn1.decoders = require('./asn1/decoders');
asn1.encoders = require('./asn1/encoders');

},{"./asn1/api":2,"./asn1/base":4,"./asn1/constants":8,"./asn1/decoders":10,"./asn1/encoders":13,"bn.js":16}],2:[function(require,module,exports){
var asn1 = require('../asn1');
var inherits = require('inherits');

var api = exports;

api.define = function define(name, body) {
  return new Entity(name, body);
};

function Entity(name, body) {
  this.name = name;
  this.body = body;

  this.decoders = {};
  this.encoders = {};
};

Entity.prototype._createNamed = function createNamed(base) {
  var named;
  try {
    named = require('vm').runInThisContext(
      '(function ' + this.name + '(entity) {\n' +
      '  this._initNamed(entity);\n' +
      '})'
    );
  } catch (e) {
    named = function (entity) {
      this._initNamed(entity);
    };
  }
  inherits(named, base);
  named.prototype._initNamed = function initnamed(entity) {
    base.call(this, entity);
  };

  return new named(this);
};

Entity.prototype._getDecoder = function _getDecoder(enc) {
  // Lazily create decoder
  if (!this.decoders.hasOwnProperty(enc))
    this.decoders[enc] = this._createNamed(asn1.decoders[enc]);
  return this.decoders[enc];
};

Entity.prototype.decode = function decode(data, enc, options) {
  return this._getDecoder(enc).decode(data, options);
};

Entity.prototype._getEncoder = function _getEncoder(enc) {
  // Lazily create encoder
  if (!this.encoders.hasOwnProperty(enc))
    this.encoders[enc] = this._createNamed(asn1.encoders[enc]);
  return this.encoders[enc];
};

Entity.prototype.encode = function encode(data, enc, /* internal */ reporter) {
  return this._getEncoder(enc).encode(data, reporter);
};

},{"../asn1":1,"inherits":95,"vm":201}],3:[function(require,module,exports){
var inherits = require('inherits');
var Reporter = require('../base').Reporter;
var Buffer = require('buffer').Buffer;

function DecoderBuffer(base, options) {
  Reporter.call(this, options);
  if (!Buffer.isBuffer(base)) {
    this.error('Input not Buffer');
    return;
  }

  this.base = base;
  this.offset = 0;
  this.length = base.length;
}
inherits(DecoderBuffer, Reporter);
exports.DecoderBuffer = DecoderBuffer;

DecoderBuffer.prototype.save = function save() {
  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };
};

DecoderBuffer.prototype.restore = function restore(save) {
  // Return skipped data
  var res = new DecoderBuffer(this.base);
  res.offset = save.offset;
  res.length = this.offset;

  this.offset = save.offset;
  Reporter.prototype.restore.call(this, save.reporter);

  return res;
};

DecoderBuffer.prototype.isEmpty = function isEmpty() {
  return this.offset === this.length;
};

DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {
  if (this.offset + 1 <= this.length)
    return this.base.readUInt8(this.offset++, true);
  else
    return this.error(fail || 'DecoderBuffer overrun');
}

DecoderBuffer.prototype.skip = function skip(bytes, fail) {
  if (!(this.offset + bytes <= this.length))
    return this.error(fail || 'DecoderBuffer overrun');

  var res = new DecoderBuffer(this.base);

  // Share reporter state
  res._reporterState = this._reporterState;

  res.offset = this.offset;
  res.length = this.offset + bytes;
  this.offset += bytes;
  return res;
}

DecoderBuffer.prototype.raw = function raw(save) {
  return this.base.slice(save ? save.offset : this.offset, this.length);
}

function EncoderBuffer(value, reporter) {
  if (Array.isArray(value)) {
    this.length = 0;
    this.value = value.map(function(item) {
      if (!(item instanceof EncoderBuffer))
        item = new EncoderBuffer(item, reporter);
      this.length += item.length;
      return item;
    }, this);
  } else if (typeof value === 'number') {
    if (!(0 <= value && value <= 0xff))
      return reporter.error('non-byte EncoderBuffer value');
    this.value = value;
    this.length = 1;
  } else if (typeof value === 'string') {
    this.value = value;
    this.length = Buffer.byteLength(value);
  } else if (Buffer.isBuffer(value)) {
    this.value = value;
    this.length = value.length;
  } else {
    return reporter.error('Unsupported type: ' + typeof value);
  }
}
exports.EncoderBuffer = EncoderBuffer;

EncoderBuffer.prototype.join = function join(out, offset) {
  if (!out)
    out = new Buffer(this.length);
  if (!offset)
    offset = 0;

  if (this.length === 0)
    return out;

  if (Array.isArray(this.value)) {
    this.value.forEach(function(item) {
      item.join(out, offset);
      offset += item.length;
    });
  } else {
    if (typeof this.value === 'number')
      out[offset] = this.value;
    else if (typeof this.value === 'string')
      out.write(this.value, offset);
    else if (Buffer.isBuffer(this.value))
      this.value.copy(out, offset);
    offset += this.length;
  }

  return out;
};

},{"../base":4,"buffer":45,"inherits":95}],4:[function(require,module,exports){
var base = exports;

base.Reporter = require('./reporter').Reporter;
base.DecoderBuffer = require('./buffer').DecoderBuffer;
base.EncoderBuffer = require('./buffer').EncoderBuffer;
base.Node = require('./node');

},{"./buffer":3,"./node":5,"./reporter":6}],5:[function(require,module,exports){
var Reporter = require('../base').Reporter;
var EncoderBuffer = require('../base').EncoderBuffer;
var DecoderBuffer = require('../base').DecoderBuffer;
var assert = require('minimalistic-assert');

// Supported tags
var tags = [
  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',
  'gentime', 'utctime', 'null_', 'enum', 'int',
  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',
  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'
];

// Public methods list
var methods = [
  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',
  'any', 'contains'
].concat(tags);

// Overrided methods list
var overrided = [
  '_peekTag', '_decodeTag', '_use',
  '_decodeStr', '_decodeObjid', '_decodeTime',
  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',

  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',
  '_encodeNull', '_encodeInt', '_encodeBool'
];

function Node(enc, parent) {
  var state = {};
  this._baseState = state;

  state.enc = enc;

  state.parent = parent || null;
  state.children = null;

  // State
  state.tag = null;
  state.args = null;
  state.reverseArgs = null;
  state.choice = null;
  state.optional = false;
  state.any = false;
  state.obj = false;
  state.use = null;
  state.useDecoder = null;
  state.key = null;
  state['default'] = null;
  state.explicit = null;
  state.implicit = null;
  state.contains = null;

  // Should create new instance on each method
  if (!state.parent) {
    state.children = [];
    this._wrap();
  }
}
module.exports = Node;

var stateProps = [
  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',
  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',
  'implicit'
];

Node.prototype.clone = function clone() {
  var state = this._baseState;
  var cstate = {};
  stateProps.forEach(function(prop) {
    cstate[prop] = state[prop];
  });
  var res = new this.constructor(cstate.parent);
  res._baseState = cstate;
  return res;
};

Node.prototype._wrap = function wrap() {
  var state = this._baseState;
  methods.forEach(function(method) {
    this[method] = function _wrappedMethod() {
      var clone = new this.constructor(this);
      state.children.push(clone);
      return clone[method].apply(clone, arguments);
    };
  }, this);
};

Node.prototype._init = function init(body) {
  var state = this._baseState;

  assert(state.parent === null);
  body.call(this);

  // Filter children
  state.children = state.children.filter(function(child) {
    return child._baseState.parent === this;
  }, this);
  assert.equal(state.children.length, 1, 'Root node can have only one child');
};

Node.prototype._useArgs = function useArgs(args) {
  var state = this._baseState;

  // Filter children and args
  var children = args.filter(function(arg) {
    return arg instanceof this.constructor;
  }, this);
  args = args.filter(function(arg) {
    return !(arg instanceof this.constructor);
  }, this);

  if (children.length !== 0) {
    assert(state.children === null);
    state.children = children;

    // Replace parent to maintain backward link
    children.forEach(function(child) {
      child._baseState.parent = this;
    }, this);
  }
  if (args.length !== 0) {
    assert(state.args === null);
    state.args = args;
    state.reverseArgs = args.map(function(arg) {
      if (typeof arg !== 'object' || arg.constructor !== Object)
        return arg;

      var res = {};
      Object.keys(arg).forEach(function(key) {
        if (key == (key | 0))
          key |= 0;
        var value = arg[key];
        res[value] = key;
      });
      return res;
    });
  }
};

//
// Overrided methods
//

overrided.forEach(function(method) {
  Node.prototype[method] = function _overrided() {
    var state = this._baseState;
    throw new Error(method + ' not implemented for encoding: ' + state.enc);
  };
});

//
// Public methods
//

tags.forEach(function(tag) {
  Node.prototype[tag] = function _tagMethod() {
    var state = this._baseState;
    var args = Array.prototype.slice.call(arguments);

    assert(state.tag === null);
    state.tag = tag;

    this._useArgs(args);

    return this;
  };
});

Node.prototype.use = function use(item) {
  var state = this._baseState;

  assert(state.use === null);
  state.use = item;

  return this;
};

Node.prototype.optional = function optional() {
  var state = this._baseState;

  state.optional = true;

  return this;
};

Node.prototype.def = function def(val) {
  var state = this._baseState;

  assert(state['default'] === null);
  state['default'] = val;
  state.optional = true;

  return this;
};

Node.prototype.explicit = function explicit(num) {
  var state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.explicit = num;

  return this;
};

Node.prototype.implicit = function implicit(num) {
  var state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.implicit = num;

  return this;
};

Node.prototype.obj = function obj() {
  var state = this._baseState;
  var args = Array.prototype.slice.call(arguments);

  state.obj = true;

  if (args.length !== 0)
    this._useArgs(args);

  return this;
};

Node.prototype.key = function key(newKey) {
  var state = this._baseState;

  assert(state.key === null);
  state.key = newKey;

  return this;
};

Node.prototype.any = function any() {
  var state = this._baseState;

  state.any = true;

  return this;
};

Node.prototype.choice = function choice(obj) {
  var state = this._baseState;

  assert(state.choice === null);
  state.choice = obj;
  this._useArgs(Object.keys(obj).map(function(key) {
    return obj[key];
  }));

  return this;
};

Node.prototype.contains = function contains(item) {
  var state = this._baseState;

  assert(state.use === null);
  state.contains = item;

  return this;
};

//
// Decoding
//

Node.prototype._decode = function decode(input) {
  var state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return input.wrapResult(state.children[0]._decode(input));

  var result = state['default'];
  var present = true;

  var prevKey;
  if (state.key !== null)
    prevKey = input.enterKey(state.key);

  // Check if tag is there
  if (state.optional) {
    var tag = null;
    if (state.explicit !== null)
      tag = state.explicit;
    else if (state.implicit !== null)
      tag = state.implicit;
    else if (state.tag !== null)
      tag = state.tag;

    if (tag === null && !state.any) {
      // Trial and Error
      var save = input.save();
      try {
        if (state.choice === null)
          this._decodeGeneric(state.tag, input);
        else
          this._decodeChoice(input);
        present = true;
      } catch (e) {
        present = false;
      }
      input.restore(save);
    } else {
      present = this._peekTag(input, tag, state.any);

      if (input.isError(present))
        return present;
    }
  }

  // Push object on stack
  var prevObj;
  if (state.obj && present)
    prevObj = input.enterObject();

  if (present) {
    // Unwrap explicit values
    if (state.explicit !== null) {
      var explicit = this._decodeTag(input, state.explicit);
      if (input.isError(explicit))
        return explicit;
      input = explicit;
    }

    // Unwrap implicit and normal values
    if (state.use === null && state.choice === null) {
      if (state.any)
        var save = input.save();
      var body = this._decodeTag(
        input,
        state.implicit !== null ? state.implicit : state.tag,
        state.any
      );
      if (input.isError(body))
        return body;

      if (state.any)
        result = input.raw(save);
      else
        input = body;
    }

    // Select proper method for tag
    if (state.any)
      result = result;
    else if (state.choice === null)
      result = this._decodeGeneric(state.tag, input);
    else
      result = this._decodeChoice(input);

    if (input.isError(result))
      return result;

    // Decode children
    if (!state.any && state.choice === null && state.children !== null) {
      var fail = state.children.some(function decodeChildren(child) {
        // NOTE: We are ignoring errors here, to let parser continue with other
        // parts of encoded data
        child._decode(input);
      });
      if (fail)
        return err;
    }

    // Decode contained/encoded by schema, only in bit or octet strings
    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {
      var data = new DecoderBuffer(result);
      result = this._getUse(state.contains, input._reporterState.obj)._decode(data);
    }
  }

  // Pop object
  if (state.obj && present)
    result = input.leaveObject(prevObj);

  // Set key
  if (state.key !== null && (result !== null || present === true))
    input.leaveKey(prevKey, state.key, result);

  return result;
};

Node.prototype._decodeGeneric = function decodeGeneric(tag, input) {
  var state = this._baseState;

  if (tag === 'seq' || tag === 'set')
    return null;
  if (tag === 'seqof' || tag === 'setof')
    return this._decodeList(input, tag, state.args[0]);
  else if (/str$/.test(tag))
    return this._decodeStr(input, tag);
  else if (tag === 'objid' && state.args)
    return this._decodeObjid(input, state.args[0], state.args[1]);
  else if (tag === 'objid')
    return this._decodeObjid(input, null, null);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._decodeTime(input, tag);
  else if (tag === 'null_')
    return this._decodeNull(input);
  else if (tag === 'bool')
    return this._decodeBool(input);
  else if (tag === 'int' || tag === 'enum')
    return this._decodeInt(input, state.args && state.args[0]);
  else if (state.use !== null)
    return this._getUse(state.use, input._reporterState.obj)._decode(input);
  else
    return input.error('unknown tag: ' + tag);

  return null;
};

Node.prototype._getUse = function _getUse(entity, obj) {

  var state = this._baseState;
  // Create altered use decoder if implicit is set
  state.useDecoder = this._use(entity, obj);
  assert(state.useDecoder._baseState.parent === null);
  state.useDecoder = state.useDecoder._baseState.children[0];
  if (state.implicit !== state.useDecoder._baseState.implicit) {
    state.useDecoder = state.useDecoder.clone();
    state.useDecoder._baseState.implicit = state.implicit;
  }
  return state.useDecoder;
};

Node.prototype._decodeChoice = function decodeChoice(input) {
  var state = this._baseState;
  var result = null;
  var match = false;

  Object.keys(state.choice).some(function(key) {
    var save = input.save();
    var node = state.choice[key];
    try {
      var value = node._decode(input);
      if (input.isError(value))
        return false;

      result = { type: key, value: value };
      match = true;
    } catch (e) {
      input.restore(save);
      return false;
    }
    return true;
  }, this);

  if (!match)
    return input.error('Choice not matched');

  return result;
};

//
// Encoding
//

Node.prototype._createEncoderBuffer = function createEncoderBuffer(data) {
  return new EncoderBuffer(data, this.reporter);
};

Node.prototype._encode = function encode(data, reporter, parent) {
  var state = this._baseState;
  if (state['default'] !== null && state['default'] === data)
    return;

  var result = this._encodeValue(data, reporter, parent);
  if (result === undefined)
    return;

  if (this._skipDefault(result, reporter, parent))
    return;

  return result;
};

Node.prototype._encodeValue = function encode(data, reporter, parent) {
  var state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return state.children[0]._encode(data, reporter || new Reporter());

  var result = null;
  var present = true;

  // Set reporter to share it with a child class
  this.reporter = reporter;

  // Check if data is there
  if (state.optional && data === undefined) {
    if (state['default'] !== null)
      data = state['default']
    else
      return;
  }

  // For error reporting
  var prevKey;

  // Encode children first
  var content = null;
  var primitive = false;
  if (state.any) {
    // Anything that was given is translated to buffer
    result = this._createEncoderBuffer(data);
  } else if (state.choice) {
    result = this._encodeChoice(data, reporter);
  } else if (state.contains) {
    content = this._getUse(state.contains, parent)._encode(data, reporter);
    primitive = true;
  } else if (state.children) {
    content = state.children.map(function(child) {
      if (child._baseState.tag === 'null_')
        return child._encode(null, reporter, data);

      if (child._baseState.key === null)
        return reporter.error('Child should have a key');
      var prevKey = reporter.enterKey(child._baseState.key);

      if (typeof data !== 'object')
        return reporter.error('Child expected, but input is not object');

      var res = child._encode(data[child._baseState.key], reporter, data);
      reporter.leaveKey(prevKey);

      return res;
    }, this).filter(function(child) {
      return child;
    });
    content = this._createEncoderBuffer(content);
  } else {
    if (state.tag === 'seqof' || state.tag === 'setof') {
      // TODO(indutny): this should be thrown on DSL level
      if (!(state.args && state.args.length === 1))
        return reporter.error('Too many args for : ' + state.tag);

      if (!Array.isArray(data))
        return reporter.error('seqof/setof, but data is not Array');

      var child = this.clone();
      child._baseState.implicit = null;
      content = this._createEncoderBuffer(data.map(function(item) {
        var state = this._baseState;

        return this._getUse(state.args[0], data)._encode(item, reporter);
      }, child));
    } else if (state.use !== null) {
      result = this._getUse(state.use, parent)._encode(data, reporter);
    } else {
      content = this._encodePrimitive(state.tag, data);
      primitive = true;
    }
  }

  // Encode data itself
  var result;
  if (!state.any && state.choice === null) {
    var tag = state.implicit !== null ? state.implicit : state.tag;
    var cls = state.implicit === null ? 'universal' : 'context';

    if (tag === null) {
      if (state.use === null)
        reporter.error('Tag could be ommited only for .use()');
    } else {
      if (state.use === null)
        result = this._encodeComposite(tag, primitive, cls, content);
    }
  }

  // Wrap in explicit
  if (state.explicit !== null)
    result = this._encodeComposite(state.explicit, false, 'context', result);

  return result;
};

Node.prototype._encodeChoice = function encodeChoice(data, reporter) {
  var state = this._baseState;

  var node = state.choice[data.type];
  if (!node) {
    assert(
        false,
        data.type + ' not found in ' +
            JSON.stringify(Object.keys(state.choice)));
  }
  return node._encode(data.value, reporter);
};

Node.prototype._encodePrimitive = function encodePrimitive(tag, data) {
  var state = this._baseState;

  if (/str$/.test(tag))
    return this._encodeStr(data, tag);
  else if (tag === 'objid' && state.args)
    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
  else if (tag === 'objid')
    return this._encodeObjid(data, null, null);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._encodeTime(data, tag);
  else if (tag === 'null_')
    return this._encodeNull();
  else if (tag === 'int' || tag === 'enum')
    return this._encodeInt(data, state.args && state.reverseArgs[0]);
  else if (tag === 'bool')
    return this._encodeBool(data);
  else
    throw new Error('Unsupported tag: ' + tag);
};

Node.prototype._isNumstr = function isNumstr(str) {
  return /^[0-9 ]*$/.test(str);
};

Node.prototype._isPrintstr = function isPrintstr(str) {
  return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(str);
};

},{"../base":4,"minimalistic-assert":132}],6:[function(require,module,exports){
var inherits = require('inherits');

function Reporter(options) {
  this._reporterState = {
    obj: null,
    path: [],
    options: options || {},
    errors: []
  };
}
exports.Reporter = Reporter;

Reporter.prototype.isError = function isError(obj) {
  return obj instanceof ReporterError;
};

Reporter.prototype.save = function save() {
  var state = this._reporterState;

  return { obj: state.obj, pathLen: state.path.length };
};

Reporter.prototype.restore = function restore(data) {
  var state = this._reporterState;

  state.obj = data.obj;
  state.path = state.path.slice(0, data.pathLen);
};

Reporter.prototype.enterKey = function enterKey(key) {
  return this._reporterState.path.push(key);
};

Reporter.prototype.leaveKey = function leaveKey(index, key, value) {
  var state = this._reporterState;

  state.path = state.path.slice(0, index - 1);
  if (state.obj !== null)
    state.obj[key] = value;
};

Reporter.prototype.enterObject = function enterObject() {
  var state = this._reporterState;

  var prev = state.obj;
  state.obj = {};
  return prev;
};

Reporter.prototype.leaveObject = function leaveObject(prev) {
  var state = this._reporterState;

  var now = state.obj;
  state.obj = prev;
  return now;
};

Reporter.prototype.error = function error(msg) {
  var err;
  var state = this._reporterState;

  var inherited = msg instanceof ReporterError;
  if (inherited) {
    err = msg;
  } else {
    err = new ReporterError(state.path.map(function(elem) {
      return '[' + JSON.stringify(elem) + ']';
    }).join(''), msg.message || msg, msg.stack);
  }

  if (!state.options.partial)
    throw err;

  if (!inherited)
    state.errors.push(err);

  return err;
};

Reporter.prototype.wrapResult = function wrapResult(result) {
  var state = this._reporterState;
  if (!state.options.partial)
    return result;

  return {
    result: this.isError(result) ? null : result,
    errors: state.errors
  };
};

function ReporterError(path, msg) {
  this.path = path;
  this.rethrow(msg);
};
inherits(ReporterError, Error);

ReporterError.prototype.rethrow = function rethrow(msg) {
  this.message = msg + ' at: ' + (this.path || '(shallow)');
  Error.captureStackTrace(this, ReporterError);

  return this;
};

},{"inherits":95}],7:[function(require,module,exports){
var constants = require('../constants');

exports.tagClass = {
  0: 'universal',
  1: 'application',
  2: 'context',
  3: 'private'
};
exports.tagClassByName = constants._reverse(exports.tagClass);

exports.tag = {
  0x00: 'end',
  0x01: 'bool',
  0x02: 'int',
  0x03: 'bitstr',
  0x04: 'octstr',
  0x05: 'null_',
  0x06: 'objid',
  0x07: 'objDesc',
  0x08: 'external',
  0x09: 'real',
  0x0a: 'enum',
  0x0b: 'embed',
  0x0c: 'utf8str',
  0x0d: 'relativeOid',
  0x10: 'seq',
  0x11: 'set',
  0x12: 'numstr',
  0x13: 'printstr',
  0x14: 't61str',
  0x15: 'videostr',
  0x16: 'ia5str',
  0x17: 'utctime',
  0x18: 'gentime',
  0x19: 'graphstr',
  0x1a: 'iso646str',
  0x1b: 'genstr',
  0x1c: 'unistr',
  0x1d: 'charstr',
  0x1e: 'bmpstr'
};
exports.tagByName = constants._reverse(exports.tag);

},{"../constants":8}],8:[function(require,module,exports){
var constants = exports;

// Helper
constants._reverse = function reverse(map) {
  var res = {};

  Object.keys(map).forEach(function(key) {
    // Convert key to integer if it is stringified
    if ((key | 0) == key)
      key = key | 0;

    var value = map[key];
    res[value] = key;
  });

  return res;
};

constants.der = require('./der');

},{"./der":7}],9:[function(require,module,exports){
var inherits = require('inherits');

var asn1 = require('../../asn1');
var base = asn1.base;
var bignum = asn1.bignum;

// Import DER constants
var der = asn1.constants.der;

function DERDecoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
};
module.exports = DERDecoder;

DERDecoder.prototype.decode = function decode(data, options) {
  if (!(data instanceof base.DecoderBuffer))
    data = new base.DecoderBuffer(data, options);

  return this.tree._decode(data, options);
};

// Tree methods

function DERNode(parent) {
  base.Node.call(this, 'der', parent);
}
inherits(DERNode, base.Node);

DERNode.prototype._peekTag = function peekTag(buffer, tag, any) {
  if (buffer.isEmpty())
    return false;

  var state = buffer.save();
  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  buffer.restore(state);

  return decodedTag.tag === tag || decodedTag.tagStr === tag ||
    (decodedTag.tagStr + 'of') === tag || any;
};

DERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {
  var decodedTag = derDecodeTag(buffer,
                                'Failed to decode tag of "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  var len = derDecodeLen(buffer,
                         decodedTag.primitive,
                         'Failed to get length of "' + tag + '"');

  // Failure
  if (buffer.isError(len))
    return len;

  if (!any &&
      decodedTag.tag !== tag &&
      decodedTag.tagStr !== tag &&
      decodedTag.tagStr + 'of' !== tag) {
    return buffer.error('Failed to match tag: "' + tag + '"');
  }

  if (decodedTag.primitive || len !== null)
    return buffer.skip(len, 'Failed to match body of: "' + tag + '"');

  // Indefinite length... find END tag
  var state = buffer.save();
  var res = this._skipUntilEnd(
      buffer,
      'Failed to skip indefinite length body: "' + this.tag + '"');
  if (buffer.isError(res))
    return res;

  len = buffer.offset - state.offset;
  buffer.restore(state);
  return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
};

DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {
  while (true) {
    var tag = derDecodeTag(buffer, fail);
    if (buffer.isError(tag))
      return tag;
    var len = derDecodeLen(buffer, tag.primitive, fail);
    if (buffer.isError(len))
      return len;

    var res;
    if (tag.primitive || len !== null)
      res = buffer.skip(len)
    else
      res = this._skipUntilEnd(buffer, fail);

    // Failure
    if (buffer.isError(res))
      return res;

    if (tag.tagStr === 'end')
      break;
  }
};

DERNode.prototype._decodeList = function decodeList(buffer, tag, decoder) {
  var result = [];
  while (!buffer.isEmpty()) {
    var possibleEnd = this._peekTag(buffer, 'end');
    if (buffer.isError(possibleEnd))
      return possibleEnd;

    var res = decoder.decode(buffer, 'der');
    if (buffer.isError(res) && possibleEnd)
      break;
    result.push(res);
  }
  return result;
};

DERNode.prototype._decodeStr = function decodeStr(buffer, tag) {
  if (tag === 'bitstr') {
    var unused = buffer.readUInt8();
    if (buffer.isError(unused))
      return unused;
    return { unused: unused, data: buffer.raw() };
  } else if (tag === 'bmpstr') {
    var raw = buffer.raw();
    if (raw.length % 2 === 1)
      return buffer.error('Decoding of string type: bmpstr length mismatch');

    var str = '';
    for (var i = 0; i < raw.length / 2; i++) {
      str += String.fromCharCode(raw.readUInt16BE(i * 2));
    }
    return str;
  } else if (tag === 'numstr') {
    var numstr = buffer.raw().toString('ascii');
    if (!this._isNumstr(numstr)) {
      return buffer.error('Decoding of string type: ' +
                          'numstr unsupported characters');
    }
    return numstr;
  } else if (tag === 'octstr') {
    return buffer.raw();
  } else if (tag === 'printstr') {
    var printstr = buffer.raw().toString('ascii');
    if (!this._isPrintstr(printstr)) {
      return buffer.error('Decoding of string type: ' +
                          'printstr unsupported characters');
    }
    return printstr;
  } else if (/str$/.test(tag)) {
    return buffer.raw().toString();
  } else {
    return buffer.error('Decoding of string type: ' + tag + ' unsupported');
  }
};

DERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {
  var result;
  var identifiers = [];
  var ident = 0;
  while (!buffer.isEmpty()) {
    var subident = buffer.readUInt8();
    ident <<= 7;
    ident |= subident & 0x7f;
    if ((subident & 0x80) === 0) {
      identifiers.push(ident);
      ident = 0;
    }
  }
  if (subident & 0x80)
    identifiers.push(ident);

  var first = (identifiers[0] / 40) | 0;
  var second = identifiers[0] % 40;

  if (relative)
    result = identifiers;
  else
    result = [first, second].concat(identifiers.slice(1));

  if (values) {
    var tmp = values[result.join(' ')];
    if (tmp === undefined)
      tmp = values[result.join('.')];
    if (tmp !== undefined)
      result = tmp;
  }

  return result;
};

DERNode.prototype._decodeTime = function decodeTime(buffer, tag) {
  var str = buffer.raw().toString();
  if (tag === 'gentime') {
    var year = str.slice(0, 4) | 0;
    var mon = str.slice(4, 6) | 0;
    var day = str.slice(6, 8) | 0;
    var hour = str.slice(8, 10) | 0;
    var min = str.slice(10, 12) | 0;
    var sec = str.slice(12, 14) | 0;
  } else if (tag === 'utctime') {
    var year = str.slice(0, 2) | 0;
    var mon = str.slice(2, 4) | 0;
    var day = str.slice(4, 6) | 0;
    var hour = str.slice(6, 8) | 0;
    var min = str.slice(8, 10) | 0;
    var sec = str.slice(10, 12) | 0;
    if (year < 70)
      year = 2000 + year;
    else
      year = 1900 + year;
  } else {
    return buffer.error('Decoding ' + tag + ' time is not supported yet');
  }

  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);
};

DERNode.prototype._decodeNull = function decodeNull(buffer) {
  return null;
};

DERNode.prototype._decodeBool = function decodeBool(buffer) {
  var res = buffer.readUInt8();
  if (buffer.isError(res))
    return res;
  else
    return res !== 0;
};

DERNode.prototype._decodeInt = function decodeInt(buffer, values) {
  // Bigint, return as it is (assume big endian)
  var raw = buffer.raw();
  var res = new bignum(raw);

  if (values)
    res = values[res.toString(10)] || res;

  return res;
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getDecoder('der').tree;
};

// Utility methods

function derDecodeTag(buf, fail) {
  var tag = buf.readUInt8(fail);
  if (buf.isError(tag))
    return tag;

  var cls = der.tagClass[tag >> 6];
  var primitive = (tag & 0x20) === 0;

  // Multi-octet tag - load
  if ((tag & 0x1f) === 0x1f) {
    var oct = tag;
    tag = 0;
    while ((oct & 0x80) === 0x80) {
      oct = buf.readUInt8(fail);
      if (buf.isError(oct))
        return oct;

      tag <<= 7;
      tag |= oct & 0x7f;
    }
  } else {
    tag &= 0x1f;
  }
  var tagStr = der.tag[tag];

  return {
    cls: cls,
    primitive: primitive,
    tag: tag,
    tagStr: tagStr
  };
}

function derDecodeLen(buf, primitive, fail) {
  var len = buf.readUInt8(fail);
  if (buf.isError(len))
    return len;

  // Indefinite form
  if (!primitive && len === 0x80)
    return null;

  // Definite form
  if ((len & 0x80) === 0) {
    // Short form
    return len;
  }

  // Long form
  var num = len & 0x7f;
  if (num >= 4)
    return buf.error('length octect is too long');

  len = 0;
  for (var i = 0; i < num; i++) {
    len <<= 8;
    var j = buf.readUInt8(fail);
    if (buf.isError(j))
      return j;
    len |= j;
  }

  return len;
}

},{"../../asn1":1,"inherits":95}],10:[function(require,module,exports){
var decoders = exports;

decoders.der = require('./der');
decoders.pem = require('./pem');

},{"./der":9,"./pem":11}],11:[function(require,module,exports){
var inherits = require('inherits');
var Buffer = require('buffer').Buffer;

var asn1 = require('../../asn1');
var DERDecoder = require('./der');

function PEMDecoder(entity) {
  DERDecoder.call(this, entity);
  this.enc = 'pem';
};
inherits(PEMDecoder, DERDecoder);
module.exports = PEMDecoder;

PEMDecoder.prototype.decode = function decode(data, options) {
  var lines = data.toString().split(/[\r\n]+/g);

  var label = options.label.toUpperCase();

  var re = /^-----(BEGIN|END) ([^-]+)-----$/;
  var start = -1;
  var end = -1;
  for (var i = 0; i < lines.length; i++) {
    var match = lines[i].match(re);
    if (match === null)
      continue;

    if (match[2] !== label)
      continue;

    if (start === -1) {
      if (match[1] !== 'BEGIN')
        break;
      start = i;
    } else {
      if (match[1] !== 'END')
        break;
      end = i;
      break;
    }
  }
  if (start === -1 || end === -1)
    throw new Error('PEM section not found for: ' + label);

  var base64 = lines.slice(start + 1, end).join('');
  // Remove excessive symbols
  base64.replace(/[^a-z0-9\+\/=]+/gi, '');

  var input = new Buffer(base64, 'base64');
  return DERDecoder.prototype.decode.call(this, input, options);
};

},{"../../asn1":1,"./der":9,"buffer":45,"inherits":95}],12:[function(require,module,exports){
var inherits = require('inherits');
var Buffer = require('buffer').Buffer;

var asn1 = require('../../asn1');
var base = asn1.base;
var bignum = asn1.bignum;

// Import DER constants
var der = asn1.constants.der;

function DEREncoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
};
module.exports = DEREncoder;

DEREncoder.prototype.encode = function encode(data, reporter) {
  return this.tree._encode(data, reporter).join();
};

// Tree methods

function DERNode(parent) {
  base.Node.call(this, 'der', parent);
}
inherits(DERNode, base.Node);

DERNode.prototype._encodeComposite = function encodeComposite(tag,
                                                              primitive,
                                                              cls,
                                                              content) {
  var encodedTag = encodeTag(tag, primitive, cls, this.reporter);

  // Short form
  if (content.length < 0x80) {
    var header = new Buffer(2);
    header[0] = encodedTag;
    header[1] = content.length;
    return this._createEncoderBuffer([ header, content ]);
  }

  // Long form
  // Count octets required to store length
  var lenOctets = 1;
  for (var i = content.length; i >= 0x100; i >>= 8)
    lenOctets++;

  var header = new Buffer(1 + 1 + lenOctets);
  header[0] = encodedTag;
  header[1] = 0x80 | lenOctets;

  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)
    header[i] = j & 0xff;

  return this._createEncoderBuffer([ header, content ]);
};

DERNode.prototype._encodeStr = function encodeStr(str, tag) {
  if (tag === 'bitstr') {
    return this._createEncoderBuffer([ str.unused | 0, str.data ]);
  } else if (tag === 'bmpstr') {
    var buf = new Buffer(str.length * 2);
    for (var i = 0; i < str.length; i++) {
      buf.writeUInt16BE(str.charCodeAt(i), i * 2);
    }
    return this._createEncoderBuffer(buf);
  } else if (tag === 'numstr') {
    if (!this._isNumstr(str)) {
      return this.reporter.error('Encoding of string type: numstr supports ' +
                                 'only digits and space');
    }
    return this._createEncoderBuffer(str);
  } else if (tag === 'printstr') {
    if (!this._isPrintstr(str)) {
      return this.reporter.error('Encoding of string type: printstr supports ' +
                                 'only latin upper and lower case letters, ' +
                                 'digits, space, apostrophe, left and rigth ' +
                                 'parenthesis, plus sign, comma, hyphen, ' +
                                 'dot, slash, colon, equal sign, ' +
                                 'question mark');
    }
    return this._createEncoderBuffer(str);
  } else if (/str$/.test(tag)) {
    return this._createEncoderBuffer(str);
  } else {
    return this.reporter.error('Encoding of string type: ' + tag +
                               ' unsupported');
  }
};

DERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {
  if (typeof id === 'string') {
    if (!values)
      return this.reporter.error('string objid given, but no values map found');
    if (!values.hasOwnProperty(id))
      return this.reporter.error('objid not found in values map');
    id = values[id].split(/[\s\.]+/g);
    for (var i = 0; i < id.length; i++)
      id[i] |= 0;
  } else if (Array.isArray(id)) {
    id = id.slice();
    for (var i = 0; i < id.length; i++)
      id[i] |= 0;
  }

  if (!Array.isArray(id)) {
    return this.reporter.error('objid() should be either array or string, ' +
                               'got: ' + JSON.stringify(id));
  }

  if (!relative) {
    if (id[1] >= 40)
      return this.reporter.error('Second objid identifier OOB');
    id.splice(0, 2, id[0] * 40 + id[1]);
  }

  // Count number of octets
  var size = 0;
  for (var i = 0; i < id.length; i++) {
    var ident = id[i];
    for (size++; ident >= 0x80; ident >>= 7)
      size++;
  }

  var objid = new Buffer(size);
  var offset = objid.length - 1;
  for (var i = id.length - 1; i >= 0; i--) {
    var ident = id[i];
    objid[offset--] = ident & 0x7f;
    while ((ident >>= 7) > 0)
      objid[offset--] = 0x80 | (ident & 0x7f);
  }

  return this._createEncoderBuffer(objid);
};

function two(num) {
  if (num < 10)
    return '0' + num;
  else
    return num;
}

DERNode.prototype._encodeTime = function encodeTime(time, tag) {
  var str;
  var date = new Date(time);

  if (tag === 'gentime') {
    str = [
      two(date.getFullYear()),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else if (tag === 'utctime') {
    str = [
      two(date.getFullYear() % 100),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else {
    this.reporter.error('Encoding ' + tag + ' time is not supported yet');
  }

  return this._encodeStr(str, 'octstr');
};

DERNode.prototype._encodeNull = function encodeNull() {
  return this._createEncoderBuffer('');
};

DERNode.prototype._encodeInt = function encodeInt(num, values) {
  if (typeof num === 'string') {
    if (!values)
      return this.reporter.error('String int or enum given, but no values map');
    if (!values.hasOwnProperty(num)) {
      return this.reporter.error('Values map doesn\'t contain: ' +
                                 JSON.stringify(num));
    }
    num = values[num];
  }

  // Bignum, assume big endian
  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {
    var numArray = num.toArray();
    if (!num.sign && numArray[0] & 0x80) {
      numArray.unshift(0);
    }
    num = new Buffer(numArray);
  }

  if (Buffer.isBuffer(num)) {
    var size = num.length;
    if (num.length === 0)
      size++;

    var out = new Buffer(size);
    num.copy(out);
    if (num.length === 0)
      out[0] = 0
    return this._createEncoderBuffer(out);
  }

  if (num < 0x80)
    return this._createEncoderBuffer(num);

  if (num < 0x100)
    return this._createEncoderBuffer([0, num]);

  var size = 1;
  for (var i = num; i >= 0x100; i >>= 8)
    size++;

  var out = new Array(size);
  for (var i = out.length - 1; i >= 0; i--) {
    out[i] = num & 0xff;
    num >>= 8;
  }
  if(out[0] & 0x80) {
    out.unshift(0);
  }

  return this._createEncoderBuffer(new Buffer(out));
};

DERNode.prototype._encodeBool = function encodeBool(value) {
  return this._createEncoderBuffer(value ? 0xff : 0);
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getEncoder('der').tree;
};

DERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {
  var state = this._baseState;
  var i;
  if (state['default'] === null)
    return false;

  var data = dataBuffer.join();
  if (state.defaultBuffer === undefined)
    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();

  if (data.length !== state.defaultBuffer.length)
    return false;

  for (i=0; i < data.length; i++)
    if (data[i] !== state.defaultBuffer[i])
      return false;

  return true;
};

// Utility methods

function encodeTag(tag, primitive, cls, reporter) {
  var res;

  if (tag === 'seqof')
    tag = 'seq';
  else if (tag === 'setof')
    tag = 'set';

  if (der.tagByName.hasOwnProperty(tag))
    res = der.tagByName[tag];
  else if (typeof tag === 'number' && (tag | 0) === tag)
    res = tag;
  else
    return reporter.error('Unknown tag: ' + tag);

  if (res >= 0x1f)
    return reporter.error('Multi-octet tag encoding unsupported');

  if (!primitive)
    res |= 0x20;

  res |= (der.tagClassByName[cls || 'universal'] << 6);

  return res;
}

},{"../../asn1":1,"buffer":45,"inherits":95}],13:[function(require,module,exports){
var encoders = exports;

encoders.der = require('./der');
encoders.pem = require('./pem');

},{"./der":12,"./pem":14}],14:[function(require,module,exports){
var inherits = require('inherits');
var Buffer = require('buffer').Buffer;

var asn1 = require('../../asn1');
var DEREncoder = require('./der');

function PEMEncoder(entity) {
  DEREncoder.call(this, entity);
  this.enc = 'pem';
};
inherits(PEMEncoder, DEREncoder);
module.exports = PEMEncoder;

PEMEncoder.prototype.encode = function encode(data, options) {
  var buf = DEREncoder.prototype.encode.call(this, data);

  var p = buf.toString('base64');
  var out = [ '-----BEGIN ' + options.label + '-----' ];
  for (var i = 0; i < p.length; i += 64)
    out.push(p.slice(i, i + 64));
  out.push('-----END ' + options.label + '-----');
  return out.join('\n');
};

},{"../../asn1":1,"./der":12,"buffer":45,"inherits":95}],15:[function(require,module,exports){
var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

;(function (exports) {
	'use strict';

  var Arr = (typeof Uint8Array !== 'undefined')
    ? Uint8Array
    : Array

	var PLUS   = '+'.charCodeAt(0)
	var SLASH  = '/'.charCodeAt(0)
	var NUMBER = '0'.charCodeAt(0)
	var LOWER  = 'a'.charCodeAt(0)
	var UPPER  = 'A'.charCodeAt(0)
	var PLUS_URL_SAFE = '-'.charCodeAt(0)
	var SLASH_URL_SAFE = '_'.charCodeAt(0)

	function decode (elt) {
		var code = elt.charCodeAt(0)
		if (code === PLUS ||
		    code === PLUS_URL_SAFE)
			return 62 // '+'
		if (code === SLASH ||
		    code === SLASH_URL_SAFE)
			return 63 // '/'
		if (code < NUMBER)
			return -1 //no match
		if (code < NUMBER + 10)
			return code - NUMBER + 26 + 26
		if (code < UPPER + 26)
			return code - UPPER
		if (code < LOWER + 26)
			return code - LOWER + 26
	}

	function b64ToByteArray (b64) {
		var i, j, l, tmp, placeHolders, arr

		if (b64.length % 4 > 0) {
			throw new Error('Invalid string. Length must be a multiple of 4')
		}

		// the number of equal signs (place holders)
		// if there are two placeholders, than the two characters before it
		// represent one byte
		// if there is only one, then the three characters before it represent 2 bytes
		// this is just a cheap hack to not do indexOf twice
		var len = b64.length
		placeHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0

		// base64 is 4/3 + up to two characters of the original data
		arr = new Arr(b64.length * 3 / 4 - placeHolders)

		// if there are placeholders, only get up to the last complete 4 chars
		l = placeHolders > 0 ? b64.length - 4 : b64.length

		var L = 0

		function push (v) {
			arr[L++] = v
		}

		for (i = 0, j = 0; i < l; i += 4, j += 3) {
			tmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))
			push((tmp & 0xFF0000) >> 16)
			push((tmp & 0xFF00) >> 8)
			push(tmp & 0xFF)
		}

		if (placeHolders === 2) {
			tmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)
			push(tmp & 0xFF)
		} else if (placeHolders === 1) {
			tmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)
			push((tmp >> 8) & 0xFF)
			push(tmp & 0xFF)
		}

		return arr
	}

	function uint8ToBase64 (uint8) {
		var i,
			extraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes
			output = "",
			temp, length

		function encode (num) {
			return lookup.charAt(num)
		}

		function tripletToBase64 (num) {
			return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)
		}

		// go through the array every three bytes, we'll deal with trailing stuff later
		for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {
			temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
			output += tripletToBase64(temp)
		}

		// pad the end with zeros, but make sure to not forget the extra bytes
		switch (extraBytes) {
			case 1:
				temp = uint8[uint8.length - 1]
				output += encode(temp >> 2)
				output += encode((temp << 4) & 0x3F)
				output += '=='
				break
			case 2:
				temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])
				output += encode(temp >> 10)
				output += encode((temp >> 4) & 0x3F)
				output += encode((temp << 2) & 0x3F)
				output += '='
				break
		}

		return output
	}

	exports.toByteArray = b64ToByteArray
	exports.fromByteArray = uint8ToBase64
}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))

},{}],16:[function(require,module,exports){
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    Buffer = require('buf' + 'fer').Buffer;
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    return num !== null && typeof num === 'object' &&
      num.constructor.name === 'BN' && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
    }

    if (base === 16) {
      this._parseHex(number, start);
    } else {
      this._parseBase(number, base, start);
    }

    if (number[0] === '-') {
      this.negative = 1;
    }

    this.strip();

    if (endian !== 'le') return;

    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex (str, start, end) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r <<= 4;

      // 'a' - 'f'
      if (c >= 49 && c <= 54) {
        r |= c - 49 + 0xa;

      // 'A' - 'F'
      } else if (c >= 17 && c <= 22) {
        r |= c - 17 + 0xa;

      // '0' - '9'
      } else {
        r |= c & 0xf;
      }
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    // Scan 24-bit chunks and add them to the number
    var off = 0;
    for (i = number.length - 6, j = 0; i >= start; i -= 6) {
      w = parseHex(number, i, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
      off += 24;
      if (off >= 26) {
        off -= 26;
        j++;
      }
    }
    if (i + 6 !== start) {
      w = parseHex(number, start, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
    }
    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var length = this.bitLength();
    var ret;
    if (length <= 26) {
      ret = this.words[0];
    } else if (length <= 52) {
      ret = (this.words[1] * 0x4000000) + this.words[0];
    } else if (length === 53) {
      // NOTE: at this stage it is known that the top bit is set
      ret = 0x10000000000000 + (this.words[1] * 0x4000000) + this.words[0];
    } else {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid += Math.imul(ah0, bl0);
    hi = Math.imul(ah0, bh0);
    var w0 = c + lo + ((mid & 0x1fff) << 13);
    c = hi + (mid >>> 13) + (w0 >>> 26);
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid += Math.imul(ah1, bl0);
    hi = Math.imul(ah1, bh0);
    lo += Math.imul(al0, bl1);
    mid += Math.imul(al0, bh1);
    mid += Math.imul(ah0, bl1);
    hi += Math.imul(ah0, bh1);
    var w1 = c + lo + ((mid & 0x1fff) << 13);
    c = hi + (mid >>> 13) + (w1 >>> 26);
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid += Math.imul(ah2, bl0);
    hi = Math.imul(ah2, bh0);
    lo += Math.imul(al1, bl1);
    mid += Math.imul(al1, bh1);
    mid += Math.imul(ah1, bl1);
    hi += Math.imul(ah1, bh1);
    lo += Math.imul(al0, bl2);
    mid += Math.imul(al0, bh2);
    mid += Math.imul(ah0, bl2);
    hi += Math.imul(ah0, bh2);
    var w2 = c + lo + ((mid & 0x1fff) << 13);
    c = hi + (mid >>> 13) + (w2 >>> 26);
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid += Math.imul(ah3, bl0);
    hi = Math.imul(ah3, bh0);
    lo += Math.imul(al2, bl1);
    mid += Math.imul(al2, bh1);
    mid += Math.imul(ah2, bl1);
    hi += Math.imul(ah2, bh1);
    lo += Math.imul(al1, bl2);
    mid += Math.imul(al1, bh2);
    mid += Math.imul(ah1, bl2);
    hi += Math.imul(ah1, bh2);
    lo += Math.imul(al0, bl3);
    mid += Math.imul(al0, bh3);
    mid += Math.imul(ah0, bl3);
    hi += Math.imul(ah0, bh3);
    var w3 = c + lo + ((mid & 0x1fff) << 13);
    c = hi + (mid >>> 13) + (w3 >>> 26);
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid += Math.imul(ah4, bl0);
    hi = Math.imul(ah4, bh0);
    lo += Math.imul(al3, bl1);
    mid += Math.imul(al3, bh1);
    mid += Math.imul(ah3, bl1);
    hi += Math.imul(ah3, bh1);
    lo += Math.imul(al2, bl2);
    mid += Math.imul(al2, bh2);
    mid += Math.imul(ah2, bl2);
    hi += Math.imul(ah2, bh2);
    lo += Math.imul(al1, bl3);
    mid += Math.imul(al1, bh3);
    mid += Math.imul(ah1, bl3);
    hi += Math.imul(ah1, bh3);
    lo += Math.imul(al0, bl4);
    mid += Math.imul(al0, bh4);
    mid += Math.imul(ah0, bl4);
    hi += Math.imul(ah0, bh4);
    var w4 = c + lo + ((mid & 0x1fff) << 13);
    c = hi + (mid >>> 13) + (w4 >>> 26);
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid += Math.imul(ah5, bl0);
    hi = Math.imul(ah5, bh0);
    lo += Math.imul(al4, bl1);
    mid += Math.imul(al4, bh1);
    mid += Math.imul(ah4, bl1);
    hi += Math.imul(ah4, bh1);
    lo += Math.imul(al3, bl2);
    mid += Math.imul(al3, bh2);
    mid += Math.imul(ah3, bl2);
    hi += Math.imul(ah3, bh2);
    lo += Math.imul(al2, bl3);
    mid += Math.imul(al2, bh3);
    mid += Math.imul(ah2, bl3);
    hi += Math.imul(ah2, bh3);
    lo += Math.imul(al1, bl4);
    mid += Math.imul(al1, bh4);
    mid += Math.imul(ah1, bl4);
    hi += Math.imul(ah1, bh4);
    lo += Math.imul(al0, bl5);
    mid += Math.imul(al0, bh5);
    mid += Math.imul(ah0, bl5);
    hi += Math.imul(ah0, bh5);
    var w5 = c + lo + ((mid & 0x1fff) << 13);
    c = hi + (mid >>> 13) + (w5 >>> 26);
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid += Math.imul(ah6, bl0);
    hi = Math.imul(ah6, bh0);
    lo += Math.imul(al5, bl1);
    mid += Math.imul(al5, bh1);
    mid += Math.imul(ah5, bl1);
    hi += Math.imul(ah5, bh1);
    lo += Math.imul(al4, bl2);
    mid += Math.imul(al4, bh2);
    mid += Math.imul(ah4, bl2);
    hi += Math.imul(ah4, bh2);
    lo += Math.imul(al3, bl3);
    mid += Math.imul(al3, bh3);
    mid += Math.imul(ah3, bl3);
    hi += Math.imul(ah3, bh3);
    lo += Math.imul(al2, bl4);
    mid += Math.imul(al2, bh4);
    mid += Math.imul(ah2, bl4);
    hi += Math.imul(ah2, bh4);
    lo += Math.imul(al1, bl5);
    mid += Math.imul(al1, bh5);
    mid += Math.imul(ah1, bl5);
    hi += Math.imul(ah1, bh5);
    lo += Math.imul(al0, bl6);
    mid += Math.imul(al0, bh6);
    mid += Math.imul(ah0, bl6);
    hi += Math.imul(ah0, bh6);
    var w6 = c + lo + ((mid & 0x1fff) << 13);
    c = hi + (mid >>> 13) + (w6 >>> 26);
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid += Math.imul(ah7, bl0);
    hi = Math.imul(ah7, bh0);
    lo += Math.imul(al6, bl1);
    mid += Math.imul(al6, bh1);
    mid += Math.imul(ah6, bl1);
    hi += Math.imul(ah6, bh1);
    lo += Math.imul(al5, bl2);
    mid += Math.imul(al5, bh2);
    mid += Math.imul(ah5, bl2);
    hi += Math.imul(ah5, bh2);
    lo += Math.imul(al4, bl3);
    mid += Math.imul(al4, bh3);
    mid += Math.imul(ah4, bl3);
    hi += Math.imul(ah4, bh3);
    lo += Math.imul(al3, bl4);
    mid += Math.imul(al3, bh4);
    mid += Math.imul(ah3, bl4);
    hi += Math.imul(ah3, bh4);
    lo += Math.imul(al2, bl5);
    mid += Math.imul(al2, bh5);
    mid += Math.imul(ah2, bl5);
    hi += Math.imul(ah2, bh5);
    lo += Math.imul(al1, bl6);
    mid += Math.imul(al1, bh6);
    mid += Math.imul(ah1, bl6);
    hi += Math.imul(ah1, bh6);
    lo += Math.imul(al0, bl7);
    mid += Math.imul(al0, bh7);
    mid += Math.imul(ah0, bl7);
    hi += Math.imul(ah0, bh7);
    var w7 = c + lo + ((mid & 0x1fff) << 13);
    c = hi + (mid >>> 13) + (w7 >>> 26);
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid += Math.imul(ah8, bl0);
    hi = Math.imul(ah8, bh0);
    lo += Math.imul(al7, bl1);
    mid += Math.imul(al7, bh1);
    mid += Math.imul(ah7, bl1);
    hi += Math.imul(ah7, bh1);
    lo += Math.imul(al6, bl2);
    mid += Math.imul(al6, bh2);
    mid += Math.imul(ah6, bl2);
    hi += Math.imul(ah6, bh2);
    lo += Math.imul(al5, bl3);
    mid += Math.imul(al5, bh3);
    mid += Math.imul(ah5, bl3);
    hi += Math.imul(ah5, bh3);
    lo += Math.imul(al4, bl4);
    mid += Math.imul(al4, bh4);
    mid += Math.imul(ah4, bl4);
    hi += Math.imul(ah4, bh4);
    lo += Math.imul(al3, bl5);
    mid += Math.imul(al3, bh5);
    mid += Math.imul(ah3, bl5);
    hi += Math.imul(ah3, bh5);
    lo += Math.imul(al2, bl6);
    mid += Math.imul(al2, bh6);
    mid += Math.imul(ah2, bl6);
    hi += Math.imul(ah2, bh6);
    lo += Math.imul(al1, bl7);
    mid += Math.imul(al1, bh7);
    mid += Math.imul(ah1, bl7);
    hi += Math.imul(ah1, bh7);
    lo += Math.imul(al0, bl8);
    mid += Math.imul(al0, bh8);
    mid += Math.imul(ah0, bl8);
    hi += Math.imul(ah0, bh8);
    var w8 = c + lo + ((mid & 0x1fff) << 13);
    c = hi + (mid >>> 13) + (w8 >>> 26);
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid += Math.imul(ah9, bl0);
    hi = Math.imul(ah9, bh0);
    lo += Math.imul(al8, bl1);
    mid += Math.imul(al8, bh1);
    mid += Math.imul(ah8, bl1);
    hi += Math.imul(ah8, bh1);
    lo += Math.imul(al7, bl2);
    mid += Math.imul(al7, bh2);
    mid += Math.imul(ah7, bl2);
    hi += Math.imul(ah7, bh2);
    lo += Math.imul(al6, bl3);
    mid += Math.imul(al6, bh3);
    mid += Math.imul(ah6, bl3);
    hi += Math.imul(ah6, bh3);
    lo += Math.imul(al5, bl4);
    mid += Math.imul(al5, bh4);
    mid += Math.imul(ah5, bl4);
    hi += Math.imul(ah5, bh4);
    lo += Math.imul(al4, bl5);
    mid += Math.imul(al4, bh5);
    mid += Math.imul(ah4, bl5);
    hi += Math.imul(ah4, bh5);
    lo += Math.imul(al3, bl6);
    mid += Math.imul(al3, bh6);
    mid += Math.imul(ah3, bl6);
    hi += Math.imul(ah3, bh6);
    lo += Math.imul(al2, bl7);
    mid += Math.imul(al2, bh7);
    mid += Math.imul(ah2, bl7);
    hi += Math.imul(ah2, bh7);
    lo += Math.imul(al1, bl8);
    mid += Math.imul(al1, bh8);
    mid += Math.imul(ah1, bl8);
    hi += Math.imul(ah1, bh8);
    lo += Math.imul(al0, bl9);
    mid += Math.imul(al0, bh9);
    mid += Math.imul(ah0, bl9);
    hi += Math.imul(ah0, bh9);
    var w9 = c + lo + ((mid & 0x1fff) << 13);
    c = hi + (mid >>> 13) + (w9 >>> 26);
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid += Math.imul(ah9, bl1);
    hi = Math.imul(ah9, bh1);
    lo += Math.imul(al8, bl2);
    mid += Math.imul(al8, bh2);
    mid += Math.imul(ah8, bl2);
    hi += Math.imul(ah8, bh2);
    lo += Math.imul(al7, bl3);
    mid += Math.imul(al7, bh3);
    mid += Math.imul(ah7, bl3);
    hi += Math.imul(ah7, bh3);
    lo += Math.imul(al6, bl4);
    mid += Math.imul(al6, bh4);
    mid += Math.imul(ah6, bl4);
    hi += Math.imul(ah6, bh4);
    lo += Math.imul(al5, bl5);
    mid += Math.imul(al5, bh5);
    mid += Math.imul(ah5, bl5);
    hi += Math.imul(ah5, bh5);
    lo += Math.imul(al4, bl6);
    mid += Math.imul(al4, bh6);
    mid += Math.imul(ah4, bl6);
    hi += Math.imul(ah4, bh6);
    lo += Math.imul(al3, bl7);
    mid += Math.imul(al3, bh7);
    mid += Math.imul(ah3, bl7);
    hi += Math.imul(ah3, bh7);
    lo += Math.imul(al2, bl8);
    mid += Math.imul(al2, bh8);
    mid += Math.imul(ah2, bl8);
    hi += Math.imul(ah2, bh8);
    lo += Math.imul(al1, bl9);
    mid += Math.imul(al1, bh9);
    mid += Math.imul(ah1, bl9);
    hi += Math.imul(ah1, bh9);
    var w10 = c + lo + ((mid & 0x1fff) << 13);
    c = hi + (mid >>> 13) + (w10 >>> 26);
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid += Math.imul(ah9, bl2);
    hi = Math.imul(ah9, bh2);
    lo += Math.imul(al8, bl3);
    mid += Math.imul(al8, bh3);
    mid += Math.imul(ah8, bl3);
    hi += Math.imul(ah8, bh3);
    lo += Math.imul(al7, bl4);
    mid += Math.imul(al7, bh4);
    mid += Math.imul(ah7, bl4);
    hi += Math.imul(ah7, bh4);
    lo += Math.imul(al6, bl5);
    mid += Math.imul(al6, bh5);
    mid += Math.imul(ah6, bl5);
    hi += Math.imul(ah6, bh5);
    lo += Math.imul(al5, bl6);
    mid += Math.imul(al5, bh6);
    mid += Math.imul(ah5, bl6);
    hi += Math.imul(ah5, bh6);
    lo += Math.imul(al4, bl7);
    mid += Math.imul(al4, bh7);
    mid += Math.imul(ah4, bl7);
    hi += Math.imul(ah4, bh7);
    lo += Math.imul(al3, bl8);
    mid += Math.imul(al3, bh8);
    mid += Math.imul(ah3, bl8);
    hi += Math.imul(ah3, bh8);
    lo += Math.imul(al2, bl9);
    mid += Math.imul(al2, bh9);
    mid += Math.imul(ah2, bl9);
    hi += Math.imul(ah2, bh9);
    var w11 = c + lo + ((mid & 0x1fff) << 13);
    c = hi + (mid >>> 13) + (w11 >>> 26);
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid += Math.imul(ah9, bl3);
    hi = Math.imul(ah9, bh3);
    lo += Math.imul(al8, bl4);
    mid += Math.imul(al8, bh4);
    mid += Math.imul(ah8, bl4);
    hi += Math.imul(ah8, bh4);
    lo += Math.imul(al7, bl5);
    mid += Math.imul(al7, bh5);
    mid += Math.imul(ah7, bl5);
    hi += Math.imul(ah7, bh5);
    lo += Math.imul(al6, bl6);
    mid += Math.imul(al6, bh6);
    mid += Math.imul(ah6, bl6);
    hi += Math.imul(ah6, bh6);
    lo += Math.imul(al5, bl7);
    mid += Math.imul(al5, bh7);
    mid += Math.imul(ah5, bl7);
    hi += Math.imul(ah5, bh7);
    lo += Math.imul(al4, bl8);
    mid += Math.imul(al4, bh8);
    mid += Math.imul(ah4, bl8);
    hi += Math.imul(ah4, bh8);
    lo += Math.imul(al3, bl9);
    mid += Math.imul(al3, bh9);
    mid += Math.imul(ah3, bl9);
    hi += Math.imul(ah3, bh9);
    var w12 = c + lo + ((mid & 0x1fff) << 13);
    c = hi + (mid >>> 13) + (w12 >>> 26);
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid += Math.imul(ah9, bl4);
    hi = Math.imul(ah9, bh4);
    lo += Math.imul(al8, bl5);
    mid += Math.imul(al8, bh5);
    mid += Math.imul(ah8, bl5);
    hi += Math.imul(ah8, bh5);
    lo += Math.imul(al7, bl6);
    mid += Math.imul(al7, bh6);
    mid += Math.imul(ah7, bl6);
    hi += Math.imul(ah7, bh6);
    lo += Math.imul(al6, bl7);
    mid += Math.imul(al6, bh7);
    mid += Math.imul(ah6, bl7);
    hi += Math.imul(ah6, bh7);
    lo += Math.imul(al5, bl8);
    mid += Math.imul(al5, bh8);
    mid += Math.imul(ah5, bl8);
    hi += Math.imul(ah5, bh8);
    lo += Math.imul(al4, bl9);
    mid += Math.imul(al4, bh9);
    mid += Math.imul(ah4, bl9);
    hi += Math.imul(ah4, bh9);
    var w13 = c + lo + ((mid & 0x1fff) << 13);
    c = hi + (mid >>> 13) + (w13 >>> 26);
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid += Math.imul(ah9, bl5);
    hi = Math.imul(ah9, bh5);
    lo += Math.imul(al8, bl6);
    mid += Math.imul(al8, bh6);
    mid += Math.imul(ah8, bl6);
    hi += Math.imul(ah8, bh6);
    lo += Math.imul(al7, bl7);
    mid += Math.imul(al7, bh7);
    mid += Math.imul(ah7, bl7);
    hi += Math.imul(ah7, bh7);
    lo += Math.imul(al6, bl8);
    mid += Math.imul(al6, bh8);
    mid += Math.imul(ah6, bl8);
    hi += Math.imul(ah6, bh8);
    lo += Math.imul(al5, bl9);
    mid += Math.imul(al5, bh9);
    mid += Math.imul(ah5, bl9);
    hi += Math.imul(ah5, bh9);
    var w14 = c + lo + ((mid & 0x1fff) << 13);
    c = hi + (mid >>> 13) + (w14 >>> 26);
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid += Math.imul(ah9, bl6);
    hi = Math.imul(ah9, bh6);
    lo += Math.imul(al8, bl7);
    mid += Math.imul(al8, bh7);
    mid += Math.imul(ah8, bl7);
    hi += Math.imul(ah8, bh7);
    lo += Math.imul(al7, bl8);
    mid += Math.imul(al7, bh8);
    mid += Math.imul(ah7, bl8);
    hi += Math.imul(ah7, bh8);
    lo += Math.imul(al6, bl9);
    mid += Math.imul(al6, bh9);
    mid += Math.imul(ah6, bl9);
    hi += Math.imul(ah6, bh9);
    var w15 = c + lo + ((mid & 0x1fff) << 13);
    c = hi + (mid >>> 13) + (w15 >>> 26);
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid += Math.imul(ah9, bl7);
    hi = Math.imul(ah9, bh7);
    lo += Math.imul(al8, bl8);
    mid += Math.imul(al8, bh8);
    mid += Math.imul(ah8, bl8);
    hi += Math.imul(ah8, bh8);
    lo += Math.imul(al7, bl9);
    mid += Math.imul(al7, bh9);
    mid += Math.imul(ah7, bl9);
    hi += Math.imul(ah7, bh9);
    var w16 = c + lo + ((mid & 0x1fff) << 13);
    c = hi + (mid >>> 13) + (w16 >>> 26);
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid += Math.imul(ah9, bl8);
    hi = Math.imul(ah9, bh8);
    lo += Math.imul(al8, bl9);
    mid += Math.imul(al8, bh9);
    mid += Math.imul(ah8, bl9);
    hi += Math.imul(ah8, bh9);
    var w17 = c + lo + ((mid & 0x1fff) << 13);
    c = hi + (mid >>> 13) + (w17 >>> 26);
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid += Math.imul(ah9, bl9);
    hi = Math.imul(ah9, bh9);
    var w18 = c + lo + ((mid & 0x1fff) << 13);
    c = hi + (mid >>> 13) + (w18 >>> 26);
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.ushl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      r.strip();
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})(typeof module === 'undefined' || module, this);

},{}],17:[function(require,module,exports){
var r;

module.exports = function rand(len) {
  if (!r)
    r = new Rand(null);

  return r.generate(len);
};

function Rand(rand) {
  this.rand = rand;
}
module.exports.Rand = Rand;

Rand.prototype.generate = function generate(len) {
  return this._rand(len);
};

if (typeof window === 'object') {
  if (window.crypto && window.crypto.getRandomValues) {
    // Modern browsers
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      window.crypto.getRandomValues(arr);
      return arr;
    };
  } else if (window.msCrypto && window.msCrypto.getRandomValues) {
    // IE
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      window.msCrypto.getRandomValues(arr);
      return arr;
    };
  } else {
    // Old junk
    Rand.prototype._rand = function() {
      throw new Error('Not implemented yet');
    };
  }
} else {
  // Node.js or Web worker
  try {
    var crypto = require('cry' + 'pto');

    Rand.prototype._rand = function _rand(n) {
      return crypto.randomBytes(n);
    };
  } catch (e) {
    // Emulate crypto API using randy
    Rand.prototype._rand = function _rand(n) {
      var res = new Uint8Array(n);
      for (var i = 0; i < res.length; i++)
        res[i] = this.rand.getByte();
      return res;
    };
  }
}

},{}],18:[function(require,module,exports){

},{}],19:[function(require,module,exports){
(function (Buffer){
// based on the aes implimentation in triple sec
// https://github.com/keybase/triplesec

// which is in turn based on the one from crypto-js
// https://code.google.com/p/crypto-js/

var uint_max = Math.pow(2, 32)
function fixup_uint32 (x) {
  var ret, x_pos
  ret = x > uint_max || x < 0 ? (x_pos = Math.abs(x) % uint_max, x < 0 ? uint_max - x_pos : x_pos) : x
  return ret
}
function scrub_vec (v) {
  for (var i = 0; i < v.length; v++) {
    v[i] = 0
  }
  return false
}

function Global () {
  this.SBOX = []
  this.INV_SBOX = []
  this.SUB_MIX = [[], [], [], []]
  this.INV_SUB_MIX = [[], [], [], []]
  this.init()
  this.RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]
}

Global.prototype.init = function () {
  var d, i, sx, t, x, x2, x4, x8, xi, _i
  d = (function () {
    var _i, _results
    _results = []
    for (i = _i = 0; _i < 256; i = ++_i) {
      if (i < 128) {
        _results.push(i << 1)
      } else {
        _results.push((i << 1) ^ 0x11b)
      }
    }
    return _results
  })()
  x = 0
  xi = 0
  for (i = _i = 0; _i < 256; i = ++_i) {
    sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)
    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63
    this.SBOX[x] = sx
    this.INV_SBOX[sx] = x
    x2 = d[x]
    x4 = d[x2]
    x8 = d[x4]
    t = (d[sx] * 0x101) ^ (sx * 0x1010100)
    this.SUB_MIX[0][x] = (t << 24) | (t >>> 8)
    this.SUB_MIX[1][x] = (t << 16) | (t >>> 16)
    this.SUB_MIX[2][x] = (t << 8) | (t >>> 24)
    this.SUB_MIX[3][x] = t
    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)
    this.INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)
    this.INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)
    this.INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)
    this.INV_SUB_MIX[3][sx] = t
    if (x === 0) {
      x = xi = 1
    } else {
      x = x2 ^ d[d[d[x8 ^ x2]]]
      xi ^= d[d[xi]]
    }
  }
  return true
}

var G = new Global()

AES.blockSize = 4 * 4

AES.prototype.blockSize = AES.blockSize

AES.keySize = 256 / 8

AES.prototype.keySize = AES.keySize

function bufferToArray (buf) {
  var len = buf.length / 4
  var out = new Array(len)
  var i = -1
  while (++i < len) {
    out[i] = buf.readUInt32BE(i * 4)
  }
  return out
}
function AES (key) {
  this._key = bufferToArray(key)
  this._doReset()
}

AES.prototype._doReset = function () {
  var invKsRow, keySize, keyWords, ksRow, ksRows, t
  keyWords = this._key
  keySize = keyWords.length
  this._nRounds = keySize + 6
  ksRows = (this._nRounds + 1) * 4
  this._keySchedule = []
  for (ksRow = 0; ksRow < ksRows; ksRow++) {
    this._keySchedule[ksRow] = ksRow < keySize ? keyWords[ksRow] : (t = this._keySchedule[ksRow - 1], (ksRow % keySize) === 0 ? (t = (t << 8) | (t >>> 24), t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff], t ^= G.RCON[(ksRow / keySize) | 0] << 24) : keySize > 6 && ksRow % keySize === 4 ? t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff] : void 0, this._keySchedule[ksRow - keySize] ^ t)
  }
  this._invKeySchedule = []
  for (invKsRow = 0; invKsRow < ksRows; invKsRow++) {
    ksRow = ksRows - invKsRow
    t = this._keySchedule[ksRow - (invKsRow % 4 ? 0 : 4)]
    this._invKeySchedule[invKsRow] = invKsRow < 4 || ksRow <= 4 ? t : G.INV_SUB_MIX[0][G.SBOX[t >>> 24]] ^ G.INV_SUB_MIX[1][G.SBOX[(t >>> 16) & 0xff]] ^ G.INV_SUB_MIX[2][G.SBOX[(t >>> 8) & 0xff]] ^ G.INV_SUB_MIX[3][G.SBOX[t & 0xff]]
  }
  return true
}

AES.prototype.encryptBlock = function (M) {
  M = bufferToArray(new Buffer(M))
  var out = this._doCryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX)
  var buf = new Buffer(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[1], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[3], 12)
  return buf
}

AES.prototype.decryptBlock = function (M) {
  M = bufferToArray(new Buffer(M))
  var temp = [M[3], M[1]]
  M[1] = temp[0]
  M[3] = temp[1]
  var out = this._doCryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX)
  var buf = new Buffer(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[3], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[1], 12)
  return buf
}

AES.prototype.scrub = function () {
  scrub_vec(this._keySchedule)
  scrub_vec(this._invKeySchedule)
  scrub_vec(this._key)
}

AES.prototype._doCryptBlock = function (M, keySchedule, SUB_MIX, SBOX) {
  var ksRow, s0, s1, s2, s3, t0, t1, t2, t3

  s0 = M[0] ^ keySchedule[0]
  s1 = M[1] ^ keySchedule[1]
  s2 = M[2] ^ keySchedule[2]
  s3 = M[3] ^ keySchedule[3]
  ksRow = 4
  for (var round = 1; round < this._nRounds; round++) {
    t0 = SUB_MIX[0][s0 >>> 24] ^ SUB_MIX[1][(s1 >>> 16) & 0xff] ^ SUB_MIX[2][(s2 >>> 8) & 0xff] ^ SUB_MIX[3][s3 & 0xff] ^ keySchedule[ksRow++]
    t1 = SUB_MIX[0][s1 >>> 24] ^ SUB_MIX[1][(s2 >>> 16) & 0xff] ^ SUB_MIX[2][(s3 >>> 8) & 0xff] ^ SUB_MIX[3][s0 & 0xff] ^ keySchedule[ksRow++]
    t2 = SUB_MIX[0][s2 >>> 24] ^ SUB_MIX[1][(s3 >>> 16) & 0xff] ^ SUB_MIX[2][(s0 >>> 8) & 0xff] ^ SUB_MIX[3][s1 & 0xff] ^ keySchedule[ksRow++]
    t3 = SUB_MIX[0][s3 >>> 24] ^ SUB_MIX[1][(s0 >>> 16) & 0xff] ^ SUB_MIX[2][(s1 >>> 8) & 0xff] ^ SUB_MIX[3][s2 & 0xff] ^ keySchedule[ksRow++]
    s0 = t0
    s1 = t1
    s2 = t2
    s3 = t3
  }
  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]
  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]
  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]
  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]
  return [
    fixup_uint32(t0),
    fixup_uint32(t1),
    fixup_uint32(t2),
    fixup_uint32(t3)
  ]
}

exports.AES = AES

}).call(this,require("buffer").Buffer)
},{"buffer":45}],20:[function(require,module,exports){
(function (Buffer){
var aes = require('./aes')
var Transform = require('cipher-base')
var inherits = require('inherits')
var GHASH = require('./ghash')
var xor = require('buffer-xor')
inherits(StreamCipher, Transform)
module.exports = StreamCipher

function StreamCipher (mode, key, iv, decrypt) {
  if (!(this instanceof StreamCipher)) {
    return new StreamCipher(mode, key, iv)
  }
  Transform.call(this)
  this._finID = Buffer.concat([iv, new Buffer([0, 0, 0, 1])])
  iv = Buffer.concat([iv, new Buffer([0, 0, 0, 2])])
  this._cipher = new aes.AES(key)
  this._prev = new Buffer(iv.length)
  this._cache = new Buffer('')
  this._secCache = new Buffer('')
  this._decrypt = decrypt
  this._alen = 0
  this._len = 0
  iv.copy(this._prev)
  this._mode = mode
  var h = new Buffer(4)
  h.fill(0)
  this._ghash = new GHASH(this._cipher.encryptBlock(h))
  this._authTag = null
  this._called = false
}
StreamCipher.prototype._update = function (chunk) {
  if (!this._called && this._alen) {
    var rump = 16 - (this._alen % 16)
    if (rump < 16) {
      rump = new Buffer(rump)
      rump.fill(0)
      this._ghash.update(rump)
    }
  }
  this._called = true
  var out = this._mode.encrypt(this, chunk)
  if (this._decrypt) {
    this._ghash.update(chunk)
  } else {
    this._ghash.update(out)
  }
  this._len += chunk.length
  return out
}
StreamCipher.prototype._final = function () {
  if (this._decrypt && !this._authTag) {
    throw new Error('Unsupported state or unable to authenticate data')
  }
  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))
  if (this._decrypt) {
    if (xorTest(tag, this._authTag)) {
      throw new Error('Unsupported state or unable to authenticate data')
    }
  } else {
    this._authTag = tag
  }
  this._cipher.scrub()
}
StreamCipher.prototype.getAuthTag = function getAuthTag () {
  if (!this._decrypt && Buffer.isBuffer(this._authTag)) {
    return this._authTag
  } else {
    throw new Error('Attempting to get auth tag in unsupported state')
  }
}
StreamCipher.prototype.setAuthTag = function setAuthTag (tag) {
  if (this._decrypt) {
    this._authTag = tag
  } else {
    throw new Error('Attempting to set auth tag in unsupported state')
  }
}
StreamCipher.prototype.setAAD = function setAAD (buf) {
  if (!this._called) {
    this._ghash.update(buf)
    this._alen += buf.length
  } else {
    throw new Error('Attempting to set AAD in unsupported state')
  }
}
function xorTest (a, b) {
  var out = 0
  if (a.length !== b.length) {
    out++
  }
  var len = Math.min(a.length, b.length)
  var i = -1
  while (++i < len) {
    out += (a[i] ^ b[i])
  }
  return out
}

}).call(this,require("buffer").Buffer)
},{"./aes":19,"./ghash":24,"buffer":45,"buffer-xor":44,"cipher-base":47,"inherits":95}],21:[function(require,module,exports){
var ciphers = require('./encrypter')
exports.createCipher = exports.Cipher = ciphers.createCipher
exports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv
var deciphers = require('./decrypter')
exports.createDecipher = exports.Decipher = deciphers.createDecipher
exports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv
var modes = require('./modes')
function getCiphers () {
  return Object.keys(modes)
}
exports.listCiphers = exports.getCiphers = getCiphers

},{"./decrypter":22,"./encrypter":23,"./modes":25}],22:[function(require,module,exports){
(function (Buffer){
var aes = require('./aes')
var Transform = require('cipher-base')
var inherits = require('inherits')
var modes = require('./modes')
var StreamCipher = require('./streamCipher')
var AuthCipher = require('./authCipher')
var ebtk = require('evp_bytestokey')

inherits(Decipher, Transform)
function Decipher (mode, key, iv) {
  if (!(this instanceof Decipher)) {
    return new Decipher(mode, key, iv)
  }
  Transform.call(this)
  this._cache = new Splitter()
  this._last = void 0
  this._cipher = new aes.AES(key)
  this._prev = new Buffer(iv.length)
  iv.copy(this._prev)
  this._mode = mode
  this._autopadding = true
}
Decipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []
  while ((chunk = this._cache.get(this._autopadding))) {
    thing = this._mode.decrypt(this, chunk)
    out.push(thing)
  }
  return Buffer.concat(out)
}
Decipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    return unpad(this._mode.decrypt(this, chunk))
  } else if (chunk) {
    throw new Error('data not multiple of block length')
  }
}
Decipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}
function Splitter () {
  if (!(this instanceof Splitter)) {
    return new Splitter()
  }
  this.cache = new Buffer('')
}
Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function (autoPadding) {
  var out
  if (autoPadding) {
    if (this.cache.length > 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  } else {
    if (this.cache.length >= 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  }
  return null
}
Splitter.prototype.flush = function () {
  if (this.cache.length) {
    return this.cache
  }
}
function unpad (last) {
  var padded = last[15]
  var i = -1
  while (++i < padded) {
    if (last[(i + (16 - padded))] !== padded) {
      throw new Error('unable to decrypt data')
    }
  }
  if (padded === 16) {
    return
  }
  return last.slice(0, 16 - padded)
}

var modelist = {
  ECB: require('./modes/ecb'),
  CBC: require('./modes/cbc'),
  CFB: require('./modes/cfb'),
  CFB8: require('./modes/cfb8'),
  CFB1: require('./modes/cfb1'),
  OFB: require('./modes/ofb'),
  CTR: require('./modes/ctr'),
  GCM: require('./modes/ctr')
}

function createDecipheriv (suite, password, iv) {
  var config = modes[suite.toLowerCase()]
  if (!config) {
    throw new TypeError('invalid suite type')
  }
  if (typeof iv === 'string') {
    iv = new Buffer(iv)
  }
  if (typeof password === 'string') {
    password = new Buffer(password)
  }
  if (password.length !== config.key / 8) {
    throw new TypeError('invalid key length ' + password.length)
  }
  if (iv.length !== config.iv) {
    throw new TypeError('invalid iv length ' + iv.length)
  }
  if (config.type === 'stream') {
    return new StreamCipher(modelist[config.mode], password, iv, true)
  } else if (config.type === 'auth') {
    return new AuthCipher(modelist[config.mode], password, iv, true)
  }
  return new Decipher(modelist[config.mode], password, iv)
}

function createDecipher (suite, password) {
  var config = modes[suite.toLowerCase()]
  if (!config) {
    throw new TypeError('invalid suite type')
  }
  var keys = ebtk(password, false, config.key, config.iv)
  return createDecipheriv(suite, keys.key, keys.iv)
}
exports.createDecipher = createDecipher
exports.createDecipheriv = createDecipheriv

}).call(this,require("buffer").Buffer)
},{"./aes":19,"./authCipher":20,"./modes":25,"./modes/cbc":26,"./modes/cfb":27,"./modes/cfb1":28,"./modes/cfb8":29,"./modes/ctr":30,"./modes/ecb":31,"./modes/ofb":32,"./streamCipher":33,"buffer":45,"cipher-base":47,"evp_bytestokey":86,"inherits":95}],23:[function(require,module,exports){
(function (Buffer){
var aes = require('./aes')
var Transform = require('cipher-base')
var inherits = require('inherits')
var modes = require('./modes')
var ebtk = require('evp_bytestokey')
var StreamCipher = require('./streamCipher')
var AuthCipher = require('./authCipher')
inherits(Cipher, Transform)
function Cipher (mode, key, iv) {
  if (!(this instanceof Cipher)) {
    return new Cipher(mode, key, iv)
  }
  Transform.call(this)
  this._cache = new Splitter()
  this._cipher = new aes.AES(key)
  this._prev = new Buffer(iv.length)
  iv.copy(this._prev)
  this._mode = mode
  this._autopadding = true
}
Cipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []
  while ((chunk = this._cache.get())) {
    thing = this._mode.encrypt(this, chunk)
    out.push(thing)
  }
  return Buffer.concat(out)
}
Cipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    chunk = this._mode.encrypt(this, chunk)
    this._cipher.scrub()
    return chunk
  } else if (chunk.toString('hex') !== '10101010101010101010101010101010') {
    this._cipher.scrub()
    throw new Error('data not multiple of block length')
  }
}
Cipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  if (!(this instanceof Splitter)) {
    return new Splitter()
  }
  this.cache = new Buffer('')
}
Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function () {
  if (this.cache.length > 15) {
    var out = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    return out
  }
  return null
}
Splitter.prototype.flush = function () {
  var len = 16 - this.cache.length
  var padBuff = new Buffer(len)

  var i = -1
  while (++i < len) {
    padBuff.writeUInt8(len, i)
  }
  var out = Buffer.concat([this.cache, padBuff])
  return out
}
var modelist = {
  ECB: require('./modes/ecb'),
  CBC: require('./modes/cbc'),
  CFB: require('./modes/cfb'),
  CFB8: require('./modes/cfb8'),
  CFB1: require('./modes/cfb1'),
  OFB: require('./modes/ofb'),
  CTR: require('./modes/ctr'),
  GCM: require('./modes/ctr')
}

function createCipheriv (suite, password, iv) {
  var config = modes[suite.toLowerCase()]
  if (!config) {
    throw new TypeError('invalid suite type')
  }
  if (typeof iv === 'string') {
    iv = new Buffer(iv)
  }
  if (typeof password === 'string') {
    password = new Buffer(password)
  }
  if (password.length !== config.key / 8) {
    throw new TypeError('invalid key length ' + password.length)
  }
  if (iv.length !== config.iv) {
    throw new TypeError('invalid iv length ' + iv.length)
  }
  if (config.type === 'stream') {
    return new StreamCipher(modelist[config.mode], password, iv)
  } else if (config.type === 'auth') {
    return new AuthCipher(modelist[config.mode], password, iv)
  }
  return new Cipher(modelist[config.mode], password, iv)
}
function createCipher (suite, password) {
  var config = modes[suite.toLowerCase()]
  if (!config) {
    throw new TypeError('invalid suite type')
  }
  var keys = ebtk(password, false, config.key, config.iv)
  return createCipheriv(suite, keys.key, keys.iv)
}

exports.createCipheriv = createCipheriv
exports.createCipher = createCipher

}).call(this,require("buffer").Buffer)
},{"./aes":19,"./authCipher":20,"./modes":25,"./modes/cbc":26,"./modes/cfb":27,"./modes/cfb1":28,"./modes/cfb8":29,"./modes/ctr":30,"./modes/ecb":31,"./modes/ofb":32,"./streamCipher":33,"buffer":45,"cipher-base":47,"evp_bytestokey":86,"inherits":95}],24:[function(require,module,exports){
(function (Buffer){
var zeros = new Buffer(16)
zeros.fill(0)
module.exports = GHASH
function GHASH (key) {
  this.h = key
  this.state = new Buffer(16)
  this.state.fill(0)
  this.cache = new Buffer('')
}
// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html
// by Juho Vähä-Herttua
GHASH.prototype.ghash = function (block) {
  var i = -1
  while (++i < block.length) {
    this.state[i] ^= block[i]
  }
  this._multiply()
}

GHASH.prototype._multiply = function () {
  var Vi = toArray(this.h)
  var Zi = [0, 0, 0, 0]
  var j, xi, lsb_Vi
  var i = -1
  while (++i < 128) {
    xi = (this.state[~~(i / 8)] & (1 << (7 - i % 8))) !== 0
    if (xi) {
      // Z_i+1 = Z_i ^ V_i
      Zi = xor(Zi, Vi)
    }

    // Store the value of LSB(V_i)
    lsb_Vi = (Vi[3] & 1) !== 0

    // V_i+1 = V_i >> 1
    for (j = 3; j > 0; j--) {
      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)
    }
    Vi[0] = Vi[0] >>> 1

    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R
    if (lsb_Vi) {
      Vi[0] = Vi[0] ^ (0xe1 << 24)
    }
  }
  this.state = fromArray(Zi)
}
GHASH.prototype.update = function (buf) {
  this.cache = Buffer.concat([this.cache, buf])
  var chunk
  while (this.cache.length >= 16) {
    chunk = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    this.ghash(chunk)
  }
}
GHASH.prototype.final = function (abl, bl) {
  if (this.cache.length) {
    this.ghash(Buffer.concat([this.cache, zeros], 16))
  }
  this.ghash(fromArray([
    0, abl,
    0, bl
  ]))
  return this.state
}

function toArray (buf) {
  return [
    buf.readUInt32BE(0),
    buf.readUInt32BE(4),
    buf.readUInt32BE(8),
    buf.readUInt32BE(12)
  ]
}
function fromArray (out) {
  out = out.map(fixup_uint32)
  var buf = new Buffer(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[1], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[3], 12)
  return buf
}
var uint_max = Math.pow(2, 32)
function fixup_uint32 (x) {
  var ret, x_pos
  ret = x > uint_max || x < 0 ? (x_pos = Math.abs(x) % uint_max, x < 0 ? uint_max - x_pos : x_pos) : x
  return ret
}
function xor (a, b) {
  return [
    a[0] ^ b[0],
    a[1] ^ b[1],
    a[2] ^ b[2],
    a[3] ^ b[3]
  ]
}

}).call(this,require("buffer").Buffer)
},{"buffer":45}],25:[function(require,module,exports){
exports['aes-128-ecb'] = {
  cipher: 'AES',
  key: 128,
  iv: 0,
  mode: 'ECB',
  type: 'block'
}
exports['aes-192-ecb'] = {
  cipher: 'AES',
  key: 192,
  iv: 0,
  mode: 'ECB',
  type: 'block'
}
exports['aes-256-ecb'] = {
  cipher: 'AES',
  key: 256,
  iv: 0,
  mode: 'ECB',
  type: 'block'
}
exports['aes-128-cbc'] = {
  cipher: 'AES',
  key: 128,
  iv: 16,
  mode: 'CBC',
  type: 'block'
}
exports['aes-192-cbc'] = {
  cipher: 'AES',
  key: 192,
  iv: 16,
  mode: 'CBC',
  type: 'block'
}
exports['aes-256-cbc'] = {
  cipher: 'AES',
  key: 256,
  iv: 16,
  mode: 'CBC',
  type: 'block'
}
exports['aes128'] = exports['aes-128-cbc']
exports['aes192'] = exports['aes-192-cbc']
exports['aes256'] = exports['aes-256-cbc']
exports['aes-128-cfb'] = {
  cipher: 'AES',
  key: 128,
  iv: 16,
  mode: 'CFB',
  type: 'stream'
}
exports['aes-192-cfb'] = {
  cipher: 'AES',
  key: 192,
  iv: 16,
  mode: 'CFB',
  type: 'stream'
}
exports['aes-256-cfb'] = {
  cipher: 'AES',
  key: 256,
  iv: 16,
  mode: 'CFB',
  type: 'stream'
}
exports['aes-128-cfb8'] = {
  cipher: 'AES',
  key: 128,
  iv: 16,
  mode: 'CFB8',
  type: 'stream'
}
exports['aes-192-cfb8'] = {
  cipher: 'AES',
  key: 192,
  iv: 16,
  mode: 'CFB8',
  type: 'stream'
}
exports['aes-256-cfb8'] = {
  cipher: 'AES',
  key: 256,
  iv: 16,
  mode: 'CFB8',
  type: 'stream'
}
exports['aes-128-cfb1'] = {
  cipher: 'AES',
  key: 128,
  iv: 16,
  mode: 'CFB1',
  type: 'stream'
}
exports['aes-192-cfb1'] = {
  cipher: 'AES',
  key: 192,
  iv: 16,
  mode: 'CFB1',
  type: 'stream'
}
exports['aes-256-cfb1'] = {
  cipher: 'AES',
  key: 256,
  iv: 16,
  mode: 'CFB1',
  type: 'stream'
}
exports['aes-128-ofb'] = {
  cipher: 'AES',
  key: 128,
  iv: 16,
  mode: 'OFB',
  type: 'stream'
}
exports['aes-192-ofb'] = {
  cipher: 'AES',
  key: 192,
  iv: 16,
  mode: 'OFB',
  type: 'stream'
}
exports['aes-256-ofb'] = {
  cipher: 'AES',
  key: 256,
  iv: 16,
  mode: 'OFB',
  type: 'stream'
}
exports['aes-128-ctr'] = {
  cipher: 'AES',
  key: 128,
  iv: 16,
  mode: 'CTR',
  type: 'stream'
}
exports['aes-192-ctr'] = {
  cipher: 'AES',
  key: 192,
  iv: 16,
  mode: 'CTR',
  type: 'stream'
}
exports['aes-256-ctr'] = {
  cipher: 'AES',
  key: 256,
  iv: 16,
  mode: 'CTR',
  type: 'stream'
}
exports['aes-128-gcm'] = {
  cipher: 'AES',
  key: 128,
  iv: 12,
  mode: 'GCM',
  type: 'auth'
}
exports['aes-192-gcm'] = {
  cipher: 'AES',
  key: 192,
  iv: 12,
  mode: 'GCM',
  type: 'auth'
}
exports['aes-256-gcm'] = {
  cipher: 'AES',
  key: 256,
  iv: 12,
  mode: 'GCM',
  type: 'auth'
}

},{}],26:[function(require,module,exports){
var xor = require('buffer-xor')

exports.encrypt = function (self, block) {
  var data = xor(block, self._prev)

  self._prev = self._cipher.encryptBlock(data)
  return self._prev
}

exports.decrypt = function (self, block) {
  var pad = self._prev

  self._prev = block
  var out = self._cipher.decryptBlock(block)

  return xor(out, pad)
}

},{"buffer-xor":44}],27:[function(require,module,exports){
(function (Buffer){
var xor = require('buffer-xor')

exports.encrypt = function (self, data, decrypt) {
  var out = new Buffer('')
  var len

  while (data.length) {
    if (self._cache.length === 0) {
      self._cache = self._cipher.encryptBlock(self._prev)
      self._prev = new Buffer('')
    }

    if (self._cache.length <= data.length) {
      len = self._cache.length
      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])
      data = data.slice(len)
    } else {
      out = Buffer.concat([out, encryptStart(self, data, decrypt)])
      break
    }
  }

  return out
}
function encryptStart (self, data, decrypt) {
  var len = data.length
  var out = xor(data, self._cache)
  self._cache = self._cache.slice(len)
  self._prev = Buffer.concat([self._prev, decrypt ? data : out])
  return out
}

}).call(this,require("buffer").Buffer)
},{"buffer":45,"buffer-xor":44}],28:[function(require,module,exports){
(function (Buffer){
function encryptByte (self, byteParam, decrypt) {
  var pad
  var i = -1
  var len = 8
  var out = 0
  var bit, value
  while (++i < len) {
    pad = self._cipher.encryptBlock(self._prev)
    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0
    value = pad[0] ^ bit
    out += ((value & 0x80) >> (i % 8))
    self._prev = shiftIn(self._prev, decrypt ? bit : value)
  }
  return out
}
exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = new Buffer(len)
  var i = -1
  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }
  return out
}
function shiftIn (buffer, value) {
  var len = buffer.length
  var i = -1
  var out = new Buffer(buffer.length)
  buffer = Buffer.concat([buffer, new Buffer([value])])
  while (++i < len) {
    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)
  }
  return out
}

}).call(this,require("buffer").Buffer)
},{"buffer":45}],29:[function(require,module,exports){
(function (Buffer){
function encryptByte (self, byteParam, decrypt) {
  var pad = self._cipher.encryptBlock(self._prev)
  var out = pad[0] ^ byteParam
  self._prev = Buffer.concat([self._prev.slice(1), new Buffer([decrypt ? byteParam : out])])
  return out
}
exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = new Buffer(len)
  var i = -1
  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }
  return out
}

}).call(this,require("buffer").Buffer)
},{"buffer":45}],30:[function(require,module,exports){
(function (Buffer){
var xor = require('buffer-xor')

function incr32 (iv) {
  var len = iv.length
  var item
  while (len--) {
    item = iv.readUInt8(len)
    if (item === 255) {
      iv.writeUInt8(0, len)
    } else {
      item++
      iv.writeUInt8(item, len)
      break
    }
  }
}

function getBlock (self) {
  var out = self._cipher.encryptBlock(self._prev)
  incr32(self._prev)
  return out
}

exports.encrypt = function (self, chunk) {
  while (self._cache.length < chunk.length) {
    self._cache = Buffer.concat([self._cache, getBlock(self)])
  }
  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

}).call(this,require("buffer").Buffer)
},{"buffer":45,"buffer-xor":44}],31:[function(require,module,exports){
exports.encrypt = function (self, block) {
  return self._cipher.encryptBlock(block)
}
exports.decrypt = function (self, block) {
  return self._cipher.decryptBlock(block)
}

},{}],32:[function(require,module,exports){
(function (Buffer){
var xor = require('buffer-xor')

function getBlock (self) {
  self._prev = self._cipher.encryptBlock(self._prev)
  return self._prev
}

exports.encrypt = function (self, chunk) {
  while (self._cache.length < chunk.length) {
    self._cache = Buffer.concat([self._cache, getBlock(self)])
  }

  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

}).call(this,require("buffer").Buffer)
},{"buffer":45,"buffer-xor":44}],33:[function(require,module,exports){
(function (Buffer){
var aes = require('./aes')
var Transform = require('cipher-base')
var inherits = require('inherits')

inherits(StreamCipher, Transform)
module.exports = StreamCipher
function StreamCipher (mode, key, iv, decrypt) {
  if (!(this instanceof StreamCipher)) {
    return new StreamCipher(mode, key, iv)
  }
  Transform.call(this)
  this._cipher = new aes.AES(key)
  this._prev = new Buffer(iv.length)
  this._cache = new Buffer('')
  this._secCache = new Buffer('')
  this._decrypt = decrypt
  iv.copy(this._prev)
  this._mode = mode
}
StreamCipher.prototype._update = function (chunk) {
  return this._mode.encrypt(this, chunk, this._decrypt)
}
StreamCipher.prototype._final = function () {
  this._cipher.scrub()
}

}).call(this,require("buffer").Buffer)
},{"./aes":19,"buffer":45,"cipher-base":47,"inherits":95}],34:[function(require,module,exports){
var ebtk = require('evp_bytestokey')
var aes = require('browserify-aes/browser')
var DES = require('browserify-des')
var desModes = require('browserify-des/modes')
var aesModes = require('browserify-aes/modes')
function createCipher (suite, password) {
  var keyLen, ivLen
  suite = suite.toLowerCase()
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }
  var keys = ebtk(password, false, keyLen, ivLen)
  return createCipheriv(suite, keys.key, keys.iv)
}
function createDecipher (suite, password) {
  var keyLen, ivLen
  suite = suite.toLowerCase()
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }
  var keys = ebtk(password, false, keyLen, ivLen)
  return createDecipheriv(suite, keys.key, keys.iv)
}

function createCipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) {
    return aes.createCipheriv(suite, key, iv)
  } else if (desModes[suite]) {
    return new DES({
      key: key,
      iv: iv,
      mode: suite
    })
  } else {
    throw new TypeError('invalid suite type')
  }
}
function createDecipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) {
    return aes.createDecipheriv(suite, key, iv)
  } else if (desModes[suite]) {
    return new DES({
      key: key,
      iv: iv,
      mode: suite,
      decrypt: true
    })
  } else {
    throw new TypeError('invalid suite type')
  }
}
exports.createCipher = exports.Cipher = createCipher
exports.createCipheriv = exports.Cipheriv = createCipheriv
exports.createDecipher = exports.Decipher = createDecipher
exports.createDecipheriv = exports.Decipheriv = createDecipheriv
function getCiphers () {
  return Object.keys(desModes).concat(aes.getCiphers())
}
exports.listCiphers = exports.getCiphers = getCiphers

},{"browserify-aes/browser":21,"browserify-aes/modes":25,"browserify-des":35,"browserify-des/modes":36,"evp_bytestokey":86}],35:[function(require,module,exports){
(function (Buffer){
var CipherBase = require('cipher-base')
var des = require('des.js')
var inherits = require('inherits')

var modes = {
  'des-ede3-cbc': des.CBC.instantiate(des.EDE),
  'des-ede3': des.EDE,
  'des-ede-cbc': des.CBC.instantiate(des.EDE),
  'des-ede': des.EDE,
  'des-cbc': des.CBC.instantiate(des.DES),
  'des-ecb': des.DES
}
modes.des = modes['des-cbc']
modes.des3 = modes['des-ede3-cbc']
module.exports = DES
inherits(DES, CipherBase)
function DES (opts) {
  CipherBase.call(this)
  var modeName = opts.mode.toLowerCase()
  var mode = modes[modeName]
  var type
  if (opts.decrypt) {
    type = 'decrypt'
  } else {
    type = 'encrypt'
  }
  var key = opts.key
  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {
    key = Buffer.concat([key, key.slice(0, 8)])
  }
  var iv = opts.iv
  this._des = mode.create({
    key: key,
    iv: iv,
    type: type
  })
}
DES.prototype._update = function (data) {
  return new Buffer(this._des.update(data))
}
DES.prototype._final = function () {
  return new Buffer(this._des.final())
}

}).call(this,require("buffer").Buffer)
},{"buffer":45,"cipher-base":47,"des.js":57,"inherits":95}],36:[function(require,module,exports){
exports['des-ecb'] = {
  key: 8,
  iv: 0
}
exports['des-cbc'] = exports.des = {
  key: 8,
  iv: 8
}
exports['des-ede3-cbc'] = exports.des3 = {
  key: 24,
  iv: 8
}
exports['des-ede3'] = {
  key: 24,
  iv: 0
}
exports['des-ede-cbc'] = {
  key: 16,
  iv: 8
}
exports['des-ede'] = {
  key: 16,
  iv: 0
}

},{}],37:[function(require,module,exports){
(function (Buffer){
var bn = require('bn.js');
var randomBytes = require('randombytes');
module.exports = crt;
function blind(priv) {
  var r = getr(priv);
  var blinder = r.toRed(bn.mont(priv.modulus))
  .redPow(new bn(priv.publicExponent)).fromRed();
  return {
    blinder: blinder,
    unblinder:r.invm(priv.modulus)
  };
}
function crt(msg, priv) {
  var blinds = blind(priv);
  var len = priv.modulus.byteLength();
  var mod = bn.mont(priv.modulus);
  var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);
  var c1 = blinded.toRed(bn.mont(priv.prime1));
  var c2 = blinded.toRed(bn.mont(priv.prime2));
  var qinv = priv.coefficient;
  var p = priv.prime1;
  var q = priv.prime2;
  var m1 = c1.redPow(priv.exponent1);
  var m2 = c2.redPow(priv.exponent2);
  m1 = m1.fromRed();
  m2 = m2.fromRed();
  var h = m1.isub(m2).imul(qinv).umod(p);
  h.imul(q);
  m2.iadd(h);
  return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len));
}
crt.getr = getr;
function getr(priv) {
  var len = priv.modulus.byteLength();
  var r = new bn(randomBytes(len));
  while (r.cmp(priv.modulus) >=  0 || !r.umod(priv.prime1) || !r.umod(priv.prime2)) {
    r = new bn(randomBytes(len));
  }
  return r;
}

}).call(this,require("buffer").Buffer)
},{"bn.js":16,"buffer":45,"randombytes":166}],38:[function(require,module,exports){
(function (Buffer){
'use strict'
exports['RSA-SHA224'] = exports.sha224WithRSAEncryption = {
  sign: 'rsa',
  hash: 'sha224',
  id: new Buffer('302d300d06096086480165030402040500041c', 'hex')
}
exports['RSA-SHA256'] = exports.sha256WithRSAEncryption = {
  sign: 'rsa',
  hash: 'sha256',
  id: new Buffer('3031300d060960864801650304020105000420', 'hex')
}
exports['RSA-SHA384'] = exports.sha384WithRSAEncryption = {
  sign: 'rsa',
  hash: 'sha384',
  id: new Buffer('3041300d060960864801650304020205000430', 'hex')
}
exports['RSA-SHA512'] = exports.sha512WithRSAEncryption = {
  sign: 'rsa',
  hash: 'sha512',
  id: new Buffer('3051300d060960864801650304020305000440', 'hex')
}
exports['RSA-SHA1'] = {
  sign: 'rsa',
  hash: 'sha1',
  id: new Buffer('3021300906052b0e03021a05000414', 'hex')
}
exports['ecdsa-with-SHA1'] = {
  sign: 'ecdsa',
  hash: 'sha1',
  id: new Buffer('', 'hex')
}

exports.DSA = exports['DSA-SHA1'] = exports['DSA-SHA'] = {
  sign: 'dsa',
  hash: 'sha1',
  id: new Buffer('', 'hex')
}
exports['DSA-SHA224'] = exports['DSA-WITH-SHA224'] = {
  sign: 'dsa',
  hash: 'sha224',
  id: new Buffer('', 'hex')
}
exports['DSA-SHA256'] = exports['DSA-WITH-SHA256'] = {
  sign: 'dsa',
  hash: 'sha256',
  id: new Buffer('', 'hex')
}
exports['DSA-SHA384'] = exports['DSA-WITH-SHA384'] = {
  sign: 'dsa',
  hash: 'sha384',
  id: new Buffer('', 'hex')
}
exports['DSA-SHA512'] = exports['DSA-WITH-SHA512'] = {
  sign: 'dsa',
  hash: 'sha512',
  id: new Buffer('', 'hex')
}
exports['DSA-RIPEMD160'] = {
  sign: 'dsa',
  hash: 'rmd160',
  id: new Buffer('', 'hex')
}
exports['RSA-RIPEMD160'] = exports.ripemd160WithRSA = {
  sign: 'rsa',
  hash: 'rmd160',
  id: new Buffer('3021300906052b2403020105000414', 'hex')
}
exports['RSA-MD5'] = exports.md5WithRSAEncryption = {
  sign: 'rsa',
  hash: 'md5',
  id: new Buffer('3020300c06082a864886f70d020505000410', 'hex')
}

}).call(this,require("buffer").Buffer)
},{"buffer":45}],39:[function(require,module,exports){
(function (Buffer){
var _algos = require('./algos')
var createHash = require('create-hash')
var inherits = require('inherits')
var sign = require('./sign')
var stream = require('stream')
var verify = require('./verify')

var algos = {}
Object.keys(_algos).forEach(function (key) {
  algos[key] = algos[key.toLowerCase()] = _algos[key]
})

function Sign (algorithm) {
  stream.Writable.call(this)

  var data = algos[algorithm]
  if (!data) {
    throw new Error('Unknown message digest')
  }

  this._hashType = data.hash
  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Sign, stream.Writable)

Sign.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Sign.prototype.update = function update (data, enc) {
  if (typeof data === 'string') {
    data = new Buffer(data, enc)
  }

  this._hash.update(data)
  return this
}

Sign.prototype.sign = function signMethod (key, enc) {
  this.end()
  var hash = this._hash.digest()
  var sig = sign(Buffer.concat([this._tag, hash]), key, this._hashType, this._signType)

  return enc ? sig.toString(enc) : sig
}

function Verify (algorithm) {
  stream.Writable.call(this)

  var data = algos[algorithm]
  if (!data) {
    throw new Error('Unknown message digest')
  }

  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Verify, stream.Writable)

Verify.prototype._write = function _write (data, _, done) {
  this._hash.update(data)

  done()
}

Verify.prototype.update = function update (data, enc) {
  if (typeof data === 'string') {
    data = new Buffer(data, enc)
  }

  this._hash.update(data)
  return this
}

Verify.prototype.verify = function verifyMethod (key, sig, enc) {
  if (typeof sig === 'string') {
    sig = new Buffer(sig, enc)
  }

  this.end()
  var hash = this._hash.digest()

  return verify(sig, Buffer.concat([this._tag, hash]), key, this._signType)
}

function createSign (algorithm) {
  return new Sign(algorithm)
}

function createVerify (algorithm) {
  return new Verify(algorithm)
}

module.exports = {
  Sign: createSign,
  Verify: createVerify,
  createSign: createSign,
  createVerify: createVerify
}

}).call(this,require("buffer").Buffer)
},{"./algos":38,"./sign":41,"./verify":42,"buffer":45,"create-hash":52,"inherits":95,"stream":189}],40:[function(require,module,exports){
'use strict'
exports['1.3.132.0.10'] = 'secp256k1'

exports['1.3.132.0.33'] = 'p224'

exports['1.2.840.10045.3.1.1'] = 'p192'

exports['1.2.840.10045.3.1.7'] = 'p256'

exports['1.3.132.0.34'] = 'p384'

exports['1.3.132.0.35'] = 'p521'

},{}],41:[function(require,module,exports){
(function (Buffer){
// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var createHmac = require('create-hmac')
var crt = require('browserify-rsa')
var curves = require('./curves')
var elliptic = require('elliptic')
var parseKeys = require('parse-asn1')

var BN = require('bn.js')
var EC = elliptic.ec

function sign (hash, key, hashType, signType) {
  var priv = parseKeys(key)
  if (priv.curve) {
    if (signType !== 'ecdsa') throw new Error('wrong private key type')

    return ecSign(hash, priv)
  } else if (priv.type === 'dsa') {
    if (signType !== 'dsa') {
      throw new Error('wrong private key type')
    }
    return dsaSign(hash, priv, hashType)
  } else {
    if (signType !== 'rsa') throw new Error('wrong private key type')
  }

  var len = priv.modulus.byteLength()
  var pad = [ 0, 1 ]
  while (hash.length + pad.length + 1 < len) {
    pad.push(0xff)
  }
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) {
    pad.push(hash[i])
  }

  var out = crt(pad, priv)
  return out
}

function ecSign (hash, priv) {
  var curveId = curves[priv.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))

  var curve = new EC(curveId)
  var key = curve.genKeyPair()

  key._importPrivate(priv.privateKey)
  var out = key.sign(hash)

  return new Buffer(out.toDER())
}

function dsaSign (hash, priv, algo) {
  var x = priv.params.priv_key
  var p = priv.params.p
  var q = priv.params.q
  var g = priv.params.g
  var r = new BN(0)
  var k
  var H = bits2int(hash, q).mod(q)
  var s = false
  var kv = getKey(x, q, hash, algo)
  while (s === false) {
    k = makeKey(q, kv, algo)
    r = makeR(g, k, p, q)
    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)
    if (!s.cmpn(0)) {
      s = false
      r = new BN(0)
    }
  }
  return toDER(r, s)
}

function toDER (r, s) {
  r = r.toArray()
  s = s.toArray()

  // Pad values
  if (r[0] & 0x80) {
    r = [ 0 ].concat(r)
  }
  // Pad values
  if (s[0] & 0x80) {
    s = [0].concat(s)
  }

  var total = r.length + s.length + 4
  var res = [ 0x30, total, 0x02, r.length ]
  res = res.concat(r, [ 0x02, s.length ], s)
  return new Buffer(res)
}

function getKey (x, q, hash, algo) {
  x = new Buffer(x.toArray())
  if (x.length < q.byteLength()) {
    var zeros = new Buffer(q.byteLength() - x.length)
    zeros.fill(0)
    x = Buffer.concat([zeros, x])
  }
  var hlen = hash.length
  var hbits = bits2octets(hash, q)
  var v = new Buffer(hlen)
  v.fill(1)
  var k = new Buffer(hlen)
  k.fill(0)
  k = createHmac(algo, k)
    .update(v)
    .update(new Buffer([0]))
    .update(x)
    .update(hbits)
    .digest()
  v = createHmac(algo, k)
    .update(v)
    .digest()
  k = createHmac(algo, k)
    .update(v)
    .update(new Buffer([1]))
    .update(x)
    .update(hbits)
    .digest()
  v = createHmac(algo, k)
    .update(v)
    .digest()
  return {
    k: k,
    v: v
  }
}

function bits2int (obits, q) {
  var bits = new BN(obits)
  var shift = (obits.length << 3) - q.bitLength()
  if (shift > 0) {
    bits.ishrn(shift)
  }
  return bits
}

function bits2octets (bits, q) {
  bits = bits2int(bits, q)
  bits = bits.mod(q)
  var out = new Buffer(bits.toArray())
  if (out.length < q.byteLength()) {
    var zeros = new Buffer(q.byteLength() - out.length)
    zeros.fill(0)
    out = Buffer.concat([zeros, out])
  }
  return out
}

function makeKey (q, kv, algo) {
  var t, k

  do {
    t = new Buffer('')

    while (t.length * 8 < q.bitLength()) {
      kv.v = createHmac(algo, kv.k)
        .update(kv.v)
        .digest()
      t = Buffer.concat([t, kv.v])
    }

    k = bits2int(t, q)
    kv.k = createHmac(algo, kv.k)
      .update(kv.v)
      .update(new Buffer([0]))
      .digest()
    kv.v = createHmac(algo, kv.k)
      .update(kv.v)
      .digest()
  } while (k.cmp(q) !== -1)

  return k
}

function makeR (g, k, p, q) {
  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)
}

module.exports = sign
module.exports.getKey = getKey
module.exports.makeKey = makeKey

}).call(this,require("buffer").Buffer)
},{"./curves":40,"bn.js":16,"browserify-rsa":37,"buffer":45,"create-hmac":55,"elliptic":67,"parse-asn1":154}],42:[function(require,module,exports){
(function (Buffer){
// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var curves = require('./curves')
var elliptic = require('elliptic')
var parseKeys = require('parse-asn1')

var BN = require('bn.js')
var EC = elliptic.ec

function verify (sig, hash, key, signType) {
  var pub = parseKeys(key)
  if (pub.type === 'ec') {
    if (signType !== 'ecdsa') {
      throw new Error('wrong public key type')
    }
    return ecVerify(sig, hash, pub)
  } else if (pub.type === 'dsa') {
    if (signType !== 'dsa') {
      throw new Error('wrong public key type')
    }
    return dsaVerify(sig, hash, pub)
  } else {
    if (signType !== 'rsa') {
      throw new Error('wrong public key type')
    }
  }
  var len = pub.modulus.byteLength()
  var pad = [ 1 ]
  var padNum = 0
  while (hash.length + pad.length + 2 < len) {
    pad.push(0xff)
    padNum++
  }
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) {
    pad.push(hash[i])
  }
  pad = new Buffer(pad)
  var red = BN.mont(pub.modulus)
  sig = new BN(sig).toRed(red)

  sig = sig.redPow(new BN(pub.publicExponent))

  sig = new Buffer(sig.fromRed().toArray())
  var out = 0
  if (padNum < 8) {
    out = 1
  }
  len = Math.min(sig.length, pad.length)
  if (sig.length !== pad.length) {
    out = 1
  }

  i = -1
  while (++i < len) {
    out |= (sig[i] ^ pad[i])
  }
  return out === 0
}

function ecVerify (sig, hash, pub) {
  var curveId = curves[pub.data.algorithm.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))

  var curve = new EC(curveId)
  var pubkey = pub.data.subjectPrivateKey.data

  return curve.verify(hash, sig, pubkey)
}

function dsaVerify (sig, hash, pub) {
  var p = pub.data.p
  var q = pub.data.q
  var g = pub.data.g
  var y = pub.data.pub_key
  var unpacked = parseKeys.signature.decode(sig, 'der')
  var s = unpacked.s
  var r = unpacked.r
  checkValue(s, q)
  checkValue(r, q)
  var montp = BN.mont(p)
  var w = s.invm(q)
  var v = g.toRed(montp)
    .redPow(new BN(hash).mul(w).mod(q))
    .fromRed()
    .mul(
      y.toRed(montp)
        .redPow(r.mul(w).mod(q))
        .fromRed()
  ).mod(p).mod(q)
  return !v.cmp(r)
}

function checkValue (b, q) {
  if (b.cmpn(0) <= 0) {
    throw new Error('invalid sig')
  }
  if (b.cmp(q) >= q) {
    throw new Error('invalid sig')
  }
}

module.exports = verify

}).call(this,require("buffer").Buffer)
},{"./curves":40,"bn.js":16,"buffer":45,"elliptic":67,"parse-asn1":154}],43:[function(require,module,exports){
arguments[4][18][0].apply(exports,arguments)
},{"dup":18}],44:[function(require,module,exports){
(function (Buffer){
module.exports = function xor (a, b) {
  var length = Math.min(a.length, b.length)
  var buffer = new Buffer(length)

  for (var i = 0; i < length; ++i) {
    buffer[i] = a[i] ^ b[i]
  }

  return buffer
}

}).call(this,require("buffer").Buffer)
},{"buffer":45}],45:[function(require,module,exports){
(function (global){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')
var isArray = require('isarray')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50
Buffer.poolSize = 8192 // not used by this implementation

var rootParent = {}

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Safari 5-7 lacks support for changing the `Object.prototype.constructor` property
 *     on objects.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

function typedArraySupport () {
  function Bar () {}
  try {
    var arr = new Uint8Array(1)
    arr.foo = function () { return 42 }
    arr.constructor = Bar
    return arr.foo() === 42 && // typed array instances can be augmented
        arr.constructor === Bar && // constructor can be set
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

/**
 * Class: Buffer
 * =============
 *
 * The Buffer constructor returns instances of `Uint8Array` that are augmented
 * with function properties for all the node `Buffer` API functions. We use
 * `Uint8Array` so that square bracket notation works as expected -- it returns
 * a single octet.
 *
 * By augmenting the instances, we can avoid modifying the `Uint8Array`
 * prototype.
 */
function Buffer (arg) {
  if (!(this instanceof Buffer)) {
    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.
    if (arguments.length > 1) return new Buffer(arg, arguments[1])
    return new Buffer(arg)
  }

  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    this.length = 0
    this.parent = undefined
  }

  // Common case.
  if (typeof arg === 'number') {
    return fromNumber(this, arg)
  }

  // Slightly less common case.
  if (typeof arg === 'string') {
    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')
  }

  // Unusual.
  return fromObject(this, arg)
}

function fromNumber (that, length) {
  that = allocate(that, length < 0 ? 0 : checked(length) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < length; i++) {
      that[i] = 0
    }
  }
  return that
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'

  // Assumption: byteLength() return value is always < kMaxLength.
  var length = byteLength(string, encoding) | 0
  that = allocate(that, length)

  that.write(string, encoding)
  return that
}

function fromObject (that, object) {
  if (Buffer.isBuffer(object)) return fromBuffer(that, object)

  if (isArray(object)) return fromArray(that, object)

  if (object == null) {
    throw new TypeError('must start with number, buffer, array or string')
  }

  if (typeof ArrayBuffer !== 'undefined') {
    if (object.buffer instanceof ArrayBuffer) {
      return fromTypedArray(that, object)
    }
    if (object instanceof ArrayBuffer) {
      return fromArrayBuffer(that, object)
    }
  }

  if (object.length) return fromArrayLike(that, object)

  return fromJsonObject(that, object)
}

function fromBuffer (that, buffer) {
  var length = checked(buffer.length) | 0
  that = allocate(that, length)
  buffer.copy(that, 0, 0, length)
  return that
}

function fromArray (that, array) {
  var length = checked(array.length) | 0
  that = allocate(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

// Duplicate of fromArray() to keep fromArray() monomorphic.
function fromTypedArray (that, array) {
  var length = checked(array.length) | 0
  that = allocate(that, length)
  // Truncating the elements is probably not what people expect from typed
  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior
  // of the old Buffer constructor.
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array) {
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    array.byteLength
    that = Buffer._augment(new Uint8Array(array))
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromTypedArray(that, new Uint8Array(array))
  }
  return that
}

function fromArrayLike (that, array) {
  var length = checked(array.length) | 0
  that = allocate(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.
// Returns a zero-length buffer for inputs that don't conform to the spec.
function fromJsonObject (that, object) {
  var array
  var length = 0

  if (object.type === 'Buffer' && isArray(object.data)) {
    array = object.data
    length = checked(array.length) | 0
  }
  that = allocate(that, length)

  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
} else {
  // pre-set for values that may exist in the future
  Buffer.prototype.length = undefined
  Buffer.prototype.parent = undefined
}

function allocate (that, length) {
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = Buffer._augment(new Uint8Array(length))
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that.length = length
    that._isBuffer = true
  }

  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1
  if (fromPool) that.parent = rootParent

  return that
}

function checked (length) {
  // Note: cannot use `length < kMaxLength` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (subject, encoding) {
  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)

  var buf = new Buffer(subject, encoding)
  delete buf.parent
  return buf
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  var i = 0
  var len = Math.min(x, y)
  while (i < len) {
    if (a[i] !== b[i]) break

    ++i
  }

  if (i !== len) {
    x = a[i]
    y = b[i]
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'binary':
    case 'base64':
    case 'raw':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')

  if (list.length === 0) {
    return new Buffer(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; i++) {
      length += list[i].length
    }
  }

  var buf = new Buffer(length)
  var pos = 0
  for (i = 0; i < list.length; i++) {
    var item = list[i]
    item.copy(buf, pos)
    pos += item.length
  }
  return buf
}

function byteLength (string, encoding) {
  if (typeof string !== 'string') string = '' + string

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'binary':
      // Deprecated
      case 'raw':
      case 'raws':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  start = start | 0
  end = end === undefined || end === Infinity ? this.length : end | 0

  if (!encoding) encoding = 'utf8'
  if (start < 0) start = 0
  if (end > this.length) end = this.length
  if (end <= start) return ''

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'binary':
        return binarySlice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return 0
  return Buffer.compare(this, b)
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset) {
  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff
  else if (byteOffset < -0x80000000) byteOffset = -0x80000000
  byteOffset >>= 0

  if (this.length === 0) return -1
  if (byteOffset >= this.length) return -1

  // Negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)

  if (typeof val === 'string') {
    if (val.length === 0) return -1 // special case: looking for empty string always fails
    return String.prototype.indexOf.call(this, val, byteOffset)
  }
  if (Buffer.isBuffer(val)) {
    return arrayIndexOf(this, val, byteOffset)
  }
  if (typeof val === 'number') {
    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {
      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)
    }
    return arrayIndexOf(this, [ val ], byteOffset)
  }

  function arrayIndexOf (arr, val, byteOffset) {
    var foundIndex = -1
    for (var i = 0; byteOffset + i < arr.length; i++) {
      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex
      } else {
        foundIndex = -1
      }
    }
    return -1
  }

  throw new TypeError('val must be string, number or Buffer')
}

// `get` is deprecated
Buffer.prototype.get = function get (offset) {
  console.log('.get() is deprecated. Access using array indexes instead.')
  return this.readUInt8(offset)
}

// `set` is deprecated
Buffer.prototype.set = function set (v, offset) {
  console.log('.set() is deprecated. Access using array indexes instead.')
  return this.writeUInt8(v, offset)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new Error('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; i++) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) throw new Error('Invalid hex string')
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function binaryWrite (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    var swap = encoding
    encoding = offset
    offset = length | 0
    length = swap
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'binary':
        return binaryWrite(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function binarySlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; i++) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = Buffer._augment(this.subarray(start, end))
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; i++) {
      newBuf[i] = this[i + start]
    }
  }

  if (newBuf.length) newBuf.parent = this.parent || this

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('value is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = value < 0 ? 1 : 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = value < 0 ? 1 : 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (value > max || value < min) throw new RangeError('value is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('index out of range')
  if (offset < 0) throw new RangeError('index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; i--) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; i++) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    target._set(this.subarray(start, start + len), targetStart)
  }

  return len
}

// fill(value, start=0, end=buffer.length)
Buffer.prototype.fill = function fill (value, start, end) {
  if (!value) value = 0
  if (!start) start = 0
  if (!end) end = this.length

  if (end < start) throw new RangeError('end < start')

  // Fill 0 bytes; we're done
  if (end === start) return
  if (this.length === 0) return

  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')
  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')

  var i
  if (typeof value === 'number') {
    for (i = start; i < end; i++) {
      this[i] = value
    }
  } else {
    var bytes = utf8ToBytes(value.toString())
    var len = bytes.length
    for (i = start; i < end; i++) {
      this[i] = bytes[i % len]
    }
  }

  return this
}

/**
 * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.
 * Added in Node 0.12. Only available in browsers that support ArrayBuffer.
 */
Buffer.prototype.toArrayBuffer = function toArrayBuffer () {
  if (typeof Uint8Array !== 'undefined') {
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      return (new Buffer(this)).buffer
    } else {
      var buf = new Uint8Array(this.length)
      for (var i = 0, len = buf.length; i < len; i += 1) {
        buf[i] = this[i]
      }
      return buf.buffer
    }
  } else {
    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')
  }
}

// HELPER FUNCTIONS
// ================

var BP = Buffer.prototype

/**
 * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods
 */
Buffer._augment = function _augment (arr) {
  arr.constructor = Buffer
  arr._isBuffer = true

  // save reference to original Uint8Array set method before overwriting
  arr._set = arr.set

  // deprecated
  arr.get = BP.get
  arr.set = BP.set

  arr.write = BP.write
  arr.toString = BP.toString
  arr.toLocaleString = BP.toString
  arr.toJSON = BP.toJSON
  arr.equals = BP.equals
  arr.compare = BP.compare
  arr.indexOf = BP.indexOf
  arr.copy = BP.copy
  arr.slice = BP.slice
  arr.readUIntLE = BP.readUIntLE
  arr.readUIntBE = BP.readUIntBE
  arr.readUInt8 = BP.readUInt8
  arr.readUInt16LE = BP.readUInt16LE
  arr.readUInt16BE = BP.readUInt16BE
  arr.readUInt32LE = BP.readUInt32LE
  arr.readUInt32BE = BP.readUInt32BE
  arr.readIntLE = BP.readIntLE
  arr.readIntBE = BP.readIntBE
  arr.readInt8 = BP.readInt8
  arr.readInt16LE = BP.readInt16LE
  arr.readInt16BE = BP.readInt16BE
  arr.readInt32LE = BP.readInt32LE
  arr.readInt32BE = BP.readInt32BE
  arr.readFloatLE = BP.readFloatLE
  arr.readFloatBE = BP.readFloatBE
  arr.readDoubleLE = BP.readDoubleLE
  arr.readDoubleBE = BP.readDoubleBE
  arr.writeUInt8 = BP.writeUInt8
  arr.writeUIntLE = BP.writeUIntLE
  arr.writeUIntBE = BP.writeUIntBE
  arr.writeUInt16LE = BP.writeUInt16LE
  arr.writeUInt16BE = BP.writeUInt16BE
  arr.writeUInt32LE = BP.writeUInt32LE
  arr.writeUInt32BE = BP.writeUInt32BE
  arr.writeIntLE = BP.writeIntLE
  arr.writeIntBE = BP.writeIntBE
  arr.writeInt8 = BP.writeInt8
  arr.writeInt16LE = BP.writeInt16LE
  arr.writeInt16BE = BP.writeInt16BE
  arr.writeInt32LE = BP.writeInt32LE
  arr.writeInt32BE = BP.writeInt32BE
  arr.writeFloatLE = BP.writeFloatLE
  arr.writeFloatBE = BP.writeFloatBE
  arr.writeDoubleLE = BP.writeDoubleLE
  arr.writeDoubleBE = BP.writeDoubleBE
  arr.fill = BP.fill
  arr.inspect = BP.inspect
  arr.toArrayBuffer = BP.toArrayBuffer

  return arr
}

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; i++) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; i++) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"base64-js":15,"ieee754":93,"isarray":46}],46:[function(require,module,exports){
var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

},{}],47:[function(require,module,exports){
(function (Buffer){
var Transform = require('stream').Transform
var inherits = require('inherits')
var StringDecoder = require('string_decoder').StringDecoder
module.exports = CipherBase
inherits(CipherBase, Transform)
function CipherBase (hashMode) {
  Transform.call(this)
  this.hashMode = typeof hashMode === 'string'
  if (this.hashMode) {
    this[hashMode] = this._finalOrDigest
  } else {
    this.final = this._finalOrDigest
  }
  this._decoder = null
  this._encoding = null
}
CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
  if (typeof data === 'string') {
    data = new Buffer(data, inputEnc)
  }
  var outData = this._update(data)
  if (this.hashMode) {
    return this
  }
  if (outputEnc) {
    outData = this._toString(outData, outputEnc)
  }
  return outData
}

CipherBase.prototype.setAutoPadding = function () {}

CipherBase.prototype.getAuthTag = function () {
  throw new Error('trying to get auth tag in unsupported state')
}

CipherBase.prototype.setAuthTag = function () {
  throw new Error('trying to set auth tag in unsupported state')
}

CipherBase.prototype.setAAD = function () {
  throw new Error('trying to set aad in unsupported state')
}

CipherBase.prototype._transform = function (data, _, next) {
  var err
  try {
    if (this.hashMode) {
      this._update(data)
    } else {
      this.push(this._update(data))
    }
  } catch (e) {
    err = e
  } finally {
    next(err)
  }
}
CipherBase.prototype._flush = function (done) {
  var err
  try {
    this.push(this._final())
  } catch (e) {
    err = e
  } finally {
    done(err)
  }
}
CipherBase.prototype._finalOrDigest = function (outputEnc) {
  var outData = this._final() || new Buffer('')
  if (outputEnc) {
    outData = this._toString(outData, outputEnc, true)
  }
  return outData
}

CipherBase.prototype._toString = function (value, enc, final) {
  if (!this._decoder) {
    this._decoder = new StringDecoder(enc)
    this._encoding = enc
  }
  if (this._encoding !== enc) {
    throw new Error('can\'t switch encodings')
  }
  var out = this._decoder.write(value)
  if (final) {
    out += this._decoder.end()
  }
  return out
}

}).call(this,require("buffer").Buffer)
},{"buffer":45,"inherits":95,"stream":189,"string_decoder":190}],48:[function(require,module,exports){
var Stat = require('fs').Stats

module.exports = cloneStats

function cloneStats(stats) {
  var replacement = new Stat

  Object.keys(stats).forEach(function(key) {
    replacement[key] = stats[key]
  })

  return replacement
}

},{"fs":43}],49:[function(require,module,exports){
(function (Buffer){
var clone = (function() {
'use strict';

/**
 * Clones (copies) an Object using deep copying.
 *
 * This function supports circular references by default, but if you are certain
 * there are no circular references in your object, you can save some CPU time
 * by calling clone(obj, false).
 *
 * Caution: if `circular` is false and `parent` contains circular references,
 * your program may enter an infinite loop and crash.
 *
 * @param `parent` - the object to be cloned
 * @param `circular` - set to true if the object to be cloned may contain
 *    circular references. (optional - true by default)
 * @param `depth` - set to a number if the object is only to be cloned to
 *    a particular depth. (optional - defaults to Infinity)
 * @param `prototype` - sets the prototype to be used when cloning an object.
 *    (optional - defaults to parent prototype).
*/
function clone(parent, circular, depth, prototype) {
  var filter;
  if (typeof circular === 'object') {
    depth = circular.depth;
    prototype = circular.prototype;
    filter = circular.filter;
    circular = circular.circular
  }
  // maintain two arrays for circular references, where corresponding parents
  // and children have the same index
  var allParents = [];
  var allChildren = [];

  var useBuffer = typeof Buffer != 'undefined';

  if (typeof circular == 'undefined')
    circular = true;

  if (typeof depth == 'undefined')
    depth = Infinity;

  // recurse this function so we don't reset allParents and allChildren
  function _clone(parent, depth) {
    // cloning null always returns null
    if (parent === null)
      return null;

    if (depth == 0)
      return parent;

    var child;
    var proto;
    if (typeof parent != 'object') {
      return parent;
    }

    if (clone.__isArray(parent)) {
      child = [];
    } else if (clone.__isRegExp(parent)) {
      child = new RegExp(parent.source, __getRegExpFlags(parent));
      if (parent.lastIndex) child.lastIndex = parent.lastIndex;
    } else if (clone.__isDate(parent)) {
      child = new Date(parent.getTime());
    } else if (useBuffer && Buffer.isBuffer(parent)) {
      child = new Buffer(parent.length);
      parent.copy(child);
      return child;
    } else {
      if (typeof prototype == 'undefined') {
        proto = Object.getPrototypeOf(parent);
        child = Object.create(proto);
      }
      else {
        child = Object.create(prototype);
        proto = prototype;
      }
    }

    if (circular) {
      var index = allParents.indexOf(parent);

      if (index != -1) {
        return allChildren[index];
      }
      allParents.push(parent);
      allChildren.push(child);
    }

    for (var i in parent) {
      var attrs;
      if (proto) {
        attrs = Object.getOwnPropertyDescriptor(proto, i);
      }

      if (attrs && attrs.set == null) {
        continue;
      }
      child[i] = _clone(parent[i], depth - 1);
    }

    return child;
  }

  return _clone(parent, depth);
}

/**
 * Simple flat clone using prototype, accepts only objects, usefull for property
 * override on FLAT configuration object (no nested props).
 *
 * USE WITH CAUTION! This may not behave as you wish if you do not know how this
 * works.
 */
clone.clonePrototype = function clonePrototype(parent) {
  if (parent === null)
    return null;

  var c = function () {};
  c.prototype = parent;
  return new c();
};

// private utility functions

function __objToStr(o) {
  return Object.prototype.toString.call(o);
};
clone.__objToStr = __objToStr;

function __isDate(o) {
  return typeof o === 'object' && __objToStr(o) === '[object Date]';
};
clone.__isDate = __isDate;

function __isArray(o) {
  return typeof o === 'object' && __objToStr(o) === '[object Array]';
};
clone.__isArray = __isArray;

function __isRegExp(o) {
  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';
};
clone.__isRegExp = __isRegExp;

function __getRegExpFlags(re) {
  var flags = '';
  if (re.global) flags += 'g';
  if (re.ignoreCase) flags += 'i';
  if (re.multiline) flags += 'm';
  return flags;
};
clone.__getRegExpFlags = __getRegExpFlags;

return clone;
})();

if (typeof module === 'object' && module.exports) {
  module.exports = clone;
}

}).call(this,require("buffer").Buffer)
},{"buffer":45}],50:[function(require,module,exports){
(function (Buffer){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }
  return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = Buffer.isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

}).call(this,{"isBuffer":require("../../is-buffer/index.js")})
},{"../../is-buffer/index.js":96}],51:[function(require,module,exports){
(function (Buffer){
var elliptic = require('elliptic');
var BN = require('bn.js');

module.exports = function createECDH(curve) {
	return new ECDH(curve);
};

var aliases = {
	secp256k1: {
		name: 'secp256k1',
		byteLength: 32
	},
	secp224r1: {
		name: 'p224',
		byteLength: 28
	},
	prime256v1: {
		name: 'p256',
		byteLength: 32
	},
	prime192v1: {
		name: 'p192',
		byteLength: 24
	},
	ed25519: {
		name: 'ed25519',
		byteLength: 32
	},
	secp384r1: {
		name: 'p384',
		byteLength: 48
	},
	secp521r1: {
		name: 'p521',
		byteLength: 66
	}
};

aliases.p224 = aliases.secp224r1;
aliases.p256 = aliases.secp256r1 = aliases.prime256v1;
aliases.p192 = aliases.secp192r1 = aliases.prime192v1;
aliases.p384 = aliases.secp384r1;
aliases.p521 = aliases.secp521r1;

function ECDH(curve) {
	this.curveType = aliases[curve];
	if (!this.curveType ) {
		this.curveType = {
			name: curve
		};
	}
	this.curve = new elliptic.ec(this.curveType.name);
	this.keys = void 0;
}

ECDH.prototype.generateKeys = function (enc, format) {
	this.keys = this.curve.genKeyPair();
	return this.getPublicKey(enc, format);
};

ECDH.prototype.computeSecret = function (other, inenc, enc) {
	inenc = inenc || 'utf8';
	if (!Buffer.isBuffer(other)) {
		other = new Buffer(other, inenc);
	}
	var otherPub = this.curve.keyFromPublic(other).getPublic();
	var out = otherPub.mul(this.keys.getPrivate()).getX();
	return formatReturnValue(out, enc, this.curveType.byteLength);
};

ECDH.prototype.getPublicKey = function (enc, format) {
	var key = this.keys.getPublic(format === 'compressed', true);
	if (format === 'hybrid') {
		if (key[key.length - 1] % 2) {
			key[0] = 7;
		} else {
			key [0] = 6;
		}
	}
	return formatReturnValue(key, enc);
};

ECDH.prototype.getPrivateKey = function (enc) {
	return formatReturnValue(this.keys.getPrivate(), enc);
};

ECDH.prototype.setPublicKey = function (pub, enc) {
	enc = enc || 'utf8';
	if (!Buffer.isBuffer(pub)) {
		pub = new Buffer(pub, enc);
	}
	this.keys._importPublic(pub);
	return this;
};

ECDH.prototype.setPrivateKey = function (priv, enc) {
	enc = enc || 'utf8';
	if (!Buffer.isBuffer(priv)) {
		priv = new Buffer(priv, enc);
	}
	var _priv = new BN(priv);
	_priv = _priv.toString(16);
	this.keys._importPrivate(_priv);
	return this;
};

function formatReturnValue(bn, enc, len) {
	if (!Array.isArray(bn)) {
		bn = bn.toArray();
	}
	var buf = new Buffer(bn);
	if (len && buf.length < len) {
		var zeros = new Buffer(len - buf.length);
		zeros.fill(0);
		buf = Buffer.concat([zeros, buf]);
	}
	if (!enc) {
		return buf;
	} else {
		return buf.toString(enc);
	}
}

}).call(this,require("buffer").Buffer)
},{"bn.js":16,"buffer":45,"elliptic":67}],52:[function(require,module,exports){
(function (Buffer){
'use strict';
var inherits = require('inherits')
var md5 = require('./md5')
var rmd160 = require('ripemd160')
var sha = require('sha.js')

var Base = require('cipher-base')

function HashNoConstructor(hash) {
  Base.call(this, 'digest')

  this._hash = hash
  this.buffers = []
}

inherits(HashNoConstructor, Base)

HashNoConstructor.prototype._update = function (data) {
  this.buffers.push(data)
}

HashNoConstructor.prototype._final = function () {
  var buf = Buffer.concat(this.buffers)
  var r = this._hash(buf)
  this.buffers = null

  return r
}

function Hash(hash) {
  Base.call(this, 'digest')

  this._hash = hash
}

inherits(Hash, Base)

Hash.prototype._update = function (data) {
  this._hash.update(data)
}

Hash.prototype._final = function () {
  return this._hash.digest()
}

module.exports = function createHash (alg) {
  alg = alg.toLowerCase()
  if ('md5' === alg) return new HashNoConstructor(md5)
  if ('rmd160' === alg || 'ripemd160' === alg) return new HashNoConstructor(rmd160)

  return new Hash(sha(alg))
}

}).call(this,require("buffer").Buffer)
},{"./md5":54,"buffer":45,"cipher-base":47,"inherits":95,"ripemd160":178,"sha.js":181}],53:[function(require,module,exports){
(function (Buffer){
'use strict';
var intSize = 4;
var zeroBuffer = new Buffer(intSize); zeroBuffer.fill(0);
var chrsz = 8;

function toArray(buf, bigEndian) {
  if ((buf.length % intSize) !== 0) {
    var len = buf.length + (intSize - (buf.length % intSize));
    buf = Buffer.concat([buf, zeroBuffer], len);
  }

  var arr = [];
  var fn = bigEndian ? buf.readInt32BE : buf.readInt32LE;
  for (var i = 0; i < buf.length; i += intSize) {
    arr.push(fn.call(buf, i));
  }
  return arr;
}

function toBuffer(arr, size, bigEndian) {
  var buf = new Buffer(size);
  var fn = bigEndian ? buf.writeInt32BE : buf.writeInt32LE;
  for (var i = 0; i < arr.length; i++) {
    fn.call(buf, arr[i], i * 4, true);
  }
  return buf;
}

function hash(buf, fn, hashSize, bigEndian) {
  if (!Buffer.isBuffer(buf)) buf = new Buffer(buf);
  var arr = fn(toArray(buf, bigEndian), buf.length * chrsz);
  return toBuffer(arr, hashSize, bigEndian);
}
exports.hash = hash;
}).call(this,require("buffer").Buffer)
},{"buffer":45}],54:[function(require,module,exports){
'use strict';
/*
 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
 * Digest Algorithm, as defined in RFC 1321.
 * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for more info.
 */

var helpers = require('./helpers');

/*
 * Calculate the MD5 of an array of little-endian words, and a bit length
 */
function core_md5(x, len)
{
  /* append padding */
  x[len >> 5] |= 0x80 << ((len) % 32);
  x[(((len + 64) >>> 9) << 4) + 14] = len;

  var a =  1732584193;
  var b = -271733879;
  var c = -1732584194;
  var d =  271733878;

  for(var i = 0; i < x.length; i += 16)
  {
    var olda = a;
    var oldb = b;
    var oldc = c;
    var oldd = d;

    a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);
    d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);
    c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);
    b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);
    a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);
    d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);
    c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);
    b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);
    a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);
    d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);
    c = md5_ff(c, d, a, b, x[i+10], 17, -42063);
    b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);
    a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);
    d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);
    c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);
    b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);

    a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);
    d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);
    c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);
    b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);
    a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);
    d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);
    c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);
    b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);
    a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);
    d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);
    c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);
    b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);
    a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);
    d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);
    c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);
    b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);

    a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);
    d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);
    c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);
    b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);
    a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);
    d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);
    c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);
    b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);
    a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);
    d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);
    c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);
    b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);
    a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);
    d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);
    c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);
    b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);

    a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);
    d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);
    c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);
    b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);
    a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);
    d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);
    c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);
    b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);
    a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);
    d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);
    c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);
    b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);
    a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);
    d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);
    c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);
    b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);

    a = safe_add(a, olda);
    b = safe_add(b, oldb);
    c = safe_add(c, oldc);
    d = safe_add(d, oldd);
  }
  return Array(a, b, c, d);

}

/*
 * These functions implement the four basic operations the algorithm uses.
 */
function md5_cmn(q, a, b, x, s, t)
{
  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);
}
function md5_ff(a, b, c, d, x, s, t)
{
  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);
}
function md5_gg(a, b, c, d, x, s, t)
{
  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);
}
function md5_hh(a, b, c, d, x, s, t)
{
  return md5_cmn(b ^ c ^ d, a, b, x, s, t);
}
function md5_ii(a, b, c, d, x, s, t)
{
  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);
}

/*
 * Add integers, wrapping at 2^32. This uses 16-bit operations internally
 * to work around bugs in some JS interpreters.
 */
function safe_add(x, y)
{
  var lsw = (x & 0xFFFF) + (y & 0xFFFF);
  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
  return (msw << 16) | (lsw & 0xFFFF);
}

/*
 * Bitwise rotate a 32-bit number to the left.
 */
function bit_rol(num, cnt)
{
  return (num << cnt) | (num >>> (32 - cnt));
}

module.exports = function md5(buf) {
  return helpers.hash(buf, core_md5, 16);
};
},{"./helpers":53}],55:[function(require,module,exports){
(function (Buffer){
'use strict';
var createHash = require('create-hash/browser');
var inherits = require('inherits')

var Transform = require('stream').Transform

var ZEROS = new Buffer(128)
ZEROS.fill(0)

function Hmac(alg, key) {
  Transform.call(this)
  alg = alg.toLowerCase()
  if (typeof key === 'string') {
    key = new Buffer(key)
  }

  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  this._alg = alg
  this._key = key

  if (key.length > blocksize) {
    key = createHash(alg).update(key).digest()

  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = new Buffer(blocksize)
  var opad = this._opad = new Buffer(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  this._hash = createHash(alg).update(ipad)
}

inherits(Hmac, Transform)

Hmac.prototype.update = function (data, enc) {
  this._hash.update(data, enc)

  return this
}

Hmac.prototype._transform = function (data, _, next) {
  this._hash.update(data)

  next()
}

Hmac.prototype._flush = function (next) {
  this.push(this.digest())

  next()
}

Hmac.prototype.digest = function (enc) {
  var h = this._hash.digest()

  return createHash(this._alg).update(this._opad).update(h).digest(enc)
}

module.exports = function createHmac(alg, key) {
  return new Hmac(alg, key)
}

}).call(this,require("buffer").Buffer)
},{"buffer":45,"create-hash/browser":52,"inherits":95,"stream":189}],56:[function(require,module,exports){
'use strict'

exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes')
exports.createHash = exports.Hash = require('create-hash')
exports.createHmac = exports.Hmac = require('create-hmac')

var hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(Object.keys(require('browserify-sign/algos')))
exports.getHashes = function () {
  return hashes
}

var p = require('pbkdf2')
exports.pbkdf2 = p.pbkdf2
exports.pbkdf2Sync = p.pbkdf2Sync

var aes = require('browserify-cipher')
;[
  'Cipher',
  'createCipher',
  'Cipheriv',
  'createCipheriv',
  'Decipher',
  'createDecipher',
  'Decipheriv',
  'createDecipheriv',
  'getCiphers',
  'listCiphers'
].forEach(function (key) {
  exports[key] = aes[key]
})

var dh = require('diffie-hellman')
;[
  'DiffieHellmanGroup',
  'createDiffieHellmanGroup',
  'getDiffieHellman',
  'createDiffieHellman',
  'DiffieHellman'
].forEach(function (key) {
  exports[key] = dh[key]
})

var sign = require('browserify-sign')
;[
  'createSign',
  'Sign',
  'createVerify',
  'Verify'
].forEach(function (key) {
  exports[key] = sign[key]
})

exports.createECDH = require('create-ecdh')

var publicEncrypt = require('public-encrypt')

;[
  'publicEncrypt',
  'privateEncrypt',
  'publicDecrypt',
  'privateDecrypt'
].forEach(function (key) {
  exports[key] = publicEncrypt[key]
})

// the least I can do is make error messages for the rest of the node.js/crypto api.
;[
  'createCredentials'
].forEach(function (name) {
  exports[name] = function () {
    throw new Error([
      'sorry, ' + name + ' is not implemented yet',
      'we accept pull requests',
      'https://github.com/crypto-browserify/crypto-browserify'
    ].join('\n'))
  }
})

},{"browserify-cipher":34,"browserify-sign":39,"browserify-sign/algos":38,"create-ecdh":51,"create-hash":52,"create-hmac":55,"diffie-hellman":63,"pbkdf2":156,"public-encrypt":159,"randombytes":166}],57:[function(require,module,exports){
'use strict';

exports.utils = require('./des/utils');
exports.Cipher = require('./des/cipher');
exports.DES = require('./des/des');
exports.CBC = require('./des/cbc');
exports.EDE = require('./des/ede');

},{"./des/cbc":58,"./des/cipher":59,"./des/des":60,"./des/ede":61,"./des/utils":62}],58:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var proto = {};

function CBCState(iv) {
  assert.equal(iv.length, 8, 'Invalid IV length');

  this.iv = new Array(8);
  for (var i = 0; i < this.iv.length; i++)
    this.iv[i] = iv[i];
}

function instantiate(Base) {
  function CBC(options) {
    Base.call(this, options);
    this._cbcInit();
  }
  inherits(CBC, Base);

  var keys = Object.keys(proto);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    CBC.prototype[key] = proto[key];
  }

  CBC.create = function create(options) {
    return new CBC(options);
  };

  return CBC;
}

exports.instantiate = instantiate;

proto._cbcInit = function _cbcInit() {
  var state = new CBCState(this.options.iv);
  this._cbcState = state;
};

proto._update = function _update(inp, inOff, out, outOff) {
  var state = this._cbcState;
  var superProto = this.constructor.super_.prototype;

  var iv = state.iv;
  if (this.type === 'encrypt') {
    for (var i = 0; i < this.blockSize; i++)
      iv[i] ^= inp[inOff + i];

    superProto._update.call(this, iv, 0, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = out[outOff + i];
  } else {
    superProto._update.call(this, inp, inOff, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      out[outOff + i] ^= iv[i];

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = inp[inOff + i];
  }
};

},{"inherits":95,"minimalistic-assert":132}],59:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');

function Cipher(options) {
  this.options = options;

  this.type = this.options.type;
  this.blockSize = 8;
  this._init();

  this.buffer = new Array(this.blockSize);
  this.bufferOff = 0;
}
module.exports = Cipher;

Cipher.prototype._init = function _init() {
  // Might be overrided
};

Cipher.prototype.update = function update(data) {
  if (data.length === 0)
    return [];

  if (this.type === 'decrypt')
    return this._updateDecrypt(data);
  else
    return this._updateEncrypt(data);
};

Cipher.prototype._buffer = function _buffer(data, off) {
  // Append data to buffer
  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);
  for (var i = 0; i < min; i++)
    this.buffer[this.bufferOff + i] = data[off + i];
  this.bufferOff += min;

  // Shift next
  return min;
};

Cipher.prototype._flushBuffer = function _flushBuffer(out, off) {
  this._update(this.buffer, 0, out, off);
  this.bufferOff = 0;
  return this.blockSize;
};

Cipher.prototype._updateEncrypt = function _updateEncrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;
  var out = new Array(count * this.blockSize);

  if (this.bufferOff !== 0) {
    inputOff += this._buffer(data, inputOff);

    if (this.bufferOff === this.buffer.length)
      outputOff += this._flushBuffer(out, outputOff);
  }

  // Write blocks
  var max = data.length - ((data.length - inputOff) % this.blockSize);
  for (; inputOff < max; inputOff += this.blockSize) {
    this._update(data, inputOff, out, outputOff);
    outputOff += this.blockSize;
  }

  // Queue rest
  for (; inputOff < data.length; inputOff++, this.bufferOff++)
    this.buffer[this.bufferOff] = data[inputOff];

  return out;
};

Cipher.prototype._updateDecrypt = function _updateDecrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;
  var out = new Array(count * this.blockSize);

  // TODO(indutny): optimize it, this is far from optimal
  for (; count > 0; count--) {
    inputOff += this._buffer(data, inputOff);
    outputOff += this._flushBuffer(out, outputOff);
  }

  // Buffer rest of the input
  inputOff += this._buffer(data, inputOff);

  return out;
};

Cipher.prototype.final = function final(buffer) {
  var first;
  if (buffer)
    first = this.update(buffer);

  var last;
  if (this.type === 'encrypt')
    last = this._finalEncrypt();
  else
    last = this._finalDecrypt();

  if (first)
    return first.concat(last);
  else
    return last;
};

Cipher.prototype._pad = function _pad(buffer, off) {
  if (off === 0)
    return false;

  while (off < buffer.length)
    buffer[off++] = 0;

  return true;
};

Cipher.prototype._finalEncrypt = function _finalEncrypt() {
  if (!this._pad(this.buffer, this.bufferOff))
    return [];

  var out = new Array(this.blockSize);
  this._update(this.buffer, 0, out, 0);
  return out;
};

Cipher.prototype._unpad = function _unpad(buffer) {
  return buffer;
};

Cipher.prototype._finalDecrypt = function _finalDecrypt() {
  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');
  var out = new Array(this.blockSize);
  this._flushBuffer(out, 0);

  return this._unpad(out);
};

},{"minimalistic-assert":132}],60:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var des = require('../des');
var utils = des.utils;
var Cipher = des.Cipher;

function DESState() {
  this.tmp = new Array(2);
  this.keys = null;
}

function DES(options) {
  Cipher.call(this, options);

  var state = new DESState();
  this._desState = state;

  this.deriveKeys(state, options.key);
}
inherits(DES, Cipher);
module.exports = DES;

DES.create = function create(options) {
  return new DES(options);
};

var shiftTable = [
  1, 1, 2, 2, 2, 2, 2, 2,
  1, 2, 2, 2, 2, 2, 2, 1
];

DES.prototype.deriveKeys = function deriveKeys(state, key) {
  state.keys = new Array(16 * 2);

  assert.equal(key.length, this.blockSize, 'Invalid key length');

  var kL = utils.readUInt32BE(key, 0);
  var kR = utils.readUInt32BE(key, 4);

  utils.pc1(kL, kR, state.tmp, 0);
  kL = state.tmp[0];
  kR = state.tmp[1];
  for (var i = 0; i < state.keys.length; i += 2) {
    var shift = shiftTable[i >>> 1];
    kL = utils.r28shl(kL, shift);
    kR = utils.r28shl(kR, shift);
    utils.pc2(kL, kR, state.keys, i);
  }
};

DES.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._desState;

  var l = utils.readUInt32BE(inp, inOff);
  var r = utils.readUInt32BE(inp, inOff + 4);

  // Initial Permutation
  utils.ip(l, r, state.tmp, 0);
  l = state.tmp[0];
  r = state.tmp[1];

  if (this.type === 'encrypt')
    this._encrypt(state, l, r, state.tmp, 0);
  else
    this._decrypt(state, l, r, state.tmp, 0);

  l = state.tmp[0];
  r = state.tmp[1];

  utils.writeUInt32BE(out, l, outOff);
  utils.writeUInt32BE(out, r, outOff + 4);
};

DES.prototype._pad = function _pad(buffer, off) {
  var value = buffer.length - off;
  for (var i = off; i < buffer.length; i++)
    buffer[i] = value;

  return true;
};

DES.prototype._unpad = function _unpad(buffer) {
  var pad = buffer[buffer.length - 1];
  for (var i = buffer.length - pad; i < buffer.length; i++)
    assert.equal(buffer[i], pad);

  return buffer.slice(0, buffer.length - pad);
};

DES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {
  var l = lStart;
  var r = rStart;

  // Apply f() x16 times
  for (var i = 0; i < state.keys.length; i += 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(r, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = r;
    r = (l ^ f) >>> 0;
    l = t;
  }

  // Reverse Initial Permutation
  utils.rip(r, l, out, off);
};

DES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {
  var l = rStart;
  var r = lStart;

  // Apply f() x16 times
  for (var i = state.keys.length - 2; i >= 0; i -= 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(l, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = l;
    l = (r ^ f) >>> 0;
    r = t;
  }

  // Reverse Initial Permutation
  utils.rip(l, r, out, off);
};

},{"../des":57,"inherits":95,"minimalistic-assert":132}],61:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var des = require('../des');
var Cipher = des.Cipher;
var DES = des.DES;

function EDEState(type, key) {
  assert.equal(key.length, 24, 'Invalid key length');

  var k1 = key.slice(0, 8);
  var k2 = key.slice(8, 16);
  var k3 = key.slice(16, 24);

  if (type === 'encrypt') {
    this.ciphers = [
      DES.create({ type: 'encrypt', key: k1 }),
      DES.create({ type: 'decrypt', key: k2 }),
      DES.create({ type: 'encrypt', key: k3 })
    ];
  } else {
    this.ciphers = [
      DES.create({ type: 'decrypt', key: k3 }),
      DES.create({ type: 'encrypt', key: k2 }),
      DES.create({ type: 'decrypt', key: k1 })
    ];
  }
}

function EDE(options) {
  Cipher.call(this, options);

  var state = new EDEState(this.type, this.options.key);
  this._edeState = state;
}
inherits(EDE, Cipher);

module.exports = EDE;

EDE.create = function create(options) {
  return new EDE(options);
};

EDE.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._edeState;

  state.ciphers[0]._update(inp, inOff, out, outOff);
  state.ciphers[1]._update(out, outOff, out, outOff);
  state.ciphers[2]._update(out, outOff, out, outOff);
};

EDE.prototype._pad = DES.prototype._pad;
EDE.prototype._unpad = DES.prototype._unpad;

},{"../des":57,"inherits":95,"minimalistic-assert":132}],62:[function(require,module,exports){
'use strict';

exports.readUInt32BE = function readUInt32BE(bytes, off) {
  var res =  (bytes[0 + off] << 24) |
             (bytes[1 + off] << 16) |
             (bytes[2 + off] << 8) |
             bytes[3 + off];
  return res >>> 0;
};

exports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {
  bytes[0 + off] = value >>> 24;
  bytes[1 + off] = (value >>> 16) & 0xff;
  bytes[2 + off] = (value >>> 8) & 0xff;
  bytes[3 + off] = value & 0xff;
};

exports.ip = function ip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
    }
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.rip = function rip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 0; i < 4; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }
  for (var i = 4; i < 8; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.pc1 = function pc1(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  // 7, 15, 23, 31, 39, 47, 55, 63
  // 6, 14, 22, 30, 39, 47, 55, 63
  // 5, 13, 21, 29, 39, 47, 55, 63
  // 4, 12, 20, 28
  for (var i = 7; i >= 5; i--) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outL <<= 1;
    outL |= (inR >> (j + i)) & 1;
  }

  // 1, 9, 17, 25, 33, 41, 49, 57
  // 2, 10, 18, 26, 34, 42, 50, 58
  // 3, 11, 19, 27, 35, 43, 51, 59
  // 36, 44, 52, 60
  for (var i = 1; i <= 3; i++) {
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outR <<= 1;
    outR |= (inL >> (j + i)) & 1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.r28shl = function r28shl(num, shift) {
  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));
};

var pc2table = [
  // inL => outL
  14, 11, 17, 4, 27, 23, 25, 0,
  13, 22, 7, 18, 5, 9, 16, 24,
  2, 20, 12, 21, 1, 8, 15, 26,

  // inR => outR
  15, 4, 25, 19, 9, 1, 26, 16,
  5, 11, 23, 8, 12, 7, 17, 0,
  22, 3, 10, 14, 6, 20, 27, 24
];

exports.pc2 = function pc2(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  var len = pc2table.length >>> 1;
  for (var i = 0; i < len; i++) {
    outL <<= 1;
    outL |= (inL >>> pc2table[i]) & 0x1;
  }
  for (var i = len; i < pc2table.length; i++) {
    outR <<= 1;
    outR |= (inR >>> pc2table[i]) & 0x1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.expand = function expand(r, out, off) {
  var outL = 0;
  var outR = 0;

  outL = ((r & 1) << 5) | (r >>> 27);
  for (var i = 23; i >= 15; i -= 4) {
    outL <<= 6;
    outL |= (r >>> i) & 0x3f;
  }
  for (var i = 11; i >= 3; i -= 4) {
    outR |= (r >>> i) & 0x3f;
    outR <<= 6;
  }
  outR |= ((r & 0x1f) << 1) | (r >>> 31);

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

var sTable = [
  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,
  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,
  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,
  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,

  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,
  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,
  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,
  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,

  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,
  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,
  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,
  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,

  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,
  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,
  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,
  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,

  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,
  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,
  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,
  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,

  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,
  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,
  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,
  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,

  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,
  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,
  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,
  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,

  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,
  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,
  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,
  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11
];

exports.substitute = function substitute(inL, inR) {
  var out = 0;
  for (var i = 0; i < 4; i++) {
    var b = (inL >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  for (var i = 0; i < 4; i++) {
    var b = (inR >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[4 * 0x40 + i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  return out >>> 0;
};

var permuteTable = [
  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,
  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7
];

exports.permute = function permute(num) {
  var out = 0;
  for (var i = 0; i < permuteTable.length; i++) {
    out <<= 1;
    out |= (num >>> permuteTable[i]) & 0x1;
  }
  return out >>> 0;
};

exports.padSplit = function padSplit(num, size, group) {
  var str = num.toString(2);
  while (str.length < size)
    str = '0' + str;

  var out = [];
  for (var i = 0; i < size; i += group)
    out.push(str.slice(i, i + group));
  return out.join(' ');
};

},{}],63:[function(require,module,exports){
(function (Buffer){
var generatePrime = require('./lib/generatePrime')
var primes = require('./lib/primes.json')

var DH = require('./lib/dh')

function getDiffieHellman (mod) {
  var prime = new Buffer(primes[mod].prime, 'hex')
  var gen = new Buffer(primes[mod].gen, 'hex')

  return new DH(prime, gen)
}

var ENCODINGS = {
  'binary': true, 'hex': true, 'base64': true
}

function createDiffieHellman (prime, enc, generator, genc) {
  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {
    return createDiffieHellman(prime, 'binary', enc, generator)
  }

  enc = enc || 'binary'
  genc = genc || 'binary'
  generator = generator || new Buffer([2])

  if (!Buffer.isBuffer(generator)) {
    generator = new Buffer(generator, genc)
  }

  if (typeof prime === 'number') {
    return new DH(generatePrime(prime, generator), generator, true)
  }

  if (!Buffer.isBuffer(prime)) {
    prime = new Buffer(prime, enc)
  }

  return new DH(prime, generator, true)
}

exports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman
exports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman

}).call(this,require("buffer").Buffer)
},{"./lib/dh":64,"./lib/generatePrime":65,"./lib/primes.json":66,"buffer":45}],64:[function(require,module,exports){
(function (Buffer){
var BN = require('bn.js');
var MillerRabin = require('miller-rabin');
var millerRabin = new MillerRabin();
var TWENTYFOUR = new BN(24);
var ELEVEN = new BN(11);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var primes = require('./generatePrime');
var randomBytes = require('randombytes');
module.exports = DH;

function setPublicKey(pub, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc);
  }
  this._pub = new BN(pub);
  return this;
}

function setPrivateKey(priv, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc);
  }
  this._priv = new BN(priv);
  return this;
}

var primeCache = {};
function checkPrime(prime, generator) {
  var gen = generator.toString('hex');
  var hex = [gen, prime.toString(16)].join('_');
  if (hex in primeCache) {
    return primeCache[hex];
  }
  var error = 0;

  if (prime.isEven() ||
    !primes.simpleSieve ||
    !primes.fermatTest(prime) ||
    !millerRabin.test(prime)) {
    //not a prime so +1
    error += 1;

    if (gen === '02' || gen === '05') {
      // we'd be able to check the generator
      // it would fail so +8
      error += 8;
    } else {
      //we wouldn't be able to test the generator
      // so +4
      error += 4;
    }
    primeCache[hex] = error;
    return error;
  }
  if (!millerRabin.test(prime.shrn(1))) {
    //not a safe prime
    error += 2;
  }
  var rem;
  switch (gen) {
    case '02':
      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {
        // unsuidable generator
        error += 8;
      }
      break;
    case '05':
      rem = prime.mod(TEN);
      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {
        // prime mod 10 needs to equal 3 or 7
        error += 8;
      }
      break;
    default:
      error += 4;
  }
  primeCache[hex] = error;
  return error;
}

function DH(prime, generator, malleable) {
  this.setGenerator(generator);
  this.__prime = new BN(prime);
  this._prime = BN.mont(this.__prime);
  this._primeLen = prime.length;
  this._pub = undefined;
  this._priv = undefined;
  this._primeCode = undefined;
  if (malleable) {
    this.setPublicKey = setPublicKey;
    this.setPrivateKey = setPrivateKey;
  } else {
    this._primeCode = 8;
  }
}
Object.defineProperty(DH.prototype, 'verifyError', {
  enumerable: true,
  get: function () {
    if (typeof this._primeCode !== 'number') {
      this._primeCode = checkPrime(this.__prime, this.__gen);
    }
    return this._primeCode;
  }
});
DH.prototype.generateKeys = function () {
  if (!this._priv) {
    this._priv = new BN(randomBytes(this._primeLen));
  }
  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();
  return this.getPublicKey();
};

DH.prototype.computeSecret = function (other) {
  other = new BN(other);
  other = other.toRed(this._prime);
  var secret = other.redPow(this._priv).fromRed();
  var out = new Buffer(secret.toArray());
  var prime = this.getPrime();
  if (out.length < prime.length) {
    var front = new Buffer(prime.length - out.length);
    front.fill(0);
    out = Buffer.concat([front, out]);
  }
  return out;
};

DH.prototype.getPublicKey = function getPublicKey(enc) {
  return formatReturnValue(this._pub, enc);
};

DH.prototype.getPrivateKey = function getPrivateKey(enc) {
  return formatReturnValue(this._priv, enc);
};

DH.prototype.getPrime = function (enc) {
  return formatReturnValue(this.__prime, enc);
};

DH.prototype.getGenerator = function (enc) {
  return formatReturnValue(this._gen, enc);
};

DH.prototype.setGenerator = function (gen, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(gen)) {
    gen = new Buffer(gen, enc);
  }
  this.__gen = gen;
  this._gen = new BN(gen);
  return this;
};

function formatReturnValue(bn, enc) {
  var buf = new Buffer(bn.toArray());
  if (!enc) {
    return buf;
  } else {
    return buf.toString(enc);
  }
}

}).call(this,require("buffer").Buffer)
},{"./generatePrime":65,"bn.js":16,"buffer":45,"miller-rabin":131,"randombytes":166}],65:[function(require,module,exports){
var randomBytes = require('randombytes');
module.exports = findPrime;
findPrime.simpleSieve = simpleSieve;
findPrime.fermatTest = fermatTest;
var BN = require('bn.js');
var TWENTYFOUR = new BN(24);
var MillerRabin = require('miller-rabin');
var millerRabin = new MillerRabin();
var ONE = new BN(1);
var TWO = new BN(2);
var FIVE = new BN(5);
var SIXTEEN = new BN(16);
var EIGHT = new BN(8);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var ELEVEN = new BN(11);
var FOUR = new BN(4);
var TWELVE = new BN(12);
var primes = null;

function _getPrimes() {
  if (primes !== null)
    return primes;

  var limit = 0x100000;
  var res = [];
  res[0] = 2;
  for (var i = 1, k = 3; k < limit; k += 2) {
    var sqrt = Math.ceil(Math.sqrt(k));
    for (var j = 0; j < i && res[j] <= sqrt; j++)
      if (k % res[j] === 0)
        break;

    if (i !== j && res[j] <= sqrt)
      continue;

    res[i++] = k;
  }
  primes = res;
  return res;
}

function simpleSieve(p) {
  var primes = _getPrimes();

  for (var i = 0; i < primes.length; i++)
    if (p.modn(primes[i]) === 0) {
      if (p.cmpn(primes[i]) === 0) {
        return true;
      } else {
        return false;
      }
    }

  return true;
}

function fermatTest(p) {
  var red = BN.mont(p);
  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;
}

function findPrime(bits, gen) {
  if (bits < 16) {
    // this is what openssl does
    if (gen === 2 || gen === 5) {
      return new BN([0x8c, 0x7b]);
    } else {
      return new BN([0x8c, 0x27]);
    }
  }
  gen = new BN(gen);

  var num, n2;

  while (true) {
    num = new BN(randomBytes(Math.ceil(bits / 8)));
    while (num.bitLength() > bits) {
      num.ishrn(1);
    }
    if (num.isEven()) {
      num.iadd(ONE);
    }
    if (!num.testn(1)) {
      num.iadd(TWO);
    }
    if (!gen.cmp(TWO)) {
      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {
        num.iadd(FOUR);
      }
    } else if (!gen.cmp(FIVE)) {
      while (num.mod(TEN).cmp(THREE)) {
        num.iadd(FOUR);
      }
    }
    n2 = num.shrn(1);
    if (simpleSieve(n2) && simpleSieve(num) &&
      fermatTest(n2) && fermatTest(num) &&
      millerRabin.test(n2) && millerRabin.test(num)) {
      return num;
    }
  }

}

},{"bn.js":16,"miller-rabin":131,"randombytes":166}],66:[function(require,module,exports){
module.exports={
    "modp1": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"
    },
    "modp2": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"
    },
    "modp5": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"
    },
    "modp14": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"
    },
    "modp15": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"
    },
    "modp16": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"
    },
    "modp17": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"
    },
    "modp18": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"
    }
}
},{}],67:[function(require,module,exports){
'use strict';

var elliptic = exports;

elliptic.version = require('../package.json').version;
elliptic.utils = require('./elliptic/utils');
elliptic.rand = require('brorand');
elliptic.hmacDRBG = require('./elliptic/hmac-drbg');
elliptic.curve = require('./elliptic/curve');
elliptic.curves = require('./elliptic/curves');

// Protocols
elliptic.ec = require('./elliptic/ec');
elliptic.eddsa = require('./elliptic/eddsa');

},{"../package.json":83,"./elliptic/curve":70,"./elliptic/curves":73,"./elliptic/ec":74,"./elliptic/eddsa":77,"./elliptic/hmac-drbg":80,"./elliptic/utils":82,"brorand":17}],68:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var getNAF = utils.getNAF;
var getJSF = utils.getJSF;
var assert = utils.assert;

function BaseCurve(type, conf) {
  this.type = type;
  this.p = new BN(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);

  // Useful for many curves
  this.zero = new BN(0).toRed(this.red);
  this.one = new BN(1).toRed(this.red);
  this.two = new BN(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new BN(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);
}
module.exports = BaseCurve;

BaseCurve.prototype.point = function point() {
  throw new Error('Not implemented');
};

BaseCurve.prototype.validate = function validate() {
  throw new Error('Not implemented');
};

BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert(p.precomputed);
  var doubles = p._getDoubles();

  var naf = getNAF(k, 1);
  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  for (var j = 0; j < naf.length; j += doubles.step) {
    var nafW = 0;
    for (var k = j + doubles.step - 1; k >= j; k--)
      nafW = (nafW << 1) + naf[k];
    repr.push(nafW);
  }

  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (var j = 0; j < repr.length; j++) {
      var nafW = repr[j];
      if (nafW === i)
        b = b.mixedAdd(doubles.points[j]);
      else if (nafW === -i)
        b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};

BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF(k, w);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var k = 0; i >= 0 && naf[i] === 0; i--)
      k++;
    if (i >= 0)
      k++;
    acc = acc.dblp(k);

    if (i < 0)
      break;
    var z = naf[i];
    assert(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0)
        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
      else
        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
    } else {
      // J +- J
      if (z > 0)
        acc = acc.add(wnd[(z - 1) >> 1]);
      else
        acc = acc.add(wnd[(-z - 1) >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};

BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
                                                       points,
                                                       coeffs,
                                                       len) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  for (var i = 0; i < len; i++) {
    var p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (var i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a]);
      naf[b] = getNAF(coeffs[b], wndWidth[b]);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }

    var comb = [
      points[a], /* 1 */
      null, /* 3 */
      null, /* 5 */
      points[b] /* 7 */
    ];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }

    var index = [
      -3, /* -1 -1 */
      -1, /* -1 0 */
      -5, /* -1 1 */
      -7, /* 0 -1 */
      0, /* 0 0 */
      7, /* 0 1 */
      5, /* 1 -1 */
      1, /* 1 0 */
      3  /* 1 1 */
    ];

    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (var j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;

      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }

  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (var i = max; i >= 0; i--) {
    var k = 0;

    while (i >= 0) {
      var zero = true;
      for (var j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k++;
      i--;
    }
    if (i >= 0)
      k++;
    acc = acc.dblp(k);
    if (i < 0)
      break;

    for (var j = 0; j < len; j++) {
      var z = tmp[j];
      var p;
      if (z === 0)
        continue;
      else if (z > 0)
        p = wnd[j][(z - 1) >> 1];
      else if (z < 0)
        p = wnd[j][(-z - 1) >> 1].neg();

      if (p.type === 'affine')
        acc = acc.mixedAdd(p);
      else
        acc = acc.add(p);
    }
  }
  // Zeroify references
  for (var i = 0; i < len; i++)
    wnd[i] = null;
  return acc.toP();
};

function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;

BasePoint.prototype.eq = function eq(/*other*/) {
  throw new Error('Not implemented');
};

BasePoint.prototype.validate = function validate() {
  return this.curve.validate(this);
};

BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils.toArray(bytes, enc);

  var len = this.p.byteLength();
  if (bytes[0] === 0x04 && bytes.length - 1 === 2 * len) {
    return this.point(bytes.slice(1, 1 + len),
                      bytes.slice(1 + len, 1 + 2 * len));
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&
              bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }
  throw new Error('Unknown point format');
};

BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};

BasePoint.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);

  if (compact)
    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);

  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;
};

BasePoint.prototype.encode = function encode(enc, compact) {
  return utils.encode(this._encode(compact), enc);
};

BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed)
    return this;

  var precomputed = {
    doubles: null,
    naf: null,
    beta: null
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;

  return this;
};

BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed)
    return false;

  var doubles = this.precomputed.doubles;
  if (!doubles)
    return false;

  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};

BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;

  var doubles = [ this ];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles
  };
};

BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;

  var res = [ this ];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++)
    res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res
  };
};

BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};

BasePoint.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++)
    r = r.dbl();
  return r;
};

},{"../../elliptic":67,"bn.js":16}],69:[function(require,module,exports){
'use strict';

var curve = require('../curve');
var elliptic = require('../../elliptic');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var assert = elliptic.utils.assert;

function EdwardsCurve(conf) {
  // NOTE: Important as we are creating point in Base.call()
  this.twisted = (conf.a | 0) !== 1;
  this.mOneA = this.twisted && (conf.a | 0) === -1;
  this.extended = this.mOneA;

  Base.call(this, 'edwards', conf);

  this.a = new BN(conf.a, 16).umod(this.red.m);
  this.a = this.a.toRed(this.red);
  this.c = new BN(conf.c, 16).toRed(this.red);
  this.c2 = this.c.redSqr();
  this.d = new BN(conf.d, 16).toRed(this.red);
  this.dd = this.d.redAdd(this.d);

  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
  this.oneC = (conf.c | 0) === 1;
}
inherits(EdwardsCurve, Base);
module.exports = EdwardsCurve;

EdwardsCurve.prototype._mulA = function _mulA(num) {
  if (this.mOneA)
    return num.redNeg();
  else
    return this.a.redMul(num);
};

EdwardsCurve.prototype._mulC = function _mulC(num) {
  if (this.oneC)
    return num;
  else
    return this.c.redMul(num);
};

// Just for compatibility with Short curve
EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
  return this.point(x, y, z, t);
};

EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var x2 = x.redSqr();
  var rhs = this.c2.redSub(this.a.redMul(x2));
  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));

  var y2 = rhs.redMul(lhs.redInvm());
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
  y = new BN(y, 16);
  if (!y.red)
    y = y.toRed(this.red);

  // x^2 = (y^2 - 1) / (d y^2 + 1)
  var y2 = y.redSqr();
  var lhs = y2.redSub(this.one);
  var rhs = y2.redMul(this.d).redAdd(this.one);
  var x2 = lhs.redMul(rhs.redInvm());

  if (x2.cmp(this.zero) === 0) {
    if (odd)
      throw new Error('invalid point');
    else
      return this.point(this.zero, y);
  }

  var x = x2.redSqrt();
  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  if (x.isOdd() !== odd)
    x = x.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.validate = function validate(point) {
  if (point.isInfinity())
    return true;

  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
  point.normalize();

  var x2 = point.x.redSqr();
  var y2 = point.y.redSqr();
  var lhs = x2.redMul(this.a).redAdd(y2);
  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));

  return lhs.cmp(rhs) === 0;
};

function Point(curve, x, y, z, t) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && y === null && z === null) {
    this.x = this.curve.zero;
    this.y = this.curve.one;
    this.z = this.curve.one;
    this.t = this.curve.zero;
    this.zOne = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = z ? new BN(z, 16) : this.curve.one;
    this.t = t && new BN(t, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
    if (this.t && !this.t.red)
      this.t = this.t.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;

    // Use extended coordinates
    if (this.curve.extended && !this.t) {
      this.t = this.x.redMul(this.y);
      if (!this.zOne)
        this.t = this.t.redMul(this.z.redInvm());
    }
  }
}
inherits(Point, Base.BasePoint);

EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

EdwardsCurve.prototype.point = function point(x, y, z, t) {
  return new Point(this, x, y, z, t);
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1], obj[2]);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.x.cmpn(0) === 0 &&
         this.y.cmp(this.z) === 0;
};

Point.prototype._extDbl = function _extDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #doubling-dbl-2008-hwcd
  // 4M + 4S

  // A = X1^2
  var a = this.x.redSqr();
  // B = Y1^2
  var b = this.y.redSqr();
  // C = 2 * Z1^2
  var c = this.z.redSqr();
  c = c.redIAdd(c);
  // D = a * A
  var d = this.curve._mulA(a);
  // E = (X1 + Y1)^2 - A - B
  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
  // G = D + B
  var g = d.redAdd(b);
  // F = G - C
  var f = g.redSub(c);
  // H = D - B
  var h = d.redSub(b);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projDbl = function _projDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #doubling-dbl-2008-bbjlp
  //     #doubling-dbl-2007-bl
  // and others
  // Generally 3M + 4S or 2M + 4S

  // B = (X1 + Y1)^2
  var b = this.x.redAdd(this.y).redSqr();
  // C = X1^2
  var c = this.x.redSqr();
  // D = Y1^2
  var d = this.y.redSqr();

  var nx;
  var ny;
  var nz;
  if (this.curve.twisted) {
    // E = a * C
    var e = this.curve._mulA(c);
    // F = E + D
    var f = e.redAdd(d);
    if (this.zOne) {
      // X3 = (B - C - D) * (F - 2)
      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F^2 - 2 * F
      nz = f.redSqr().redSub(f).redSub(f);
    } else {
      // H = Z1^2
      var h = this.z.redSqr();
      // J = F - 2 * H
      var j = f.redSub(h).redISub(h);
      // X3 = (B-C-D)*J
      nx = b.redSub(c).redISub(d).redMul(j);
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F * J
      nz = f.redMul(j);
    }
  } else {
    // E = C + D
    var e = c.redAdd(d);
    // H = (c * Z1)^2
    var h = this.curve._mulC(this.c.redMul(this.z)).redSqr();
    // J = E - 2 * H
    var j = e.redSub(h).redSub(h);
    // X3 = c * (B - E) * J
    nx = this.curve._mulC(b.redISub(e)).redMul(j);
    // Y3 = c * E * (C - D)
    ny = this.curve._mulC(e).redMul(c.redISub(d));
    // Z3 = E * J
    nz = e.redMul(j);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  // Double in extended coordinates
  if (this.curve.extended)
    return this._extDbl();
  else
    return this._projDbl();
};

Point.prototype._extAdd = function _extAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #addition-add-2008-hwcd-3
  // 8M

  // A = (Y1 - X1) * (Y2 - X2)
  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
  // B = (Y1 + X1) * (Y2 + X2)
  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
  // C = T1 * k * T2
  var c = this.t.redMul(this.curve.dd).redMul(p.t);
  // D = Z1 * 2 * Z2
  var d = this.z.redMul(p.z.redAdd(p.z));
  // E = B - A
  var e = b.redSub(a);
  // F = D - C
  var f = d.redSub(c);
  // G = D + C
  var g = d.redAdd(c);
  // H = B + A
  var h = b.redAdd(a);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projAdd = function _projAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #addition-add-2008-bbjlp
  //     #addition-add-2007-bl
  // 10M + 1S

  // A = Z1 * Z2
  var a = this.z.redMul(p.z);
  // B = A^2
  var b = a.redSqr();
  // C = X1 * X2
  var c = this.x.redMul(p.x);
  // D = Y1 * Y2
  var d = this.y.redMul(p.y);
  // E = d * C * D
  var e = this.curve.d.redMul(c).redMul(d);
  // F = B - E
  var f = b.redSub(e);
  // G = B + E
  var g = b.redAdd(e);
  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
  var nx = a.redMul(f).redMul(tmp);
  var ny;
  var nz;
  if (this.curve.twisted) {
    // Y3 = A * G * (D - a * C)
    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
    // Z3 = F * G
    nz = f.redMul(g);
  } else {
    // Y3 = A * G * (D - C)
    ny = a.redMul(g).redMul(d.redSub(c));
    // Z3 = c * F * G
    nz = this.curve._mulC(f).redMul(g);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.add = function add(p) {
  if (this.isInfinity())
    return p;
  if (p.isInfinity())
    return this;

  if (this.curve.extended)
    return this._extAdd(p);
  else
    return this._projAdd(p);
};

Point.prototype.mul = function mul(k) {
  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2);
};

Point.prototype.normalize = function normalize() {
  if (this.zOne)
    return this;

  // Normalize coordinates
  var zi = this.z.redInvm();
  this.x = this.x.redMul(zi);
  this.y = this.y.redMul(zi);
  if (this.t)
    this.t = this.t.redMul(zi);
  this.z = this.curve.one;
  this.zOne = true;
  return this;
};

Point.prototype.neg = function neg() {
  return this.curve.point(this.x.redNeg(),
                          this.y,
                          this.z,
                          this.t && this.t.redNeg());
};

Point.prototype.getX = function getX() {
  this.normalize();
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  this.normalize();
  return this.y.fromRed();
};

Point.prototype.eq = function eq(other) {
  return this === other ||
         this.getX().cmp(other.getX()) === 0 &&
         this.getY().cmp(other.getY()) === 0;
};

// Compatibility with BaseCurve
Point.prototype.toP = Point.prototype.normalize;
Point.prototype.mixedAdd = Point.prototype.add;

},{"../../elliptic":67,"../curve":70,"bn.js":16,"inherits":95}],70:[function(require,module,exports){
'use strict';

var curve = exports;

curve.base = require('./base');
curve.short = require('./short');
curve.mont = require('./mont');
curve.edwards = require('./edwards');

},{"./base":68,"./edwards":69,"./mont":71,"./short":72}],71:[function(require,module,exports){
'use strict';

var curve = require('../curve');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var elliptic = require('../../elliptic');
var utils = elliptic.utils;

function MontCurve(conf) {
  Base.call(this, 'mont', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.i4 = new BN(4).toRed(this.red).redInvm();
  this.two = new BN(2).toRed(this.red);
  this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
inherits(MontCurve, Base);
module.exports = MontCurve;

MontCurve.prototype.validate = function validate(point) {
  var x = point.normalize().x;
  var x2 = x.redSqr();
  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
  var y = rhs.redSqrt();

  return y.redSqr().cmp(rhs) === 0;
};

function Point(curve, x, z) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && z === null) {
    this.x = this.curve.one;
    this.z = this.curve.zero;
  } else {
    this.x = new BN(x, 16);
    this.z = new BN(z, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
  }
}
inherits(Point, Base.BasePoint);

MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  return this.point(utils.toArray(bytes, enc), 1);
};

MontCurve.prototype.point = function point(x, z) {
  return new Point(this, x, z);
};

MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

Point.prototype.precompute = function precompute() {
  // No-op
};

Point.prototype._encode = function _encode() {
  return this.getX().toArray('be', this.curve.p.byteLength());
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1] || curve.one);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

Point.prototype.dbl = function dbl() {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
  // 2M + 2S + 4A

  // A = X1 + Z1
  var a = this.x.redAdd(this.z);
  // AA = A^2
  var aa = a.redSqr();
  // B = X1 - Z1
  var b = this.x.redSub(this.z);
  // BB = B^2
  var bb = b.redSqr();
  // C = AA - BB
  var c = aa.redSub(bb);
  // X3 = AA * BB
  var nx = aa.redMul(bb);
  // Z3 = C * (BB + A24 * C)
  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
  return this.curve.point(nx, nz);
};

Point.prototype.add = function add() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.diffAdd = function diffAdd(p, diff) {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
  // 4M + 2S + 6A

  // A = X2 + Z2
  var a = this.x.redAdd(this.z);
  // B = X2 - Z2
  var b = this.x.redSub(this.z);
  // C = X3 + Z3
  var c = p.x.redAdd(p.z);
  // D = X3 - Z3
  var d = p.x.redSub(p.z);
  // DA = D * A
  var da = d.redMul(a);
  // CB = C * B
  var cb = c.redMul(b);
  // X5 = Z1 * (DA + CB)^2
  var nx = diff.z.redMul(da.redAdd(cb).redSqr());
  // Z5 = X1 * (DA - CB)^2
  var nz = diff.x.redMul(da.redISub(cb).redSqr());
  return this.curve.point(nx, nz);
};

Point.prototype.mul = function mul(k) {
  var t = k.clone();
  var a = this; // (N / 2) * Q + Q
  var b = this.curve.point(null, null); // (N / 2) * Q
  var c = this; // Q

  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
    bits.push(t.andln(1));

  for (var i = bits.length - 1; i >= 0; i--) {
    if (bits[i] === 0) {
      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
      a = a.diffAdd(b, c);
      // N * Q = 2 * ((N / 2) * Q + Q))
      b = b.dbl();
    } else {
      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
      b = a.diffAdd(b, c);
      // N * Q + Q = 2 * ((N / 2) * Q + Q)
      a = a.dbl();
    }
  }
  return b;
};

Point.prototype.mulAdd = function mulAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.eq = function eq(other) {
  return this.getX().cmp(other.getX()) === 0;
};

Point.prototype.normalize = function normalize() {
  this.x = this.x.redMul(this.z.redInvm());
  this.z = this.curve.one;
  return this;
};

Point.prototype.getX = function getX() {
  // Normalize coordinates
  this.normalize();

  return this.x.fromRed();
};

},{"../../elliptic":67,"../curve":70,"bn.js":16,"inherits":95}],72:[function(require,module,exports){
'use strict';

var curve = require('../curve');
var elliptic = require('../../elliptic');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var assert = elliptic.utils.assert;

function ShortCurve(conf) {
  Base.call(this, 'short', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();

  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits(ShortCurve, Base);
module.exports = ShortCurve;

ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new BN(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new BN(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new BN(vec.a, 16),
        b: new BN(vec.b, 16)
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }

  return {
    beta: beta,
    lambda: lambda,
    basis: basis
  };
};

ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : BN.mont(num);
  var tinv = new BN(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();

  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);

  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [ l1, l2 ];
};

ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new BN(1);
  var y1 = new BN(0);
  var x2 = new BN(0);
  var y2 = new BN(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;

  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));

    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;

    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;

  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }

  return [
    { a: a1, b: b1 },
    { a: a2, b: b2 }
  ];
};

ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];

  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);

  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return { k1: k1, k2: k2 };
};

ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

ShortCurve.prototype.validate = function validate(point) {
  if (point.inf)
    return true;

  var x = point.x;
  var y = point.y;

  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};

ShortCurve.prototype._endoWnafMulAdd =
    function _endoWnafMulAdd(points, coeffs) {
  var npoints = this._endoWnafT1;
  var ncoeffs = this._endoWnafT2;
  for (var i = 0; i < points.length; i++) {
    var split = this._endoSplit(coeffs[i]);
    var p = points[i];
    var beta = p._getBeta();

    if (split.k1.negative) {
      split.k1.ineg();
      p = p.neg(true);
    }
    if (split.k2.negative) {
      split.k2.ineg();
      beta = beta.neg(true);
    }

    npoints[i * 2] = p;
    npoints[i * 2 + 1] = beta;
    ncoeffs[i * 2] = split.k1;
    ncoeffs[i * 2 + 1] = split.k2;
  }
  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2);

  // Clean-up references to points and coefficients
  for (var j = 0; j < i * 2; j++) {
    npoints[j] = null;
    ncoeffs[j] = null;
  }
  return res;
};

function Point(curve, x, y, isRed) {
  Base.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits(Point, Base.BasePoint);

ShortCurve.prototype.point = function point(x, y, isRed) {
  return new Point(this, x, y, isRed);
};

ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};

Point.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo)
    return;

  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;

  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul)
      }
    };
  }
  return beta;
};

Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [ this.x, this.y ];

  return [ this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1)
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1)
    }
  } ];
};

Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string')
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;

  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }

  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [ res ].concat(pre.doubles.points.map(obj2point))
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [ res ].concat(pre.naf.points.map(obj2point))
    }
  };
  return res;
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};

Point.prototype.add = function add(p) {
  // O + P = P
  if (this.inf)
    return p;

  // P + O = P
  if (p.inf)
    return this;

  // P + P = 2P
  if (this.eq(p))
    return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p))
    return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0)
    return this.curve.point(null, null);

  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0)
    c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);

  var a = this.curve.a;

  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.getX = function getX() {
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  return this.y.fromRed();
};

Point.prototype.mul = function mul(k) {
  k = new BN(k, 16);

  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([ this ], [ k ]);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};

Point.prototype.eq = function eq(p) {
  return this === p ||
         this.inf === p.inf &&
             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};

Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;

  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate)
      }
    };
  }
  return res;
};

Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);

  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};

function JPoint(curve, x, y, z) {
  Base.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new BN(0);
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = new BN(z, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);

  this.zOne = this.z === this.curve.one;
}
inherits(JPoint, Base.BasePoint);

ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};

JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);

  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);

  return this.curve.point(ax, ay);
};

JPoint.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};

JPoint.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity())
    return p;

  // P + O = P
  if (p.isInfinity())
    return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity())
    return p.toJ();

  // P + O = P
  if (p.isInfinity())
    return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.dblp = function dblp(pow) {
  if (pow === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow)
    return this.dbl();

  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (var i = 0; i < pow; i++)
      r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;

  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (var i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow)
      jz4 = jz4.redMul(jyd4);

    jx = nx;
    jz = nz;
    jyd = dny;
  }

  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};

JPoint.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};

JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();

  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);

  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);

  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mul = function mul(k, kbase) {
  k = new BN(k, kbase);

  return this.curve._wnafMul(this, k);
};

JPoint.prototype.eq = function eq(p) {
  if (p.type === 'affine')
    return this.eq(p.toJ());

  if (this === p)
    return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
    return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};

JPoint.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) +
      ' y: ' + this.y.toString(16, 2) +
      ' z: ' + this.z.toString(16, 2) + '>';
};

JPoint.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

},{"../../elliptic":67,"../curve":70,"bn.js":16,"inherits":95}],73:[function(require,module,exports){
'use strict';

var curves = exports;

var hash = require('hash.js');
var elliptic = require('../elliptic');

var assert = elliptic.utils.assert;

function PresetCurve(options) {
  if (options.type === 'short')
    this.curve = new elliptic.curve.short(options);
  else if (options.type === 'edwards')
    this.curve = new elliptic.curve.edwards(options);
  else
    this.curve = new elliptic.curve.mont(options);
  this.g = this.curve.g;
  this.n = this.curve.n;
  this.hash = options.hash;

  assert(this.g.validate(), 'Invalid curve');
  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
}
curves.PresetCurve = PresetCurve;

function defineCurve(name, options) {
  Object.defineProperty(curves, name, {
    configurable: true,
    enumerable: true,
    get: function() {
      var curve = new PresetCurve(options);
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        value: curve
      });
      return curve;
    }
  });
}

defineCurve('p192', {
  type: 'short',
  prime: 'p192',
  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
  hash: hash.sha256,
  gRed: false,
  g: [
    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'
  ]
});

defineCurve('p224', {
  type: 'short',
  prime: 'p224',
  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
  hash: hash.sha256,
  gRed: false,
  g: [
    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'
  ]
});

defineCurve('p256', {
  type: 'short',
  prime: null,
  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
  hash: hash.sha256,
  gRed: false,
  g: [
    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'
  ]
});

defineCurve('p384', {
  type: 'short',
  prime: null,
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 ffffffff',
  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 fffffffc',
  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +
     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +
     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
  hash: hash.sha384,
  gRed: false,
  g: [
    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +
    '5502f25d bf55296c 3a545e38 72760ab7',
    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +
    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'
  ]
});

defineCurve('p521', {
  type: 'short',
  prime: null,
  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff',
  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff fffffffc',
  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +
     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +
     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +
     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
  hash: hash.sha512,
  gRed: false,
  g: [
    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +
    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +
    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +
    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +
    '3fad0761 353c7086 a272c240 88be9476 9fd16650'
  ]
});

defineCurve('curve25519', {
  type: 'mont',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '76d06',
  b: '0',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '9'
  ]
});

defineCurve('ed25519', {
  type: 'edwards',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '-1',
  c: '1',
  // -121665 * (121666^(-1)) (mod P)
  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',

    // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658'
  ]
});

var pre;
try {
  pre = require('./precomputed/secp256k1');
} catch (e) {
  pre = undefined;
}

defineCurve('secp256k1', {
  type: 'short',
  prime: 'k256',
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
  a: '0',
  b: '7',
  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
  h: '1',
  hash: hash.sha256,

  // Precomputed endomorphism
  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
  basis: [
    {
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3'
    },
    {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15'
    }
  ],

  gRed: false,
  g: [
    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
    pre
  ]
});

},{"../elliptic":67,"./precomputed/secp256k1":81,"hash.js":87}],74:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

var KeyPair = require('./key');
var Signature = require('./signature');

function EC(options) {
  if (!(this instanceof EC))
    return new EC(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);

    options = elliptic.curves[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof elliptic.curves.PresetCurve)
    options = { curve: options };

  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
module.exports = EC;

EC.prototype.keyPair = function keyPair(options) {
  return new KeyPair(this, options);
};

EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return KeyPair.fromPrivate(this, priv, enc);
};

EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return KeyPair.fromPublic(this, pub, enc);
};

EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options)
    options = {};

  // Instantiate Hmac_DRBG
  var drbg = new elliptic.hmacDRBG({
    hash: this.hash,
    pers: options.pers,
    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),
    nonce: this.n.toArray()
  });

  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new BN(2));
  do {
    var priv = new BN(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0)
      continue;

    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  } while (true);
};

EC.prototype._truncateToN = function truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0)
    msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};

EC.prototype.sign = function sign(msg, key, enc, options) {
  if (typeof enc === 'object') {
    options = enc;
    enc = null;
  }
  if (!options)
    options = {};

  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(new BN(msg, 16));

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray('be', bytes);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray('be', bytes);

  // Instantiate Hmac_DRBG
  var drbg = new elliptic.hmacDRBG({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce,
    pers: options.pers,
    persEnc: options.persEnc
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new BN(1));

  for (var iter = 0; true; iter++) {
    var k = options.k ?
        options.k(iter) :
        new BN(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
      continue;

    var kp = this.g.mul(k);
    if (kp.isInfinity())
      continue;

    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0)
      continue;

    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0)
      continue;

    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |
                        (kpX.cmp(r) !== 0 ? 2 : 0);

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }

    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });
  }
};

EC.prototype.verify = function verify(msg, signature, key, enc) {
  msg = this._truncateToN(new BN(msg, 16));
  key = this.keyFromPublic(key, enc);
  signature = new Signature(signature, 'hex');

  // Perform primitive values validation
  var r = signature.r;
  var s = signature.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
    return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
    return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);

  var p = this.g.mulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity())
    return false;

  return p.getX().umod(this.n).cmp(r) === 0;
};

EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
  assert((3 & j) === j, 'The recovery param is more than two bits');
  signature = new Signature(signature, enc);

  var n = this.n;
  var e = new BN(msg);
  var r = signature.r;
  var s = signature.s;

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
    throw new Error('Unable to find sencond key candinate');

  // 1.1. Let x = r + jn.
  if (isSecondKey)
    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
  else
    r = this.curve.pointFromX(r, isYOdd);

  var eNeg = n.sub(e);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  var rInv = signature.r.invm(n);
  return this.g.mulAdd(eNeg, r, s).mul(rInv);
};

EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
  signature = new Signature(signature, enc);
  if (signature.recoveryParam !== null)
    return signature.recoveryParam;

  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature, i);
    } catch (e) {
      continue;
    }

    if (Qprime.eq(Q))
      return i;
  }
  throw new Error('Unable to find valid recovery factor');
};

},{"../../elliptic":67,"./key":75,"./signature":76,"bn.js":16}],75:[function(require,module,exports){
'use strict';

var BN = require('bn.js');

function KeyPair(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(ec, { priv: ..., pub: ... })
  if (options.priv)
    this._importPrivate(options.priv, options.privEnc);
  if (options.pub)
    this._importPublic(options.pub, options.pubEnc);
}
module.exports = KeyPair;

KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair)
    return pub;

  return new KeyPair(ec, {
    pub: pub,
    pubEnc: enc
  });
};

KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair)
    return priv;

  return new KeyPair(ec, {
    priv: priv,
    privEnc: enc
  });
};

KeyPair.prototype.validate = function validate() {
  var pub = this.getPublic();

  if (pub.isInfinity())
    return { result: false, reason: 'Invalid public key' };
  if (!pub.validate())
    return { result: false, reason: 'Public key is not a point' };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: 'Public key * N != O' };

  return { result: true, reason: null };
};

KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }

  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);

  if (!enc)
    return this.pub;

  return this.pub.encode(enc, compact);
};

KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex')
    return this.priv.toString(16, 2);
  else
    return this.priv;
};

KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new BN(key, enc || 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.umod(this.ec.curve.n);
};

KeyPair.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key, enc);
};

// ECDH
KeyPair.prototype.derive = function derive(pub) {
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};

KeyPair.prototype.verify = function verify(msg, signature) {
  return this.ec.verify(msg, signature, this);
};

KeyPair.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};

},{"bn.js":16}],76:[function(require,module,exports){
'use strict';

var BN = require('bn.js');

var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

function Signature(options, enc) {
  if (options instanceof Signature)
    return options;

  if (this._importDER(options, enc))
    return;

  assert(options.r && options.s, 'Signature without r or s');
  this.r = new BN(options.r, 16);
  this.s = new BN(options.s, 16);
  if (options.recoveryParam === undefined)
    this.recoveryParam = null;
  else
    this.recoveryParam = options.recoveryParam;
}
module.exports = Signature;

function Position() {
  this.place = 0;
}

function getLength(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 0x80)) {
    return initial;
  }
  var octetLen = initial & 0xf;
  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
  }
  p.place = off;
  return val;
}

function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}

Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils.toArray(data, enc);
  var p = new Position();
  if (data[p.place++] !== 0x30) {
    return false;
  }
  var len = getLength(data, p);
  if ((len + p.place) !== data.length) {
    return false;
  }
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var rlen = getLength(data, p);
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var slen = getLength(data, p);
  if (data.length !== slen + p.place) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0 && (r[1] & 0x80)) {
    r = r.slice(1);
  }
  if (s[0] === 0 && (s[1] & 0x80)) {
    s = s.slice(1);
  }

  this.r = new BN(r);
  this.s = new BN(s);
  this.recoveryParam = null;

  return true;
};

function constructLength(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);
  while (--octets) {
    arr.push((len >>> (octets << 3)) & 0xff);
  }
  arr.push(len);
}

Signature.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80)
    r = [ 0 ].concat(r);
  // Pad values
  if (s[0] & 0x80)
    s = [ 0 ].concat(s);

  r = rmPadding(r);
  s = rmPadding(s);

  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }
  var arr = [ 0x02 ];
  constructLength(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [ 0x30 ];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils.encode(res, enc);
};

},{"../../elliptic":67,"bn.js":16}],77:[function(require,module,exports){
'use strict';

var hash = require('hash.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var KeyPair = require('./key');
var Signature = require('./signature');

function EDDSA(curve) {
  assert(curve === 'ed25519', 'only tested with ed25519 so far');

  if (!(this instanceof EDDSA))
    return new EDDSA(curve);

  var curve = elliptic.curves[curve].curve;
  this.curve = curve;
  this.g = curve.g;
  this.g.precompute(curve.n.bitLength() + 1);

  this.pointClass = curve.point().constructor;
  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
  this.hash = hash.sha512;
}

module.exports = EDDSA;

/**
* @param {Array|String} message - message bytes
* @param {Array|String|KeyPair} secret - secret bytes or a keypair
* @returns {Signature} - signature
*/
EDDSA.prototype.sign = function sign(message, secret) {
  message = parseBytes(message);
  var key = this.keyFromSecret(secret);
  var r = this.hashInt(key.messagePrefix(), message);
  var R = this.g.mul(r);
  var Rencoded = this.encodePoint(R);
  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)
               .mul(key.priv());
  var S = r.add(s_).umod(this.curve.n);
  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });
};

/**
* @param {Array} message - message bytes
* @param {Array|String|Signature} sig - sig bytes
* @param {Array|String|Point|KeyPair} pub - public key
* @returns {Boolean} - true if public key matches sig of message
*/
EDDSA.prototype.verify = function verify(message, sig, pub) {
  message = parseBytes(message);
  sig = this.makeSignature(sig);
  var key = this.keyFromPublic(pub);
  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
  var SG = this.g.mul(sig.S());
  var RplusAh = sig.R().add(key.pub().mul(h));
  return RplusAh.eq(SG);
};

EDDSA.prototype.hashInt = function hashInt() {
  var hash = this.hash();
  for (var i = 0; i < arguments.length; i++)
    hash.update(arguments[i]);
  return utils.intFromLE(hash.digest()).umod(this.curve.n);
};

EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
  return KeyPair.fromPublic(this, pub);
};

EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
  return KeyPair.fromSecret(this, secret);
};

EDDSA.prototype.makeSignature = function makeSignature(sig) {
  if (sig instanceof Signature)
    return sig;
  return new Signature(this, sig);
};

/**
* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
*
* EDDSA defines methods for encoding and decoding points and integers. These are
* helper convenience methods, that pass along to utility functions implied
* parameters.
*
*/
EDDSA.prototype.encodePoint = function encodePoint(point) {
  var enc = point.getY().toArray('le', this.encodingLength);
  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
  return enc;
};

EDDSA.prototype.decodePoint = function decodePoint(bytes) {
  bytes = utils.parseBytes(bytes);

  var lastIx = bytes.length - 1;
  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;

  var y = utils.intFromLE(normed);
  return this.curve.pointFromY(y, xIsOdd);
};

EDDSA.prototype.encodeInt = function encodeInt(num) {
  return num.toArray('le', this.encodingLength);
};

EDDSA.prototype.decodeInt = function decodeInt(bytes) {
  return utils.intFromLE(bytes);
};

EDDSA.prototype.isPoint = function isPoint(val) {
  return val instanceof this.pointClass;
};

},{"../../elliptic":67,"./key":78,"./signature":79,"hash.js":87}],78:[function(require,module,exports){
'use strict';

var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var cachedProperty = utils.cachedProperty;

/**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/
function KeyPair(eddsa, params) {
  this.eddsa = eddsa;
  this._secret = parseBytes(params.secret);
  if (eddsa.isPoint(params.pub))
    this._pub = params.pub;
  else
    this._pubBytes = parseBytes(params.pub);
}

KeyPair.fromPublic = function fromPublic(eddsa, pub) {
  if (pub instanceof KeyPair)
    return pub;
  return new KeyPair(eddsa, { pub: pub });
};

KeyPair.fromSecret = function fromSecret(eddsa, secret) {
  if (secret instanceof KeyPair)
    return secret;
  return new KeyPair(eddsa, { secret: secret });
};

KeyPair.prototype.secret = function secret() {
  return this._secret;
};

cachedProperty(KeyPair, function pubBytes() {
  return this.eddsa.encodePoint(this.pub());
});

cachedProperty(KeyPair, function pub() {
  if (this._pubBytes)
    return this.eddsa.decodePoint(this._pubBytes);
  return this.eddsa.g.mul(this.priv());
});

cachedProperty(KeyPair, function privBytes() {
  var eddsa = this.eddsa;
  var hash = this.hash();
  var lastIx = eddsa.encodingLength - 1;

  var a = hash.slice(0, eddsa.encodingLength);
  a[0] &= 248;
  a[lastIx] &= 127;
  a[lastIx] |= 64;

  return a;
});

cachedProperty(KeyPair, function priv() {
  return this.eddsa.decodeInt(this.privBytes());
});

cachedProperty(KeyPair, function hash() {
  return this.eddsa.hash().update(this.secret()).digest();
});

cachedProperty(KeyPair, function messagePrefix() {
  return this.hash().slice(this.eddsa.encodingLength);
});

KeyPair.prototype.sign = function sign(message) {
  assert(this._secret, 'KeyPair can only verify');
  return this.eddsa.sign(message, this);
};

KeyPair.prototype.verify = function verify(message, sig) {
  return this.eddsa.verify(message, sig, this);
};

KeyPair.prototype.getSecret = function getSecret(enc) {
  assert(this._secret, 'KeyPair is public only');
  return utils.encode(this.secret(), enc);
};

KeyPair.prototype.getPublic = function getPublic(enc) {
  return utils.encode(this.pubBytes(), enc);
};

module.exports = KeyPair;

},{"../../elliptic":67}],79:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;
var cachedProperty = utils.cachedProperty;
var parseBytes = utils.parseBytes;

/**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/
function Signature(eddsa, sig) {
  this.eddsa = eddsa;

  if (typeof sig !== 'object')
    sig = parseBytes(sig);

  if (Array.isArray(sig)) {
    sig = {
      R: sig.slice(0, eddsa.encodingLength),
      S: sig.slice(eddsa.encodingLength)
    };
  }

  assert(sig.R && sig.S, 'Signature without R or S');

  if (eddsa.isPoint(sig.R))
    this._R = sig.R;
  if (sig.S instanceof BN)
    this._S = sig.S;

  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
}

cachedProperty(Signature, function S() {
  return this.eddsa.decodeInt(this.Sencoded());
});

cachedProperty(Signature, function R() {
  return this.eddsa.decodePoint(this.Rencoded());
});

cachedProperty(Signature, function Rencoded() {
  return this.eddsa.encodePoint(this.R());
});

cachedProperty(Signature, function Sencoded() {
  return this.eddsa.encodeInt(this.S());
});

Signature.prototype.toBytes = function toBytes() {
  return this.Rencoded().concat(this.Sencoded());
};

Signature.prototype.toHex = function toHex() {
  return utils.encode(this.toBytes(), 'hex').toUpperCase();
};

module.exports = Signature;

},{"../../elliptic":67,"bn.js":16}],80:[function(require,module,exports){
'use strict';

var hash = require('hash.js');
var elliptic = require('../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

function HmacDRBG(options) {
  if (!(this instanceof HmacDRBG))
    return new HmacDRBG(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;

  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;

  this.reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;

  var entropy = utils.toArray(options.entropy, options.entropyEnc);
  var nonce = utils.toArray(options.nonce, options.nonceEnc);
  var pers = utils.toArray(options.pers, options.persEnc);
  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._init(entropy, nonce, pers);
}
module.exports = HmacDRBG;

HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);

  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0x00;
    this.V[i] = 0x01;
  }

  this._update(seed);
  this.reseed = 1;
  this.reseedInterval = 0x1000000000000;  // 2^48
};

HmacDRBG.prototype._hmac = function hmac() {
  return new hash.hmac(this.hash, this.K);
};

HmacDRBG.prototype._update = function update(seed) {
  var kmac = this._hmac()
                 .update(this.V)
                 .update([ 0x00 ]);
  if (seed)
    kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed)
    return;

  this.K = this._hmac()
               .update(this.V)
               .update([ 0x01 ])
               .update(seed)
               .digest();
  this.V = this._hmac().update(this.V).digest();
};

HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
  // Optional entropy enc
  if (typeof entropyEnc !== 'string') {
    addEnc = add;
    add = entropyEnc;
    entropyEnc = null;
  }

  entropy = utils.toBuffer(entropy, entropyEnc);
  add = utils.toBuffer(add, addEnc);

  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

  this._update(entropy.concat(add || []));
  this.reseed = 1;
};

HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
  if (this.reseed > this.reseedInterval)
    throw new Error('Reseed is required');

  // Optional encoding
  if (typeof enc !== 'string') {
    addEnc = add;
    add = enc;
    enc = null;
  }

  // Optional additional data
  if (add) {
    add = utils.toArray(add, addEnc);
    this._update(add);
  }

  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }

  var res = temp.slice(0, len);
  this._update(add);
  this.reseed++;
  return utils.encode(res, enc);
};

},{"../elliptic":67,"hash.js":87}],81:[function(require,module,exports){
module.exports = {
  doubles: {
    step: 4,
    points: [
      [
        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'
      ],
      [
        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'
      ],
      [
        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'
      ],
      [
        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'
      ],
      [
        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'
      ],
      [
        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'
      ],
      [
        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'
      ],
      [
        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'
      ],
      [
        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'
      ],
      [
        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'
      ],
      [
        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'
      ],
      [
        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'
      ],
      [
        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'
      ],
      [
        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'
      ],
      [
        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'
      ],
      [
        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'
      ],
      [
        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'
      ],
      [
        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'
      ],
      [
        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'
      ],
      [
        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'
      ],
      [
        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'
      ],
      [
        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'
      ],
      [
        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'
      ],
      [
        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'
      ],
      [
        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'
      ],
      [
        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'
      ],
      [
        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'
      ],
      [
        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'
      ],
      [
        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'
      ],
      [
        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'
      ],
      [
        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'
      ],
      [
        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'
      ],
      [
        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'
      ],
      [
        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'
      ],
      [
        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'
      ],
      [
        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'
      ],
      [
        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'
      ],
      [
        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'
      ],
      [
        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'
      ],
      [
        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'
      ],
      [
        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'
      ],
      [
        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'
      ],
      [
        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'
      ],
      [
        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'
      ],
      [
        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'
      ],
      [
        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'
      ],
      [
        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'
      ],
      [
        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'
      ],
      [
        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'
      ],
      [
        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'
      ],
      [
        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'
      ],
      [
        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'
      ],
      [
        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'
      ],
      [
        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'
      ],
      [
        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'
      ],
      [
        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'
      ],
      [
        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'
      ],
      [
        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'
      ],
      [
        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'
      ],
      [
        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'
      ],
      [
        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'
      ],
      [
        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'
      ],
      [
        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'
      ],
      [
        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'
      ],
      [
        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'
      ]
    ]
  },
  naf: {
    wnd: 7,
    points: [
      [
        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'
      ],
      [
        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'
      ],
      [
        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'
      ],
      [
        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'
      ],
      [
        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'
      ],
      [
        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'
      ],
      [
        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'
      ],
      [
        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'
      ],
      [
        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'
      ],
      [
        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'
      ],
      [
        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'
      ],
      [
        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'
      ],
      [
        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'
      ],
      [
        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'
      ],
      [
        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'
      ],
      [
        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'
      ],
      [
        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'
      ],
      [
        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'
      ],
      [
        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'
      ],
      [
        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'
      ],
      [
        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'
      ],
      [
        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'
      ],
      [
        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'
      ],
      [
        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'
      ],
      [
        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'
      ],
      [
        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'
      ],
      [
        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'
      ],
      [
        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'
      ],
      [
        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'
      ],
      [
        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'
      ],
      [
        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'
      ],
      [
        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'
      ],
      [
        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'
      ],
      [
        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'
      ],
      [
        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'
      ],
      [
        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'
      ],
      [
        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'
      ],
      [
        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'
      ],
      [
        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'
      ],
      [
        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'
      ],
      [
        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'
      ],
      [
        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'
      ],
      [
        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'
      ],
      [
        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'
      ],
      [
        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'
      ],
      [
        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'
      ],
      [
        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'
      ],
      [
        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'
      ],
      [
        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'
      ],
      [
        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'
      ],
      [
        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'
      ],
      [
        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'
      ],
      [
        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'
      ],
      [
        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'
      ],
      [
        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'
      ],
      [
        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'
      ],
      [
        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'
      ],
      [
        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'
      ],
      [
        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'
      ],
      [
        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'
      ],
      [
        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'
      ],
      [
        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'
      ],
      [
        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'
      ],
      [
        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'
      ],
      [
        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'
      ],
      [
        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'
      ],
      [
        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'
      ],
      [
        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'
      ],
      [
        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'
      ],
      [
        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'
      ],
      [
        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'
      ],
      [
        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'
      ],
      [
        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'
      ],
      [
        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'
      ],
      [
        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'
      ],
      [
        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'
      ],
      [
        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'
      ],
      [
        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'
      ],
      [
        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'
      ],
      [
        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'
      ],
      [
        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'
      ],
      [
        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'
      ],
      [
        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'
      ],
      [
        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'
      ],
      [
        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'
      ],
      [
        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'
      ],
      [
        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'
      ],
      [
        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'
      ],
      [
        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'
      ],
      [
        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'
      ],
      [
        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'
      ],
      [
        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'
      ],
      [
        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'
      ],
      [
        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'
      ],
      [
        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'
      ],
      [
        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'
      ],
      [
        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'
      ],
      [
        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'
      ],
      [
        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'
      ],
      [
        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'
      ],
      [
        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'
      ],
      [
        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'
      ],
      [
        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'
      ],
      [
        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'
      ],
      [
        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'
      ],
      [
        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'
      ],
      [
        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'
      ],
      [
        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'
      ],
      [
        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'
      ],
      [
        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'
      ],
      [
        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'
      ],
      [
        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'
      ],
      [
        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'
      ],
      [
        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'
      ],
      [
        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'
      ],
      [
        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'
      ],
      [
        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'
      ],
      [
        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'
      ],
      [
        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'
      ],
      [
        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'
      ],
      [
        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'
      ],
      [
        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'
      ],
      [
        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'
      ],
      [
        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'
      ],
      [
        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'
      ],
      [
        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'
      ],
      [
        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'
      ]
    ]
  }
};

},{}],82:[function(require,module,exports){
'use strict';

var utils = exports;
var BN = require('bn.js');

utils.assert = function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
};

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg !== 'string') {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
    return res;
  }
  if (!enc) {
    for (var i = 0; i < msg.length; i++) {
      var c = msg.charCodeAt(i);
      var hi = c >> 8;
      var lo = c & 0xff;
      if (hi)
        res.push(hi, lo);
      else
        res.push(lo);
    }
  } else if (enc === 'hex') {
    msg = msg.replace(/[^a-z0-9]+/ig, '');
    if (msg.length % 2 !== 0)
      msg = '0' + msg;
    for (var i = 0; i < msg.length; i += 2)
      res.push(parseInt(msg[i] + msg[i + 1], 16));
  }
  return res;
}
utils.toArray = toArray;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

utils.encode = function encode(arr, enc) {
  if (enc === 'hex')
    return toHex(arr);
  else
    return arr;
};

// Represent num in a w-NAF form
function getNAF(num, w) {
  var naf = [];
  var ws = 1 << (w + 1);
  var k = num.clone();
  while (k.cmpn(1) >= 0) {
    var z;
    if (k.isOdd()) {
      var mod = k.andln(ws - 1);
      if (mod > (ws >> 1) - 1)
        z = (ws >> 1) - mod;
      else
        z = mod;
      k.isubn(z);
    } else {
      z = 0;
    }
    naf.push(z);

    // Optimization, shift by word if possible
    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;
    for (var i = 1; i < shift; i++)
      naf.push(0);
    k.iushrn(shift);
  }

  return naf;
}
utils.getNAF = getNAF;

// Represent k1, k2 in a Joint Sparse Form
function getJSF(k1, k2) {
  var jsf = [
    [],
    []
  ];

  k1 = k1.clone();
  k2 = k2.clone();
  var d1 = 0;
  var d2 = 0;
  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {

    // First phase
    var m14 = (k1.andln(3) + d1) & 3;
    var m24 = (k2.andln(3) + d2) & 3;
    if (m14 === 3)
      m14 = -1;
    if (m24 === 3)
      m24 = -1;
    var u1;
    if ((m14 & 1) === 0) {
      u1 = 0;
    } else {
      var m8 = (k1.andln(7) + d1) & 7;
      if ((m8 === 3 || m8 === 5) && m24 === 2)
        u1 = -m14;
      else
        u1 = m14;
    }
    jsf[0].push(u1);

    var u2;
    if ((m24 & 1) === 0) {
      u2 = 0;
    } else {
      var m8 = (k2.andln(7) + d2) & 7;
      if ((m8 === 3 || m8 === 5) && m14 === 2)
        u2 = -m24;
      else
        u2 = m24;
    }
    jsf[1].push(u2);

    // Second phase
    if (2 * d1 === u1 + 1)
      d1 = 1 - d1;
    if (2 * d2 === u2 + 1)
      d2 = 1 - d2;
    k1.iushrn(1);
    k2.iushrn(1);
  }

  return jsf;
}
utils.getJSF = getJSF;

function cachedProperty(obj, computer) {
  var name = computer.name;
  var key = '_' + name;
  obj.prototype[name] = function cachedProperty() {
    return this[key] !== undefined ? this[key] :
           this[key] = computer.call(this);
  };
}
utils.cachedProperty = cachedProperty;

function parseBytes(bytes) {
  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :
                                     bytes;
}
utils.parseBytes = parseBytes;

function intFromLE(bytes) {
  return new BN(bytes, 'hex', 'le');
}
utils.intFromLE = intFromLE;


},{"bn.js":16}],83:[function(require,module,exports){
module.exports={
  "_args": [
    [
      "elliptic@^6.0.0",
      "/Users/sf/Desktop/code/habemus/web/habemus-editor/node_modules/browserify-sign"
    ]
  ],
  "_from": "elliptic@>=6.0.0 <7.0.0",
  "_id": "elliptic@6.2.3",
  "_inCache": true,
  "_installable": true,
  "_location": "/elliptic",
  "_nodeVersion": "5.4.1",
  "_npmUser": {
    "email": "fedor@indutny.com",
    "name": "indutny"
  },
  "_npmVersion": "3.3.12",
  "_phantomChildren": {},
  "_requested": {
    "name": "elliptic",
    "raw": "elliptic@^6.0.0",
    "rawSpec": "^6.0.0",
    "scope": null,
    "spec": ">=6.0.0 <7.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/browserify-sign",
    "/create-ecdh"
  ],
  "_resolved": "https://registry.npmjs.org/elliptic/-/elliptic-6.2.3.tgz",
  "_shasum": "18e46d7306b0951275a2d42063270a14b74ebe99",
  "_shrinkwrap": null,
  "_spec": "elliptic@^6.0.0",
  "_where": "/Users/sf/Desktop/code/habemus/web/habemus-editor/node_modules/browserify-sign",
  "author": {
    "email": "fedor@indutny.com",
    "name": "Fedor Indutny"
  },
  "bugs": {
    "url": "https://github.com/indutny/elliptic/issues"
  },
  "dependencies": {
    "bn.js": "^4.0.0",
    "brorand": "^1.0.1",
    "hash.js": "^1.0.0",
    "inherits": "^2.0.1"
  },
  "description": "EC cryptography",
  "devDependencies": {
    "coveralls": "^2.11.3",
    "istanbul": "^0.4.2",
    "jscs": "^2.9.0",
    "jshint": "^2.6.0",
    "mocha": "^2.1.0"
  },
  "directories": {},
  "dist": {
    "shasum": "18e46d7306b0951275a2d42063270a14b74ebe99",
    "tarball": "http://registry.npmjs.org/elliptic/-/elliptic-6.2.3.tgz"
  },
  "files": [
    "lib"
  ],
  "gitHead": "c32f20b22b420eb6af3c6dda28963deb7facf823",
  "homepage": "https://github.com/indutny/elliptic",
  "keywords": [
    "Cryptography",
    "EC",
    "Elliptic",
    "curve"
  ],
  "license": "MIT",
  "main": "lib/elliptic.js",
  "maintainers": [
    {
      "name": "indutny",
      "email": "fedor@indutny.com"
    }
  ],
  "name": "elliptic",
  "optionalDependencies": {},
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/indutny/elliptic.git"
  },
  "scripts": {
    "coverage": "npm run unit --coverage",
    "coveralls": "npm run coverage && cat ./coverage/lcov.info | coveralls",
    "jscs": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/*.js",
    "jshint": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/*.js",
    "lint": "npm run jscs && npm run jshint",
    "test": "npm run lint && npm run unit",
    "unit": "istanbul test _mocha --reporter=spec test/*-test.js"
  },
  "version": "6.2.3"
}

},{}],84:[function(require,module,exports){
(function (process,global){
 /*!
  * https://github.com/paulmillr/es6-shim
  * @license es6-shim Copyright 2013-2016 by Paul Miller (http://paulmillr.com)
  *   and contributors,  MIT License
  * es6-shim: v0.35.0
  * see https://github.com/paulmillr/es6-shim/blob/0.35.0/LICENSE
  * Details and documentation:
  * https://github.com/paulmillr/es6-shim/
  */

// UMD (Universal Module Definition)
// see https://github.com/umdjs/umd/blob/master/returnExports.js
(function (root, factory) {
  /*global define, module, exports */
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(factory);
  } else if (typeof exports === 'object') {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like environments that support module.exports,
    // like Node.
    module.exports = factory();
  } else {
    // Browser globals (root is window)
    root.returnExports = factory();
  }
}(this, function () {
  'use strict';

  var _apply = Function.call.bind(Function.apply);
  var _call = Function.call.bind(Function.call);
  var isArray = Array.isArray;
  var keys = Object.keys;

  var not = function notThunker(func) {
    return function notThunk() { return !_apply(func, this, arguments); };
  };
  var throwsError = function (func) {
    try {
      func();
      return false;
    } catch (e) {
      return true;
    }
  };
  var valueOrFalseIfThrows = function valueOrFalseIfThrows(func) {
    try {
      return func();
    } catch (e) {
      return false;
    }
  };

  var isCallableWithoutNew = not(throwsError);
  var arePropertyDescriptorsSupported = function () {
    // if Object.defineProperty exists but throws, it's IE 8
    return !throwsError(function () { Object.defineProperty({}, 'x', { get: function () {} }); });
  };
  var supportsDescriptors = !!Object.defineProperty && arePropertyDescriptorsSupported();
  var functionsHaveNames = (function foo() {}).name === 'foo';

  var _forEach = Function.call.bind(Array.prototype.forEach);
  var _reduce = Function.call.bind(Array.prototype.reduce);
  var _filter = Function.call.bind(Array.prototype.filter);
  var _some = Function.call.bind(Array.prototype.some);

  var defineProperty = function (object, name, value, force) {
    if (!force && name in object) { return; }
    if (supportsDescriptors) {
      Object.defineProperty(object, name, {
        configurable: true,
        enumerable: false,
        writable: true,
        value: value
      });
    } else {
      object[name] = value;
    }
  };

  // Define configurable, writable and non-enumerable props
  // if they don’t exist.
  var defineProperties = function (object, map, forceOverride) {
    _forEach(keys(map), function (name) {
      var method = map[name];
      defineProperty(object, name, method, !!forceOverride);
    });
  };

  var _toString = Function.call.bind(Object.prototype.toString);
  var isCallable = typeof /abc/ === 'function' ? function IsCallableSlow(x) {
    // Some old browsers (IE, FF) say that typeof /abc/ === 'function'
    return typeof x === 'function' && _toString(x) === '[object Function]';
  } : function IsCallableFast(x) { return typeof x === 'function'; };

  var Value = {
    getter: function (object, name, getter) {
      if (!supportsDescriptors) {
        throw new TypeError('getters require true ES5 support');
      }
      Object.defineProperty(object, name, {
        configurable: true,
        enumerable: false,
        get: getter
      });
    },
    proxy: function (originalObject, key, targetObject) {
      if (!supportsDescriptors) {
        throw new TypeError('getters require true ES5 support');
      }
      var originalDescriptor = Object.getOwnPropertyDescriptor(originalObject, key);
      Object.defineProperty(targetObject, key, {
        configurable: originalDescriptor.configurable,
        enumerable: originalDescriptor.enumerable,
        get: function getKey() { return originalObject[key]; },
        set: function setKey(value) { originalObject[key] = value; }
      });
    },
    redefine: function (object, property, newValue) {
      if (supportsDescriptors) {
        var descriptor = Object.getOwnPropertyDescriptor(object, property);
        descriptor.value = newValue;
        Object.defineProperty(object, property, descriptor);
      } else {
        object[property] = newValue;
      }
    },
    defineByDescriptor: function (object, property, descriptor) {
      if (supportsDescriptors) {
        Object.defineProperty(object, property, descriptor);
      } else if ('value' in descriptor) {
        object[property] = descriptor.value;
      }
    },
    preserveToString: function (target, source) {
      if (source && isCallable(source.toString)) {
        defineProperty(target, 'toString', source.toString.bind(source), true);
      }
    }
  };

  // Simple shim for Object.create on ES3 browsers
  // (unlike real shim, no attempt to support `prototype === null`)
  var create = Object.create || function (prototype, properties) {
    var Prototype = function Prototype() {};
    Prototype.prototype = prototype;
    var object = new Prototype();
    if (typeof properties !== 'undefined') {
      keys(properties).forEach(function (key) {
        Value.defineByDescriptor(object, key, properties[key]);
      });
    }
    return object;
  };

  var supportsSubclassing = function (C, f) {
    if (!Object.setPrototypeOf) { return false; /* skip test on IE < 11 */ }
    return valueOrFalseIfThrows(function () {
      var Sub = function Subclass(arg) {
        var o = new C(arg);
        Object.setPrototypeOf(o, Subclass.prototype);
        return o;
      };
      Object.setPrototypeOf(Sub, C);
      Sub.prototype = create(C.prototype, {
        constructor: { value: Sub }
      });
      return f(Sub);
    });
  };

  var getGlobal = function () {
    /* global self, window, global */
    // the only reliable means to get the global object is
    // `Function('return this')()`
    // However, this causes CSP violations in Chrome apps.
    if (typeof self !== 'undefined') { return self; }
    if (typeof window !== 'undefined') { return window; }
    if (typeof global !== 'undefined') { return global; }
    throw new Error('unable to locate global object');
  };

  var globals = getGlobal();
  var globalIsFinite = globals.isFinite;
  var _indexOf = Function.call.bind(String.prototype.indexOf);
  var _arrayIndexOfApply = Function.apply.bind(Array.prototype.indexOf);
  var _concat = Function.call.bind(Array.prototype.concat);
  var _sort = Function.call.bind(Array.prototype.sort);
  var _strSlice = Function.call.bind(String.prototype.slice);
  var _push = Function.call.bind(Array.prototype.push);
  var _pushApply = Function.apply.bind(Array.prototype.push);
  var _shift = Function.call.bind(Array.prototype.shift);
  var _max = Math.max;
  var _min = Math.min;
  var _floor = Math.floor;
  var _abs = Math.abs;
  var _log = Math.log;
  var _sqrt = Math.sqrt;
  var _hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);
  var ArrayIterator; // make our implementation private
  var noop = function () {};

  var Symbol = globals.Symbol || {};
  var symbolSpecies = Symbol.species || '@@species';

  var numberIsNaN = Number.isNaN || function isNaN(value) {
    // NaN !== NaN, but they are identical.
    // NaNs are the only non-reflexive value, i.e., if x !== x,
    // then x is NaN.
    // isNaN is broken: it converts its argument to number, so
    // isNaN('foo') => true
    return value !== value;
  };
  var numberIsFinite = Number.isFinite || function isFinite(value) {
    return typeof value === 'number' && globalIsFinite(value);
  };

  // taken directly from https://github.com/ljharb/is-arguments/blob/master/index.js
  // can be replaced with require('is-arguments') if we ever use a build process instead
  var isStandardArguments = function isArguments(value) {
    return _toString(value) === '[object Arguments]';
  };
  var isLegacyArguments = function isArguments(value) {
    return value !== null &&
      typeof value === 'object' &&
      typeof value.length === 'number' &&
      value.length >= 0 &&
      _toString(value) !== '[object Array]' &&
      _toString(value.callee) === '[object Function]';
  };
  var isArguments = isStandardArguments(arguments) ? isStandardArguments : isLegacyArguments;

  var Type = {
    primitive: function (x) { return x === null || (typeof x !== 'function' && typeof x !== 'object'); },
    object: function (x) { return x !== null && typeof x === 'object'; },
    string: function (x) { return _toString(x) === '[object String]'; },
    regex: function (x) { return _toString(x) === '[object RegExp]'; },
    symbol: function (x) {
      return typeof globals.Symbol === 'function' && typeof x === 'symbol';
    }
  };

  var overrideNative = function overrideNative(object, property, replacement) {
    var original = object[property];
    defineProperty(object, property, replacement, true);
    Value.preserveToString(object[property], original);
  };

  var hasSymbols = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' && Type.symbol(Symbol());

  // This is a private name in the es6 spec, equal to '[Symbol.iterator]'
  // we're going to use an arbitrary _-prefixed name to make our shims
  // work properly with each other, even though we don't have full Iterator
  // support.  That is, `Array.from(map.keys())` will work, but we don't
  // pretend to export a "real" Iterator interface.
  var $iterator$ = Type.symbol(Symbol.iterator) ? Symbol.iterator : '_es6-shim iterator_';
  // Firefox ships a partial implementation using the name @@iterator.
  // https://bugzilla.mozilla.org/show_bug.cgi?id=907077#c14
  // So use that name if we detect it.
  if (globals.Set && typeof new globals.Set()['@@iterator'] === 'function') {
    $iterator$ = '@@iterator';
  }

  // Reflect
  if (!globals.Reflect) {
    defineProperty(globals, 'Reflect', {}, true);
  }
  var Reflect = globals.Reflect;

  var $String = String;

  var ES = {
    // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-call-f-v-args
    Call: function Call(F, V) {
      var args = arguments.length > 2 ? arguments[2] : [];
      if (!ES.IsCallable(F)) {
        throw new TypeError(F + ' is not a function');
      }
      return _apply(F, V, args);
    },

    RequireObjectCoercible: function (x, optMessage) {
      /* jshint eqnull:true */
      if (x == null) {
        throw new TypeError(optMessage || 'Cannot call method on ' + x);
      }
      return x;
    },

    // This might miss the "(non-standard exotic and does not implement
    // [[Call]])" case from
    // http://www.ecma-international.org/ecma-262/6.0/#sec-typeof-operator-runtime-semantics-evaluation
    // but we can't find any evidence these objects exist in practice.
    // If we find some in the future, you could test `Object(x) === x`,
    // which is reliable according to
    // http://www.ecma-international.org/ecma-262/6.0/#sec-toobject
    // but is not well optimized by runtimes and creates an object
    // whenever it returns false, and thus is very slow.
    TypeIsObject: function (x) {
      if (x === void 0 || x === null || x === true || x === false) {
        return false;
      }
      return typeof x === 'function' || typeof x === 'object';
    },

    ToObject: function (o, optMessage) {
      return Object(ES.RequireObjectCoercible(o, optMessage));
    },

    IsCallable: isCallable,

    IsConstructor: function (x) {
      // We can't tell callables from constructors in ES5
      return ES.IsCallable(x);
    },

    ToInt32: function (x) {
      return ES.ToNumber(x) >> 0;
    },

    ToUint32: function (x) {
      return ES.ToNumber(x) >>> 0;
    },

    ToNumber: function (value) {
      if (_toString(value) === '[object Symbol]') {
        throw new TypeError('Cannot convert a Symbol value to a number');
      }
      return +value;
    },

    ToInteger: function (value) {
      var number = ES.ToNumber(value);
      if (numberIsNaN(number)) { return 0; }
      if (number === 0 || !numberIsFinite(number)) { return number; }
      return (number > 0 ? 1 : -1) * _floor(_abs(number));
    },

    ToLength: function (value) {
      var len = ES.ToInteger(value);
      if (len <= 0) { return 0; } // includes converting -0 to +0
      if (len > Number.MAX_SAFE_INTEGER) { return Number.MAX_SAFE_INTEGER; }
      return len;
    },

    SameValue: function (a, b) {
      if (a === b) {
        // 0 === -0, but they are not identical.
        if (a === 0) { return 1 / a === 1 / b; }
        return true;
      }
      return numberIsNaN(a) && numberIsNaN(b);
    },

    SameValueZero: function (a, b) {
      // same as SameValue except for SameValueZero(+0, -0) == true
      return (a === b) || (numberIsNaN(a) && numberIsNaN(b));
    },

    IsIterable: function (o) {
      return ES.TypeIsObject(o) && (typeof o[$iterator$] !== 'undefined' || isArguments(o));
    },

    GetIterator: function (o) {
      if (isArguments(o)) {
        // special case support for `arguments`
        return new ArrayIterator(o, 'value');
      }
      var itFn = ES.GetMethod(o, $iterator$);
      if (!ES.IsCallable(itFn)) {
        // Better diagnostics if itFn is null or undefined
        throw new TypeError('value is not an iterable');
      }
      var it = ES.Call(itFn, o);
      if (!ES.TypeIsObject(it)) {
        throw new TypeError('bad iterator');
      }
      return it;
    },

    GetMethod: function (o, p) {
      var func = ES.ToObject(o)[p];
      if (func === void 0 || func === null) {
        return void 0;
      }
      if (!ES.IsCallable(func)) {
        throw new TypeError('Method not callable: ' + p);
      }
      return func;
    },

    IteratorComplete: function (iterResult) {
      return !!(iterResult.done);
    },

    IteratorClose: function (iterator, completionIsThrow) {
      var returnMethod = ES.GetMethod(iterator, 'return');
      if (returnMethod === void 0) {
        return;
      }
      var innerResult, innerException;
      try {
        innerResult = ES.Call(returnMethod, iterator);
      } catch (e) {
        innerException = e;
      }
      if (completionIsThrow) {
        return;
      }
      if (innerException) {
        throw innerException;
      }
      if (!ES.TypeIsObject(innerResult)) {
        throw new TypeError("Iterator's return method returned a non-object.");
      }
    },

    IteratorNext: function (it) {
      var result = arguments.length > 1 ? it.next(arguments[1]) : it.next();
      if (!ES.TypeIsObject(result)) {
        throw new TypeError('bad iterator');
      }
      return result;
    },

    IteratorStep: function (it) {
      var result = ES.IteratorNext(it);
      var done = ES.IteratorComplete(result);
      return done ? false : result;
    },

    Construct: function (C, args, newTarget, isES6internal) {
      var target = typeof newTarget === 'undefined' ? C : newTarget;

      if (!isES6internal && Reflect.construct) {
        // Try to use Reflect.construct if available
        return Reflect.construct(C, args, target);
      }
      // OK, we have to fake it.  This will only work if the
      // C.[[ConstructorKind]] == "base" -- but that's the only
      // kind we can make in ES5 code anyway.

      // OrdinaryCreateFromConstructor(target, "%ObjectPrototype%")
      var proto = target.prototype;
      if (!ES.TypeIsObject(proto)) {
        proto = Object.prototype;
      }
      var obj = create(proto);
      // Call the constructor.
      var result = ES.Call(C, obj, args);
      return ES.TypeIsObject(result) ? result : obj;
    },

    SpeciesConstructor: function (O, defaultConstructor) {
      var C = O.constructor;
      if (C === void 0) {
        return defaultConstructor;
      }
      if (!ES.TypeIsObject(C)) {
        throw new TypeError('Bad constructor');
      }
      var S = C[symbolSpecies];
      if (S === void 0 || S === null) {
        return defaultConstructor;
      }
      if (!ES.IsConstructor(S)) {
        throw new TypeError('Bad @@species');
      }
      return S;
    },

    CreateHTML: function (string, tag, attribute, value) {
      var S = ES.ToString(string);
      var p1 = '<' + tag;
      if (attribute !== '') {
        var V = ES.ToString(value);
        var escapedV = V.replace(/"/g, '&quot;');
        p1 += ' ' + attribute + '="' + escapedV + '"';
      }
      var p2 = p1 + '>';
      var p3 = p2 + S;
      return p3 + '</' + tag + '>';
    },

    IsRegExp: function IsRegExp(argument) {
      if (!ES.TypeIsObject(argument)) {
        return false;
      }
      var isRegExp = argument[Symbol.match];
      if (typeof isRegExp !== 'undefined') {
        return !!isRegExp;
      }
      return Type.regex(argument);
    },

    ToString: function ToString(string) {
      return $String(string);
    }
  };

  // Well-known Symbol shims
  if (supportsDescriptors && hasSymbols) {
    var defineWellKnownSymbol = function defineWellKnownSymbol(name) {
      if (Type.symbol(Symbol[name])) {
        return Symbol[name];
      }
      var sym = Symbol['for']('Symbol.' + name);
      Object.defineProperty(Symbol, name, {
        configurable: false,
        enumerable: false,
        writable: false,
        value: sym
      });
      return sym;
    };
    if (!Type.symbol(Symbol.search)) {
      var symbolSearch = defineWellKnownSymbol('search');
      var originalSearch = String.prototype.search;
      defineProperty(RegExp.prototype, symbolSearch, function search(string) {
        return ES.Call(originalSearch, string, [this]);
      });
      var searchShim = function search(regexp) {
        var O = ES.RequireObjectCoercible(this);
        if (regexp !== null && typeof regexp !== 'undefined') {
          var searcher = ES.GetMethod(regexp, symbolSearch);
          if (typeof searcher !== 'undefined') {
            return ES.Call(searcher, regexp, [O]);
          }
        }
        return ES.Call(originalSearch, O, [ES.ToString(regexp)]);
      };
      overrideNative(String.prototype, 'search', searchShim);
    }
    if (!Type.symbol(Symbol.replace)) {
      var symbolReplace = defineWellKnownSymbol('replace');
      var originalReplace = String.prototype.replace;
      defineProperty(RegExp.prototype, symbolReplace, function replace(string, replaceValue) {
        return ES.Call(originalReplace, string, [this, replaceValue]);
      });
      var replaceShim = function replace(searchValue, replaceValue) {
        var O = ES.RequireObjectCoercible(this);
        if (searchValue !== null && typeof searchValue !== 'undefined') {
          var replacer = ES.GetMethod(searchValue, symbolReplace);
          if (typeof replacer !== 'undefined') {
            return ES.Call(replacer, searchValue, [O, replaceValue]);
          }
        }
        return ES.Call(originalReplace, O, [ES.ToString(searchValue), replaceValue]);
      };
      overrideNative(String.prototype, 'replace', replaceShim);
    }
    if (!Type.symbol(Symbol.split)) {
      var symbolSplit = defineWellKnownSymbol('split');
      var originalSplit = String.prototype.split;
      defineProperty(RegExp.prototype, symbolSplit, function split(string, limit) {
        return ES.Call(originalSplit, string, [this, limit]);
      });
      var splitShim = function split(separator, limit) {
        var O = ES.RequireObjectCoercible(this);
        if (separator !== null && typeof separator !== 'undefined') {
          var splitter = ES.GetMethod(separator, symbolSplit);
          if (typeof splitter !== 'undefined') {
            return ES.Call(splitter, separator, [O, limit]);
          }
        }
        return ES.Call(originalSplit, O, [ES.ToString(separator), limit]);
      };
      overrideNative(String.prototype, 'split', splitShim);
    }
    var symbolMatchExists = Type.symbol(Symbol.match);
    var stringMatchIgnoresSymbolMatch = symbolMatchExists && (function () {
      // Firefox 41, through Nightly 45 has Symbol.match, but String#match ignores it.
      // Firefox 40 and below have Symbol.match but String#match works fine.
      var o = {};
      o[Symbol.match] = function () { return 42; };
      return 'a'.match(o) !== 42;
    }());
    if (!symbolMatchExists || stringMatchIgnoresSymbolMatch) {
      var symbolMatch = defineWellKnownSymbol('match');

      var originalMatch = String.prototype.match;
      defineProperty(RegExp.prototype, symbolMatch, function match(string) {
        return ES.Call(originalMatch, string, [this]);
      });

      var matchShim = function match(regexp) {
        var O = ES.RequireObjectCoercible(this);
        if (regexp !== null && typeof regexp !== 'undefined') {
          var matcher = ES.GetMethod(regexp, symbolMatch);
          if (typeof matcher !== 'undefined') {
            return ES.Call(matcher, regexp, [O]);
          }
        }
        return ES.Call(originalMatch, O, [ES.ToString(regexp)]);
      };
      overrideNative(String.prototype, 'match', matchShim);
    }
  }

  var wrapConstructor = function wrapConstructor(original, replacement, keysToSkip) {
    Value.preserveToString(replacement, original);
    if (Object.setPrototypeOf) {
      // sets up proper prototype chain where possible
      Object.setPrototypeOf(original, replacement);
    }
    if (supportsDescriptors) {
      _forEach(Object.getOwnPropertyNames(original), function (key) {
        if (key in noop || keysToSkip[key]) { return; }
        Value.proxy(original, key, replacement);
      });
    } else {
      _forEach(Object.keys(original), function (key) {
        if (key in noop || keysToSkip[key]) { return; }
        replacement[key] = original[key];
      });
    }
    replacement.prototype = original.prototype;
    Value.redefine(original.prototype, 'constructor', replacement);
  };

  var defaultSpeciesGetter = function () { return this; };
  var addDefaultSpecies = function (C) {
    if (supportsDescriptors && !_hasOwnProperty(C, symbolSpecies)) {
      Value.getter(C, symbolSpecies, defaultSpeciesGetter);
    }
  };

  var addIterator = function (prototype, impl) {
    var implementation = impl || function iterator() { return this; };
    defineProperty(prototype, $iterator$, implementation);
    if (!prototype[$iterator$] && Type.symbol($iterator$)) {
      // implementations are buggy when $iterator$ is a Symbol
      prototype[$iterator$] = implementation;
    }
  };

  var createDataProperty = function createDataProperty(object, name, value) {
    if (supportsDescriptors) {
      Object.defineProperty(object, name, {
        configurable: true,
        enumerable: true,
        writable: true,
        value: value
      });
    } else {
      object[name] = value;
    }
  };
  var createDataPropertyOrThrow = function createDataPropertyOrThrow(object, name, value) {
    createDataProperty(object, name, value);
    if (!ES.SameValue(object[name], value)) {
      throw new TypeError('property is nonconfigurable');
    }
  };

  var emulateES6construct = function (o, defaultNewTarget, defaultProto, slots) {
    // This is an es5 approximation to es6 construct semantics.  in es6,
    // 'new Foo' invokes Foo.[[Construct]] which (for almost all objects)
    // just sets the internal variable NewTarget (in es6 syntax `new.target`)
    // to Foo and then returns Foo().

    // Many ES6 object then have constructors of the form:
    // 1. If NewTarget is undefined, throw a TypeError exception
    // 2. Let xxx by OrdinaryCreateFromConstructor(NewTarget, yyy, zzz)

    // So we're going to emulate those first two steps.
    if (!ES.TypeIsObject(o)) {
      throw new TypeError('Constructor requires `new`: ' + defaultNewTarget.name);
    }
    var proto = defaultNewTarget.prototype;
    if (!ES.TypeIsObject(proto)) {
      proto = defaultProto;
    }
    var obj = create(proto);
    for (var name in slots) {
      if (_hasOwnProperty(slots, name)) {
        var value = slots[name];
        defineProperty(obj, name, value, true);
      }
    }
    return obj;
  };

  // Firefox 31 reports this function's length as 0
  // https://bugzilla.mozilla.org/show_bug.cgi?id=1062484
  if (String.fromCodePoint && String.fromCodePoint.length !== 1) {
    var originalFromCodePoint = String.fromCodePoint;
    overrideNative(String, 'fromCodePoint', function fromCodePoint(codePoints) { return ES.Call(originalFromCodePoint, this, arguments); });
  }

  var StringShims = {
    fromCodePoint: function fromCodePoint(codePoints) {
      var result = [];
      var next;
      for (var i = 0, length = arguments.length; i < length; i++) {
        next = Number(arguments[i]);
        if (!ES.SameValue(next, ES.ToInteger(next)) || next < 0 || next > 0x10FFFF) {
          throw new RangeError('Invalid code point ' + next);
        }

        if (next < 0x10000) {
          _push(result, String.fromCharCode(next));
        } else {
          next -= 0x10000;
          _push(result, String.fromCharCode((next >> 10) + 0xD800));
          _push(result, String.fromCharCode((next % 0x400) + 0xDC00));
        }
      }
      return result.join('');
    },

    raw: function raw(callSite) {
      var cooked = ES.ToObject(callSite, 'bad callSite');
      var rawString = ES.ToObject(cooked.raw, 'bad raw value');
      var len = rawString.length;
      var literalsegments = ES.ToLength(len);
      if (literalsegments <= 0) {
        return '';
      }

      var stringElements = [];
      var nextIndex = 0;
      var nextKey, next, nextSeg, nextSub;
      while (nextIndex < literalsegments) {
        nextKey = ES.ToString(nextIndex);
        nextSeg = ES.ToString(rawString[nextKey]);
        _push(stringElements, nextSeg);
        if (nextIndex + 1 >= literalsegments) {
          break;
        }
        next = nextIndex + 1 < arguments.length ? arguments[nextIndex + 1] : '';
        nextSub = ES.ToString(next);
        _push(stringElements, nextSub);
        nextIndex += 1;
      }
      return stringElements.join('');
    }
  };
  if (String.raw && String.raw({ raw: { 0: 'x', 1: 'y', length: 2 } }) !== 'xy') {
    // IE 11 TP has a broken String.raw implementation
    overrideNative(String, 'raw', StringShims.raw);
  }
  defineProperties(String, StringShims);

  // Fast repeat, uses the `Exponentiation by squaring` algorithm.
  // Perf: http://jsperf.com/string-repeat2/2
  var stringRepeat = function repeat(s, times) {
    if (times < 1) { return ''; }
    if (times % 2) { return repeat(s, times - 1) + s; }
    var half = repeat(s, times / 2);
    return half + half;
  };
  var stringMaxLength = Infinity;

  var StringPrototypeShims = {
    repeat: function repeat(times) {
      var thisStr = ES.ToString(ES.RequireObjectCoercible(this));
      var numTimes = ES.ToInteger(times);
      if (numTimes < 0 || numTimes >= stringMaxLength) {
        throw new RangeError('repeat count must be less than infinity and not overflow maximum string size');
      }
      return stringRepeat(thisStr, numTimes);
    },

    startsWith: function startsWith(searchString) {
      var S = ES.ToString(ES.RequireObjectCoercible(this));
      if (ES.IsRegExp(searchString)) {
        throw new TypeError('Cannot call method "startsWith" with a regex');
      }
      var searchStr = ES.ToString(searchString);
      var position;
      if (arguments.length > 1) {
        position = arguments[1];
      }
      var start = _max(ES.ToInteger(position), 0);
      return _strSlice(S, start, start + searchStr.length) === searchStr;
    },

    endsWith: function endsWith(searchString) {
      var S = ES.ToString(ES.RequireObjectCoercible(this));
      if (ES.IsRegExp(searchString)) {
        throw new TypeError('Cannot call method "endsWith" with a regex');
      }
      var searchStr = ES.ToString(searchString);
      var len = S.length;
      var endPosition;
      if (arguments.length > 1) {
        endPosition = arguments[1];
      }
      var pos = typeof endPosition === 'undefined' ? len : ES.ToInteger(endPosition);
      var end = _min(_max(pos, 0), len);
      return _strSlice(S, end - searchStr.length, end) === searchStr;
    },

    includes: function includes(searchString) {
      if (ES.IsRegExp(searchString)) {
        throw new TypeError('"includes" does not accept a RegExp');
      }
      var searchStr = ES.ToString(searchString);
      var position;
      if (arguments.length > 1) {
        position = arguments[1];
      }
      // Somehow this trick makes method 100% compat with the spec.
      return _indexOf(this, searchStr, position) !== -1;
    },

    codePointAt: function codePointAt(pos) {
      var thisStr = ES.ToString(ES.RequireObjectCoercible(this));
      var position = ES.ToInteger(pos);
      var length = thisStr.length;
      if (position >= 0 && position < length) {
        var first = thisStr.charCodeAt(position);
        var isEnd = (position + 1 === length);
        if (first < 0xD800 || first > 0xDBFF || isEnd) { return first; }
        var second = thisStr.charCodeAt(position + 1);
        if (second < 0xDC00 || second > 0xDFFF) { return first; }
        return ((first - 0xD800) * 1024) + (second - 0xDC00) + 0x10000;
      }
    }
  };
  if (String.prototype.includes && 'a'.includes('a', Infinity) !== false) {
    overrideNative(String.prototype, 'includes', StringPrototypeShims.includes);
  }

  if (String.prototype.startsWith && String.prototype.endsWith) {
    var startsWithRejectsRegex = throwsError(function () {
      /* throws if spec-compliant */
      '/a/'.startsWith(/a/);
    });
    var startsWithHandlesInfinity = valueOrFalseIfThrows(function () {
      return 'abc'.startsWith('a', Infinity) === false;
    });
    if (!startsWithRejectsRegex || !startsWithHandlesInfinity) {
      // Firefox (< 37?) and IE 11 TP have a noncompliant startsWith implementation
      overrideNative(String.prototype, 'startsWith', StringPrototypeShims.startsWith);
      overrideNative(String.prototype, 'endsWith', StringPrototypeShims.endsWith);
    }
  }
  if (hasSymbols) {
    var startsWithSupportsSymbolMatch = valueOrFalseIfThrows(function () {
      var re = /a/;
      re[Symbol.match] = false;
      return '/a/'.startsWith(re);
    });
    if (!startsWithSupportsSymbolMatch) {
      overrideNative(String.prototype, 'startsWith', StringPrototypeShims.startsWith);
    }
    var endsWithSupportsSymbolMatch = valueOrFalseIfThrows(function () {
      var re = /a/;
      re[Symbol.match] = false;
      return '/a/'.endsWith(re);
    });
    if (!endsWithSupportsSymbolMatch) {
      overrideNative(String.prototype, 'endsWith', StringPrototypeShims.endsWith);
    }
    var includesSupportsSymbolMatch = valueOrFalseIfThrows(function () {
      var re = /a/;
      re[Symbol.match] = false;
      return '/a/'.includes(re);
    });
    if (!includesSupportsSymbolMatch) {
      overrideNative(String.prototype, 'includes', StringPrototypeShims.includes);
    }
  }

  defineProperties(String.prototype, StringPrototypeShims);

  // whitespace from: http://es5.github.io/#x15.5.4.20
  // implementation from https://github.com/es-shims/es5-shim/blob/v3.4.0/es5-shim.js#L1304-L1324
  var ws = [
    '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003',
    '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028',
    '\u2029\uFEFF'
  ].join('');
  var trimRegexp = new RegExp('(^[' + ws + ']+)|([' + ws + ']+$)', 'g');
  var trimShim = function trim() {
    return ES.ToString(ES.RequireObjectCoercible(this)).replace(trimRegexp, '');
  };
  var nonWS = ['\u0085', '\u200b', '\ufffe'].join('');
  var nonWSregex = new RegExp('[' + nonWS + ']', 'g');
  var isBadHexRegex = /^[\-+]0x[0-9a-f]+$/i;
  var hasStringTrimBug = nonWS.trim().length !== nonWS.length;
  defineProperty(String.prototype, 'trim', trimShim, hasStringTrimBug);

  // see https://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype-@@iterator
  var StringIterator = function (s) {
    ES.RequireObjectCoercible(s);
    this._s = ES.ToString(s);
    this._i = 0;
  };
  StringIterator.prototype.next = function () {
    var s = this._s, i = this._i;
    if (typeof s === 'undefined' || i >= s.length) {
      this._s = void 0;
      return { value: void 0, done: true };
    }
    var first = s.charCodeAt(i), second, len;
    if (first < 0xD800 || first > 0xDBFF || (i + 1) === s.length) {
      len = 1;
    } else {
      second = s.charCodeAt(i + 1);
      len = (second < 0xDC00 || second > 0xDFFF) ? 1 : 2;
    }
    this._i = i + len;
    return { value: s.substr(i, len), done: false };
  };
  addIterator(StringIterator.prototype);
  addIterator(String.prototype, function () {
    return new StringIterator(this);
  });

  var ArrayShims = {
    from: function from(items) {
      var C = this;
      var mapFn;
      if (arguments.length > 1) {
        mapFn = arguments[1];
      }
      var mapping, T;
      if (typeof mapFn === 'undefined') {
        mapping = false;
      } else {
        if (!ES.IsCallable(mapFn)) {
          throw new TypeError('Array.from: when provided, the second argument must be a function');
        }
        if (arguments.length > 2) {
          T = arguments[2];
        }
        mapping = true;
      }

      // Note that that Arrays will use ArrayIterator:
      // https://bugs.ecmascript.org/show_bug.cgi?id=2416
      var usingIterator = typeof (isArguments(items) || ES.GetMethod(items, $iterator$)) !== 'undefined';

      var length, result, i;
      if (usingIterator) {
        result = ES.IsConstructor(C) ? Object(new C()) : [];
        var iterator = ES.GetIterator(items);
        var next, nextValue;

        i = 0;
        while (true) {
          next = ES.IteratorStep(iterator);
          if (next === false) {
            break;
          }
          nextValue = next.value;
          try {
            if (mapping) {
              nextValue = typeof T === 'undefined' ? mapFn(nextValue, i) : _call(mapFn, T, nextValue, i);
            }
            result[i] = nextValue;
          } catch (e) {
            ES.IteratorClose(iterator, true);
            throw e;
          }
          i += 1;
        }
        length = i;
      } else {
        var arrayLike = ES.ToObject(items);
        length = ES.ToLength(arrayLike.length);
        result = ES.IsConstructor(C) ? Object(new C(length)) : new Array(length);
        var value;
        for (i = 0; i < length; ++i) {
          value = arrayLike[i];
          if (mapping) {
            value = typeof T === 'undefined' ? mapFn(value, i) : _call(mapFn, T, value, i);
          }
          result[i] = value;
        }
      }

      result.length = length;
      return result;
    },

    of: function of() {
      var len = arguments.length;
      var C = this;
      var A = isArray(C) || !ES.IsCallable(C) ? new Array(len) : ES.Construct(C, [len]);
      for (var k = 0; k < len; ++k) {
        createDataPropertyOrThrow(A, k, arguments[k]);
      }
      A.length = len;
      return A;
    }
  };
  defineProperties(Array, ArrayShims);
  addDefaultSpecies(Array);

  // Given an argument x, it will return an IteratorResult object,
  // with value set to x and done to false.
  // Given no arguments, it will return an iterator completion object.
  var iteratorResult = function (x) {
    return { value: x, done: arguments.length === 0 };
  };

  // Our ArrayIterator is private; see
  // https://github.com/paulmillr/es6-shim/issues/252
  ArrayIterator = function (array, kind) {
      this.i = 0;
      this.array = array;
      this.kind = kind;
  };

  defineProperties(ArrayIterator.prototype, {
    next: function () {
      var i = this.i, array = this.array;
      if (!(this instanceof ArrayIterator)) {
        throw new TypeError('Not an ArrayIterator');
      }
      if (typeof array !== 'undefined') {
        var len = ES.ToLength(array.length);
        for (; i < len; i++) {
          var kind = this.kind;
          var retval;
          if (kind === 'key') {
            retval = i;
          } else if (kind === 'value') {
            retval = array[i];
          } else if (kind === 'entry') {
            retval = [i, array[i]];
          }
          this.i = i + 1;
          return { value: retval, done: false };
        }
      }
      this.array = void 0;
      return { value: void 0, done: true };
    }
  });
  addIterator(ArrayIterator.prototype);

  var orderKeys = function orderKeys(a, b) {
    var aNumeric = String(ES.ToInteger(a)) === a;
    var bNumeric = String(ES.ToInteger(b)) === b;
    if (aNumeric && bNumeric) {
      return b - a;
    } else if (aNumeric && !bNumeric) {
      return -1;
    } else if (!aNumeric && bNumeric) {
      return 1;
    } else {
      return a.localeCompare(b);
    }
  };
  var getAllKeys = function getAllKeys(object) {
    var ownKeys = [];
    var keys = [];

    for (var key in object) {
      _push(_hasOwnProperty(object, key) ? ownKeys : keys, key);
    }
    _sort(ownKeys, orderKeys);
    _sort(keys, orderKeys);

    return _concat(ownKeys, keys);
  };

  // note: this is positioned here because it depends on ArrayIterator
  var arrayOfSupportsSubclassing = Array.of === ArrayShims.of || (function () {
    // Detects a bug in Webkit nightly r181886
    var Foo = function Foo(len) { this.length = len; };
    Foo.prototype = [];
    var fooArr = Array.of.apply(Foo, [1, 2]);
    return fooArr instanceof Foo && fooArr.length === 2;
  }());
  if (!arrayOfSupportsSubclassing) {
    overrideNative(Array, 'of', ArrayShims.of);
  }

  var ArrayPrototypeShims = {
    copyWithin: function copyWithin(target, start) {
      var o = ES.ToObject(this);
      var len = ES.ToLength(o.length);
      var relativeTarget = ES.ToInteger(target);
      var relativeStart = ES.ToInteger(start);
      var to = relativeTarget < 0 ? _max(len + relativeTarget, 0) : _min(relativeTarget, len);
      var from = relativeStart < 0 ? _max(len + relativeStart, 0) : _min(relativeStart, len);
      var end;
      if (arguments.length > 2) {
        end = arguments[2];
      }
      var relativeEnd = typeof end === 'undefined' ? len : ES.ToInteger(end);
      var finalItem = relativeEnd < 0 ? _max(len + relativeEnd, 0) : _min(relativeEnd, len);
      var count = _min(finalItem - from, len - to);
      var direction = 1;
      if (from < to && to < (from + count)) {
        direction = -1;
        from += count - 1;
        to += count - 1;
      }
      while (count > 0) {
        if (from in o) {
          o[to] = o[from];
        } else {
          delete o[to];
        }
        from += direction;
        to += direction;
        count -= 1;
      }
      return o;
    },

    fill: function fill(value) {
      var start;
      if (arguments.length > 1) {
        start = arguments[1];
      }
      var end;
      if (arguments.length > 2) {
        end = arguments[2];
      }
      var O = ES.ToObject(this);
      var len = ES.ToLength(O.length);
      start = ES.ToInteger(typeof start === 'undefined' ? 0 : start);
      end = ES.ToInteger(typeof end === 'undefined' ? len : end);

      var relativeStart = start < 0 ? _max(len + start, 0) : _min(start, len);
      var relativeEnd = end < 0 ? len + end : end;

      for (var i = relativeStart; i < len && i < relativeEnd; ++i) {
        O[i] = value;
      }
      return O;
    },

    find: function find(predicate) {
      var list = ES.ToObject(this);
      var length = ES.ToLength(list.length);
      if (!ES.IsCallable(predicate)) {
        throw new TypeError('Array#find: predicate must be a function');
      }
      var thisArg = arguments.length > 1 ? arguments[1] : null;
      for (var i = 0, value; i < length; i++) {
        value = list[i];
        if (thisArg) {
          if (_call(predicate, thisArg, value, i, list)) { return value; }
        } else if (predicate(value, i, list)) {
          return value;
        }
      }
    },

    findIndex: function findIndex(predicate) {
      var list = ES.ToObject(this);
      var length = ES.ToLength(list.length);
      if (!ES.IsCallable(predicate)) {
        throw new TypeError('Array#findIndex: predicate must be a function');
      }
      var thisArg = arguments.length > 1 ? arguments[1] : null;
      for (var i = 0; i < length; i++) {
        if (thisArg) {
          if (_call(predicate, thisArg, list[i], i, list)) { return i; }
        } else if (predicate(list[i], i, list)) {
          return i;
        }
      }
      return -1;
    },

    keys: function keys() {
      return new ArrayIterator(this, 'key');
    },

    values: function values() {
      return new ArrayIterator(this, 'value');
    },

    entries: function entries() {
      return new ArrayIterator(this, 'entry');
    }
  };
  // Safari 7.1 defines Array#keys and Array#entries natively,
  // but the resulting ArrayIterator objects don't have a "next" method.
  if (Array.prototype.keys && !ES.IsCallable([1].keys().next)) {
    delete Array.prototype.keys;
  }
  if (Array.prototype.entries && !ES.IsCallable([1].entries().next)) {
    delete Array.prototype.entries;
  }

  // Chrome 38 defines Array#keys and Array#entries, and Array#@@iterator, but not Array#values
  if (Array.prototype.keys && Array.prototype.entries && !Array.prototype.values && Array.prototype[$iterator$]) {
    defineProperties(Array.prototype, {
      values: Array.prototype[$iterator$]
    });
    if (Type.symbol(Symbol.unscopables)) {
      Array.prototype[Symbol.unscopables].values = true;
    }
  }
  // Chrome 40 defines Array#values with the incorrect name, although Array#{keys,entries} have the correct name
  if (functionsHaveNames && Array.prototype.values && Array.prototype.values.name !== 'values') {
    var originalArrayPrototypeValues = Array.prototype.values;
    overrideNative(Array.prototype, 'values', function values() { return ES.Call(originalArrayPrototypeValues, this, arguments); });
    defineProperty(Array.prototype, $iterator$, Array.prototype.values, true);
  }
  defineProperties(Array.prototype, ArrayPrototypeShims);

  if (1 / [true].indexOf(true, -0) < 0) {
    // indexOf when given a position arg of -0 should return +0.
    // https://github.com/tc39/ecma262/pull/316
    defineProperty(Array.prototype, 'indexOf', function indexOf(searchElement) {
      var value = _arrayIndexOfApply(this, arguments);
      if (value === 0 && (1 / value) < 0) {
        return 0;
      }
      return value;
    }, true);
  }

  addIterator(Array.prototype, function () { return this.values(); });
  // Chrome defines keys/values/entries on Array, but doesn't give us
  // any way to identify its iterator.  So add our own shimmed field.
  if (Object.getPrototypeOf) {
    addIterator(Object.getPrototypeOf([].values()));
  }

  // note: this is positioned here because it relies on Array#entries
  var arrayFromSwallowsNegativeLengths = (function () {
    // Detects a Firefox bug in v32
    // https://bugzilla.mozilla.org/show_bug.cgi?id=1063993
    return valueOrFalseIfThrows(function () { return Array.from({ length: -1 }).length === 0; });
  }());
  var arrayFromHandlesIterables = (function () {
    // Detects a bug in Webkit nightly r181886
    var arr = Array.from([0].entries());
    return arr.length === 1 && isArray(arr[0]) && arr[0][0] === 0 && arr[0][1] === 0;
  }());
  if (!arrayFromSwallowsNegativeLengths || !arrayFromHandlesIterables) {
    overrideNative(Array, 'from', ArrayShims.from);
  }
  var arrayFromHandlesUndefinedMapFunction = (function () {
    // Microsoft Edge v0.11 throws if the mapFn argument is *provided* but undefined,
    // but the spec doesn't care if it's provided or not - undefined doesn't throw.
    return valueOrFalseIfThrows(function () { return Array.from([0], void 0); });
  }());
  if (!arrayFromHandlesUndefinedMapFunction) {
    var origArrayFrom = Array.from;
    overrideNative(Array, 'from', function from(items) {
      if (arguments.length > 1 && typeof arguments[1] !== 'undefined') {
        return ES.Call(origArrayFrom, this, arguments);
      } else {
        return _call(origArrayFrom, this, items);
      }
    });
  }

  var int32sAsOne = -(Math.pow(2, 32) - 1);
  var toLengthsCorrectly = function (method, reversed) {
    var obj = { length: int32sAsOne };
    obj[reversed ? ((obj.length >>> 0) - 1) : 0] = true;
    return valueOrFalseIfThrows(function () {
      _call(method, obj, function () {
        // note: in nonconforming browsers, this will be called
        // -1 >>> 0 times, which is 4294967295, so the throw matters.
        throw new RangeError('should not reach here');
      }, []);
      return true;
    });
  };
  if (!toLengthsCorrectly(Array.prototype.forEach)) {
    var originalForEach = Array.prototype.forEach;
    overrideNative(Array.prototype, 'forEach', function forEach(callbackFn) {
      return ES.Call(originalForEach, this.length >= 0 ? this : [], arguments);
    }, true);
  }
  if (!toLengthsCorrectly(Array.prototype.map)) {
    var originalMap = Array.prototype.map;
    overrideNative(Array.prototype, 'map', function map(callbackFn) {
      return ES.Call(originalMap, this.length >= 0 ? this : [], arguments);
    }, true);
  }
  if (!toLengthsCorrectly(Array.prototype.filter)) {
    var originalFilter = Array.prototype.filter;
    overrideNative(Array.prototype, 'filter', function filter(callbackFn) {
      return ES.Call(originalFilter, this.length >= 0 ? this : [], arguments);
    }, true);
  }
  if (!toLengthsCorrectly(Array.prototype.some)) {
    var originalSome = Array.prototype.some;
    overrideNative(Array.prototype, 'some', function some(callbackFn) {
      return ES.Call(originalSome, this.length >= 0 ? this : [], arguments);
    }, true);
  }
  if (!toLengthsCorrectly(Array.prototype.every)) {
    var originalEvery = Array.prototype.every;
    overrideNative(Array.prototype, 'every', function every(callbackFn) {
      return ES.Call(originalEvery, this.length >= 0 ? this : [], arguments);
    }, true);
  }
  if (!toLengthsCorrectly(Array.prototype.reduce)) {
    var originalReduce = Array.prototype.reduce;
    overrideNative(Array.prototype, 'reduce', function reduce(callbackFn) {
      return ES.Call(originalReduce, this.length >= 0 ? this : [], arguments);
    }, true);
  }
  if (!toLengthsCorrectly(Array.prototype.reduceRight, true)) {
    var originalReduceRight = Array.prototype.reduceRight;
    overrideNative(Array.prototype, 'reduceRight', function reduceRight(callbackFn) {
      return ES.Call(originalReduceRight, this.length >= 0 ? this : [], arguments);
    }, true);
  }

  var lacksOctalSupport = Number('0o10') !== 8;
  var lacksBinarySupport = Number('0b10') !== 2;
  var trimsNonWhitespace = _some(nonWS, function (c) {
    return Number(c + 0 + c) === 0;
  });
  if (lacksOctalSupport || lacksBinarySupport || trimsNonWhitespace) {
    var OrigNumber = Number;
    var binaryRegex = /^0b[01]+$/i;
    var octalRegex = /^0o[0-7]+$/i;
    // Note that in IE 8, RegExp.prototype.test doesn't seem to exist: ie, "test" is an own property of regexes. wtf.
    var isBinary = binaryRegex.test.bind(binaryRegex);
    var isOctal = octalRegex.test.bind(octalRegex);
    var toPrimitive = function (O) { // need to replace this with `es-to-primitive/es6`
      var result;
      if (typeof O.valueOf === 'function') {
        result = O.valueOf();
        if (Type.primitive(result)) {
          return result;
        }
      }
      if (typeof O.toString === 'function') {
        result = O.toString();
        if (Type.primitive(result)) {
          return result;
        }
      }
      throw new TypeError('No default value');
    };
    var hasNonWS = nonWSregex.test.bind(nonWSregex);
    var isBadHex = isBadHexRegex.test.bind(isBadHexRegex);
    var NumberShim = (function () {
      // this is wrapped in an IIFE because of IE 6-8's wacky scoping issues with named function expressions.
      var NumberShim = function Number(value) {
        var primValue;
        if (arguments.length > 0) {
          primValue = Type.primitive(value) ? value : toPrimitive(value, 'number');
        } else {
          primValue = 0;
        }
        if (typeof primValue === 'string') {
          primValue = ES.Call(trimShim, primValue);
          if (isBinary(primValue)) {
            primValue = parseInt(_strSlice(primValue, 2), 2);
          } else if (isOctal(primValue)) {
            primValue = parseInt(_strSlice(primValue, 2), 8);
          } else if (hasNonWS(primValue) || isBadHex(primValue)) {
            primValue = NaN;
          }
        }
        var receiver = this;
        var valueOfSucceeds = valueOrFalseIfThrows(function () {
          OrigNumber.prototype.valueOf.call(receiver);
          return true;
        });
        if (receiver instanceof NumberShim && !valueOfSucceeds) {
          return new OrigNumber(primValue);
        }
        /* jshint newcap: false */
        return OrigNumber(primValue);
        /* jshint newcap: true */
      };
      return NumberShim;
    }());
    wrapConstructor(OrigNumber, NumberShim, {});
    // this is necessary for ES3 browsers, where these properties are non-enumerable.
    defineProperties(NumberShim, {
      NaN: OrigNumber.NaN,
      MAX_VALUE: OrigNumber.MAX_VALUE,
      MIN_VALUE: OrigNumber.MIN_VALUE,
      NEGATIVE_INFINITY: OrigNumber.NEGATIVE_INFINITY,
      POSITIVE_INFINITY: OrigNumber.POSITIVE_INFINITY
    });
    /* globals Number: true */
    /* eslint-disable no-undef */
    /* jshint -W020 */
    Number = NumberShim;
    Value.redefine(globals, 'Number', NumberShim);
    /* jshint +W020 */
    /* eslint-enable no-undef */
    /* globals Number: false */
  }

  var maxSafeInteger = Math.pow(2, 53) - 1;
  defineProperties(Number, {
    MAX_SAFE_INTEGER: maxSafeInteger,
    MIN_SAFE_INTEGER: -maxSafeInteger,
    EPSILON: 2.220446049250313e-16,

    parseInt: globals.parseInt,
    parseFloat: globals.parseFloat,

    isFinite: numberIsFinite,

    isInteger: function isInteger(value) {
      return numberIsFinite(value) && ES.ToInteger(value) === value;
    },

    isSafeInteger: function isSafeInteger(value) {
      return Number.isInteger(value) && _abs(value) <= Number.MAX_SAFE_INTEGER;
    },

    isNaN: numberIsNaN
  });
  // Firefox 37 has a conforming Number.parseInt, but it's not === to the global parseInt (fixed in v40)
  defineProperty(Number, 'parseInt', globals.parseInt, Number.parseInt !== globals.parseInt);

  // Work around bugs in Array#find and Array#findIndex -- early
  // implementations skipped holes in sparse arrays. (Note that the
  // implementations of find/findIndex indirectly use shimmed
  // methods of Number, so this test has to happen down here.)
  /*jshint elision: true */
  /* eslint-disable no-sparse-arrays */
  if (![, 1].find(function (item, idx) { return idx === 0; })) {
    overrideNative(Array.prototype, 'find', ArrayPrototypeShims.find);
  }
  if ([, 1].findIndex(function (item, idx) { return idx === 0; }) !== 0) {
    overrideNative(Array.prototype, 'findIndex', ArrayPrototypeShims.findIndex);
  }
  /* eslint-enable no-sparse-arrays */
  /*jshint elision: false */

  var isEnumerableOn = Function.bind.call(Function.bind, Object.prototype.propertyIsEnumerable);
  var ensureEnumerable = function ensureEnumerable(obj, prop) {
    if (supportsDescriptors && isEnumerableOn(obj, prop)) {
      Object.defineProperty(obj, prop, { enumerable: false });
    }
  };
  var sliceArgs = function sliceArgs() {
    // per https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments
    // and https://gist.github.com/WebReflection/4327762cb87a8c634a29
    var initial = Number(this);
    var len = arguments.length;
    var desiredArgCount = len - initial;
    var args = new Array(desiredArgCount < 0 ? 0 : desiredArgCount);
    for (var i = initial; i < len; ++i) {
      args[i - initial] = arguments[i];
    }
    return args;
  };
  var assignTo = function assignTo(source) {
    return function assignToSource(target, key) {
      target[key] = source[key];
      return target;
    };
  };
  var assignReducer = function (target, source) {
    var sourceKeys = keys(Object(source));
    var symbols;
    if (ES.IsCallable(Object.getOwnPropertySymbols)) {
      symbols = _filter(Object.getOwnPropertySymbols(Object(source)), isEnumerableOn(source));
    }
    return _reduce(_concat(sourceKeys, symbols || []), assignTo(source), target);
  };

  var ObjectShims = {
    // 19.1.3.1
    assign: function (target, source) {
      var to = ES.ToObject(target, 'Cannot convert undefined or null to object');
      return _reduce(ES.Call(sliceArgs, 1, arguments), assignReducer, to);
    },

    // Added in WebKit in https://bugs.webkit.org/show_bug.cgi?id=143865
    is: function is(a, b) {
      return ES.SameValue(a, b);
    }
  };
  var assignHasPendingExceptions = Object.assign && Object.preventExtensions && (function () {
    // Firefox 37 still has "pending exception" logic in its Object.assign implementation,
    // which is 72% slower than our shim, and Firefox 40's native implementation.
    var thrower = Object.preventExtensions({ 1: 2 });
    try {
      Object.assign(thrower, 'xy');
    } catch (e) {
      return thrower[1] === 'y';
    }
  }());
  if (assignHasPendingExceptions) {
    overrideNative(Object, 'assign', ObjectShims.assign);
  }
  defineProperties(Object, ObjectShims);

  if (supportsDescriptors) {
    var ES5ObjectShims = {
      // 19.1.3.9
      // shim from https://gist.github.com/WebReflection/5593554
      setPrototypeOf: (function (Object, magic) {
        var set;

        var checkArgs = function (O, proto) {
          if (!ES.TypeIsObject(O)) {
            throw new TypeError('cannot set prototype on a non-object');
          }
          if (!(proto === null || ES.TypeIsObject(proto))) {
            throw new TypeError('can only set prototype to an object or null' + proto);
          }
        };

        var setPrototypeOf = function (O, proto) {
          checkArgs(O, proto);
          _call(set, O, proto);
          return O;
        };

        try {
          // this works already in Firefox and Safari
          set = Object.getOwnPropertyDescriptor(Object.prototype, magic).set;
          _call(set, {}, null);
        } catch (e) {
          if (Object.prototype !== {}[magic]) {
            // IE < 11 cannot be shimmed
            return;
          }
          // probably Chrome or some old Mobile stock browser
          set = function (proto) {
            this[magic] = proto;
          };
          // please note that this will **not** work
          // in those browsers that do not inherit
          // __proto__ by mistake from Object.prototype
          // in these cases we should probably throw an error
          // or at least be informed about the issue
          setPrototypeOf.polyfill = setPrototypeOf(
            setPrototypeOf({}, null),
            Object.prototype
          ) instanceof Object;
          // setPrototypeOf.polyfill === true means it works as meant
          // setPrototypeOf.polyfill === false means it's not 100% reliable
          // setPrototypeOf.polyfill === undefined
          // or
          // setPrototypeOf.polyfill ==  null means it's not a polyfill
          // which means it works as expected
          // we can even delete Object.prototype.__proto__;
        }
        return setPrototypeOf;
      }(Object, '__proto__'))
    };

    defineProperties(Object, ES5ObjectShims);
  }

  // Workaround bug in Opera 12 where setPrototypeOf(x, null) doesn't work,
  // but Object.create(null) does.
  if (Object.setPrototypeOf && Object.getPrototypeOf &&
      Object.getPrototypeOf(Object.setPrototypeOf({}, null)) !== null &&
      Object.getPrototypeOf(Object.create(null)) === null) {
    (function () {
      var FAKENULL = Object.create(null);
      var gpo = Object.getPrototypeOf, spo = Object.setPrototypeOf;
      Object.getPrototypeOf = function (o) {
        var result = gpo(o);
        return result === FAKENULL ? null : result;
      };
      Object.setPrototypeOf = function (o, p) {
        var proto = p === null ? FAKENULL : p;
        return spo(o, proto);
      };
      Object.setPrototypeOf.polyfill = false;
    }());
  }

  var objectKeysAcceptsPrimitives = !throwsError(function () { Object.keys('foo'); });
  if (!objectKeysAcceptsPrimitives) {
    var originalObjectKeys = Object.keys;
    overrideNative(Object, 'keys', function keys(value) {
      return originalObjectKeys(ES.ToObject(value));
    });
    keys = Object.keys;
  }
  var objectKeysRejectsRegex = throwsError(function () { Object.keys(/a/g); });
  if (objectKeysRejectsRegex) {
    var regexRejectingObjectKeys = Object.keys;
    overrideNative(Object, 'keys', function keys(value) {
      if (Type.regex(value)) {
        var regexKeys = [];
        for (var k in value) {
          if (_hasOwnProperty(value, k)) {
            _push(regexKeys, k);
          }
        }
       return regexKeys;
      }
      return regexRejectingObjectKeys(value);
    });
    keys = Object.keys;
  }

  if (Object.getOwnPropertyNames) {
    var objectGOPNAcceptsPrimitives = !throwsError(function () { Object.getOwnPropertyNames('foo'); });
    if (!objectGOPNAcceptsPrimitives) {
      var cachedWindowNames = typeof window === 'object' ? Object.getOwnPropertyNames(window) : [];
      var originalObjectGetOwnPropertyNames = Object.getOwnPropertyNames;
      overrideNative(Object, 'getOwnPropertyNames', function getOwnPropertyNames(value) {
        var val = ES.ToObject(value);
        if (_toString(val) === '[object Window]') {
          try {
            return originalObjectGetOwnPropertyNames(val);
          } catch (e) {
            // IE bug where layout engine calls userland gOPN for cross-domain `window` objects
            return _concat([], cachedWindowNames);
          }
        }
        return originalObjectGetOwnPropertyNames(val);
      });
    }
  }
  if (Object.getOwnPropertyDescriptor) {
    var objectGOPDAcceptsPrimitives = !throwsError(function () { Object.getOwnPropertyDescriptor('foo', 'bar'); });
    if (!objectGOPDAcceptsPrimitives) {
      var originalObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
      overrideNative(Object, 'getOwnPropertyDescriptor', function getOwnPropertyDescriptor(value, property) {
        return originalObjectGetOwnPropertyDescriptor(ES.ToObject(value), property);
      });
    }
  }
  if (Object.seal) {
    var objectSealAcceptsPrimitives = !throwsError(function () { Object.seal('foo'); });
    if (!objectSealAcceptsPrimitives) {
      var originalObjectSeal = Object.seal;
      overrideNative(Object, 'seal', function seal(value) {
        if (!Type.object(value)) { return value; }
        return originalObjectSeal(value);
      });
    }
  }
  if (Object.isSealed) {
    var objectIsSealedAcceptsPrimitives = !throwsError(function () { Object.isSealed('foo'); });
    if (!objectIsSealedAcceptsPrimitives) {
      var originalObjectIsSealed = Object.isSealed;
      overrideNative(Object, 'isSealed', function isSealed(value) {
        if (!Type.object(value)) { return true; }
        return originalObjectIsSealed(value);
      });
    }
  }
  if (Object.freeze) {
    var objectFreezeAcceptsPrimitives = !throwsError(function () { Object.freeze('foo'); });
    if (!objectFreezeAcceptsPrimitives) {
      var originalObjectFreeze = Object.freeze;
      overrideNative(Object, 'freeze', function freeze(value) {
        if (!Type.object(value)) { return value; }
        return originalObjectFreeze(value);
      });
    }
  }
  if (Object.isFrozen) {
    var objectIsFrozenAcceptsPrimitives = !throwsError(function () { Object.isFrozen('foo'); });
    if (!objectIsFrozenAcceptsPrimitives) {
      var originalObjectIsFrozen = Object.isFrozen;
      overrideNative(Object, 'isFrozen', function isFrozen(value) {
        if (!Type.object(value)) { return true; }
        return originalObjectIsFrozen(value);
      });
    }
  }
  if (Object.preventExtensions) {
    var objectPreventExtensionsAcceptsPrimitives = !throwsError(function () { Object.preventExtensions('foo'); });
    if (!objectPreventExtensionsAcceptsPrimitives) {
      var originalObjectPreventExtensions = Object.preventExtensions;
      overrideNative(Object, 'preventExtensions', function preventExtensions(value) {
        if (!Type.object(value)) { return value; }
        return originalObjectPreventExtensions(value);
      });
    }
  }
  if (Object.isExtensible) {
    var objectIsExtensibleAcceptsPrimitives = !throwsError(function () { Object.isExtensible('foo'); });
    if (!objectIsExtensibleAcceptsPrimitives) {
      var originalObjectIsExtensible = Object.isExtensible;
      overrideNative(Object, 'isExtensible', function isExtensible(value) {
        if (!Type.object(value)) { return false; }
        return originalObjectIsExtensible(value);
      });
    }
  }
  if (Object.getPrototypeOf) {
    var objectGetProtoAcceptsPrimitives = !throwsError(function () { Object.getPrototypeOf('foo'); });
    if (!objectGetProtoAcceptsPrimitives) {
      var originalGetProto = Object.getPrototypeOf;
      overrideNative(Object, 'getPrototypeOf', function getPrototypeOf(value) {
        return originalGetProto(ES.ToObject(value));
      });
    }
  }

  var hasFlags = supportsDescriptors && (function () {
    var desc = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags');
    return desc && ES.IsCallable(desc.get);
  }());
  if (supportsDescriptors && !hasFlags) {
    var regExpFlagsGetter = function flags() {
      if (!ES.TypeIsObject(this)) {
        throw new TypeError('Method called on incompatible type: must be an object.');
      }
      var result = '';
      if (this.global) {
        result += 'g';
      }
      if (this.ignoreCase) {
        result += 'i';
      }
      if (this.multiline) {
        result += 'm';
      }
      if (this.unicode) {
        result += 'u';
      }
      if (this.sticky) {
        result += 'y';
      }
      return result;
    };

    Value.getter(RegExp.prototype, 'flags', regExpFlagsGetter);
  }

  var regExpSupportsFlagsWithRegex = supportsDescriptors && valueOrFalseIfThrows(function () {
    return String(new RegExp(/a/g, 'i')) === '/a/i';
  });
  var regExpNeedsToSupportSymbolMatch = hasSymbols && supportsDescriptors && (function () {
    // Edge 0.12 supports flags fully, but does not support Symbol.match
    var regex = /./;
    regex[Symbol.match] = false;
    return RegExp(regex) === regex;
  }());

  var regexToStringIsGeneric = valueOrFalseIfThrows(function () {
    return RegExp.prototype.toString.call({ source: 'abc' }) === '/abc/';
  });
  var regexToStringSupportsGenericFlags = regexToStringIsGeneric && valueOrFalseIfThrows(function () {
    return RegExp.prototype.toString.call({ source: 'a', flags: 'b' }) === '/a/b';
  });
  if (!regexToStringIsGeneric || !regexToStringSupportsGenericFlags) {
    var origRegExpToString = RegExp.prototype.toString;
    defineProperty(RegExp.prototype, 'toString', function toString() {
      var R = ES.RequireObjectCoercible(this);
      if (Type.regex(R)) {
        return _call(origRegExpToString, R);
      }
      var pattern = $String(R.source);
      var flags = $String(R.flags);
      return '/' + pattern + '/' + flags;
    }, true);
    Value.preserveToString(RegExp.prototype.toString, origRegExpToString);
  }

  if (supportsDescriptors && (!regExpSupportsFlagsWithRegex || regExpNeedsToSupportSymbolMatch)) {
    var flagsGetter = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags').get;
    var sourceDesc = Object.getOwnPropertyDescriptor(RegExp.prototype, 'source') || {};
    var legacySourceGetter = function () { return this.source; }; // prior to it being a getter, it's own + nonconfigurable
    var sourceGetter = ES.IsCallable(sourceDesc.get) ? sourceDesc.get : legacySourceGetter;

    var OrigRegExp = RegExp;
    var RegExpShim = (function () {
      return function RegExp(pattern, flags) {
        var patternIsRegExp = ES.IsRegExp(pattern);
        var calledWithNew = this instanceof RegExp;
        if (!calledWithNew && patternIsRegExp && typeof flags === 'undefined' && pattern.constructor === RegExp) {
          return pattern;
        }

        var P = pattern;
        var F = flags;
        if (Type.regex(pattern)) {
          P = ES.Call(sourceGetter, pattern);
          F = typeof flags === 'undefined' ? ES.Call(flagsGetter, pattern) : flags;
          return new RegExp(P, F);
        } else if (patternIsRegExp) {
          P = pattern.source;
          F = typeof flags === 'undefined' ? pattern.flags : flags;
        }
        return new OrigRegExp(pattern, flags);
      };
    }());
    wrapConstructor(OrigRegExp, RegExpShim, {
      $input: true // Chrome < v39 & Opera < 26 have a nonstandard "$input" property
    });
    /* globals RegExp: true */
    /* eslint-disable no-undef */
    /* jshint -W020 */
    RegExp = RegExpShim;
    Value.redefine(globals, 'RegExp', RegExpShim);
    /* jshint +W020 */
    /* eslint-enable no-undef */
    /* globals RegExp: false */
  }

  if (supportsDescriptors) {
    var regexGlobals = {
      input: '$_',
      lastMatch: '$&',
      lastParen: '$+',
      leftContext: '$`',
      rightContext: '$\''
    };
    _forEach(keys(regexGlobals), function (prop) {
      if (prop in RegExp && !(regexGlobals[prop] in RegExp)) {
        Value.getter(RegExp, regexGlobals[prop], function get() {
          return RegExp[prop];
        });
      }
    });
  }
  addDefaultSpecies(RegExp);

  var inverseEpsilon = 1 / Number.EPSILON;
  var roundTiesToEven = function roundTiesToEven(n) {
    // Even though this reduces down to `return n`, it takes advantage of built-in rounding.
    return (n + inverseEpsilon) - inverseEpsilon;
  };
  var BINARY_32_EPSILON = Math.pow(2, -23);
  var BINARY_32_MAX_VALUE = Math.pow(2, 127) * (2 - BINARY_32_EPSILON);
  var BINARY_32_MIN_VALUE = Math.pow(2, -126);
  var numberCLZ = Number.prototype.clz;
  delete Number.prototype.clz; // Safari 8 has Number#clz

  var MathShims = {
    acosh: function acosh(value) {
      var x = Number(value);
      if (Number.isNaN(x) || value < 1) { return NaN; }
      if (x === 1) { return 0; }
      if (x === Infinity) { return x; }
      return _log(x / Math.E + _sqrt(x + 1) * _sqrt(x - 1) / Math.E) + 1;
    },

    asinh: function asinh(value) {
      var x = Number(value);
      if (x === 0 || !globalIsFinite(x)) {
        return x;
      }
      return x < 0 ? -Math.asinh(-x) : _log(x + _sqrt(x * x + 1));
    },

    atanh: function atanh(value) {
      var x = Number(value);
      if (Number.isNaN(x) || x < -1 || x > 1) {
        return NaN;
      }
      if (x === -1) { return -Infinity; }
      if (x === 1) { return Infinity; }
      if (x === 0) { return x; }
      return 0.5 * _log((1 + x) / (1 - x));
    },

    cbrt: function cbrt(value) {
      var x = Number(value);
      if (x === 0) { return x; }
      var negate = x < 0, result;
      if (negate) { x = -x; }
      if (x === Infinity) {
        result = Infinity;
      } else {
        result = Math.exp(_log(x) / 3);
        // from http://en.wikipedia.org/wiki/Cube_root#Numerical_methods
        result = (x / (result * result) + (2 * result)) / 3;
      }
      return negate ? -result : result;
    },

    clz32: function clz32(value) {
      // See https://bugs.ecmascript.org/show_bug.cgi?id=2465
      var x = Number(value);
      var number = ES.ToUint32(x);
      if (number === 0) {
        return 32;
      }
      return numberCLZ ? ES.Call(numberCLZ, number) : 31 - _floor(_log(number + 0.5) * Math.LOG2E);
    },

    cosh: function cosh(value) {
      var x = Number(value);
      if (x === 0) { return 1; } // +0 or -0
      if (Number.isNaN(x)) { return NaN; }
      if (!globalIsFinite(x)) { return Infinity; }
      if (x < 0) { x = -x; }
      if (x > 21) { return Math.exp(x) / 2; }
      return (Math.exp(x) + Math.exp(-x)) / 2;
    },

    expm1: function expm1(value) {
      var x = Number(value);
      if (x === -Infinity) { return -1; }
      if (!globalIsFinite(x) || x === 0) { return x; }
      if (_abs(x) > 0.5) {
        return Math.exp(x) - 1;
      }
      // A more precise approximation using Taylor series expansion
      // from https://github.com/paulmillr/es6-shim/issues/314#issuecomment-70293986
      var t = x;
      var sum = 0;
      var n = 1;
      while (sum + t !== sum) {
        sum += t;
        n += 1;
        t *= x / n;
      }
      return sum;
    },

    hypot: function hypot(x, y) {
      var result = 0;
      var largest = 0;
      for (var i = 0; i < arguments.length; ++i) {
        var value = _abs(Number(arguments[i]));
        if (largest < value) {
          result *= (largest / value) * (largest / value);
          result += 1;
          largest = value;
        } else {
          result += (value > 0 ? (value / largest) * (value / largest) : value);
        }
      }
      return largest === Infinity ? Infinity : largest * _sqrt(result);
    },

    log2: function log2(value) {
      return _log(value) * Math.LOG2E;
    },

    log10: function log10(value) {
      return _log(value) * Math.LOG10E;
    },

    log1p: function log1p(value) {
      var x = Number(value);
      if (x < -1 || Number.isNaN(x)) { return NaN; }
      if (x === 0 || x === Infinity) { return x; }
      if (x === -1) { return -Infinity; }

      return (1 + x) - 1 === 0 ? x : x * (_log(1 + x) / ((1 + x) - 1));
    },

    sign: function sign(value) {
      var number = Number(value);
      if (number === 0) { return number; }
      if (Number.isNaN(number)) { return number; }
      return number < 0 ? -1 : 1;
    },

    sinh: function sinh(value) {
      var x = Number(value);
      if (!globalIsFinite(x) || x === 0) { return x; }

      if (_abs(x) < 1) {
        return (Math.expm1(x) - Math.expm1(-x)) / 2;
      }
      return (Math.exp(x - 1) - Math.exp(-x - 1)) * Math.E / 2;
    },

    tanh: function tanh(value) {
      var x = Number(value);
      if (Number.isNaN(x) || x === 0) { return x; }
      // can exit early at +-20 as JS loses precision for true value at this integer
      if (x >= 20) { return 1; }
      if (x <= -20) { return -1; }
      var a = Math.expm1(x);
      var b = Math.expm1(-x);
      if (a === Infinity) { return 1; }
      if (b === Infinity) { return -1; }
      return (a - b) / (Math.exp(x) + Math.exp(-x));
    },

    trunc: function trunc(value) {
      var x = Number(value);
      return x < 0 ? -_floor(-x) : _floor(x);
    },

    imul: function imul(x, y) {
      // taken from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul
      var a = ES.ToUint32(x);
      var b = ES.ToUint32(y);
      var ah = (a >>> 16) & 0xffff;
      var al = a & 0xffff;
      var bh = (b >>> 16) & 0xffff;
      var bl = b & 0xffff;
      // the shift by 0 fixes the sign on the high part
      // the final |0 converts the unsigned value into a signed value
      return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0) | 0);
    },

    fround: function fround(x) {
      var v = Number(x);
      if (v === 0 || v === Infinity || v === -Infinity || numberIsNaN(v)) {
        return v;
      }
      var sign = Math.sign(v);
      var abs = _abs(v);
      if (abs < BINARY_32_MIN_VALUE) {
        return sign * roundTiesToEven(abs / BINARY_32_MIN_VALUE / BINARY_32_EPSILON) * BINARY_32_MIN_VALUE * BINARY_32_EPSILON;
      }
      // Veltkamp's splitting (?)
      var a = (1 + BINARY_32_EPSILON / Number.EPSILON) * abs;
      var result = a - (a - abs);
      if (result > BINARY_32_MAX_VALUE || numberIsNaN(result)) {
        return sign * Infinity;
      }
      return sign * result;
    }
  };
  defineProperties(Math, MathShims);
  // IE 11 TP has an imprecise log1p: reports Math.log1p(-1e-17) as 0
  defineProperty(Math, 'log1p', MathShims.log1p, Math.log1p(-1e-17) !== -1e-17);
  // IE 11 TP has an imprecise asinh: reports Math.asinh(-1e7) as not exactly equal to -Math.asinh(1e7)
  defineProperty(Math, 'asinh', MathShims.asinh, Math.asinh(-1e7) !== -Math.asinh(1e7));
  // Chrome 40 has an imprecise Math.tanh with very small numbers
  defineProperty(Math, 'tanh', MathShims.tanh, Math.tanh(-2e-17) !== -2e-17);
  // Chrome 40 loses Math.acosh precision with high numbers
  defineProperty(Math, 'acosh', MathShims.acosh, Math.acosh(Number.MAX_VALUE) === Infinity);
  // Firefox 38 on Windows
  defineProperty(Math, 'cbrt', MathShims.cbrt, Math.abs(1 - Math.cbrt(1e-300) / 1e-100) / Number.EPSILON > 8);
  // node 0.11 has an imprecise Math.sinh with very small numbers
  defineProperty(Math, 'sinh', MathShims.sinh, Math.sinh(-2e-17) !== -2e-17);
  // FF 35 on Linux reports 22025.465794806725 for Math.expm1(10)
  var expm1OfTen = Math.expm1(10);
  defineProperty(Math, 'expm1', MathShims.expm1, expm1OfTen > 22025.465794806719 || expm1OfTen < 22025.4657948067165168);

  var origMathRound = Math.round;
  // breaks in e.g. Safari 8, Internet Explorer 11, Opera 12
  var roundHandlesBoundaryConditions = Math.round(0.5 - Number.EPSILON / 4) === 0 && Math.round(-0.5 + Number.EPSILON / 3.99) === 1;

  // When engines use Math.floor(x + 0.5) internally, Math.round can be buggy for large integers.
  // This behavior should be governed by "round to nearest, ties to even mode"
  // see https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ecmascript-language-types-number-type
  // These are the boundary cases where it breaks.
  var smallestPositiveNumberWhereRoundBreaks = inverseEpsilon + 1;
  var largestPositiveNumberWhereRoundBreaks = 2 * inverseEpsilon - 1;
  var roundDoesNotIncreaseIntegers = [smallestPositiveNumberWhereRoundBreaks, largestPositiveNumberWhereRoundBreaks].every(function (num) {
    return Math.round(num) === num;
  });
  defineProperty(Math, 'round', function round(x) {
    var floor = _floor(x);
    var ceil = floor === -1 ? -0 : floor + 1;
    return x - floor < 0.5 ? floor : ceil;
  }, !roundHandlesBoundaryConditions || !roundDoesNotIncreaseIntegers);
  Value.preserveToString(Math.round, origMathRound);

  var origImul = Math.imul;
  if (Math.imul(0xffffffff, 5) !== -5) {
    // Safari 6.1, at least, reports "0" for this value
    Math.imul = MathShims.imul;
    Value.preserveToString(Math.imul, origImul);
  }
  if (Math.imul.length !== 2) {
    // Safari 8.0.4 has a length of 1
    // fixed in https://bugs.webkit.org/show_bug.cgi?id=143658
    overrideNative(Math, 'imul', function imul(x, y) {
      return ES.Call(origImul, Math, arguments);
    });
  }

  // Promises
  // Simplest possible implementation; use a 3rd-party library if you
  // want the best possible speed and/or long stack traces.
  var PromiseShim = (function () {
    var setTimeout = globals.setTimeout;
    // some environments don't have setTimeout - no way to shim here.
    if (typeof setTimeout !== 'function' && typeof setTimeout !== 'object') { return; }

    ES.IsPromise = function (promise) {
      if (!ES.TypeIsObject(promise)) {
        return false;
      }
      if (typeof promise._promise === 'undefined') {
        return false; // uninitialized, or missing our hidden field.
      }
      return true;
    };

    // "PromiseCapability" in the spec is what most promise implementations
    // call a "deferred".
    var PromiseCapability = function (C) {
      if (!ES.IsConstructor(C)) {
        throw new TypeError('Bad promise constructor');
      }
      var capability = this;
      var resolver = function (resolve, reject) {
        if (capability.resolve !== void 0 || capability.reject !== void 0) {
          throw new TypeError('Bad Promise implementation!');
        }
        capability.resolve = resolve;
        capability.reject = reject;
      };
      // Initialize fields to inform optimizers about the object shape.
      capability.resolve = void 0;
      capability.reject = void 0;
      capability.promise = new C(resolver);
      if (!(ES.IsCallable(capability.resolve) && ES.IsCallable(capability.reject))) {
        throw new TypeError('Bad promise constructor');
      }
    };

    // find an appropriate setImmediate-alike
    var makeZeroTimeout;
    /*global window */
    if (typeof window !== 'undefined' && ES.IsCallable(window.postMessage)) {
      makeZeroTimeout = function () {
        // from http://dbaron.org/log/20100309-faster-timeouts
        var timeouts = [];
        var messageName = 'zero-timeout-message';
        var setZeroTimeout = function (fn) {
          _push(timeouts, fn);
          window.postMessage(messageName, '*');
        };
        var handleMessage = function (event) {
          if (event.source === window && event.data === messageName) {
            event.stopPropagation();
            if (timeouts.length === 0) { return; }
            var fn = _shift(timeouts);
            fn();
          }
        };
        window.addEventListener('message', handleMessage, true);
        return setZeroTimeout;
      };
    }
    var makePromiseAsap = function () {
      // An efficient task-scheduler based on a pre-existing Promise
      // implementation, which we can use even if we override the
      // global Promise below (in order to workaround bugs)
      // https://github.com/Raynos/observ-hash/issues/2#issuecomment-35857671
      var P = globals.Promise;
      var pr = P && P.resolve && P.resolve();
      return pr && function (task) {
        return pr.then(task);
      };
    };
    /*global process */
    /* jscs:disable disallowMultiLineTernary */
    var enqueue = ES.IsCallable(globals.setImmediate) ?
      globals.setImmediate :
      typeof process === 'object' && process.nextTick ? process.nextTick :
      makePromiseAsap() ||
      (ES.IsCallable(makeZeroTimeout) ? makeZeroTimeout() :
      function (task) { setTimeout(task, 0); }); // fallback
    /* jscs:enable disallowMultiLineTernary */

    // Constants for Promise implementation
    var PROMISE_IDENTITY = function (x) { return x; };
    var PROMISE_THROWER = function (e) { throw e; };
    var PROMISE_PENDING = 0;
    var PROMISE_FULFILLED = 1;
    var PROMISE_REJECTED = 2;
    // We store fulfill/reject handlers and capabilities in a single array.
    var PROMISE_FULFILL_OFFSET = 0;
    var PROMISE_REJECT_OFFSET = 1;
    var PROMISE_CAPABILITY_OFFSET = 2;
    // This is used in an optimization for chaining promises via then.
    var PROMISE_FAKE_CAPABILITY = {};

    var enqueuePromiseReactionJob = function (handler, capability, argument) {
      enqueue(function () {
        promiseReactionJob(handler, capability, argument);
      });
    };

    var promiseReactionJob = function (handler, promiseCapability, argument) {
      var handlerResult, f;
      if (promiseCapability === PROMISE_FAKE_CAPABILITY) {
        // Fast case, when we don't actually need to chain through to a
        // (real) promiseCapability.
        return handler(argument);
      }
      try {
        handlerResult = handler(argument);
        f = promiseCapability.resolve;
      } catch (e) {
        handlerResult = e;
        f = promiseCapability.reject;
      }
      f(handlerResult);
    };

    var fulfillPromise = function (promise, value) {
      var _promise = promise._promise;
      var length = _promise.reactionLength;
      if (length > 0) {
        enqueuePromiseReactionJob(
          _promise.fulfillReactionHandler0,
          _promise.reactionCapability0,
          value
        );
        _promise.fulfillReactionHandler0 = void 0;
        _promise.rejectReactions0 = void 0;
        _promise.reactionCapability0 = void 0;
        if (length > 1) {
          for (var i = 1, idx = 0; i < length; i++, idx += 3) {
            enqueuePromiseReactionJob(
              _promise[idx + PROMISE_FULFILL_OFFSET],
              _promise[idx + PROMISE_CAPABILITY_OFFSET],
              value
            );
            promise[idx + PROMISE_FULFILL_OFFSET] = void 0;
            promise[idx + PROMISE_REJECT_OFFSET] = void 0;
            promise[idx + PROMISE_CAPABILITY_OFFSET] = void 0;
          }
        }
      }
      _promise.result = value;
      _promise.state = PROMISE_FULFILLED;
      _promise.reactionLength = 0;
    };

    var rejectPromise = function (promise, reason) {
      var _promise = promise._promise;
      var length = _promise.reactionLength;
      if (length > 0) {
        enqueuePromiseReactionJob(
          _promise.rejectReactionHandler0,
          _promise.reactionCapability0,
          reason
        );
        _promise.fulfillReactionHandler0 = void 0;
        _promise.rejectReactions0 = void 0;
        _promise.reactionCapability0 = void 0;
        if (length > 1) {
          for (var i = 1, idx = 0; i < length; i++, idx += 3) {
            enqueuePromiseReactionJob(
              _promise[idx + PROMISE_REJECT_OFFSET],
              _promise[idx + PROMISE_CAPABILITY_OFFSET],
              reason
            );
            promise[idx + PROMISE_FULFILL_OFFSET] = void 0;
            promise[idx + PROMISE_REJECT_OFFSET] = void 0;
            promise[idx + PROMISE_CAPABILITY_OFFSET] = void 0;
          }
        }
      }
      _promise.result = reason;
      _promise.state = PROMISE_REJECTED;
      _promise.reactionLength = 0;
    };

    var createResolvingFunctions = function (promise) {
      var alreadyResolved = false;
      var resolve = function (resolution) {
        var then;
        if (alreadyResolved) { return; }
        alreadyResolved = true;
        if (resolution === promise) {
          return rejectPromise(promise, new TypeError('Self resolution'));
        }
        if (!ES.TypeIsObject(resolution)) {
          return fulfillPromise(promise, resolution);
        }
        try {
          then = resolution.then;
        } catch (e) {
          return rejectPromise(promise, e);
        }
        if (!ES.IsCallable(then)) {
          return fulfillPromise(promise, resolution);
        }
        enqueue(function () {
          promiseResolveThenableJob(promise, resolution, then);
        });
      };
      var reject = function (reason) {
        if (alreadyResolved) { return; }
        alreadyResolved = true;
        return rejectPromise(promise, reason);
      };
      return { resolve: resolve, reject: reject };
    };

    var optimizedThen = function (then, thenable, resolve, reject) {
      // Optimization: since we discard the result, we can pass our
      // own then implementation a special hint to let it know it
      // doesn't have to create it.  (The PROMISE_FAKE_CAPABILITY
      // object is local to this implementation and unforgeable outside.)
      if (then === Promise$prototype$then) {
        _call(then, thenable, resolve, reject, PROMISE_FAKE_CAPABILITY);
      } else {
        _call(then, thenable, resolve, reject);
      }
    };
    var promiseResolveThenableJob = function (promise, thenable, then) {
      var resolvingFunctions = createResolvingFunctions(promise);
      var resolve = resolvingFunctions.resolve;
      var reject = resolvingFunctions.reject;
      try {
        optimizedThen(then, thenable, resolve, reject);
      } catch (e) {
        reject(e);
      }
    };

    var Promise$prototype, Promise$prototype$then;
    var Promise = (function () {
      var PromiseShim = function Promise(resolver) {
        if (!(this instanceof PromiseShim)) {
          throw new TypeError('Constructor Promise requires "new"');
        }
        if (this && this._promise) {
          throw new TypeError('Bad construction');
        }
        // see https://bugs.ecmascript.org/show_bug.cgi?id=2482
        if (!ES.IsCallable(resolver)) {
          throw new TypeError('not a valid resolver');
        }
        var promise = emulateES6construct(this, PromiseShim, Promise$prototype, {
          _promise: {
            result: void 0,
            state: PROMISE_PENDING,
            // The first member of the "reactions" array is inlined here,
            // since most promises only have one reaction.
            // We've also exploded the 'reaction' object to inline the
            // "handler" and "capability" fields, since both fulfill and
            // reject reactions share the same capability.
            reactionLength: 0,
            fulfillReactionHandler0: void 0,
            rejectReactionHandler0: void 0,
            reactionCapability0: void 0
          }
        });
        var resolvingFunctions = createResolvingFunctions(promise);
        var reject = resolvingFunctions.reject;
        try {
          resolver(resolvingFunctions.resolve, reject);
        } catch (e) {
          reject(e);
        }
        return promise;
      };
      return PromiseShim;
    }());
    Promise$prototype = Promise.prototype;

    var _promiseAllResolver = function (index, values, capability, remaining) {
      var alreadyCalled = false;
      return function (x) {
        if (alreadyCalled) { return; }
        alreadyCalled = true;
        values[index] = x;
        if ((--remaining.count) === 0) {
          var resolve = capability.resolve;
          resolve(values); // call w/ this===undefined
        }
      };
    };

    var performPromiseAll = function (iteratorRecord, C, resultCapability) {
      var it = iteratorRecord.iterator;
      var values = [], remaining = { count: 1 }, next, nextValue;
      var index = 0;
      while (true) {
        try {
          next = ES.IteratorStep(it);
          if (next === false) {
            iteratorRecord.done = true;
            break;
          }
          nextValue = next.value;
        } catch (e) {
          iteratorRecord.done = true;
          throw e;
        }
        values[index] = void 0;
        var nextPromise = C.resolve(nextValue);
        var resolveElement = _promiseAllResolver(
          index, values, resultCapability, remaining
        );
        remaining.count += 1;
        optimizedThen(nextPromise.then, nextPromise, resolveElement, resultCapability.reject);
        index += 1;
      }
      if ((--remaining.count) === 0) {
        var resolve = resultCapability.resolve;
        resolve(values); // call w/ this===undefined
      }
      return resultCapability.promise;
    };

    var performPromiseRace = function (iteratorRecord, C, resultCapability) {
      var it = iteratorRecord.iterator, next, nextValue, nextPromise;
      while (true) {
        try {
          next = ES.IteratorStep(it);
          if (next === false) {
            // NOTE: If iterable has no items, resulting promise will never
            // resolve; see:
            // https://github.com/domenic/promises-unwrapping/issues/75
            // https://bugs.ecmascript.org/show_bug.cgi?id=2515
            iteratorRecord.done = true;
            break;
          }
          nextValue = next.value;
        } catch (e) {
          iteratorRecord.done = true;
          throw e;
        }
        nextPromise = C.resolve(nextValue);
        optimizedThen(nextPromise.then, nextPromise, resultCapability.resolve, resultCapability.reject);
      }
      return resultCapability.promise;
    };

    defineProperties(Promise, {
      all: function all(iterable) {
        var C = this;
        if (!ES.TypeIsObject(C)) {
          throw new TypeError('Promise is not object');
        }
        var capability = new PromiseCapability(C);
        var iterator, iteratorRecord;
        try {
          iterator = ES.GetIterator(iterable);
          iteratorRecord = { iterator: iterator, done: false };
          return performPromiseAll(iteratorRecord, C, capability);
        } catch (e) {
          var exception = e;
          if (iteratorRecord && !iteratorRecord.done) {
            try {
              ES.IteratorClose(iterator, true);
            } catch (ee) {
              exception = ee;
            }
          }
          var reject = capability.reject;
          reject(exception);
          return capability.promise;
        }
      },

      race: function race(iterable) {
        var C = this;
        if (!ES.TypeIsObject(C)) {
          throw new TypeError('Promise is not object');
        }
        var capability = new PromiseCapability(C);
        var iterator, iteratorRecord;
        try {
          iterator = ES.GetIterator(iterable);
          iteratorRecord = { iterator: iterator, done: false };
          return performPromiseRace(iteratorRecord, C, capability);
        } catch (e) {
          var exception = e;
          if (iteratorRecord && !iteratorRecord.done) {
            try {
              ES.IteratorClose(iterator, true);
            } catch (ee) {
              exception = ee;
            }
          }
          var reject = capability.reject;
          reject(exception);
          return capability.promise;
        }
      },

      reject: function reject(reason) {
        var C = this;
        if (!ES.TypeIsObject(C)) {
          throw new TypeError('Bad promise constructor');
        }
        var capability = new PromiseCapability(C);
        var rejectFunc = capability.reject;
        rejectFunc(reason); // call with this===undefined
        return capability.promise;
      },

      resolve: function resolve(v) {
        // See https://esdiscuss.org/topic/fixing-promise-resolve for spec
        var C = this;
        if (!ES.TypeIsObject(C)) {
          throw new TypeError('Bad promise constructor');
        }
        if (ES.IsPromise(v)) {
          var constructor = v.constructor;
          if (constructor === C) { return v; }
        }
        var capability = new PromiseCapability(C);
        var resolveFunc = capability.resolve;
        resolveFunc(v); // call with this===undefined
        return capability.promise;
      }
    });

    defineProperties(Promise$prototype, {
      'catch': function (onRejected) {
        return this.then(null, onRejected);
      },

      then: function then(onFulfilled, onRejected) {
        var promise = this;
        if (!ES.IsPromise(promise)) { throw new TypeError('not a promise'); }
        var C = ES.SpeciesConstructor(promise, Promise);
        var resultCapability;
        var returnValueIsIgnored = arguments.length > 2 && arguments[2] === PROMISE_FAKE_CAPABILITY;
        if (returnValueIsIgnored && C === Promise) {
          resultCapability = PROMISE_FAKE_CAPABILITY;
        } else {
          resultCapability = new PromiseCapability(C);
        }
        // PerformPromiseThen(promise, onFulfilled, onRejected, resultCapability)
        // Note that we've split the 'reaction' object into its two
        // components, "capabilities" and "handler"
        // "capabilities" is always equal to `resultCapability`
        var fulfillReactionHandler = ES.IsCallable(onFulfilled) ? onFulfilled : PROMISE_IDENTITY;
        var rejectReactionHandler = ES.IsCallable(onRejected) ? onRejected : PROMISE_THROWER;
        var _promise = promise._promise;
        var value;
        if (_promise.state === PROMISE_PENDING) {
          if (_promise.reactionLength === 0) {
            _promise.fulfillReactionHandler0 = fulfillReactionHandler;
            _promise.rejectReactionHandler0 = rejectReactionHandler;
            _promise.reactionCapability0 = resultCapability;
          } else {
            var idx = 3 * (_promise.reactionLength - 1);
            _promise[idx + PROMISE_FULFILL_OFFSET] = fulfillReactionHandler;
            _promise[idx + PROMISE_REJECT_OFFSET] = rejectReactionHandler;
            _promise[idx + PROMISE_CAPABILITY_OFFSET] = resultCapability;
          }
          _promise.reactionLength += 1;
        } else if (_promise.state === PROMISE_FULFILLED) {
          value = _promise.result;
          enqueuePromiseReactionJob(
            fulfillReactionHandler, resultCapability, value
          );
        } else if (_promise.state === PROMISE_REJECTED) {
          value = _promise.result;
          enqueuePromiseReactionJob(
            rejectReactionHandler, resultCapability, value
          );
        } else {
          throw new TypeError('unexpected Promise state');
        }
        return resultCapability.promise;
      }
    });
    // This helps the optimizer by ensuring that methods which take
    // capabilities aren't polymorphic.
    PROMISE_FAKE_CAPABILITY = new PromiseCapability(Promise);
    Promise$prototype$then = Promise$prototype.then;

    return Promise;
  }());

  // Chrome's native Promise has extra methods that it shouldn't have. Let's remove them.
  if (globals.Promise) {
    delete globals.Promise.accept;
    delete globals.Promise.defer;
    delete globals.Promise.prototype.chain;
  }

  if (typeof PromiseShim === 'function') {
    // export the Promise constructor.
    defineProperties(globals, { Promise: PromiseShim });
    // In Chrome 33 (and thereabouts) Promise is defined, but the
    // implementation is buggy in a number of ways.  Let's check subclassing
    // support to see if we have a buggy implementation.
    var promiseSupportsSubclassing = supportsSubclassing(globals.Promise, function (S) {
      return S.resolve(42).then(function () {}) instanceof S;
    });
    var promiseIgnoresNonFunctionThenCallbacks = !throwsError(function () { globals.Promise.reject(42).then(null, 5).then(null, noop); });
    var promiseRequiresObjectContext = throwsError(function () { globals.Promise.call(3, noop); });
    // Promise.resolve() was errata'ed late in the ES6 process.
    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1170742
    //      https://code.google.com/p/v8/issues/detail?id=4161
    // It serves as a proxy for a number of other bugs in early Promise
    // implementations.
    var promiseResolveBroken = (function (Promise) {
      var p = Promise.resolve(5);
      p.constructor = {};
      var p2 = Promise.resolve(p);
      try {
        p2.then(null, noop).then(null, noop); // avoid "uncaught rejection" warnings in console
      } catch (e) {
        return true; // v8 native Promises break here https://code.google.com/p/chromium/issues/detail?id=575314
      }
      return p === p2; // This *should* be false!
    }(globals.Promise));

    // Chrome 46 (probably older too) does not retrieve a thenable's .then synchronously
    var getsThenSynchronously = supportsDescriptors && (function () {
      var count = 0;
      var thenable = Object.defineProperty({}, 'then', { get: function () { count += 1; } });
      Promise.resolve(thenable);
      return count === 1;
    }());

    var BadResolverPromise = function BadResolverPromise(executor) {
      var p = new Promise(executor);
      executor(3, function () {});
      this.then = p.then;
      this.constructor = BadResolverPromise;
    };
    BadResolverPromise.prototype = Promise.prototype;
    BadResolverPromise.all = Promise.all;
    // Chrome Canary 49 (probably older too) has some implementation bugs
    var hasBadResolverPromise = valueOrFalseIfThrows(function () {
      return !!BadResolverPromise.all([1, 2]);
    });

    if (!promiseSupportsSubclassing || !promiseIgnoresNonFunctionThenCallbacks ||
        !promiseRequiresObjectContext || promiseResolveBroken ||
        !getsThenSynchronously || hasBadResolverPromise) {
      /* globals Promise: true */
      /* eslint-disable no-undef */
      /* jshint -W020 */
      Promise = PromiseShim;
      /* jshint +W020 */
      /* eslint-enable no-undef */
      /* globals Promise: false */
      overrideNative(globals, 'Promise', PromiseShim);
    }
    if (Promise.all.length !== 1) {
      var origAll = Promise.all;
      overrideNative(Promise, 'all', function all(iterable) {
        return ES.Call(origAll, this, arguments);
      });
    }
    if (Promise.race.length !== 1) {
      var origRace = Promise.race;
      overrideNative(Promise, 'race', function race(iterable) {
        return ES.Call(origRace, this, arguments);
      });
    }
    if (Promise.resolve.length !== 1) {
      var origResolve = Promise.resolve;
      overrideNative(Promise, 'resolve', function resolve(x) {
        return ES.Call(origResolve, this, arguments);
      });
    }
    if (Promise.reject.length !== 1) {
      var origReject = Promise.reject;
      overrideNative(Promise, 'reject', function reject(r) {
        return ES.Call(origReject, this, arguments);
      });
    }
    ensureEnumerable(Promise, 'all');
    ensureEnumerable(Promise, 'race');
    ensureEnumerable(Promise, 'resolve');
    ensureEnumerable(Promise, 'reject');
    addDefaultSpecies(Promise);
  }

  // Map and Set require a true ES5 environment
  // Their fast path also requires that the environment preserve
  // property insertion order, which is not guaranteed by the spec.
  var testOrder = function (a) {
    var b = keys(_reduce(a, function (o, k) {
      o[k] = true;
      return o;
    }, {}));
    return a.join(':') === b.join(':');
  };
  var preservesInsertionOrder = testOrder(['z', 'a', 'bb']);
  // some engines (eg, Chrome) only preserve insertion order for string keys
  var preservesNumericInsertionOrder = testOrder(['z', 1, 'a', '3', 2]);

  if (supportsDescriptors) {

    var fastkey = function fastkey(key) {
      if (!preservesInsertionOrder) {
        return null;
      }
      if (typeof key === 'undefined' || key === null) {
        return '^' + ES.ToString(key);
      } else if (typeof key === 'string') {
        return '$' + key;
      } else if (typeof key === 'number') {
        // note that -0 will get coerced to "0" when used as a property key
        if (!preservesNumericInsertionOrder) {
          return 'n' + key;
        }
        return key;
      } else if (typeof key === 'boolean') {
        return 'b' + key;
      }
      return null;
    };

    var emptyObject = function emptyObject() {
      // accomodate some older not-quite-ES5 browsers
      return Object.create ? Object.create(null) : {};
    };

    var addIterableToMap = function addIterableToMap(MapConstructor, map, iterable) {
      if (isArray(iterable) || Type.string(iterable)) {
        _forEach(iterable, function (entry) {
          if (!ES.TypeIsObject(entry)) {
            throw new TypeError('Iterator value ' + entry + ' is not an entry object');
          }
          map.set(entry[0], entry[1]);
        });
      } else if (iterable instanceof MapConstructor) {
        _call(MapConstructor.prototype.forEach, iterable, function (value, key) {
          map.set(key, value);
        });
      } else {
        var iter, adder;
        if (iterable !== null && typeof iterable !== 'undefined') {
          adder = map.set;
          if (!ES.IsCallable(adder)) { throw new TypeError('bad map'); }
          iter = ES.GetIterator(iterable);
        }
        if (typeof iter !== 'undefined') {
          while (true) {
            var next = ES.IteratorStep(iter);
            if (next === false) { break; }
            var nextItem = next.value;
            try {
              if (!ES.TypeIsObject(nextItem)) {
                throw new TypeError('Iterator value ' + nextItem + ' is not an entry object');
              }
              _call(adder, map, nextItem[0], nextItem[1]);
            } catch (e) {
              ES.IteratorClose(iter, true);
              throw e;
            }
          }
        }
      }
    };
    var addIterableToSet = function addIterableToSet(SetConstructor, set, iterable) {
      if (isArray(iterable) || Type.string(iterable)) {
        _forEach(iterable, function (value) {
          set.add(value);
        });
      } else if (iterable instanceof SetConstructor) {
        _call(SetConstructor.prototype.forEach, iterable, function (value) {
          set.add(value);
        });
      } else {
        var iter, adder;
        if (iterable !== null && typeof iterable !== 'undefined') {
          adder = set.add;
          if (!ES.IsCallable(adder)) { throw new TypeError('bad set'); }
          iter = ES.GetIterator(iterable);
        }
        if (typeof iter !== 'undefined') {
          while (true) {
            var next = ES.IteratorStep(iter);
            if (next === false) { break; }
            var nextValue = next.value;
            try {
              _call(adder, set, nextValue);
            } catch (e) {
              ES.IteratorClose(iter, true);
              throw e;
            }
          }
        }
      }
    };

    var collectionShims = {
      Map: (function () {

        var empty = {};

        var MapEntry = function MapEntry(key, value) {
          this.key = key;
          this.value = value;
          this.next = null;
          this.prev = null;
        };

        MapEntry.prototype.isRemoved = function isRemoved() {
          return this.key === empty;
        };

        var isMap = function isMap(map) {
          return !!map._es6map;
        };

        var requireMapSlot = function requireMapSlot(map, method) {
          if (!ES.TypeIsObject(map) || !isMap(map)) {
            throw new TypeError('Method Map.prototype.' + method + ' called on incompatible receiver ' + ES.ToString(map));
          }
        };

        var MapIterator = function MapIterator(map, kind) {
          requireMapSlot(map, '[[MapIterator]]');
          this.head = map._head;
          this.i = this.head;
          this.kind = kind;
        };

        MapIterator.prototype = {
          next: function next() {
            var i = this.i, kind = this.kind, head = this.head, result;
            if (typeof this.i === 'undefined') {
              return { value: void 0, done: true };
            }
            while (i.isRemoved() && i !== head) {
              // back up off of removed entries
              i = i.prev;
            }
            // advance to next unreturned element.
            while (i.next !== head) {
              i = i.next;
              if (!i.isRemoved()) {
                if (kind === 'key') {
                  result = i.key;
                } else if (kind === 'value') {
                  result = i.value;
                } else {
                  result = [i.key, i.value];
                }
                this.i = i;
                return { value: result, done: false };
              }
            }
            // once the iterator is done, it is done forever.
            this.i = void 0;
            return { value: void 0, done: true };
          }
        };
        addIterator(MapIterator.prototype);

        var Map$prototype;
        var MapShim = function Map() {
          if (!(this instanceof Map)) {
            throw new TypeError('Constructor Map requires "new"');
          }
          if (this && this._es6map) {
            throw new TypeError('Bad construction');
          }
          var map = emulateES6construct(this, Map, Map$prototype, {
            _es6map: true,
            _head: null,
            _storage: emptyObject(),
            _size: 0
          });

          var head = new MapEntry(null, null);
          // circular doubly-linked list.
          head.next = head.prev = head;
          map._head = head;

          // Optionally initialize map from iterable
          if (arguments.length > 0) {
            addIterableToMap(Map, map, arguments[0]);
          }
          return map;
        };
        Map$prototype = MapShim.prototype;

        Value.getter(Map$prototype, 'size', function () {
          if (typeof this._size === 'undefined') {
            throw new TypeError('size method called on incompatible Map');
          }
          return this._size;
        });

        defineProperties(Map$prototype, {
          get: function get(key) {
            requireMapSlot(this, 'get');
            var fkey = fastkey(key);
            if (fkey !== null) {
              // fast O(1) path
              var entry = this._storage[fkey];
              if (entry) {
                return entry.value;
              } else {
                return;
              }
            }
            var head = this._head, i = head;
            while ((i = i.next) !== head) {
              if (ES.SameValueZero(i.key, key)) {
                return i.value;
              }
            }
          },

          has: function has(key) {
            requireMapSlot(this, 'has');
            var fkey = fastkey(key);
            if (fkey !== null) {
              // fast O(1) path
              return typeof this._storage[fkey] !== 'undefined';
            }
            var head = this._head, i = head;
            while ((i = i.next) !== head) {
              if (ES.SameValueZero(i.key, key)) {
                return true;
              }
            }
            return false;
          },

          set: function set(key, value) {
            requireMapSlot(this, 'set');
            var head = this._head, i = head, entry;
            var fkey = fastkey(key);
            if (fkey !== null) {
              // fast O(1) path
              if (typeof this._storage[fkey] !== 'undefined') {
                this._storage[fkey].value = value;
                return this;
              } else {
                entry = this._storage[fkey] = new MapEntry(key, value);
                i = head.prev;
                // fall through
              }
            }
            while ((i = i.next) !== head) {
              if (ES.SameValueZero(i.key, key)) {
                i.value = value;
                return this;
              }
            }
            entry = entry || new MapEntry(key, value);
            if (ES.SameValue(-0, key)) {
              entry.key = +0; // coerce -0 to +0 in entry
            }
            entry.next = this._head;
            entry.prev = this._head.prev;
            entry.prev.next = entry;
            entry.next.prev = entry;
            this._size += 1;
            return this;
          },

          'delete': function (key) {
            requireMapSlot(this, 'delete');
            var head = this._head, i = head;
            var fkey = fastkey(key);
            if (fkey !== null) {
              // fast O(1) path
              if (typeof this._storage[fkey] === 'undefined') {
                return false;
              }
              i = this._storage[fkey].prev;
              delete this._storage[fkey];
              // fall through
            }
            while ((i = i.next) !== head) {
              if (ES.SameValueZero(i.key, key)) {
                i.key = i.value = empty;
                i.prev.next = i.next;
                i.next.prev = i.prev;
                this._size -= 1;
                return true;
              }
            }
            return false;
          },

          clear: function clear() {
            requireMapSlot(this, 'clear');
            this._size = 0;
            this._storage = emptyObject();
            var head = this._head, i = head, p = i.next;
            while ((i = p) !== head) {
              i.key = i.value = empty;
              p = i.next;
              i.next = i.prev = head;
            }
            head.next = head.prev = head;
          },

          keys: function keys() {
            requireMapSlot(this, 'keys');
            return new MapIterator(this, 'key');
          },

          values: function values() {
            requireMapSlot(this, 'values');
            return new MapIterator(this, 'value');
          },

          entries: function entries() {
            requireMapSlot(this, 'entries');
            return new MapIterator(this, 'key+value');
          },

          forEach: function forEach(callback) {
            requireMapSlot(this, 'forEach');
            var context = arguments.length > 1 ? arguments[1] : null;
            var it = this.entries();
            for (var entry = it.next(); !entry.done; entry = it.next()) {
              if (context) {
                _call(callback, context, entry.value[1], entry.value[0], this);
              } else {
                callback(entry.value[1], entry.value[0], this);
              }
            }
          }
        });
        addIterator(Map$prototype, Map$prototype.entries);

        return MapShim;
      }()),

      Set: (function () {
        var isSet = function isSet(set) {
          return set._es6set && typeof set._storage !== 'undefined';
        };
        var requireSetSlot = function requireSetSlot(set, method) {
          if (!ES.TypeIsObject(set) || !isSet(set)) {
            // https://github.com/paulmillr/es6-shim/issues/176
            throw new TypeError('Set.prototype.' + method + ' called on incompatible receiver ' + ES.ToString(set));
          }
        };

        // Creating a Map is expensive.  To speed up the common case of
        // Sets containing only string or numeric keys, we use an object
        // as backing storage and lazily create a full Map only when
        // required.
        var Set$prototype;
        var SetShim = function Set() {
          if (!(this instanceof Set)) {
            throw new TypeError('Constructor Set requires "new"');
          }
          if (this && this._es6set) {
            throw new TypeError('Bad construction');
          }
          var set = emulateES6construct(this, Set, Set$prototype, {
            _es6set: true,
            '[[SetData]]': null,
            _storage: emptyObject()
          });
          if (!set._es6set) {
            throw new TypeError('bad set');
          }

          // Optionally initialize Set from iterable
          if (arguments.length > 0) {
            addIterableToSet(Set, set, arguments[0]);
          }
          return set;
        };
        Set$prototype = SetShim.prototype;

        var decodeKey = function (key) {
          var k = key;
          if (k === '^null') {
            return null;
          } else if (k === '^undefined') {
            return void 0;
          } else {
            var first = k.charAt(0);
            if (first === '$') {
              return _strSlice(k, 1);
            } else if (first === 'n') {
              return +_strSlice(k, 1);
            } else if (first === 'b') {
              return k === 'btrue';
            }
          }
          return +k;
        };
        // Switch from the object backing storage to a full Map.
        var ensureMap = function ensureMap(set) {
          if (!set['[[SetData]]']) {
            var m = set['[[SetData]]'] = new collectionShims.Map();
            _forEach(keys(set._storage), function (key) {
              var k = decodeKey(key);
              m.set(k, k);
            });
            set['[[SetData]]'] = m;
          }
          set._storage = null; // free old backing storage
        };

        Value.getter(SetShim.prototype, 'size', function () {
          requireSetSlot(this, 'size');
          if (this._storage) {
            return keys(this._storage).length;
          }
          ensureMap(this);
          return this['[[SetData]]'].size;
        });

        defineProperties(SetShim.prototype, {
          has: function has(key) {
            requireSetSlot(this, 'has');
            var fkey;
            if (this._storage && (fkey = fastkey(key)) !== null) {
              return !!this._storage[fkey];
            }
            ensureMap(this);
            return this['[[SetData]]'].has(key);
          },

          add: function add(key) {
            requireSetSlot(this, 'add');
            var fkey;
            if (this._storage && (fkey = fastkey(key)) !== null) {
              this._storage[fkey] = true;
              return this;
            }
            ensureMap(this);
            this['[[SetData]]'].set(key, key);
            return this;
          },

          'delete': function (key) {
            requireSetSlot(this, 'delete');
            var fkey;
            if (this._storage && (fkey = fastkey(key)) !== null) {
              var hasFKey = _hasOwnProperty(this._storage, fkey);
              return (delete this._storage[fkey]) && hasFKey;
            }
            ensureMap(this);
            return this['[[SetData]]']['delete'](key);
          },

          clear: function clear() {
            requireSetSlot(this, 'clear');
            if (this._storage) {
              this._storage = emptyObject();
            }
            if (this['[[SetData]]']) {
              this['[[SetData]]'].clear();
            }
          },

          values: function values() {
            requireSetSlot(this, 'values');
            ensureMap(this);
            return this['[[SetData]]'].values();
          },

          entries: function entries() {
            requireSetSlot(this, 'entries');
            ensureMap(this);
            return this['[[SetData]]'].entries();
          },

          forEach: function forEach(callback) {
            requireSetSlot(this, 'forEach');
            var context = arguments.length > 1 ? arguments[1] : null;
            var entireSet = this;
            ensureMap(entireSet);
            this['[[SetData]]'].forEach(function (value, key) {
              if (context) {
                _call(callback, context, key, key, entireSet);
              } else {
                callback(key, key, entireSet);
              }
            });
          }
        });
        defineProperty(SetShim.prototype, 'keys', SetShim.prototype.values, true);
        addIterator(SetShim.prototype, SetShim.prototype.values);

        return SetShim;
      }())
    };

    if (globals.Map || globals.Set) {
      // Safari 8, for example, doesn't accept an iterable.
      var mapAcceptsArguments = valueOrFalseIfThrows(function () { return new Map([[1, 2]]).get(1) === 2; });
      if (!mapAcceptsArguments) {
        var OrigMapNoArgs = globals.Map;
        globals.Map = function Map() {
          if (!(this instanceof Map)) {
            throw new TypeError('Constructor Map requires "new"');
          }
          var m = new OrigMapNoArgs();
          if (arguments.length > 0) {
            addIterableToMap(Map, m, arguments[0]);
          }
          delete m.constructor;
          Object.setPrototypeOf(m, globals.Map.prototype);
          return m;
        };
        globals.Map.prototype = create(OrigMapNoArgs.prototype);
        defineProperty(globals.Map.prototype, 'constructor', globals.Map, true);
        Value.preserveToString(globals.Map, OrigMapNoArgs);
      }
      var testMap = new Map();
      var mapUsesSameValueZero = (function () {
        // Chrome 38-42, node 0.11/0.12, iojs 1/2 also have a bug when the Map has a size > 4
        var m = new Map([[1, 0], [2, 0], [3, 0], [4, 0]]);
        m.set(-0, m);
        return m.get(0) === m && m.get(-0) === m && m.has(0) && m.has(-0);
      }());
      var mapSupportsChaining = testMap.set(1, 2) === testMap;
      if (!mapUsesSameValueZero || !mapSupportsChaining) {
        var origMapSet = Map.prototype.set;
        overrideNative(Map.prototype, 'set', function set(k, v) {
          _call(origMapSet, this, k === 0 ? 0 : k, v);
          return this;
        });
      }
      if (!mapUsesSameValueZero) {
        var origMapGet = Map.prototype.get;
        var origMapHas = Map.prototype.has;
        defineProperties(Map.prototype, {
          get: function get(k) {
            return _call(origMapGet, this, k === 0 ? 0 : k);
          },
          has: function has(k) {
            return _call(origMapHas, this, k === 0 ? 0 : k);
          }
        }, true);
        Value.preserveToString(Map.prototype.get, origMapGet);
        Value.preserveToString(Map.prototype.has, origMapHas);
      }
      var testSet = new Set();
      var setUsesSameValueZero = (function (s) {
        s['delete'](0);
        s.add(-0);
        return !s.has(0);
      }(testSet));
      var setSupportsChaining = testSet.add(1) === testSet;
      if (!setUsesSameValueZero || !setSupportsChaining) {
        var origSetAdd = Set.prototype.add;
        Set.prototype.add = function add(v) {
          _call(origSetAdd, this, v === 0 ? 0 : v);
          return this;
        };
        Value.preserveToString(Set.prototype.add, origSetAdd);
      }
      if (!setUsesSameValueZero) {
        var origSetHas = Set.prototype.has;
        Set.prototype.has = function has(v) {
          return _call(origSetHas, this, v === 0 ? 0 : v);
        };
        Value.preserveToString(Set.prototype.has, origSetHas);
        var origSetDel = Set.prototype['delete'];
        Set.prototype['delete'] = function SetDelete(v) {
          return _call(origSetDel, this, v === 0 ? 0 : v);
        };
        Value.preserveToString(Set.prototype['delete'], origSetDel);
      }
      var mapSupportsSubclassing = supportsSubclassing(globals.Map, function (M) {
        var m = new M([]);
        // Firefox 32 is ok with the instantiating the subclass but will
        // throw when the map is used.
        m.set(42, 42);
        return m instanceof M;
      });
      var mapFailsToSupportSubclassing = Object.setPrototypeOf && !mapSupportsSubclassing; // without Object.setPrototypeOf, subclassing is not possible
      var mapRequiresNew = (function () {
        try {
          return !(globals.Map() instanceof globals.Map);
        } catch (e) {
          return e instanceof TypeError;
        }
      }());
      if (globals.Map.length !== 0 || mapFailsToSupportSubclassing || !mapRequiresNew) {
        var OrigMap = globals.Map;
        globals.Map = function Map() {
          if (!(this instanceof Map)) {
            throw new TypeError('Constructor Map requires "new"');
          }
          var m = new OrigMap();
          if (arguments.length > 0) {
            addIterableToMap(Map, m, arguments[0]);
          }
          delete m.constructor;
          Object.setPrototypeOf(m, Map.prototype);
          return m;
        };
        globals.Map.prototype = OrigMap.prototype;
        defineProperty(globals.Map.prototype, 'constructor', globals.Map, true);
        Value.preserveToString(globals.Map, OrigMap);
      }
      var setSupportsSubclassing = supportsSubclassing(globals.Set, function (S) {
        var s = new S([]);
        s.add(42, 42);
        return s instanceof S;
      });
      var setFailsToSupportSubclassing = Object.setPrototypeOf && !setSupportsSubclassing; // without Object.setPrototypeOf, subclassing is not possible
      var setRequiresNew = (function () {
        try {
          return !(globals.Set() instanceof globals.Set);
        } catch (e) {
          return e instanceof TypeError;
        }
      }());
      if (globals.Set.length !== 0 || setFailsToSupportSubclassing || !setRequiresNew) {
        var OrigSet = globals.Set;
        globals.Set = function Set() {
          if (!(this instanceof Set)) {
            throw new TypeError('Constructor Set requires "new"');
          }
          var s = new OrigSet();
          if (arguments.length > 0) {
            addIterableToSet(Set, s, arguments[0]);
          }
          delete s.constructor;
          Object.setPrototypeOf(s, Set.prototype);
          return s;
        };
        globals.Set.prototype = OrigSet.prototype;
        defineProperty(globals.Set.prototype, 'constructor', globals.Set, true);
        Value.preserveToString(globals.Set, OrigSet);
      }
      var mapIterationThrowsStopIterator = !valueOrFalseIfThrows(function () {
        return (new Map()).keys().next().done;
      });
      /*
        - In Firefox < 23, Map#size is a function.
        - In all current Firefox, Set#entries/keys/values & Map#clear do not exist
        - https://bugzilla.mozilla.org/show_bug.cgi?id=869996
        - In Firefox 24, Map and Set do not implement forEach
        - In Firefox 25 at least, Map and Set are callable without "new"
      */
      if (
        typeof globals.Map.prototype.clear !== 'function' ||
        new globals.Set().size !== 0 ||
        new globals.Map().size !== 0 ||
        typeof globals.Map.prototype.keys !== 'function' ||
        typeof globals.Set.prototype.keys !== 'function' ||
        typeof globals.Map.prototype.forEach !== 'function' ||
        typeof globals.Set.prototype.forEach !== 'function' ||
        isCallableWithoutNew(globals.Map) ||
        isCallableWithoutNew(globals.Set) ||
        typeof (new globals.Map().keys().next) !== 'function' || // Safari 8
        mapIterationThrowsStopIterator || // Firefox 25
        !mapSupportsSubclassing
      ) {
        defineProperties(globals, {
          Map: collectionShims.Map,
          Set: collectionShims.Set
        }, true);
      }

      if (globals.Set.prototype.keys !== globals.Set.prototype.values) {
        // Fixed in WebKit with https://bugs.webkit.org/show_bug.cgi?id=144190
        defineProperty(globals.Set.prototype, 'keys', globals.Set.prototype.values, true);
      }

      // Shim incomplete iterator implementations.
      addIterator(Object.getPrototypeOf((new globals.Map()).keys()));
      addIterator(Object.getPrototypeOf((new globals.Set()).keys()));

      if (functionsHaveNames && globals.Set.prototype.has.name !== 'has') {
        // Microsoft Edge v0.11.10074.0 is missing a name on Set#has
        var anonymousSetHas = globals.Set.prototype.has;
        overrideNative(globals.Set.prototype, 'has', function has(key) {
          return _call(anonymousSetHas, this, key);
        });
      }
    }
    defineProperties(globals, collectionShims);
    addDefaultSpecies(globals.Map);
    addDefaultSpecies(globals.Set);
  }

  var throwUnlessTargetIsObject = function throwUnlessTargetIsObject(target) {
    if (!ES.TypeIsObject(target)) {
      throw new TypeError('target must be an object');
    }
  };

  // Some Reflect methods are basically the same as
  // those on the Object global, except that a TypeError is thrown if
  // target isn't an object. As well as returning a boolean indicating
  // the success of the operation.
  var ReflectShims = {
    // Apply method in a functional form.
    apply: function apply() {
      return ES.Call(ES.Call, null, arguments);
    },

    // New operator in a functional form.
    construct: function construct(constructor, args) {
      if (!ES.IsConstructor(constructor)) {
        throw new TypeError('First argument must be a constructor.');
      }
      var newTarget = arguments.length > 2 ? arguments[2] : constructor;
      if (!ES.IsConstructor(newTarget)) {
        throw new TypeError('new.target must be a constructor.');
      }
      return ES.Construct(constructor, args, newTarget, 'internal');
    },

    // When deleting a non-existent or configurable property,
    // true is returned.
    // When attempting to delete a non-configurable property,
    // it will return false.
    deleteProperty: function deleteProperty(target, key) {
      throwUnlessTargetIsObject(target);
      if (supportsDescriptors) {
        var desc = Object.getOwnPropertyDescriptor(target, key);

        if (desc && !desc.configurable) {
          return false;
        }
      }

      // Will return true.
      return delete target[key];
    },

    has: function has(target, key) {
      throwUnlessTargetIsObject(target);
      return key in target;
    }
  };

  if (Object.getOwnPropertyNames) {
    Object.assign(ReflectShims, {
      // Basically the result of calling the internal [[OwnPropertyKeys]].
      // Concatenating propertyNames and propertySymbols should do the trick.
      // This should continue to work together with a Symbol shim
      // which overrides Object.getOwnPropertyNames and implements
      // Object.getOwnPropertySymbols.
      ownKeys: function ownKeys(target) {
        throwUnlessTargetIsObject(target);
        var keys = Object.getOwnPropertyNames(target);

        if (ES.IsCallable(Object.getOwnPropertySymbols)) {
          _pushApply(keys, Object.getOwnPropertySymbols(target));
        }

        return keys;
      }
    });
  }

  var callAndCatchException = function ConvertExceptionToBoolean(func) {
    return !throwsError(func);
  };

  if (Object.preventExtensions) {
    Object.assign(ReflectShims, {
      isExtensible: function isExtensible(target) {
        throwUnlessTargetIsObject(target);
        return Object.isExtensible(target);
      },
      preventExtensions: function preventExtensions(target) {
        throwUnlessTargetIsObject(target);
        return callAndCatchException(function () {
          Object.preventExtensions(target);
        });
      }
    });
  }

  if (supportsDescriptors) {
    var internalGet = function get(target, key, receiver) {
      var desc = Object.getOwnPropertyDescriptor(target, key);

      if (!desc) {
        var parent = Object.getPrototypeOf(target);

        if (parent === null) {
          return void 0;
        }

        return internalGet(parent, key, receiver);
      }

      if ('value' in desc) {
        return desc.value;
      }

      if (desc.get) {
        return ES.Call(desc.get, receiver);
      }

      return void 0;
    };

    var internalSet = function set(target, key, value, receiver) {
      var desc = Object.getOwnPropertyDescriptor(target, key);

      if (!desc) {
        var parent = Object.getPrototypeOf(target);

        if (parent !== null) {
          return internalSet(parent, key, value, receiver);
        }

        desc = {
          value: void 0,
          writable: true,
          enumerable: true,
          configurable: true
        };
      }

      if ('value' in desc) {
        if (!desc.writable) {
          return false;
        }

        if (!ES.TypeIsObject(receiver)) {
          return false;
        }

        var existingDesc = Object.getOwnPropertyDescriptor(receiver, key);

        if (existingDesc) {
          return Reflect.defineProperty(receiver, key, {
            value: value
          });
        } else {
          return Reflect.defineProperty(receiver, key, {
            value: value,
            writable: true,
            enumerable: true,
            configurable: true
          });
        }
      }

      if (desc.set) {
        _call(desc.set, receiver, value);
        return true;
      }

      return false;
    };

    Object.assign(ReflectShims, {
      defineProperty: function defineProperty(target, propertyKey, attributes) {
        throwUnlessTargetIsObject(target);
        return callAndCatchException(function () {
          Object.defineProperty(target, propertyKey, attributes);
        });
      },

      getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
        throwUnlessTargetIsObject(target);
        return Object.getOwnPropertyDescriptor(target, propertyKey);
      },

      // Syntax in a functional form.
      get: function get(target, key) {
        throwUnlessTargetIsObject(target);
        var receiver = arguments.length > 2 ? arguments[2] : target;

        return internalGet(target, key, receiver);
      },

      set: function set(target, key, value) {
        throwUnlessTargetIsObject(target);
        var receiver = arguments.length > 3 ? arguments[3] : target;

        return internalSet(target, key, value, receiver);
      }
    });
  }

  if (Object.getPrototypeOf) {
    var objectDotGetPrototypeOf = Object.getPrototypeOf;
    ReflectShims.getPrototypeOf = function getPrototypeOf(target) {
      throwUnlessTargetIsObject(target);
      return objectDotGetPrototypeOf(target);
    };
  }

  if (Object.setPrototypeOf && ReflectShims.getPrototypeOf) {
    var willCreateCircularPrototype = function (object, lastProto) {
      var proto = lastProto;
      while (proto) {
        if (object === proto) {
          return true;
        }
        proto = ReflectShims.getPrototypeOf(proto);
      }
      return false;
    };

    Object.assign(ReflectShims, {
      // Sets the prototype of the given object.
      // Returns true on success, otherwise false.
      setPrototypeOf: function setPrototypeOf(object, proto) {
        throwUnlessTargetIsObject(object);
        if (proto !== null && !ES.TypeIsObject(proto)) {
          throw new TypeError('proto must be an object or null');
        }

        // If they already are the same, we're done.
        if (proto === Reflect.getPrototypeOf(object)) {
          return true;
        }

        // Cannot alter prototype if object not extensible.
        if (Reflect.isExtensible && !Reflect.isExtensible(object)) {
          return false;
        }

        // Ensure that we do not create a circular prototype chain.
        if (willCreateCircularPrototype(object, proto)) {
          return false;
        }

        Object.setPrototypeOf(object, proto);

        return true;
      }
    });
  }
  var defineOrOverrideReflectProperty = function (key, shim) {
    if (!ES.IsCallable(globals.Reflect[key])) {
      defineProperty(globals.Reflect, key, shim);
    } else {
      var acceptsPrimitives = valueOrFalseIfThrows(function () {
        globals.Reflect[key](1);
        globals.Reflect[key](NaN);
        globals.Reflect[key](true);
        return true;
      });
      if (acceptsPrimitives) {
        overrideNative(globals.Reflect, key, shim);
      }
    }
  };
  Object.keys(ReflectShims).forEach(function (key) {
    defineOrOverrideReflectProperty(key, ReflectShims[key]);
  });
  var originalReflectGetProto = globals.Reflect.getPrototypeOf;
  if (functionsHaveNames && originalReflectGetProto && originalReflectGetProto.name !== 'getPrototypeOf') {
    overrideNative(globals.Reflect, 'getPrototypeOf', function getPrototypeOf(target) {
      return _call(originalReflectGetProto, globals.Reflect, target);
    });
  }
  if (globals.Reflect.setPrototypeOf) {
    if (valueOrFalseIfThrows(function () {
      globals.Reflect.setPrototypeOf(1, {});
      return true;
    })) {
      overrideNative(globals.Reflect, 'setPrototypeOf', ReflectShims.setPrototypeOf);
    }
  }
  if (globals.Reflect.defineProperty) {
    if (!valueOrFalseIfThrows(function () {
      var basic = !globals.Reflect.defineProperty(1, 'test', { value: 1 });
      // "extensible" fails on Edge 0.12
      var extensible = typeof Object.preventExtensions !== 'function' || !globals.Reflect.defineProperty(Object.preventExtensions({}), 'test', {});
      return basic && extensible;
    })) {
      overrideNative(globals.Reflect, 'defineProperty', ReflectShims.defineProperty);
    }
  }
  if (globals.Reflect.construct) {
    if (!valueOrFalseIfThrows(function () {
      var F = function F() {};
      return globals.Reflect.construct(function () {}, [], F) instanceof F;
    })) {
      overrideNative(globals.Reflect, 'construct', ReflectShims.construct);
    }
  }

  if (String(new Date(NaN)) !== 'Invalid Date') {
    var dateToString = Date.prototype.toString;
    var shimmedDateToString = function toString() {
      var valueOf = +this;
      if (valueOf !== valueOf) {
        return 'Invalid Date';
      }
      return ES.Call(dateToString, this);
    };
    overrideNative(Date.prototype, 'toString', shimmedDateToString);
  }

  // Annex B HTML methods
  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-additional-properties-of-the-string.prototype-object
  var stringHTMLshims = {
    anchor: function anchor(name) { return ES.CreateHTML(this, 'a', 'name', name); },
    big: function big() { return ES.CreateHTML(this, 'big', '', ''); },
    blink: function blink() { return ES.CreateHTML(this, 'blink', '', ''); },
    bold: function bold() { return ES.CreateHTML(this, 'b', '', ''); },
    fixed: function fixed() { return ES.CreateHTML(this, 'tt', '', ''); },
    fontcolor: function fontcolor(color) { return ES.CreateHTML(this, 'font', 'color', color); },
    fontsize: function fontsize(size) { return ES.CreateHTML(this, 'font', 'size', size); },
    italics: function italics() { return ES.CreateHTML(this, 'i', '', ''); },
    link: function link(url) { return ES.CreateHTML(this, 'a', 'href', url); },
    small: function small() { return ES.CreateHTML(this, 'small', '', ''); },
    strike: function strike() { return ES.CreateHTML(this, 'strike', '', ''); },
    sub: function sub() { return ES.CreateHTML(this, 'sub', '', ''); },
    sup: function sub() { return ES.CreateHTML(this, 'sup', '', ''); }
  };
  _forEach(Object.keys(stringHTMLshims), function (key) {
    var method = String.prototype[key];
    var shouldOverwrite = false;
    if (ES.IsCallable(method)) {
      var output = _call(method, '', ' " ');
      var quotesCount = _concat([], output.match(/"/g)).length;
      shouldOverwrite = output !== output.toLowerCase() || quotesCount > 2;
    } else {
      shouldOverwrite = true;
    }
    if (shouldOverwrite) {
      overrideNative(String.prototype, key, stringHTMLshims[key]);
    }
  });

  var JSONstringifiesSymbols = (function () {
    // Microsoft Edge v0.12 stringifies Symbols incorrectly
    if (!hasSymbols) { return false; } // Symbols are not supported
    var stringify = typeof JSON === 'object' && typeof JSON.stringify === 'function' ? JSON.stringify : null;
    if (!stringify) { return false; } // JSON.stringify is not supported
    if (typeof stringify(Symbol()) !== 'undefined') { return true; } // Symbols should become `undefined`
    if (stringify([Symbol()]) !== '[null]') { return true; } // Symbols in arrays should become `null`
    var obj = { a: Symbol() };
    obj[Symbol()] = true;
    if (stringify(obj) !== '{}') { return true; } // Symbol-valued keys *and* Symbol-valued properties should be omitted
    return false;
  }());
  var JSONstringifyAcceptsObjectSymbol = valueOrFalseIfThrows(function () {
    // Chrome 45 throws on stringifying object symbols
    if (!hasSymbols) { return true; } // Symbols are not supported
    return JSON.stringify(Object(Symbol())) === '{}' && JSON.stringify([Object(Symbol())]) === '[{}]';
  });
  if (JSONstringifiesSymbols || !JSONstringifyAcceptsObjectSymbol) {
    var origStringify = JSON.stringify;
    overrideNative(JSON, 'stringify', function stringify(value) {
      if (typeof value === 'symbol') { return; }
      var replacer;
      if (arguments.length > 1) {
        replacer = arguments[1];
      }
      var args = [value];
      if (!isArray(replacer)) {
        var replaceFn = ES.IsCallable(replacer) ? replacer : null;
        var wrappedReplacer = function (key, val) {
          var parsedValue = replaceFn ? _call(replaceFn, this, key, val) : val;
          if (typeof parsedValue !== 'symbol') {
            if (Type.symbol(parsedValue)) {
              return assignTo({})(parsedValue);
            } else {
              return parsedValue;
            }
          }
        };
        args.push(wrappedReplacer);
      } else {
        // create wrapped replacer that handles an array replacer?
        args.push(replacer);
      }
      if (arguments.length > 2) {
        args.push(arguments[2]);
      }
      return origStringify.apply(this, args);
    });
  }

  return globals;
}));

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":158}],85:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      }
      throw TypeError('Uncaught, unspecified "error" event.');
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        args = Array.prototype.slice.call(arguments, 1);
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    args = Array.prototype.slice.call(arguments, 1);
    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else if (listeners) {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.prototype.listenerCount = function(type) {
  if (this._events) {
    var evlistener = this._events[type];

    if (isFunction(evlistener))
      return 1;
    else if (evlistener)
      return evlistener.length;
  }
  return 0;
};

EventEmitter.listenerCount = function(emitter, type) {
  return emitter.listenerCount(type);
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}

},{}],86:[function(require,module,exports){
(function (Buffer){
var md5 = require('create-hash/md5')
module.exports = EVP_BytesToKey
function EVP_BytesToKey (password, salt, keyLen, ivLen) {
  if (!Buffer.isBuffer(password)) {
    password = new Buffer(password, 'binary')
  }
  if (salt && !Buffer.isBuffer(salt)) {
    salt = new Buffer(salt, 'binary')
  }
  keyLen = keyLen / 8
  ivLen = ivLen || 0
  var ki = 0
  var ii = 0
  var key = new Buffer(keyLen)
  var iv = new Buffer(ivLen)
  var addmd = 0
  var md_buf
  var i
  var bufs = []
  while (true) {
    if (addmd++ > 0) {
      bufs.push(md_buf)
    }
    bufs.push(password)
    if (salt) {
      bufs.push(salt)
    }
    md_buf = md5(Buffer.concat(bufs))
    bufs = []
    i = 0
    if (keyLen > 0) {
      while (true) {
        if (keyLen === 0) {
          break
        }
        if (i === md_buf.length) {
          break
        }
        key[ki++] = md_buf[i]
        keyLen--
        i++
      }
    }
    if (ivLen > 0 && i !== md_buf.length) {
      while (true) {
        if (ivLen === 0) {
          break
        }
        if (i === md_buf.length) {
          break
        }
        iv[ii++] = md_buf[i]
        ivLen--
        i++
      }
    }
    if (keyLen === 0 && ivLen === 0) {
      break
    }
  }
  for (i = 0; i < md_buf.length; i++) {
    md_buf[i] = 0
  }
  return {
    key: key,
    iv: iv
  }
}

}).call(this,require("buffer").Buffer)
},{"buffer":45,"create-hash/md5":54}],87:[function(require,module,exports){
var hash = exports;

hash.utils = require('./hash/utils');
hash.common = require('./hash/common');
hash.sha = require('./hash/sha');
hash.ripemd = require('./hash/ripemd');
hash.hmac = require('./hash/hmac');

// Proxy hash functions to the main object
hash.sha1 = hash.sha.sha1;
hash.sha256 = hash.sha.sha256;
hash.sha224 = hash.sha.sha224;
hash.sha384 = hash.sha.sha384;
hash.sha512 = hash.sha.sha512;
hash.ripemd160 = hash.ripemd.ripemd160;

},{"./hash/common":88,"./hash/hmac":89,"./hash/ripemd":90,"./hash/sha":91,"./hash/utils":92}],88:[function(require,module,exports){
var hash = require('../hash');
var utils = hash.utils;
var assert = utils.assert;

function BlockHash() {
  this.pending = null;
  this.pendingTotal = 0;
  this.blockSize = this.constructor.blockSize;
  this.outSize = this.constructor.outSize;
  this.hmacStrength = this.constructor.hmacStrength;
  this.padLength = this.constructor.padLength / 8;
  this.endian = 'big';

  this._delta8 = this.blockSize / 8;
  this._delta32 = this.blockSize / 32;
}
exports.BlockHash = BlockHash;

BlockHash.prototype.update = function update(msg, enc) {
  // Convert message to array, pad it, and join into 32bit blocks
  msg = utils.toArray(msg, enc);
  if (!this.pending)
    this.pending = msg;
  else
    this.pending = this.pending.concat(msg);
  this.pendingTotal += msg.length;

  // Enough data, try updating
  if (this.pending.length >= this._delta8) {
    msg = this.pending;

    // Process pending data in blocks
    var r = msg.length % this._delta8;
    this.pending = msg.slice(msg.length - r, msg.length);
    if (this.pending.length === 0)
      this.pending = null;

    msg = utils.join32(msg, 0, msg.length - r, this.endian);
    for (var i = 0; i < msg.length; i += this._delta32)
      this._update(msg, i, i + this._delta32);
  }

  return this;
};

BlockHash.prototype.digest = function digest(enc) {
  this.update(this._pad());
  assert(this.pending === null);

  return this._digest(enc);
};

BlockHash.prototype._pad = function pad() {
  var len = this.pendingTotal;
  var bytes = this._delta8;
  var k = bytes - ((len + this.padLength) % bytes);
  var res = new Array(k + this.padLength);
  res[0] = 0x80;
  for (var i = 1; i < k; i++)
    res[i] = 0;

  // Append length
  len <<= 3;
  if (this.endian === 'big') {
    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;

    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = len & 0xff;
  } else {
    res[i++] = len & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;

    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;
  }

  return res;
};

},{"../hash":87}],89:[function(require,module,exports){
var hmac = exports;

var hash = require('../hash');
var utils = hash.utils;
var assert = utils.assert;

function Hmac(hash, key, enc) {
  if (!(this instanceof Hmac))
    return new Hmac(hash, key, enc);
  this.Hash = hash;
  this.blockSize = hash.blockSize / 8;
  this.outSize = hash.outSize / 8;
  this.inner = null;
  this.outer = null;

  this._init(utils.toArray(key, enc));
}
module.exports = Hmac;

Hmac.prototype._init = function init(key) {
  // Shorten key, if needed
  if (key.length > this.blockSize)
    key = new this.Hash().update(key).digest();
  assert(key.length <= this.blockSize);

  // Add padding to key
  for (var i = key.length; i < this.blockSize; i++)
    key.push(0);

  for (var i = 0; i < key.length; i++)
    key[i] ^= 0x36;
  this.inner = new this.Hash().update(key);

  // 0x36 ^ 0x5c = 0x6a
  for (var i = 0; i < key.length; i++)
    key[i] ^= 0x6a;
  this.outer = new this.Hash().update(key);
};

Hmac.prototype.update = function update(msg, enc) {
  this.inner.update(msg, enc);
  return this;
};

Hmac.prototype.digest = function digest(enc) {
  this.outer.update(this.inner.digest());
  return this.outer.digest(enc);
};

},{"../hash":87}],90:[function(require,module,exports){
var hash = require('../hash');
var utils = hash.utils;

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_3 = utils.sum32_3;
var sum32_4 = utils.sum32_4;
var BlockHash = hash.common.BlockHash;

function RIPEMD160() {
  if (!(this instanceof RIPEMD160))
    return new RIPEMD160();

  BlockHash.call(this);

  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];
  this.endian = 'little';
}
utils.inherits(RIPEMD160, BlockHash);
exports.ripemd160 = RIPEMD160;

RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;

RIPEMD160.prototype._update = function update(msg, start) {
  var A = this.h[0];
  var B = this.h[1];
  var C = this.h[2];
  var D = this.h[3];
  var E = this.h[4];
  var Ah = A;
  var Bh = B;
  var Ch = C;
  var Dh = D;
  var Eh = E;
  for (var j = 0; j < 80; j++) {
    var T = sum32(
      rotl32(
        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
        s[j]),
      E);
    A = E;
    E = D;
    D = rotl32(C, 10);
    C = B;
    B = T;
    T = sum32(
      rotl32(
        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
        sh[j]),
      Eh);
    Ah = Eh;
    Eh = Dh;
    Dh = rotl32(Ch, 10);
    Ch = Bh;
    Bh = T;
  }
  T = sum32_3(this.h[1], C, Dh);
  this.h[1] = sum32_3(this.h[2], D, Eh);
  this.h[2] = sum32_3(this.h[3], E, Ah);
  this.h[3] = sum32_3(this.h[4], A, Bh);
  this.h[4] = sum32_3(this.h[0], B, Ch);
  this.h[0] = T;
};

RIPEMD160.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'little');
  else
    return utils.split32(this.h, 'little');
};

function f(j, x, y, z) {
  if (j <= 15)
    return x ^ y ^ z;
  else if (j <= 31)
    return (x & y) | ((~x) & z);
  else if (j <= 47)
    return (x | (~y)) ^ z;
  else if (j <= 63)
    return (x & z) | (y & (~z));
  else
    return x ^ (y | (~z));
}

function K(j) {
  if (j <= 15)
    return 0x00000000;
  else if (j <= 31)
    return 0x5a827999;
  else if (j <= 47)
    return 0x6ed9eba1;
  else if (j <= 63)
    return 0x8f1bbcdc;
  else
    return 0xa953fd4e;
}

function Kh(j) {
  if (j <= 15)
    return 0x50a28be6;
  else if (j <= 31)
    return 0x5c4dd124;
  else if (j <= 47)
    return 0x6d703ef3;
  else if (j <= 63)
    return 0x7a6d76e9;
  else
    return 0x00000000;
}

var r = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
];

var rh = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
];

var s = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
];

var sh = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
];

},{"../hash":87}],91:[function(require,module,exports){
var hash = require('../hash');
var utils = hash.utils;
var assert = utils.assert;

var rotr32 = utils.rotr32;
var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_4 = utils.sum32_4;
var sum32_5 = utils.sum32_5;
var rotr64_hi = utils.rotr64_hi;
var rotr64_lo = utils.rotr64_lo;
var shr64_hi = utils.shr64_hi;
var shr64_lo = utils.shr64_lo;
var sum64 = utils.sum64;
var sum64_hi = utils.sum64_hi;
var sum64_lo = utils.sum64_lo;
var sum64_4_hi = utils.sum64_4_hi;
var sum64_4_lo = utils.sum64_4_lo;
var sum64_5_hi = utils.sum64_5_hi;
var sum64_5_lo = utils.sum64_5_lo;
var BlockHash = hash.common.BlockHash;

var sha256_K = [
  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
];

var sha512_K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

var sha1_K = [
  0x5A827999, 0x6ED9EBA1,
  0x8F1BBCDC, 0xCA62C1D6
];

function SHA256() {
  if (!(this instanceof SHA256))
    return new SHA256();

  BlockHash.call(this);
  this.h = [ 0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
             0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19 ];
  this.k = sha256_K;
  this.W = new Array(64);
}
utils.inherits(SHA256, BlockHash);
exports.sha256 = SHA256;

SHA256.blockSize = 512;
SHA256.outSize = 256;
SHA256.hmacStrength = 192;
SHA256.padLength = 64;

SHA256.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i++)
    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  var f = this.h[5];
  var g = this.h[6];
  var h = this.h[7];

  assert(this.k.length === W.length);
  for (var i = 0; i < W.length; i++) {
    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
    var T2 = sum32(s0_256(a), maj32(a, b, c));
    h = g;
    g = f;
    f = e;
    e = sum32(d, T1);
    d = c;
    c = b;
    b = a;
    a = sum32(T1, T2);
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
  this.h[5] = sum32(this.h[5], f);
  this.h[6] = sum32(this.h[6], g);
  this.h[7] = sum32(this.h[7], h);
};

SHA256.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function SHA224() {
  if (!(this instanceof SHA224))
    return new SHA224();

  SHA256.call(this);
  this.h = [ 0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
             0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];
}
utils.inherits(SHA224, SHA256);
exports.sha224 = SHA224;

SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;

SHA224.prototype._digest = function digest(enc) {
  // Just truncate output
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 7), 'big');
  else
    return utils.split32(this.h.slice(0, 7), 'big');
};

function SHA512() {
  if (!(this instanceof SHA512))
    return new SHA512();

  BlockHash.call(this);
  this.h = [ 0x6a09e667, 0xf3bcc908,
             0xbb67ae85, 0x84caa73b,
             0x3c6ef372, 0xfe94f82b,
             0xa54ff53a, 0x5f1d36f1,
             0x510e527f, 0xade682d1,
             0x9b05688c, 0x2b3e6c1f,
             0x1f83d9ab, 0xfb41bd6b,
             0x5be0cd19, 0x137e2179 ];
  this.k = sha512_K;
  this.W = new Array(160);
}
utils.inherits(SHA512, BlockHash);
exports.sha512 = SHA512;

SHA512.blockSize = 1024;
SHA512.outSize = 512;
SHA512.hmacStrength = 192;
SHA512.padLength = 128;

SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
  var W = this.W;

  // 32 x 32bit words
  for (var i = 0; i < 32; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i += 2) {
    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2
    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
    var c1_hi = W[i - 14];  // i - 7
    var c1_lo = W[i - 13];
    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15
    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
    var c3_hi = W[i - 32];  // i - 16
    var c3_lo = W[i - 31];

    W[i] = sum64_4_hi(c0_hi, c0_lo,
                      c1_hi, c1_lo,
                      c2_hi, c2_lo,
                      c3_hi, c3_lo);
    W[i + 1] = sum64_4_lo(c0_hi, c0_lo,
                          c1_hi, c1_lo,
                          c2_hi, c2_lo,
                          c3_hi, c3_lo);
  }
};

SHA512.prototype._update = function _update(msg, start) {
  this._prepareBlock(msg, start);

  var W = this.W;

  var ah = this.h[0];
  var al = this.h[1];
  var bh = this.h[2];
  var bl = this.h[3];
  var ch = this.h[4];
  var cl = this.h[5];
  var dh = this.h[6];
  var dl = this.h[7];
  var eh = this.h[8];
  var el = this.h[9];
  var fh = this.h[10];
  var fl = this.h[11];
  var gh = this.h[12];
  var gl = this.h[13];
  var hh = this.h[14];
  var hl = this.h[15];

  assert(this.k.length === W.length);
  for (var i = 0; i < W.length; i += 2) {
    var c0_hi = hh;
    var c0_lo = hl;
    var c1_hi = s1_512_hi(eh, el);
    var c1_lo = s1_512_lo(eh, el);
    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
    var c3_hi = this.k[i];
    var c3_lo = this.k[i + 1];
    var c4_hi = W[i];
    var c4_lo = W[i + 1];

    var T1_hi = sum64_5_hi(c0_hi, c0_lo,
                           c1_hi, c1_lo,
                           c2_hi, c2_lo,
                           c3_hi, c3_lo,
                           c4_hi, c4_lo);
    var T1_lo = sum64_5_lo(c0_hi, c0_lo,
                           c1_hi, c1_lo,
                           c2_hi, c2_lo,
                           c3_hi, c3_lo,
                           c4_hi, c4_lo);

    var c0_hi = s0_512_hi(ah, al);
    var c0_lo = s0_512_lo(ah, al);
    var c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
    var c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

    hh = gh;
    hl = gl;

    gh = fh;
    gl = fl;

    fh = eh;
    fl = el;

    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
    el = sum64_lo(dl, dl, T1_hi, T1_lo);

    dh = ch;
    dl = cl;

    ch = bh;
    cl = bl;

    bh = ah;
    bl = al;

    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
  }

  sum64(this.h, 0, ah, al);
  sum64(this.h, 2, bh, bl);
  sum64(this.h, 4, ch, cl);
  sum64(this.h, 6, dh, dl);
  sum64(this.h, 8, eh, el);
  sum64(this.h, 10, fh, fl);
  sum64(this.h, 12, gh, gl);
  sum64(this.h, 14, hh, hl);
};

SHA512.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function SHA384() {
  if (!(this instanceof SHA384))
    return new SHA384();

  SHA512.call(this);
  this.h = [ 0xcbbb9d5d, 0xc1059ed8,
             0x629a292a, 0x367cd507,
             0x9159015a, 0x3070dd17,
             0x152fecd8, 0xf70e5939,
             0x67332667, 0xffc00b31,
             0x8eb44a87, 0x68581511,
             0xdb0c2e0d, 0x64f98fa7,
             0x47b5481d, 0xbefa4fa4 ];
}
utils.inherits(SHA384, SHA512);
exports.sha384 = SHA384;

SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;

SHA384.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 12), 'big');
  else
    return utils.split32(this.h.slice(0, 12), 'big');
};

function SHA1() {
  if (!(this instanceof SHA1))
    return new SHA1();

  BlockHash.call(this);
  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe,
             0x10325476, 0xc3d2e1f0 ];
  this.W = new Array(80);
}

utils.inherits(SHA1, BlockHash);
exports.sha1 = SHA1;

SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;

SHA1.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];

  for(; i < W.length; i++)
    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];

  for (var i = 0; i < W.length; i++) {
    var s = ~~(i / 20);
    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
    e = d;
    d = c;
    c = rotl32(b, 30);
    b = a;
    a = t;
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
};

SHA1.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function ch32(x, y, z) {
  return (x & y) ^ ((~x) & z);
}

function maj32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}

function p32(x, y, z) {
  return x ^ y ^ z;
}

function s0_256(x) {
  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}

function s1_256(x) {
  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}

function g0_256(x) {
  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
}

function g1_256(x) {
  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
}

function ft_1(s, x, y, z) {
  if (s === 0)
    return ch32(x, y, z);
  if (s === 1 || s === 3)
    return p32(x, y, z);
  if (s === 2)
    return maj32(x, y, z);
}

function ch64_hi(xh, xl, yh, yl, zh, zl) {
  var r = (xh & yh) ^ ((~xh) & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function ch64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ ((~xl) & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_hi(xh, xl, yh, yl, zh, zl) {
  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 28);
  var c1_hi = rotr64_hi(xl, xh, 2);  // 34
  var c2_hi = rotr64_hi(xl, xh, 7);  // 39

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 28);
  var c1_lo = rotr64_lo(xl, xh, 2);  // 34
  var c2_lo = rotr64_lo(xl, xh, 7);  // 39

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 14);
  var c1_hi = rotr64_hi(xh, xl, 18);
  var c2_hi = rotr64_hi(xl, xh, 9);  // 41

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 14);
  var c1_lo = rotr64_lo(xh, xl, 18);
  var c2_lo = rotr64_lo(xl, xh, 9);  // 41

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 1);
  var c1_hi = rotr64_hi(xh, xl, 8);
  var c2_hi = shr64_hi(xh, xl, 7);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 1);
  var c1_lo = rotr64_lo(xh, xl, 8);
  var c2_lo = shr64_lo(xh, xl, 7);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 19);
  var c1_hi = rotr64_hi(xl, xh, 29);  // 61
  var c2_hi = shr64_hi(xh, xl, 6);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 19);
  var c1_lo = rotr64_lo(xl, xh, 29);  // 61
  var c2_lo = shr64_lo(xh, xl, 6);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

},{"../hash":87}],92:[function(require,module,exports){
var utils = exports;
var inherits = require('inherits');

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg === 'string') {
    if (!enc) {
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        var hi = c >> 8;
        var lo = c & 0xff;
        if (hi)
          res.push(hi, lo);
        else
          res.push(lo);
      }
    } else if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0)
        msg = '0' + msg;
      for (var i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    }
  } else {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
  }
  return res;
}
utils.toArray = toArray;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

function htonl(w) {
  var res = (w >>> 24) |
            ((w >>> 8) & 0xff00) |
            ((w << 8) & 0xff0000) |
            ((w & 0xff) << 24);
  return res >>> 0;
}
utils.htonl = htonl;

function toHex32(msg, endian) {
  var res = '';
  for (var i = 0; i < msg.length; i++) {
    var w = msg[i];
    if (endian === 'little')
      w = htonl(w);
    res += zero8(w.toString(16));
  }
  return res;
}
utils.toHex32 = toHex32;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

function zero8(word) {
  if (word.length === 7)
    return '0' + word;
  else if (word.length === 6)
    return '00' + word;
  else if (word.length === 5)
    return '000' + word;
  else if (word.length === 4)
    return '0000' + word;
  else if (word.length === 3)
    return '00000' + word;
  else if (word.length === 2)
    return '000000' + word;
  else if (word.length === 1)
    return '0000000' + word;
  else
    return word;
}
utils.zero8 = zero8;

function join32(msg, start, end, endian) {
  var len = end - start;
  assert(len % 4 === 0);
  var res = new Array(len / 4);
  for (var i = 0, k = start; i < res.length; i++, k += 4) {
    var w;
    if (endian === 'big')
      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
    else
      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
    res[i] = w >>> 0;
  }
  return res;
}
utils.join32 = join32;

function split32(msg, endian) {
  var res = new Array(msg.length * 4);
  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
    var m = msg[i];
    if (endian === 'big') {
      res[k] = m >>> 24;
      res[k + 1] = (m >>> 16) & 0xff;
      res[k + 2] = (m >>> 8) & 0xff;
      res[k + 3] = m & 0xff;
    } else {
      res[k + 3] = m >>> 24;
      res[k + 2] = (m >>> 16) & 0xff;
      res[k + 1] = (m >>> 8) & 0xff;
      res[k] = m & 0xff;
    }
  }
  return res;
}
utils.split32 = split32;

function rotr32(w, b) {
  return (w >>> b) | (w << (32 - b));
}
utils.rotr32 = rotr32;

function rotl32(w, b) {
  return (w << b) | (w >>> (32 - b));
}
utils.rotl32 = rotl32;

function sum32(a, b) {
  return (a + b) >>> 0;
}
utils.sum32 = sum32;

function sum32_3(a, b, c) {
  return (a + b + c) >>> 0;
}
utils.sum32_3 = sum32_3;

function sum32_4(a, b, c, d) {
  return (a + b + c + d) >>> 0;
}
utils.sum32_4 = sum32_4;

function sum32_5(a, b, c, d, e) {
  return (a + b + c + d + e) >>> 0;
}
utils.sum32_5 = sum32_5;

function assert(cond, msg) {
  if (!cond)
    throw new Error(msg || 'Assertion failed');
}
utils.assert = assert;

utils.inherits = inherits;

function sum64(buf, pos, ah, al) {
  var bh = buf[pos];
  var bl = buf[pos + 1];

  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  buf[pos] = hi >>> 0;
  buf[pos + 1] = lo;
}
exports.sum64 = sum64;

function sum64_hi(ah, al, bh, bl) {
  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  return hi >>> 0;
};
exports.sum64_hi = sum64_hi;

function sum64_lo(ah, al, bh, bl) {
  var lo = al + bl;
  return lo >>> 0;
};
exports.sum64_lo = sum64_lo;

function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;

  var hi = ah + bh + ch + dh + carry;
  return hi >>> 0;
};
exports.sum64_4_hi = sum64_4_hi;

function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
  var lo = al + bl + cl + dl;
  return lo >>> 0;
};
exports.sum64_4_lo = sum64_4_lo;

function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;
  lo = (lo + el) >>> 0;
  carry += lo < el ? 1 : 0;

  var hi = ah + bh + ch + dh + eh + carry;
  return hi >>> 0;
};
exports.sum64_5_hi = sum64_5_hi;

function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var lo = al + bl + cl + dl + el;

  return lo >>> 0;
};
exports.sum64_5_lo = sum64_5_lo;

function rotr64_hi(ah, al, num) {
  var r = (al << (32 - num)) | (ah >>> num);
  return r >>> 0;
};
exports.rotr64_hi = rotr64_hi;

function rotr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
};
exports.rotr64_lo = rotr64_lo;

function shr64_hi(ah, al, num) {
  return ah >>> num;
};
exports.shr64_hi = shr64_hi;

function shr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
};
exports.shr64_lo = shr64_lo;

},{"inherits":95}],93:[function(require,module,exports){
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],94:[function(require,module,exports){

var indexOf = [].indexOf;

module.exports = function(arr, obj){
  if (indexOf) return arr.indexOf(obj);
  for (var i = 0; i < arr.length; ++i) {
    if (arr[i] === obj) return i;
  }
  return -1;
};
},{}],95:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],96:[function(require,module,exports){
/**
 * Determine if an object is Buffer
 *
 * Author:   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * License:  MIT
 *
 * `npm install is-buffer`
 */

module.exports = function (obj) {
  return !!(obj != null &&
    (obj._isBuffer || // For Safari 5-7 (missing Object.prototype.constructor)
      (obj.constructor &&
      typeof obj.constructor.isBuffer === 'function' &&
      obj.constructor.isBuffer(obj))
    ))
}

},{}],97:[function(require,module,exports){
arguments[4][46][0].apply(exports,arguments)
},{"dup":46}],98:[function(require,module,exports){
// third-party
var semver = require('semver');

// own
var EventNotification = require('./lib/notification/event');
var RPCRequest        = require('./lib/request/rpc');
var ItemResponse      = require('./lib/response/item');
var ListResponse      = require('./lib/response/list');

module.exports = function (apiVersion) {
  if (!semver.valid(apiVersion)) {
    throw new Error('invalid semver apiVersion');
  }

  var messageAPI = {};

  messageAPI.notification = {
    event: function (eventName, data) {
      return new EventNotification(apiVersion, eventName, data);
    }
  };

  messageAPI.request = {
    rpc: function (method, params) {
      return new RPCRequest(apiVersion, method, params);
    }
  };

  messageAPI.response = {
    item: function (request) {
      return new ItemResponse(apiVersion, request);
    },

    list: function (request) {
      return new ListResponse(apiVersion, request)
    }
  };

  return messageAPI;
};
},{"./lib/notification/event":101,"./lib/request/rpc":103,"./lib/response/item":105,"./lib/response/list":106,"semver":179}],99:[function(require,module,exports){
// third-party
var objectPath = require('object-path');

/**
 * Uses Object.defineProperty to define a non-enumerable property
 * onto the target object
 */
exports.defineHiddenProperty = function (obj, prop, value) {
  Object.defineProperty(obj, prop, {
    configurable: false,
    writable: false,
    enumerable: false,
    value: value
  });
};

/**
 * Checks whether the given object is an array
 */
exports.isArray = function (obj) {
  // http://stackoverflow.com/questions/4775722/check-if-object-is-array
  return (Object.prototype.toString.call(obj) === '[object Array]');
};

function _transformRead(dataSource, src) {
  if (typeof src === 'string') {
    // read the value
    return objectPath.get(dataSource, src);
  } else if (typeof src === 'function') {
    return src(dataSource);
  }
}

/**
 * Generates a new object from a source data object given a data-map
 * @param  {[type]} dataSource [description]
 * @param  {[type]} dataMap    [description]
 * @param  {[type]} dataDest   [description]
 * @return {[type]}            [description]
 */
exports.objectTransform = function (dataSource, dataMap, dataDest) {
  for (var prop in dataMap) {
    if (dataMap.hasOwnProperty(prop)) {
      var dest = prop;
      var src  = dataMap[prop];

      // if the source of the value is set to `true`,
      // infer that the actual src path is equal to the dest path
      if (src === true) { src = dest; }

      var value = _transformRead(dataSource, src);
      objectPath.set(dataDest, dest, value);
    }
  }
}
},{"object-path":134}],100:[function(require,module,exports){
// third-party
var semver = require('semver');

/**
 * The base message constructor.
 * Requires the apiVersion argument to be a valid semver tag.
 */
function BaseMessage(apiVersion) {
  if (!semver.valid(apiVersion)) {
    throw new Error('invalid semver apiVersion');
  }

  this.apiVersion = apiVersion;
};

/**
 * Properties that should be copied to the final json message
 * @type {Array}
 */
BaseMessage.PROPERTIES = [
  'apiVersion',
  'context',
  'id',
  'type',
];

module.exports = BaseMessage;
},{"semver":179}],101:[function(require,module,exports){
// native
var util = require('util');

// third-party
var uuid = require('node-uuid');

// own
var aux = require('../auxiliary');
var BaseMessage = require('../base-message');

function NotificationMessage(apiVersion, eventName, data) {

  BaseMessage.call(this, apiVersion);

  if (!eventName) { throw new Error('eventName is required'); }

  this.eventName = eventName;
  this.data = data;

  this.id = uuid.v4();
}

util.inherits(BaseMessage, NotificationMessage);

Object.defineProperty(NotificationMessage.prototype, 'type', {
  configurable: false,
  writable: false,
  enumerable: true,
  value: 'notification'
});

var PROPERTIES = BaseMessage.PROPERTIES.concat([
  'eventName',
  'data'
]);

/**
 * The toJSON method is called by JSON.stringify
 */
aux.defineHiddenProperty(NotificationMessage.prototype, 'toJSON',
  function () {

    var res = {};

    PROPERTIES.forEach(function (prop) {
      res[prop] = this[prop];
    }.bind(this));

    return res;
  }
);

module.exports = NotificationMessage;
},{"../auxiliary":99,"../base-message":100,"node-uuid":133,"util":194}],102:[function(require,module,exports){
// native
var util = require('util');

// third-party
var uuid = require('node-uuid');

var BaseMessage = require('../base-message');

function BaseRequest(apiVersion) {

  BaseMessage.call(this, apiVersion);

  // request must always create a uniqueId for itself
  this.id = uuid.v4();
}

util.inherits(BaseRequest, BaseMessage);

module.exports = BaseRequest;
},{"../base-message":100,"node-uuid":133,"util":194}],103:[function(require,module,exports){
// native
var util = require('util');

// own
var aux = require('../auxiliary');

var BaseMessage = require('../base-message');
var BaseRequest = require('./base');

function RPCRequest(apiVersion, method, params) {

  BaseRequest.call(this, apiVersion);

  if (!method) { throw new Error('method is required for RPCRequest'); }
  this.method = method;

  if (params) {
    if (typeof params !== 'object') {
      throw new Error('params must be an object');
    }

    this.params = params;
  }
}

util.inherits(RPCRequest, BaseRequest);

/**
 * Indicates the type of the message.
 * Is not be modifiable.
 * @type {String}
 */
Object.defineProperty(RPCRequest.prototype, 'type', {
  configurable: false,
  writable: false,
  enumerable: true,
  value: 'rpc-request'
});

var PROPERTIES = BaseMessage.PROPERTIES.concat([
  'method',
  'params'
]);

/**
 * The toJSON method is called by JSON.stringify
 * @return {[type]} [description]
 */
aux.defineHiddenProperty(RPCRequest.prototype, 'toJSON', function () {
  var res = {};

  PROPERTIES.forEach(function (prop) {
    res[prop] = this[prop];
  }.bind(this));

  return res;
});

module.exports = RPCRequest;
},{"../auxiliary":99,"../base-message":100,"./base":102,"util":194}],104:[function(require,module,exports){
// native
var util = require('util');

// third-party
var uuid = require('node-uuid');

// own
var aux = require('../auxiliary');
var BaseMessage = require('../base-message');

/**
 * The message constructor
 * Checks for required parameters
 * and sets a unique id to the message
 * @param {String} apiVersion [description]
 * @param {Object} data       [description]
 */
function BaseResponse(apiVersion, request) {

  BaseMessage.call(this, apiVersion);

  // let the message retrieve the id from the request message
  if (request && request.id) {
    this.id = request.id;
  } else {
    this.id = uuid.v4();
  }

  // data object where the response body should go
  this.data = {};
};

util.inherits(BaseResponse, BaseMessage);

/**
 * Indicates the type of the message.
 * Is not be modifiable.
 * @type {String}
 */
Object.defineProperty(BaseResponse.prototype, 'type', {
  configurable: false,
  writable: false,
  enumerable: true,
  value: 'response'
});

/**
 * Adds an error
 * @param  {[type]} error [description]
 * @return {[type]}       [description]
 */
aux.defineHiddenProperty(BaseResponse.prototype, 'err',
  function (code, message, data) {
    if (!code || typeof code === 'object') { throw new Error('code is required'); }

    if (typeof message === 'object') {
      data    = message;
      message = undefined;
    }

    data = data || {};
    data.code    = code;
    data.message = message;

    // from the google style guide
    // If there are multiple errors, message will be the message for the first error.
    this.error = this.error || {
      code: code,
      message: message,
      errors: []
    };

    this.error.errors.push(data);
  }
);

/**
 * Properties to be copied to the final response object
 */
var PROPERTIES = BaseMessage.PROPERTIES.concat([
  'data',
  'error',
]);
/**
 * The toJSON method is called by JSON.stringify
 * @return {[type]} [description]
 */
aux.defineHiddenProperty(BaseResponse.prototype, 'toJSON',
  function () {

    var res = {};

    PROPERTIES.forEach(function (prop) {
      res[prop] = this[prop];
    }.bind(this));

    if (this.error) {
      delete res.data;
    }

    return res;
  }
);

module.exports = BaseResponse;
},{"../auxiliary":99,"../base-message":100,"node-uuid":133,"util":194}],105:[function(require,module,exports){
// native
var util = require('util');

// third-party
var objectPath = require('object-path');

// own
var aux = require('../auxiliary');

var BaseResponse = require('./base');

function ItemResponse(apiVersion, request) {
  BaseResponse.call(this, apiVersion, request);
}

util.inherits(ItemResponse, BaseResponse);

aux.defineHiddenProperty(ItemResponse.prototype, 'set', function (key, value) {

  if (typeof key !== 'string') { throw new Error('key must be a string'); }
  if (arguments.length < 2) { throw new Error('key and value arguments must be explicitly provided'); }

  objectPath.set(this.data, key, value);

  return this;
});

aux.defineHiddenProperty(ItemResponse.prototype, 'load', function (dataSource, dataMap) {

  if (!dataSource) { throw new Error('dataSource is required'); }
  // http://stackoverflow.com/questions/4775722/check-if-object-is-array
  if (aux.isArray(dataSource)) {
    throw new Error('dataSource must not be an array in ItemResponse');
  }

  if (!dataMap) { throw new Error('dataMap is required'); }

  aux.objectTransform(dataSource, dataMap, this.data);

  return this;
});

module.exports = ItemResponse;
},{"../auxiliary":99,"./base":104,"object-path":134,"util":194}],106:[function(require,module,exports){
// native
var util = require('util');

// own
var BaseResponse = require('./base');
var aux          = require('../auxiliary');

function ListMessage(apiVersion, request) {
  BaseResponse.call(this, apiVersion, request);

  this.data.items = [];
}

util.inherits(ListMessage, BaseResponse);

aux.defineHiddenProperty(ListMessage.prototype, 'load', function (sourceItems, dataMap) {

  if (!aux.isArray(sourceItems)) {
    throw new Error('sourceItems must be an array')
  }

  if (!dataMap) { throw new Error('dataMap is required'); }

  sourceItems.forEach(function (dataSource) {

    var dataDest = {};

    aux.objectTransform(dataSource, dataMap, dataDest);

    this.data.items.push(dataDest);

  }.bind(this));

  return this;
});

module.exports = ListMessage;
},{"../auxiliary":99,"./base":104,"util":194}],107:[function(require,module,exports){
'use strict';
// private property
var _keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";


// public method for encoding
exports.encode = function(input, utf8) {
    var output = "";
    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;
    var i = 0;

    while (i < input.length) {

        chr1 = input.charCodeAt(i++);
        chr2 = input.charCodeAt(i++);
        chr3 = input.charCodeAt(i++);

        enc1 = chr1 >> 2;
        enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
        enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
        enc4 = chr3 & 63;

        if (isNaN(chr2)) {
            enc3 = enc4 = 64;
        }
        else if (isNaN(chr3)) {
            enc4 = 64;
        }

        output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);

    }

    return output;
};

// public method for decoding
exports.decode = function(input, utf8) {
    var output = "";
    var chr1, chr2, chr3;
    var enc1, enc2, enc3, enc4;
    var i = 0;

    input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");

    while (i < input.length) {

        enc1 = _keyStr.indexOf(input.charAt(i++));
        enc2 = _keyStr.indexOf(input.charAt(i++));
        enc3 = _keyStr.indexOf(input.charAt(i++));
        enc4 = _keyStr.indexOf(input.charAt(i++));

        chr1 = (enc1 << 2) | (enc2 >> 4);
        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
        chr3 = ((enc3 & 3) << 6) | enc4;

        output = output + String.fromCharCode(chr1);

        if (enc3 != 64) {
            output = output + String.fromCharCode(chr2);
        }
        if (enc4 != 64) {
            output = output + String.fromCharCode(chr3);
        }

    }

    return output;

};

},{}],108:[function(require,module,exports){
'use strict';
function CompressedObject() {
    this.compressedSize = 0;
    this.uncompressedSize = 0;
    this.crc32 = 0;
    this.compressionMethod = null;
    this.compressedContent = null;
}

CompressedObject.prototype = {
    /**
     * Return the decompressed content in an unspecified format.
     * The format will depend on the decompressor.
     * @return {Object} the decompressed content.
     */
    getContent: function() {
        return null; // see implementation
    },
    /**
     * Return the compressed content in an unspecified format.
     * The format will depend on the compressed conten source.
     * @return {Object} the compressed content.
     */
    getCompressedContent: function() {
        return null; // see implementation
    }
};
module.exports = CompressedObject;

},{}],109:[function(require,module,exports){
'use strict';
exports.STORE = {
    magic: "\x00\x00",
    compress: function(content, compressionOptions) {
        return content; // no compression
    },
    uncompress: function(content) {
        return content; // no compression
    },
    compressInputType: null,
    uncompressInputType: null
};
exports.DEFLATE = require('./flate');

},{"./flate":114}],110:[function(require,module,exports){
'use strict';

var utils = require('./utils');

var table = [
    0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA,
    0x076DC419, 0x706AF48F, 0xE963A535, 0x9E6495A3,
    0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988,
    0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91,
    0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE,
    0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7,
    0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC,
    0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5,
    0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172,
    0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B,
    0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940,
    0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59,
    0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116,
    0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F,
    0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924,
    0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D,
    0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A,
    0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433,
    0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818,
    0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01,
    0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E,
    0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457,
    0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA, 0xFCB9887C,
    0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65,
    0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2,
    0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB,
    0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0,
    0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9,
    0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086,
    0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F,
    0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4,
    0x59B33D17, 0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD,
    0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A,
    0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683,
    0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8,
    0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1,
    0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE,
    0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7,
    0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC,
    0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5,
    0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252,
    0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B,
    0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60,
    0xDF60EFC3, 0xA867DF55, 0x316E8EEF, 0x4669BE79,
    0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236,
    0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F,
    0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04,
    0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D,
    0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A,
    0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713,
    0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38,
    0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21,
    0x86D3D2D4, 0xF1D4E242, 0x68DDB3F8, 0x1FDA836E,
    0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777,
    0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C,
    0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45,
    0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2,
    0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB,
    0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0,
    0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9,
    0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6,
    0xBAD03605, 0xCDD70693, 0x54DE5729, 0x23D967BF,
    0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94,
    0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D
];

/**
 *
 *  Javascript crc32
 *  http://www.webtoolkit.info/
 *
 */
module.exports = function crc32(input, crc) {
    if (typeof input === "undefined" || !input.length) {
        return 0;
    }

    var isArray = utils.getTypeOf(input) !== "string";

    if (typeof(crc) == "undefined") {
        crc = 0;
    }
    var x = 0;
    var y = 0;
    var b = 0;

    crc = crc ^ (-1);
    for (var i = 0, iTop = input.length; i < iTop; i++) {
        b = isArray ? input[i] : input.charCodeAt(i);
        y = (crc ^ b) & 0xFF;
        x = table[y];
        crc = (crc >>> 8) ^ x;
    }

    return crc ^ (-1);
};
// vim: set shiftwidth=4 softtabstop=4:

},{"./utils":127}],111:[function(require,module,exports){
'use strict';
var utils = require('./utils');

function DataReader(data) {
    this.data = null; // type : see implementation
    this.length = 0;
    this.index = 0;
}
DataReader.prototype = {
    /**
     * Check that the offset will not go too far.
     * @param {string} offset the additional offset to check.
     * @throws {Error} an Error if the offset is out of bounds.
     */
    checkOffset: function(offset) {
        this.checkIndex(this.index + offset);
    },
    /**
     * Check that the specifed index will not be too far.
     * @param {string} newIndex the index to check.
     * @throws {Error} an Error if the index is out of bounds.
     */
    checkIndex: function(newIndex) {
        if (this.length < newIndex || newIndex < 0) {
            throw new Error("End of data reached (data length = " + this.length + ", asked index = " + (newIndex) + "). Corrupted zip ?");
        }
    },
    /**
     * Change the index.
     * @param {number} newIndex The new index.
     * @throws {Error} if the new index is out of the data.
     */
    setIndex: function(newIndex) {
        this.checkIndex(newIndex);
        this.index = newIndex;
    },
    /**
     * Skip the next n bytes.
     * @param {number} n the number of bytes to skip.
     * @throws {Error} if the new index is out of the data.
     */
    skip: function(n) {
        this.setIndex(this.index + n);
    },
    /**
     * Get the byte at the specified index.
     * @param {number} i the index to use.
     * @return {number} a byte.
     */
    byteAt: function(i) {
        // see implementations
    },
    /**
     * Get the next number with a given byte size.
     * @param {number} size the number of bytes to read.
     * @return {number} the corresponding number.
     */
    readInt: function(size) {
        var result = 0,
            i;
        this.checkOffset(size);
        for (i = this.index + size - 1; i >= this.index; i--) {
            result = (result << 8) + this.byteAt(i);
        }
        this.index += size;
        return result;
    },
    /**
     * Get the next string with a given byte size.
     * @param {number} size the number of bytes to read.
     * @return {string} the corresponding string.
     */
    readString: function(size) {
        return utils.transformTo("string", this.readData(size));
    },
    /**
     * Get raw data without conversion, <size> bytes.
     * @param {number} size the number of bytes to read.
     * @return {Object} the raw data, implementation specific.
     */
    readData: function(size) {
        // see implementations
    },
    /**
     * Find the last occurence of a zip signature (4 bytes).
     * @param {string} sig the signature to find.
     * @return {number} the index of the last occurence, -1 if not found.
     */
    lastIndexOfSignature: function(sig) {
        // see implementations
    },
    /**
     * Get the next date.
     * @return {Date} the date.
     */
    readDate: function() {
        var dostime = this.readInt(4);
        return new Date(
        ((dostime >> 25) & 0x7f) + 1980, // year
        ((dostime >> 21) & 0x0f) - 1, // month
        (dostime >> 16) & 0x1f, // day
        (dostime >> 11) & 0x1f, // hour
        (dostime >> 5) & 0x3f, // minute
        (dostime & 0x1f) << 1); // second
    }
};
module.exports = DataReader;

},{"./utils":127}],112:[function(require,module,exports){
'use strict';
exports.base64 = false;
exports.binary = false;
exports.dir = false;
exports.createFolders = false;
exports.date = null;
exports.compression = null;
exports.compressionOptions = null;
exports.comment = null;
exports.unixPermissions = null;
exports.dosPermissions = null;

},{}],113:[function(require,module,exports){
'use strict';
var utils = require('./utils');

/**
 * @deprecated
 * This function will be removed in a future version without replacement.
 */
exports.string2binary = function(str) {
    return utils.string2binary(str);
};

/**
 * @deprecated
 * This function will be removed in a future version without replacement.
 */
exports.string2Uint8Array = function(str) {
    return utils.transformTo("uint8array", str);
};

/**
 * @deprecated
 * This function will be removed in a future version without replacement.
 */
exports.uint8Array2String = function(array) {
    return utils.transformTo("string", array);
};

/**
 * @deprecated
 * This function will be removed in a future version without replacement.
 */
exports.string2Blob = function(str) {
    var buffer = utils.transformTo("arraybuffer", str);
    return utils.arrayBuffer2Blob(buffer);
};

/**
 * @deprecated
 * This function will be removed in a future version without replacement.
 */
exports.arrayBuffer2Blob = function(buffer) {
    return utils.arrayBuffer2Blob(buffer);
};

/**
 * @deprecated
 * This function will be removed in a future version without replacement.
 */
exports.transformTo = function(outputType, input) {
    return utils.transformTo(outputType, input);
};

/**
 * @deprecated
 * This function will be removed in a future version without replacement.
 */
exports.getTypeOf = function(input) {
    return utils.getTypeOf(input);
};

/**
 * @deprecated
 * This function will be removed in a future version without replacement.
 */
exports.checkSupport = function(type) {
    return utils.checkSupport(type);
};

/**
 * @deprecated
 * This value will be removed in a future version without replacement.
 */
exports.MAX_VALUE_16BITS = utils.MAX_VALUE_16BITS;

/**
 * @deprecated
 * This value will be removed in a future version without replacement.
 */
exports.MAX_VALUE_32BITS = utils.MAX_VALUE_32BITS;


/**
 * @deprecated
 * This function will be removed in a future version without replacement.
 */
exports.pretty = function(str) {
    return utils.pretty(str);
};

/**
 * @deprecated
 * This function will be removed in a future version without replacement.
 */
exports.findCompression = function(compressionMethod) {
    return utils.findCompression(compressionMethod);
};

/**
 * @deprecated
 * This function will be removed in a future version without replacement.
 */
exports.isRegExp = function (object) {
    return utils.isRegExp(object);
};


},{"./utils":127}],114:[function(require,module,exports){
'use strict';
var USE_TYPEDARRAY = (typeof Uint8Array !== 'undefined') && (typeof Uint16Array !== 'undefined') && (typeof Uint32Array !== 'undefined');

var pako = require("pako");
exports.uncompressInputType = USE_TYPEDARRAY ? "uint8array" : "array";
exports.compressInputType = USE_TYPEDARRAY ? "uint8array" : "array";

exports.magic = "\x08\x00";
exports.compress = function(input, compressionOptions) {
    return pako.deflateRaw(input, {
        level : compressionOptions.level || -1 // default compression
    });
};
exports.uncompress =  function(input) {
    return pako.inflateRaw(input);
};

},{"pako":135}],115:[function(require,module,exports){
'use strict';

var base64 = require('./base64');

/**
Usage:
   zip = new JSZip();
   zip.file("hello.txt", "Hello, World!").file("tempfile", "nothing");
   zip.folder("images").file("smile.gif", base64Data, {base64: true});
   zip.file("Xmas.txt", "Ho ho ho !", {date : new Date("December 25, 2007 00:00:01")});
   zip.remove("tempfile");

   base64zip = zip.generate();

**/

/**
 * Representation a of zip file in js
 * @constructor
 * @param {String=|ArrayBuffer=|Uint8Array=} data the data to load, if any (optional).
 * @param {Object=} options the options for creating this objects (optional).
 */
function JSZip(data, options) {
    // if this constructor is used without `new`, it adds `new` before itself:
    if(!(this instanceof JSZip)) return new JSZip(data, options);

    // object containing the files :
    // {
    //   "folder/" : {...},
    //   "folder/data.txt" : {...}
    // }
    this.files = {};

    this.comment = null;

    // Where we are in the hierarchy
    this.root = "";
    if (data) {
        this.load(data, options);
    }
    this.clone = function() {
        var newObj = new JSZip();
        for (var i in this) {
            if (typeof this[i] !== "function") {
                newObj[i] = this[i];
            }
        }
        return newObj;
    };
}
JSZip.prototype = require('./object');
JSZip.prototype.load = require('./load');
JSZip.support = require('./support');
JSZip.defaults = require('./defaults');

/**
 * @deprecated
 * This namespace will be removed in a future version without replacement.
 */
JSZip.utils = require('./deprecatedPublicUtils');

JSZip.base64 = {
    /**
     * @deprecated
     * This method will be removed in a future version without replacement.
     */
    encode : function(input) {
        return base64.encode(input);
    },
    /**
     * @deprecated
     * This method will be removed in a future version without replacement.
     */
    decode : function(input) {
        return base64.decode(input);
    }
};
JSZip.compressions = require('./compressions');
module.exports = JSZip;

},{"./base64":107,"./compressions":109,"./defaults":112,"./deprecatedPublicUtils":113,"./load":116,"./object":119,"./support":123}],116:[function(require,module,exports){
'use strict';
var base64 = require('./base64');
var ZipEntries = require('./zipEntries');
module.exports = function(data, options) {
    var files, zipEntries, i, input;
    options = options || {};
    if (options.base64) {
        data = base64.decode(data);
    }

    zipEntries = new ZipEntries(data, options);
    files = zipEntries.files;
    for (i = 0; i < files.length; i++) {
        input = files[i];
        this.file(input.fileName, input.decompressed, {
            binary: true,
            optimizedBinaryString: true,
            date: input.date,
            dir: input.dir,
            comment : input.fileComment.length ? input.fileComment : null,
            unixPermissions : input.unixPermissions,
            dosPermissions : input.dosPermissions,
            createFolders: options.createFolders
        });
    }
    if (zipEntries.zipComment.length) {
        this.comment = zipEntries.zipComment;
    }

    return this;
};

},{"./base64":107,"./zipEntries":128}],117:[function(require,module,exports){
(function (Buffer){
'use strict';
module.exports = function(data, encoding){
    return new Buffer(data, encoding);
};
module.exports.test = function(b){
    return Buffer.isBuffer(b);
};

}).call(this,require("buffer").Buffer)
},{"buffer":45}],118:[function(require,module,exports){
'use strict';
var Uint8ArrayReader = require('./uint8ArrayReader');

function NodeBufferReader(data) {
    this.data = data;
    this.length = this.data.length;
    this.index = 0;
}
NodeBufferReader.prototype = new Uint8ArrayReader();

/**
 * @see DataReader.readData
 */
NodeBufferReader.prototype.readData = function(size) {
    this.checkOffset(size);
    var result = this.data.slice(this.index, this.index + size);
    this.index += size;
    return result;
};
module.exports = NodeBufferReader;

},{"./uint8ArrayReader":124}],119:[function(require,module,exports){
'use strict';
var support = require('./support');
var utils = require('./utils');
var crc32 = require('./crc32');
var signature = require('./signature');
var defaults = require('./defaults');
var base64 = require('./base64');
var compressions = require('./compressions');
var CompressedObject = require('./compressedObject');
var nodeBuffer = require('./nodeBuffer');
var utf8 = require('./utf8');
var StringWriter = require('./stringWriter');
var Uint8ArrayWriter = require('./uint8ArrayWriter');

/**
 * Returns the raw data of a ZipObject, decompress the content if necessary.
 * @param {ZipObject} file the file to use.
 * @return {String|ArrayBuffer|Uint8Array|Buffer} the data.
 */
var getRawData = function(file) {
    if (file._data instanceof CompressedObject) {
        file._data = file._data.getContent();
        file.options.binary = true;
        file.options.base64 = false;

        if (utils.getTypeOf(file._data) === "uint8array") {
            var copy = file._data;
            // when reading an arraybuffer, the CompressedObject mechanism will keep it and subarray() a Uint8Array.
            // if we request a file in the same format, we might get the same Uint8Array or its ArrayBuffer (the original zip file).
            file._data = new Uint8Array(copy.length);
            // with an empty Uint8Array, Opera fails with a "Offset larger than array size"
            if (copy.length !== 0) {
                file._data.set(copy, 0);
            }
        }
    }
    return file._data;
};

/**
 * Returns the data of a ZipObject in a binary form. If the content is an unicode string, encode it.
 * @param {ZipObject} file the file to use.
 * @return {String|ArrayBuffer|Uint8Array|Buffer} the data.
 */
var getBinaryData = function(file) {
    var result = getRawData(file),
        type = utils.getTypeOf(result);
    if (type === "string") {
        if (!file.options.binary) {
            // unicode text !
            // unicode string => binary string is a painful process, check if we can avoid it.
            if (support.nodebuffer) {
                return nodeBuffer(result, "utf-8");
            }
        }
        return file.asBinary();
    }
    return result;
};

/**
 * Transform this._data into a string.
 * @param {function} filter a function String -> String, applied if not null on the result.
 * @return {String} the string representing this._data.
 */
var dataToString = function(asUTF8) {
    var result = getRawData(this);
    if (result === null || typeof result === "undefined") {
        return "";
    }
    // if the data is a base64 string, we decode it before checking the encoding !
    if (this.options.base64) {
        result = base64.decode(result);
    }
    if (asUTF8 && this.options.binary) {
        // JSZip.prototype.utf8decode supports arrays as input
        // skip to array => string step, utf8decode will do it.
        result = out.utf8decode(result);
    }
    else {
        // no utf8 transformation, do the array => string step.
        result = utils.transformTo("string", result);
    }

    if (!asUTF8 && !this.options.binary) {
        result = utils.transformTo("string", out.utf8encode(result));
    }
    return result;
};
/**
 * A simple object representing a file in the zip file.
 * @constructor
 * @param {string} name the name of the file
 * @param {String|ArrayBuffer|Uint8Array|Buffer} data the data
 * @param {Object} options the options of the file
 */
var ZipObject = function(name, data, options) {
    this.name = name;
    this.dir = options.dir;
    this.date = options.date;
    this.comment = options.comment;
    this.unixPermissions = options.unixPermissions;
    this.dosPermissions = options.dosPermissions;

    this._data = data;
    this.options = options;

    /*
     * This object contains initial values for dir and date.
     * With them, we can check if the user changed the deprecated metadata in
     * `ZipObject#options` or not.
     */
    this._initialMetadata = {
      dir : options.dir,
      date : options.date
    };
};

ZipObject.prototype = {
    /**
     * Return the content as UTF8 string.
     * @return {string} the UTF8 string.
     */
    asText: function() {
        return dataToString.call(this, true);
    },
    /**
     * Returns the binary content.
     * @return {string} the content as binary.
     */
    asBinary: function() {
        return dataToString.call(this, false);
    },
    /**
     * Returns the content as a nodejs Buffer.
     * @return {Buffer} the content as a Buffer.
     */
    asNodeBuffer: function() {
        var result = getBinaryData(this);
        return utils.transformTo("nodebuffer", result);
    },
    /**
     * Returns the content as an Uint8Array.
     * @return {Uint8Array} the content as an Uint8Array.
     */
    asUint8Array: function() {
        var result = getBinaryData(this);
        return utils.transformTo("uint8array", result);
    },
    /**
     * Returns the content as an ArrayBuffer.
     * @return {ArrayBuffer} the content as an ArrayBufer.
     */
    asArrayBuffer: function() {
        return this.asUint8Array().buffer;
    }
};

/**
 * Transform an integer into a string in hexadecimal.
 * @private
 * @param {number} dec the number to convert.
 * @param {number} bytes the number of bytes to generate.
 * @returns {string} the result.
 */
var decToHex = function(dec, bytes) {
    var hex = "",
        i;
    for (i = 0; i < bytes; i++) {
        hex += String.fromCharCode(dec & 0xff);
        dec = dec >>> 8;
    }
    return hex;
};

/**
 * Merge the objects passed as parameters into a new one.
 * @private
 * @param {...Object} var_args All objects to merge.
 * @return {Object} a new object with the data of the others.
 */
var extend = function() {
    var result = {}, i, attr;
    for (i = 0; i < arguments.length; i++) { // arguments is not enumerable in some browsers
        for (attr in arguments[i]) {
            if (arguments[i].hasOwnProperty(attr) && typeof result[attr] === "undefined") {
                result[attr] = arguments[i][attr];
            }
        }
    }
    return result;
};

/**
 * Transforms the (incomplete) options from the user into the complete
 * set of options to create a file.
 * @private
 * @param {Object} o the options from the user.
 * @return {Object} the complete set of options.
 */
var prepareFileAttrs = function(o) {
    o = o || {};
    if (o.base64 === true && (o.binary === null || o.binary === undefined)) {
        o.binary = true;
    }
    o = extend(o, defaults);
    o.date = o.date || new Date();
    if (o.compression !== null) o.compression = o.compression.toUpperCase();

    return o;
};

/**
 * Add a file in the current folder.
 * @private
 * @param {string} name the name of the file
 * @param {String|ArrayBuffer|Uint8Array|Buffer} data the data of the file
 * @param {Object} o the options of the file
 * @return {Object} the new file.
 */
var fileAdd = function(name, data, o) {
    // be sure sub folders exist
    var dataType = utils.getTypeOf(data),
        parent;

    o = prepareFileAttrs(o);

    if (typeof o.unixPermissions === "string") {
        o.unixPermissions = parseInt(o.unixPermissions, 8);
    }

    // UNX_IFDIR  0040000 see zipinfo.c
    if (o.unixPermissions && (o.unixPermissions & 0x4000)) {
        o.dir = true;
    }
    // Bit 4    Directory
    if (o.dosPermissions && (o.dosPermissions & 0x0010)) {
        o.dir = true;
    }

    if (o.dir) {
        name = forceTrailingSlash(name);
    }

    if (o.createFolders && (parent = parentFolder(name))) {
        folderAdd.call(this, parent, true);
    }

    if (o.dir || data === null || typeof data === "undefined") {
        o.base64 = false;
        o.binary = false;
        data = null;
        dataType = null;
    }
    else if (dataType === "string") {
        if (o.binary && !o.base64) {
            // optimizedBinaryString == true means that the file has already been filtered with a 0xFF mask
            if (o.optimizedBinaryString !== true) {
                // this is a string, not in a base64 format.
                // Be sure that this is a correct "binary string"
                data = utils.string2binary(data);
            }
        }
    }
    else { // arraybuffer, uint8array, ...
        o.base64 = false;
        o.binary = true;

        if (!dataType && !(data instanceof CompressedObject)) {
            throw new Error("The data of '" + name + "' is in an unsupported format !");
        }

        // special case : it's way easier to work with Uint8Array than with ArrayBuffer
        if (dataType === "arraybuffer") {
            data = utils.transformTo("uint8array", data);
        }
    }

    var object = new ZipObject(name, data, o);
    this.files[name] = object;
    return object;
};

/**
 * Find the parent folder of the path.
 * @private
 * @param {string} path the path to use
 * @return {string} the parent folder, or ""
 */
var parentFolder = function (path) {
    if (path.slice(-1) == '/') {
        path = path.substring(0, path.length - 1);
    }
    var lastSlash = path.lastIndexOf('/');
    return (lastSlash > 0) ? path.substring(0, lastSlash) : "";
};


/**
 * Returns the path with a slash at the end.
 * @private
 * @param {String} path the path to check.
 * @return {String} the path with a trailing slash.
 */
var forceTrailingSlash = function(path) {
    // Check the name ends with a /
    if (path.slice(-1) != "/") {
        path += "/"; // IE doesn't like substr(-1)
    }
    return path;
};
/**
 * Add a (sub) folder in the current folder.
 * @private
 * @param {string} name the folder's name
 * @param {boolean=} [createFolders] If true, automatically create sub
 *  folders. Defaults to false.
 * @return {Object} the new folder.
 */
var folderAdd = function(name, createFolders) {
    createFolders = (typeof createFolders !== 'undefined') ? createFolders : false;

    name = forceTrailingSlash(name);

    // Does this folder already exist?
    if (!this.files[name]) {
        fileAdd.call(this, name, null, {
            dir: true,
            createFolders: createFolders
        });
    }
    return this.files[name];
};

/**
 * Generate a JSZip.CompressedObject for a given zipOject.
 * @param {ZipObject} file the object to read.
 * @param {JSZip.compression} compression the compression to use.
 * @param {Object} compressionOptions the options to use when compressing.
 * @return {JSZip.CompressedObject} the compressed result.
 */
var generateCompressedObjectFrom = function(file, compression, compressionOptions) {
    var result = new CompressedObject(),
        content;

    // the data has not been decompressed, we might reuse things !
    if (file._data instanceof CompressedObject) {
        result.uncompressedSize = file._data.uncompressedSize;
        result.crc32 = file._data.crc32;

        if (result.uncompressedSize === 0 || file.dir) {
            compression = compressions['STORE'];
            result.compressedContent = "";
            result.crc32 = 0;
        }
        else if (file._data.compressionMethod === compression.magic) {
            result.compressedContent = file._data.getCompressedContent();
        }
        else {
            content = file._data.getContent();
            // need to decompress / recompress
            result.compressedContent = compression.compress(utils.transformTo(compression.compressInputType, content), compressionOptions);
        }
    }
    else {
        // have uncompressed data
        content = getBinaryData(file);
        if (!content || content.length === 0 || file.dir) {
            compression = compressions['STORE'];
            content = "";
        }
        result.uncompressedSize = content.length;
        result.crc32 = crc32(content);
        result.compressedContent = compression.compress(utils.transformTo(compression.compressInputType, content), compressionOptions);
    }

    result.compressedSize = result.compressedContent.length;
    result.compressionMethod = compression.magic;

    return result;
};




/**
 * Generate the UNIX part of the external file attributes.
 * @param {Object} unixPermissions the unix permissions or null.
 * @param {Boolean} isDir true if the entry is a directory, false otherwise.
 * @return {Number} a 32 bit integer.
 *
 * adapted from http://unix.stackexchange.com/questions/14705/the-zip-formats-external-file-attribute :
 *
 * TTTTsstrwxrwxrwx0000000000ADVSHR
 * ^^^^____________________________ file type, see zipinfo.c (UNX_*)
 *     ^^^_________________________ setuid, setgid, sticky
 *        ^^^^^^^^^________________ permissions
 *                 ^^^^^^^^^^______ not used ?
 *                           ^^^^^^ DOS attribute bits : Archive, Directory, Volume label, System file, Hidden, Read only
 */
var generateUnixExternalFileAttr = function (unixPermissions, isDir) {

    var result = unixPermissions;
    if (!unixPermissions) {
        // I can't use octal values in strict mode, hence the hexa.
        //  040775 => 0x41fd
        // 0100664 => 0x81b4
        result = isDir ? 0x41fd : 0x81b4;
    }

    return (result & 0xFFFF) << 16;
};

/**
 * Generate the DOS part of the external file attributes.
 * @param {Object} dosPermissions the dos permissions or null.
 * @param {Boolean} isDir true if the entry is a directory, false otherwise.
 * @return {Number} a 32 bit integer.
 *
 * Bit 0     Read-Only
 * Bit 1     Hidden
 * Bit 2     System
 * Bit 3     Volume Label
 * Bit 4     Directory
 * Bit 5     Archive
 */
var generateDosExternalFileAttr = function (dosPermissions, isDir) {

    // the dir flag is already set for compatibility

    return (dosPermissions || 0)  & 0x3F;
};

/**
 * Generate the various parts used in the construction of the final zip file.
 * @param {string} name the file name.
 * @param {ZipObject} file the file content.
 * @param {JSZip.CompressedObject} compressedObject the compressed object.
 * @param {number} offset the current offset from the start of the zip file.
 * @param {String} platform let's pretend we are this platform (change platform dependents fields)
 * @return {object} the zip parts.
 */
var generateZipParts = function(name, file, compressedObject, offset, platform) {
    var data = compressedObject.compressedContent,
        utfEncodedFileName = utils.transformTo("string", utf8.utf8encode(file.name)),
        comment = file.comment || "",
        utfEncodedComment = utils.transformTo("string", utf8.utf8encode(comment)),
        useUTF8ForFileName = utfEncodedFileName.length !== file.name.length,
        useUTF8ForComment = utfEncodedComment.length !== comment.length,
        o = file.options,
        dosTime,
        dosDate,
        extraFields = "",
        unicodePathExtraField = "",
        unicodeCommentExtraField = "",
        dir, date;


    // handle the deprecated options.dir
    if (file._initialMetadata.dir !== file.dir) {
        dir = file.dir;
    } else {
        dir = o.dir;
    }

    // handle the deprecated options.date
    if(file._initialMetadata.date !== file.date) {
        date = file.date;
    } else {
        date = o.date;
    }

    var extFileAttr = 0;
    var versionMadeBy = 0;
    if (dir) {
        // dos or unix, we set the dos dir flag
        extFileAttr |= 0x00010;
    }
    if(platform === "UNIX") {
        versionMadeBy = 0x031E; // UNIX, version 3.0
        extFileAttr |= generateUnixExternalFileAttr(file.unixPermissions, dir);
    } else { // DOS or other, fallback to DOS
        versionMadeBy = 0x0014; // DOS, version 2.0
        extFileAttr |= generateDosExternalFileAttr(file.dosPermissions, dir);
    }

    // date
    // @see http://www.delorie.com/djgpp/doc/rbinter/it/52/13.html
    // @see http://www.delorie.com/djgpp/doc/rbinter/it/65/16.html
    // @see http://www.delorie.com/djgpp/doc/rbinter/it/66/16.html

    dosTime = date.getHours();
    dosTime = dosTime << 6;
    dosTime = dosTime | date.getMinutes();
    dosTime = dosTime << 5;
    dosTime = dosTime | date.getSeconds() / 2;

    dosDate = date.getFullYear() - 1980;
    dosDate = dosDate << 4;
    dosDate = dosDate | (date.getMonth() + 1);
    dosDate = dosDate << 5;
    dosDate = dosDate | date.getDate();

    if (useUTF8ForFileName) {
        // set the unicode path extra field. unzip needs at least one extra
        // field to correctly handle unicode path, so using the path is as good
        // as any other information. This could improve the situation with
        // other archive managers too.
        // This field is usually used without the utf8 flag, with a non
        // unicode path in the header (winrar, winzip). This helps (a bit)
        // with the messy Windows' default compressed folders feature but
        // breaks on p7zip which doesn't seek the unicode path extra field.
        // So for now, UTF-8 everywhere !
        unicodePathExtraField =
            // Version
            decToHex(1, 1) +
            // NameCRC32
            decToHex(crc32(utfEncodedFileName), 4) +
            // UnicodeName
            utfEncodedFileName;

        extraFields +=
            // Info-ZIP Unicode Path Extra Field
            "\x75\x70" +
            // size
            decToHex(unicodePathExtraField.length, 2) +
            // content
            unicodePathExtraField;
    }

    if(useUTF8ForComment) {

        unicodeCommentExtraField =
            // Version
            decToHex(1, 1) +
            // CommentCRC32
            decToHex(this.crc32(utfEncodedComment), 4) +
            // UnicodeName
            utfEncodedComment;

        extraFields +=
            // Info-ZIP Unicode Path Extra Field
            "\x75\x63" +
            // size
            decToHex(unicodeCommentExtraField.length, 2) +
            // content
            unicodeCommentExtraField;
    }

    var header = "";

    // version needed to extract
    header += "\x0A\x00";
    // general purpose bit flag
    // set bit 11 if utf8
    header += (useUTF8ForFileName || useUTF8ForComment) ? "\x00\x08" : "\x00\x00";
    // compression method
    header += compressedObject.compressionMethod;
    // last mod file time
    header += decToHex(dosTime, 2);
    // last mod file date
    header += decToHex(dosDate, 2);
    // crc-32
    header += decToHex(compressedObject.crc32, 4);
    // compressed size
    header += decToHex(compressedObject.compressedSize, 4);
    // uncompressed size
    header += decToHex(compressedObject.uncompressedSize, 4);
    // file name length
    header += decToHex(utfEncodedFileName.length, 2);
    // extra field length
    header += decToHex(extraFields.length, 2);


    var fileRecord = signature.LOCAL_FILE_HEADER + header + utfEncodedFileName + extraFields;

    var dirRecord = signature.CENTRAL_FILE_HEADER +
    // version made by (00: DOS)
    decToHex(versionMadeBy, 2) +
    // file header (common to file and central directory)
    header +
    // file comment length
    decToHex(utfEncodedComment.length, 2) +
    // disk number start
    "\x00\x00" +
    // internal file attributes TODO
    "\x00\x00" +
    // external file attributes
    decToHex(extFileAttr, 4) +
    // relative offset of local header
    decToHex(offset, 4) +
    // file name
    utfEncodedFileName +
    // extra field
    extraFields +
    // file comment
    utfEncodedComment;

    return {
        fileRecord: fileRecord,
        dirRecord: dirRecord,
        compressedObject: compressedObject
    };
};


// return the actual prototype of JSZip
var out = {
    /**
     * Read an existing zip and merge the data in the current JSZip object.
     * The implementation is in jszip-load.js, don't forget to include it.
     * @param {String|ArrayBuffer|Uint8Array|Buffer} stream  The stream to load
     * @param {Object} options Options for loading the stream.
     *  options.base64 : is the stream in base64 ? default : false
     * @return {JSZip} the current JSZip object
     */
    load: function(stream, options) {
        throw new Error("Load method is not defined. Is the file jszip-load.js included ?");
    },

    /**
     * Filter nested files/folders with the specified function.
     * @param {Function} search the predicate to use :
     * function (relativePath, file) {...}
     * It takes 2 arguments : the relative path and the file.
     * @return {Array} An array of matching elements.
     */
    filter: function(search) {
        var result = [],
            filename, relativePath, file, fileClone;
        for (filename in this.files) {
            if (!this.files.hasOwnProperty(filename)) {
                continue;
            }
            file = this.files[filename];
            // return a new object, don't let the user mess with our internal objects :)
            fileClone = new ZipObject(file.name, file._data, extend(file.options));
            relativePath = filename.slice(this.root.length, filename.length);
            if (filename.slice(0, this.root.length) === this.root && // the file is in the current root
            search(relativePath, fileClone)) { // and the file matches the function
                result.push(fileClone);
            }
        }
        return result;
    },

    /**
     * Add a file to the zip file, or search a file.
     * @param   {string|RegExp} name The name of the file to add (if data is defined),
     * the name of the file to find (if no data) or a regex to match files.
     * @param   {String|ArrayBuffer|Uint8Array|Buffer} data  The file data, either raw or base64 encoded
     * @param   {Object} o     File options
     * @return  {JSZip|Object|Array} this JSZip object (when adding a file),
     * a file (when searching by string) or an array of files (when searching by regex).
     */
    file: function(name, data, o) {
        if (arguments.length === 1) {
            if (utils.isRegExp(name)) {
                var regexp = name;
                return this.filter(function(relativePath, file) {
                    return !file.dir && regexp.test(relativePath);
                });
            }
            else { // text
                return this.filter(function(relativePath, file) {
                    return !file.dir && relativePath === name;
                })[0] || null;
            }
        }
        else { // more than one argument : we have data !
            name = this.root + name;
            fileAdd.call(this, name, data, o);
        }
        return this;
    },

    /**
     * Add a directory to the zip file, or search.
     * @param   {String|RegExp} arg The name of the directory to add, or a regex to search folders.
     * @return  {JSZip} an object with the new directory as the root, or an array containing matching folders.
     */
    folder: function(arg) {
        if (!arg) {
            return this;
        }

        if (utils.isRegExp(arg)) {
            return this.filter(function(relativePath, file) {
                return file.dir && arg.test(relativePath);
            });
        }

        // else, name is a new folder
        var name = this.root + arg;
        var newFolder = folderAdd.call(this, name);

        // Allow chaining by returning a new object with this folder as the root
        var ret = this.clone();
        ret.root = newFolder.name;
        return ret;
    },

    /**
     * Delete a file, or a directory and all sub-files, from the zip
     * @param {string} name the name of the file to delete
     * @return {JSZip} this JSZip object
     */
    remove: function(name) {
        name = this.root + name;
        var file = this.files[name];
        if (!file) {
            // Look for any folders
            if (name.slice(-1) != "/") {
                name += "/";
            }
            file = this.files[name];
        }

        if (file && !file.dir) {
            // file
            delete this.files[name];
        } else {
            // maybe a folder, delete recursively
            var kids = this.filter(function(relativePath, file) {
                return file.name.slice(0, name.length) === name;
            });
            for (var i = 0; i < kids.length; i++) {
                delete this.files[kids[i].name];
            }
        }

        return this;
    },

    /**
     * Generate the complete zip file
     * @param {Object} options the options to generate the zip file :
     * - base64, (deprecated, use type instead) true to generate base64.
     * - compression, "STORE" by default.
     * - type, "base64" by default. Values are : string, base64, uint8array, arraybuffer, blob.
     * @return {String|Uint8Array|ArrayBuffer|Buffer|Blob} the zip file
     */
    generate: function(options) {
        options = extend(options || {}, {
            base64: true,
            compression: "STORE",
            compressionOptions : null,
            type: "base64",
            platform: "DOS",
            comment: null,
            mimeType: 'application/zip'
        });

        utils.checkSupport(options.type);

        // accept nodejs `process.platform`
        if(
          options.platform === 'darwin' ||
          options.platform === 'freebsd' ||
          options.platform === 'linux' ||
          options.platform === 'sunos'
        ) {
          options.platform = "UNIX";
        }
        if (options.platform === 'win32') {
          options.platform = "DOS";
        }

        var zipData = [],
            localDirLength = 0,
            centralDirLength = 0,
            writer, i,
            utfEncodedComment = utils.transformTo("string", this.utf8encode(options.comment || this.comment || ""));

        // first, generate all the zip parts.
        for (var name in this.files) {
            if (!this.files.hasOwnProperty(name)) {
                continue;
            }
            var file = this.files[name];

            var compressionName = file.options.compression || options.compression.toUpperCase();
            var compression = compressions[compressionName];
            if (!compression) {
                throw new Error(compressionName + " is not a valid compression method !");
            }
            var compressionOptions = file.options.compressionOptions || options.compressionOptions || {};

            var compressedObject = generateCompressedObjectFrom.call(this, file, compression, compressionOptions);

            var zipPart = generateZipParts.call(this, name, file, compressedObject, localDirLength, options.platform);
            localDirLength += zipPart.fileRecord.length + compressedObject.compressedSize;
            centralDirLength += zipPart.dirRecord.length;
            zipData.push(zipPart);
        }

        var dirEnd = "";

        // end of central dir signature
        dirEnd = signature.CENTRAL_DIRECTORY_END +
        // number of this disk
        "\x00\x00" +
        // number of the disk with the start of the central directory
        "\x00\x00" +
        // total number of entries in the central directory on this disk
        decToHex(zipData.length, 2) +
        // total number of entries in the central directory
        decToHex(zipData.length, 2) +
        // size of the central directory   4 bytes
        decToHex(centralDirLength, 4) +
        // offset of start of central directory with respect to the starting disk number
        decToHex(localDirLength, 4) +
        // .ZIP file comment length
        decToHex(utfEncodedComment.length, 2) +
        // .ZIP file comment
        utfEncodedComment;


        // we have all the parts (and the total length)
        // time to create a writer !
        var typeName = options.type.toLowerCase();
        if(typeName==="uint8array"||typeName==="arraybuffer"||typeName==="blob"||typeName==="nodebuffer") {
            writer = new Uint8ArrayWriter(localDirLength + centralDirLength + dirEnd.length);
        }else{
            writer = new StringWriter(localDirLength + centralDirLength + dirEnd.length);
        }

        for (i = 0; i < zipData.length; i++) {
            writer.append(zipData[i].fileRecord);
            writer.append(zipData[i].compressedObject.compressedContent);
        }
        for (i = 0; i < zipData.length; i++) {
            writer.append(zipData[i].dirRecord);
        }

        writer.append(dirEnd);

        var zip = writer.finalize();



        switch(options.type.toLowerCase()) {
            // case "zip is an Uint8Array"
            case "uint8array" :
            case "arraybuffer" :
            case "nodebuffer" :
               return utils.transformTo(options.type.toLowerCase(), zip);
            case "blob" :
               return utils.arrayBuffer2Blob(utils.transformTo("arraybuffer", zip), options.mimeType);
            // case "zip is a string"
            case "base64" :
               return (options.base64) ? base64.encode(zip) : zip;
            default : // case "string" :
               return zip;
         }

    },

    /**
     * @deprecated
     * This method will be removed in a future version without replacement.
     */
    crc32: function (input, crc) {
        return crc32(input, crc);
    },

    /**
     * @deprecated
     * This method will be removed in a future version without replacement.
     */
    utf8encode: function (string) {
        return utils.transformTo("string", utf8.utf8encode(string));
    },

    /**
     * @deprecated
     * This method will be removed in a future version without replacement.
     */
    utf8decode: function (input) {
        return utf8.utf8decode(input);
    }
};
module.exports = out;

},{"./base64":107,"./compressedObject":108,"./compressions":109,"./crc32":110,"./defaults":112,"./nodeBuffer":117,"./signature":120,"./stringWriter":122,"./support":123,"./uint8ArrayWriter":125,"./utf8":126,"./utils":127}],120:[function(require,module,exports){
'use strict';
exports.LOCAL_FILE_HEADER = "PK\x03\x04";
exports.CENTRAL_FILE_HEADER = "PK\x01\x02";
exports.CENTRAL_DIRECTORY_END = "PK\x05\x06";
exports.ZIP64_CENTRAL_DIRECTORY_LOCATOR = "PK\x06\x07";
exports.ZIP64_CENTRAL_DIRECTORY_END = "PK\x06\x06";
exports.DATA_DESCRIPTOR = "PK\x07\x08";

},{}],121:[function(require,module,exports){
'use strict';
var DataReader = require('./dataReader');
var utils = require('./utils');

function StringReader(data, optimizedBinaryString) {
    this.data = data;
    if (!optimizedBinaryString) {
        this.data = utils.string2binary(this.data);
    }
    this.length = this.data.length;
    this.index = 0;
}
StringReader.prototype = new DataReader();
/**
 * @see DataReader.byteAt
 */
StringReader.prototype.byteAt = function(i) {
    return this.data.charCodeAt(i);
};
/**
 * @see DataReader.lastIndexOfSignature
 */
StringReader.prototype.lastIndexOfSignature = function(sig) {
    return this.data.lastIndexOf(sig);
};
/**
 * @see DataReader.readData
 */
StringReader.prototype.readData = function(size) {
    this.checkOffset(size);
    // this will work because the constructor applied the "& 0xff" mask.
    var result = this.data.slice(this.index, this.index + size);
    this.index += size;
    return result;
};
module.exports = StringReader;

},{"./dataReader":111,"./utils":127}],122:[function(require,module,exports){
'use strict';

var utils = require('./utils');

/**
 * An object to write any content to a string.
 * @constructor
 */
var StringWriter = function() {
    this.data = [];
};
StringWriter.prototype = {
    /**
     * Append any content to the current string.
     * @param {Object} input the content to add.
     */
    append: function(input) {
        input = utils.transformTo("string", input);
        this.data.push(input);
    },
    /**
     * Finalize the construction an return the result.
     * @return {string} the generated string.
     */
    finalize: function() {
        return this.data.join("");
    }
};

module.exports = StringWriter;

},{"./utils":127}],123:[function(require,module,exports){
(function (Buffer){
'use strict';
exports.base64 = true;
exports.array = true;
exports.string = true;
exports.arraybuffer = typeof ArrayBuffer !== "undefined" && typeof Uint8Array !== "undefined";
// contains true if JSZip can read/generate nodejs Buffer, false otherwise.
// Browserify will provide a Buffer implementation for browsers, which is
// an augmented Uint8Array (i.e., can be used as either Buffer or U8).
exports.nodebuffer = typeof Buffer !== "undefined";
// contains true if JSZip can read/generate Uint8Array, false otherwise.
exports.uint8array = typeof Uint8Array !== "undefined";

if (typeof ArrayBuffer === "undefined") {
    exports.blob = false;
}
else {
    var buffer = new ArrayBuffer(0);
    try {
        exports.blob = new Blob([buffer], {
            type: "application/zip"
        }).size === 0;
    }
    catch (e) {
        try {
            var Builder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;
            var builder = new Builder();
            builder.append(buffer);
            exports.blob = builder.getBlob('application/zip').size === 0;
        }
        catch (e) {
            exports.blob = false;
        }
    }
}

}).call(this,require("buffer").Buffer)
},{"buffer":45}],124:[function(require,module,exports){
'use strict';
var DataReader = require('./dataReader');

function Uint8ArrayReader(data) {
    if (data) {
        this.data = data;
        this.length = this.data.length;
        this.index = 0;
    }
}
Uint8ArrayReader.prototype = new DataReader();
/**
 * @see DataReader.byteAt
 */
Uint8ArrayReader.prototype.byteAt = function(i) {
    return this.data[i];
};
/**
 * @see DataReader.lastIndexOfSignature
 */
Uint8ArrayReader.prototype.lastIndexOfSignature = function(sig) {
    var sig0 = sig.charCodeAt(0),
        sig1 = sig.charCodeAt(1),
        sig2 = sig.charCodeAt(2),
        sig3 = sig.charCodeAt(3);
    for (var i = this.length - 4; i >= 0; --i) {
        if (this.data[i] === sig0 && this.data[i + 1] === sig1 && this.data[i + 2] === sig2 && this.data[i + 3] === sig3) {
            return i;
        }
    }

    return -1;
};
/**
 * @see DataReader.readData
 */
Uint8ArrayReader.prototype.readData = function(size) {
    this.checkOffset(size);
    if(size === 0) {
        // in IE10, when using subarray(idx, idx), we get the array [0x00] instead of [].
        return new Uint8Array(0);
    }
    var result = this.data.subarray(this.index, this.index + size);
    this.index += size;
    return result;
};
module.exports = Uint8ArrayReader;

},{"./dataReader":111}],125:[function(require,module,exports){
'use strict';

var utils = require('./utils');

/**
 * An object to write any content to an Uint8Array.
 * @constructor
 * @param {number} length The length of the array.
 */
var Uint8ArrayWriter = function(length) {
    this.data = new Uint8Array(length);
    this.index = 0;
};
Uint8ArrayWriter.prototype = {
    /**
     * Append any content to the current array.
     * @param {Object} input the content to add.
     */
    append: function(input) {
        if (input.length !== 0) {
            // with an empty Uint8Array, Opera fails with a "Offset larger than array size"
            input = utils.transformTo("uint8array", input);
            this.data.set(input, this.index);
            this.index += input.length;
        }
    },
    /**
     * Finalize the construction an return the result.
     * @return {Uint8Array} the generated array.
     */
    finalize: function() {
        return this.data;
    }
};

module.exports = Uint8ArrayWriter;

},{"./utils":127}],126:[function(require,module,exports){
'use strict';

var utils = require('./utils');
var support = require('./support');
var nodeBuffer = require('./nodeBuffer');

/**
 * The following functions come from pako, from pako/lib/utils/strings
 * released under the MIT license, see pako https://github.com/nodeca/pako/
 */

// Table with utf8 lengths (calculated by first byte of sequence)
// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,
// because max possible codepoint is 0x10ffff
var _utf8len = new Array(256);
for (var i=0; i<256; i++) {
  _utf8len[i] = (i >= 252 ? 6 : i >= 248 ? 5 : i >= 240 ? 4 : i >= 224 ? 3 : i >= 192 ? 2 : 1);
}
_utf8len[254]=_utf8len[254]=1; // Invalid sequence start

// convert string to array (typed, when possible)
var string2buf = function (str) {
    var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;

    // count binary size
    for (m_pos = 0; m_pos < str_len; m_pos++) {
        c = str.charCodeAt(m_pos);
        if ((c & 0xfc00) === 0xd800 && (m_pos+1 < str_len)) {
            c2 = str.charCodeAt(m_pos+1);
            if ((c2 & 0xfc00) === 0xdc00) {
                c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);
                m_pos++;
            }
        }
        buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;
    }

    // allocate buffer
    if (support.uint8array) {
        buf = new Uint8Array(buf_len);
    } else {
        buf = new Array(buf_len);
    }

    // convert
    for (i=0, m_pos = 0; i < buf_len; m_pos++) {
        c = str.charCodeAt(m_pos);
        if ((c & 0xfc00) === 0xd800 && (m_pos+1 < str_len)) {
            c2 = str.charCodeAt(m_pos+1);
            if ((c2 & 0xfc00) === 0xdc00) {
                c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);
                m_pos++;
            }
        }
        if (c < 0x80) {
            /* one byte */
            buf[i++] = c;
        } else if (c < 0x800) {
            /* two bytes */
            buf[i++] = 0xC0 | (c >>> 6);
            buf[i++] = 0x80 | (c & 0x3f);
        } else if (c < 0x10000) {
            /* three bytes */
            buf[i++] = 0xE0 | (c >>> 12);
            buf[i++] = 0x80 | (c >>> 6 & 0x3f);
            buf[i++] = 0x80 | (c & 0x3f);
        } else {
            /* four bytes */
            buf[i++] = 0xf0 | (c >>> 18);
            buf[i++] = 0x80 | (c >>> 12 & 0x3f);
            buf[i++] = 0x80 | (c >>> 6 & 0x3f);
            buf[i++] = 0x80 | (c & 0x3f);
        }
    }

    return buf;
};

// Calculate max possible position in utf8 buffer,
// that will not break sequence. If that's not possible
// - (very small limits) return max size as is.
//
// buf[] - utf8 bytes array
// max   - length limit (mandatory);
var utf8border = function(buf, max) {
    var pos;

    max = max || buf.length;
    if (max > buf.length) { max = buf.length; }

    // go back from last position, until start of sequence found
    pos = max-1;
    while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }

    // Fuckup - very small and broken sequence,
    // return max, because we should return something anyway.
    if (pos < 0) { return max; }

    // If we came to start of buffer - that means vuffer is too small,
    // return max too.
    if (pos === 0) { return max; }

    return (pos + _utf8len[buf[pos]] > max) ? pos : max;
};

// convert array to string
var buf2string = function (buf) {
    var str, i, out, c, c_len;
    var len = buf.length;

    // Reserve max possible length (2 words per char)
    // NB: by unknown reasons, Array is significantly faster for
    //     String.fromCharCode.apply than Uint16Array.
    var utf16buf = new Array(len*2);

    for (out=0, i=0; i<len;) {
        c = buf[i++];
        // quick process ascii
        if (c < 0x80) { utf16buf[out++] = c; continue; }

        c_len = _utf8len[c];
        // skip 5 & 6 byte codes
        if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len-1; continue; }

        // apply mask on first byte
        c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;
        // join the rest
        while (c_len > 1 && i < len) {
            c = (c << 6) | (buf[i++] & 0x3f);
            c_len--;
        }

        // terminated by end of string?
        if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }

        if (c < 0x10000) {
            utf16buf[out++] = c;
        } else {
            c -= 0x10000;
            utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);
            utf16buf[out++] = 0xdc00 | (c & 0x3ff);
        }
    }

    // shrinkBuf(utf16buf, out)
    if (utf16buf.length !== out) {
        if(utf16buf.subarray) {
            utf16buf = utf16buf.subarray(0, out);
        } else {
            utf16buf.length = out;
        }
    }

    // return String.fromCharCode.apply(null, utf16buf);
    return utils.applyFromCharCode(utf16buf);
};


// That's all for the pako functions.


/**
 * Transform a javascript string into an array (typed if possible) of bytes,
 * UTF-8 encoded.
 * @param {String} str the string to encode
 * @return {Array|Uint8Array|Buffer} the UTF-8 encoded string.
 */
exports.utf8encode = function utf8encode(str) {
    if (support.nodebuffer) {
        return nodeBuffer(str, "utf-8");
    }

    return string2buf(str);
};


/**
 * Transform a bytes array (or a representation) representing an UTF-8 encoded
 * string into a javascript string.
 * @param {Array|Uint8Array|Buffer} buf the data de decode
 * @return {String} the decoded string.
 */
exports.utf8decode = function utf8decode(buf) {
    if (support.nodebuffer) {
        return utils.transformTo("nodebuffer", buf).toString("utf-8");
    }

    buf = utils.transformTo(support.uint8array ? "uint8array" : "array", buf);

    // return buf2string(buf);
    // Chrome prefers to work with "small" chunks of data
    // for the method buf2string.
    // Firefox and Chrome has their own shortcut, IE doesn't seem to really care.
    var result = [], k = 0, len = buf.length, chunk = 65536;
    while (k < len) {
        var nextBoundary = utf8border(buf, Math.min(k + chunk, len));
        if (support.uint8array) {
            result.push(buf2string(buf.subarray(k, nextBoundary)));
        } else {
            result.push(buf2string(buf.slice(k, nextBoundary)));
        }
        k = nextBoundary;
    }
    return result.join("");

};
// vim: set shiftwidth=4 softtabstop=4:

},{"./nodeBuffer":117,"./support":123,"./utils":127}],127:[function(require,module,exports){
'use strict';
var support = require('./support');
var compressions = require('./compressions');
var nodeBuffer = require('./nodeBuffer');
/**
 * Convert a string to a "binary string" : a string containing only char codes between 0 and 255.
 * @param {string} str the string to transform.
 * @return {String} the binary string.
 */
exports.string2binary = function(str) {
    var result = "";
    for (var i = 0; i < str.length; i++) {
        result += String.fromCharCode(str.charCodeAt(i) & 0xff);
    }
    return result;
};
exports.arrayBuffer2Blob = function(buffer, mimeType) {
    exports.checkSupport("blob");
	mimeType = mimeType || 'application/zip';

    try {
        // Blob constructor
        return new Blob([buffer], {
            type: mimeType
        });
    }
    catch (e) {

        try {
            // deprecated, browser only, old way
            var Builder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;
            var builder = new Builder();
            builder.append(buffer);
            return builder.getBlob(mimeType);
        }
        catch (e) {

            // well, fuck ?!
            throw new Error("Bug : can't construct the Blob.");
        }
    }


};
/**
 * The identity function.
 * @param {Object} input the input.
 * @return {Object} the same input.
 */
function identity(input) {
    return input;
}

/**
 * Fill in an array with a string.
 * @param {String} str the string to use.
 * @param {Array|ArrayBuffer|Uint8Array|Buffer} array the array to fill in (will be mutated).
 * @return {Array|ArrayBuffer|Uint8Array|Buffer} the updated array.
 */
function stringToArrayLike(str, array) {
    for (var i = 0; i < str.length; ++i) {
        array[i] = str.charCodeAt(i) & 0xFF;
    }
    return array;
}

/**
 * Transform an array-like object to a string.
 * @param {Array|ArrayBuffer|Uint8Array|Buffer} array the array to transform.
 * @return {String} the result.
 */
function arrayLikeToString(array) {
    // Performances notes :
    // --------------------
    // String.fromCharCode.apply(null, array) is the fastest, see
    // see http://jsperf.com/converting-a-uint8array-to-a-string/2
    // but the stack is limited (and we can get huge arrays !).
    //
    // result += String.fromCharCode(array[i]); generate too many strings !
    //
    // This code is inspired by http://jsperf.com/arraybuffer-to-string-apply-performance/2
    var chunk = 65536;
    var result = [],
        len = array.length,
        type = exports.getTypeOf(array),
        k = 0,
        canUseApply = true;
      try {
         switch(type) {
            case "uint8array":
               String.fromCharCode.apply(null, new Uint8Array(0));
               break;
            case "nodebuffer":
               String.fromCharCode.apply(null, nodeBuffer(0));
               break;
         }
      } catch(e) {
         canUseApply = false;
      }

      // no apply : slow and painful algorithm
      // default browser on android 4.*
      if (!canUseApply) {
         var resultStr = "";
         for(var i = 0; i < array.length;i++) {
            resultStr += String.fromCharCode(array[i]);
         }
    return resultStr;
    }
    while (k < len && chunk > 1) {
        try {
            if (type === "array" || type === "nodebuffer") {
                result.push(String.fromCharCode.apply(null, array.slice(k, Math.min(k + chunk, len))));
            }
            else {
                result.push(String.fromCharCode.apply(null, array.subarray(k, Math.min(k + chunk, len))));
            }
            k += chunk;
        }
        catch (e) {
            chunk = Math.floor(chunk / 2);
        }
    }
    return result.join("");
}

exports.applyFromCharCode = arrayLikeToString;


/**
 * Copy the data from an array-like to an other array-like.
 * @param {Array|ArrayBuffer|Uint8Array|Buffer} arrayFrom the origin array.
 * @param {Array|ArrayBuffer|Uint8Array|Buffer} arrayTo the destination array which will be mutated.
 * @return {Array|ArrayBuffer|Uint8Array|Buffer} the updated destination array.
 */
function arrayLikeToArrayLike(arrayFrom, arrayTo) {
    for (var i = 0; i < arrayFrom.length; i++) {
        arrayTo[i] = arrayFrom[i];
    }
    return arrayTo;
}

// a matrix containing functions to transform everything into everything.
var transform = {};

// string to ?
transform["string"] = {
    "string": identity,
    "array": function(input) {
        return stringToArrayLike(input, new Array(input.length));
    },
    "arraybuffer": function(input) {
        return transform["string"]["uint8array"](input).buffer;
    },
    "uint8array": function(input) {
        return stringToArrayLike(input, new Uint8Array(input.length));
    },
    "nodebuffer": function(input) {
        return stringToArrayLike(input, nodeBuffer(input.length));
    }
};

// array to ?
transform["array"] = {
    "string": arrayLikeToString,
    "array": identity,
    "arraybuffer": function(input) {
        return (new Uint8Array(input)).buffer;
    },
    "uint8array": function(input) {
        return new Uint8Array(input);
    },
    "nodebuffer": function(input) {
        return nodeBuffer(input);
    }
};

// arraybuffer to ?
transform["arraybuffer"] = {
    "string": function(input) {
        return arrayLikeToString(new Uint8Array(input));
    },
    "array": function(input) {
        return arrayLikeToArrayLike(new Uint8Array(input), new Array(input.byteLength));
    },
    "arraybuffer": identity,
    "uint8array": function(input) {
        return new Uint8Array(input);
    },
    "nodebuffer": function(input) {
        return nodeBuffer(new Uint8Array(input));
    }
};

// uint8array to ?
transform["uint8array"] = {
    "string": arrayLikeToString,
    "array": function(input) {
        return arrayLikeToArrayLike(input, new Array(input.length));
    },
    "arraybuffer": function(input) {
        return input.buffer;
    },
    "uint8array": identity,
    "nodebuffer": function(input) {
        return nodeBuffer(input);
    }
};

// nodebuffer to ?
transform["nodebuffer"] = {
    "string": arrayLikeToString,
    "array": function(input) {
        return arrayLikeToArrayLike(input, new Array(input.length));
    },
    "arraybuffer": function(input) {
        return transform["nodebuffer"]["uint8array"](input).buffer;
    },
    "uint8array": function(input) {
        return arrayLikeToArrayLike(input, new Uint8Array(input.length));
    },
    "nodebuffer": identity
};

/**
 * Transform an input into any type.
 * The supported output type are : string, array, uint8array, arraybuffer, nodebuffer.
 * If no output type is specified, the unmodified input will be returned.
 * @param {String} outputType the output type.
 * @param {String|Array|ArrayBuffer|Uint8Array|Buffer} input the input to convert.
 * @throws {Error} an Error if the browser doesn't support the requested output type.
 */
exports.transformTo = function(outputType, input) {
    if (!input) {
        // undefined, null, etc
        // an empty string won't harm.
        input = "";
    }
    if (!outputType) {
        return input;
    }
    exports.checkSupport(outputType);
    var inputType = exports.getTypeOf(input);
    var result = transform[inputType][outputType](input);
    return result;
};

/**
 * Return the type of the input.
 * The type will be in a format valid for JSZip.utils.transformTo : string, array, uint8array, arraybuffer.
 * @param {Object} input the input to identify.
 * @return {String} the (lowercase) type of the input.
 */
exports.getTypeOf = function(input) {
    if (typeof input === "string") {
        return "string";
    }
    if (Object.prototype.toString.call(input) === "[object Array]") {
        return "array";
    }
    if (support.nodebuffer && nodeBuffer.test(input)) {
        return "nodebuffer";
    }
    if (support.uint8array && input instanceof Uint8Array) {
        return "uint8array";
    }
    if (support.arraybuffer && input instanceof ArrayBuffer) {
        return "arraybuffer";
    }
};

/**
 * Throw an exception if the type is not supported.
 * @param {String} type the type to check.
 * @throws {Error} an Error if the browser doesn't support the requested type.
 */
exports.checkSupport = function(type) {
    var supported = support[type.toLowerCase()];
    if (!supported) {
        throw new Error(type + " is not supported by this browser");
    }
};
exports.MAX_VALUE_16BITS = 65535;
exports.MAX_VALUE_32BITS = -1; // well, "\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF" is parsed as -1

/**
 * Prettify a string read as binary.
 * @param {string} str the string to prettify.
 * @return {string} a pretty string.
 */
exports.pretty = function(str) {
    var res = '',
        code, i;
    for (i = 0; i < (str || "").length; i++) {
        code = str.charCodeAt(i);
        res += '\\x' + (code < 16 ? "0" : "") + code.toString(16).toUpperCase();
    }
    return res;
};

/**
 * Find a compression registered in JSZip.
 * @param {string} compressionMethod the method magic to find.
 * @return {Object|null} the JSZip compression object, null if none found.
 */
exports.findCompression = function(compressionMethod) {
    for (var method in compressions) {
        if (!compressions.hasOwnProperty(method)) {
            continue;
        }
        if (compressions[method].magic === compressionMethod) {
            return compressions[method];
        }
    }
    return null;
};
/**
* Cross-window, cross-Node-context regular expression detection
* @param  {Object}  object Anything
* @return {Boolean}        true if the object is a regular expression,
* false otherwise
*/
exports.isRegExp = function (object) {
    return Object.prototype.toString.call(object) === "[object RegExp]";
};


},{"./compressions":109,"./nodeBuffer":117,"./support":123}],128:[function(require,module,exports){
'use strict';
var StringReader = require('./stringReader');
var NodeBufferReader = require('./nodeBufferReader');
var Uint8ArrayReader = require('./uint8ArrayReader');
var utils = require('./utils');
var sig = require('./signature');
var ZipEntry = require('./zipEntry');
var support = require('./support');
var jszipProto = require('./object');
//  class ZipEntries {{{
/**
 * All the entries in the zip file.
 * @constructor
 * @param {String|ArrayBuffer|Uint8Array} data the binary stream to load.
 * @param {Object} loadOptions Options for loading the stream.
 */
function ZipEntries(data, loadOptions) {
    this.files = [];
    this.loadOptions = loadOptions;
    if (data) {
        this.load(data);
    }
}
ZipEntries.prototype = {
    /**
     * Check that the reader is on the speficied signature.
     * @param {string} expectedSignature the expected signature.
     * @throws {Error} if it is an other signature.
     */
    checkSignature: function(expectedSignature) {
        var signature = this.reader.readString(4);
        if (signature !== expectedSignature) {
            throw new Error("Corrupted zip or bug : unexpected signature " + "(" + utils.pretty(signature) + ", expected " + utils.pretty(expectedSignature) + ")");
        }
    },
    /**
     * Read the end of the central directory.
     */
    readBlockEndOfCentral: function() {
        this.diskNumber = this.reader.readInt(2);
        this.diskWithCentralDirStart = this.reader.readInt(2);
        this.centralDirRecordsOnThisDisk = this.reader.readInt(2);
        this.centralDirRecords = this.reader.readInt(2);
        this.centralDirSize = this.reader.readInt(4);
        this.centralDirOffset = this.reader.readInt(4);

        this.zipCommentLength = this.reader.readInt(2);
        // warning : the encoding depends of the system locale
        // On a linux machine with LANG=en_US.utf8, this field is utf8 encoded.
        // On a windows machine, this field is encoded with the localized windows code page.
        this.zipComment = this.reader.readString(this.zipCommentLength);
        // To get consistent behavior with the generation part, we will assume that
        // this is utf8 encoded.
        this.zipComment = jszipProto.utf8decode(this.zipComment);
    },
    /**
     * Read the end of the Zip 64 central directory.
     * Not merged with the method readEndOfCentral :
     * The end of central can coexist with its Zip64 brother,
     * I don't want to read the wrong number of bytes !
     */
    readBlockZip64EndOfCentral: function() {
        this.zip64EndOfCentralSize = this.reader.readInt(8);
        this.versionMadeBy = this.reader.readString(2);
        this.versionNeeded = this.reader.readInt(2);
        this.diskNumber = this.reader.readInt(4);
        this.diskWithCentralDirStart = this.reader.readInt(4);
        this.centralDirRecordsOnThisDisk = this.reader.readInt(8);
        this.centralDirRecords = this.reader.readInt(8);
        this.centralDirSize = this.reader.readInt(8);
        this.centralDirOffset = this.reader.readInt(8);

        this.zip64ExtensibleData = {};
        var extraDataSize = this.zip64EndOfCentralSize - 44,
            index = 0,
            extraFieldId,
            extraFieldLength,
            extraFieldValue;
        while (index < extraDataSize) {
            extraFieldId = this.reader.readInt(2);
            extraFieldLength = this.reader.readInt(4);
            extraFieldValue = this.reader.readString(extraFieldLength);
            this.zip64ExtensibleData[extraFieldId] = {
                id: extraFieldId,
                length: extraFieldLength,
                value: extraFieldValue
            };
        }
    },
    /**
     * Read the end of the Zip 64 central directory locator.
     */
    readBlockZip64EndOfCentralLocator: function() {
        this.diskWithZip64CentralDirStart = this.reader.readInt(4);
        this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8);
        this.disksCount = this.reader.readInt(4);
        if (this.disksCount > 1) {
            throw new Error("Multi-volumes zip are not supported");
        }
    },
    /**
     * Read the local files, based on the offset read in the central part.
     */
    readLocalFiles: function() {
        var i, file;
        for (i = 0; i < this.files.length; i++) {
            file = this.files[i];
            this.reader.setIndex(file.localHeaderOffset);
            this.checkSignature(sig.LOCAL_FILE_HEADER);
            file.readLocalPart(this.reader);
            file.handleUTF8();
            file.processAttributes();
        }
    },
    /**
     * Read the central directory.
     */
    readCentralDir: function() {
        var file;

        this.reader.setIndex(this.centralDirOffset);
        while (this.reader.readString(4) === sig.CENTRAL_FILE_HEADER) {
            file = new ZipEntry({
                zip64: this.zip64
            }, this.loadOptions);
            file.readCentralPart(this.reader);
            this.files.push(file);
        }
    },
    /**
     * Read the end of central directory.
     */
    readEndOfCentral: function() {
        var offset = this.reader.lastIndexOfSignature(sig.CENTRAL_DIRECTORY_END);
        if (offset === -1) {
            // Check if the content is a truncated zip or complete garbage.
            // A "LOCAL_FILE_HEADER" is not required at the beginning (auto
            // extractible zip for example) but it can give a good hint.
            // If an ajax request was used without responseType, we will also
            // get unreadable data.
            var isGarbage = true;
            try {
                this.reader.setIndex(0);
                this.checkSignature(sig.LOCAL_FILE_HEADER);
                isGarbage = false;
            } catch (e) {}

            if (isGarbage) {
                throw new Error("Can't find end of central directory : is this a zip file ? " +
                                "If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html");
            } else {
                throw new Error("Corrupted zip : can't find end of central directory");
            }
        }
        this.reader.setIndex(offset);
        this.checkSignature(sig.CENTRAL_DIRECTORY_END);
        this.readBlockEndOfCentral();


        /* extract from the zip spec :
            4)  If one of the fields in the end of central directory
                record is too small to hold required data, the field
                should be set to -1 (0xFFFF or 0xFFFFFFFF) and the
                ZIP64 format record should be created.
            5)  The end of central directory record and the
                Zip64 end of central directory locator record must
                reside on the same disk when splitting or spanning
                an archive.
         */
        if (this.diskNumber === utils.MAX_VALUE_16BITS || this.diskWithCentralDirStart === utils.MAX_VALUE_16BITS || this.centralDirRecordsOnThisDisk === utils.MAX_VALUE_16BITS || this.centralDirRecords === utils.MAX_VALUE_16BITS || this.centralDirSize === utils.MAX_VALUE_32BITS || this.centralDirOffset === utils.MAX_VALUE_32BITS) {
            this.zip64 = true;

            /*
            Warning : the zip64 extension is supported, but ONLY if the 64bits integer read from
            the zip file can fit into a 32bits integer. This cannot be solved : Javascript represents
            all numbers as 64-bit double precision IEEE 754 floating point numbers.
            So, we have 53bits for integers and bitwise operations treat everything as 32bits.
            see https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/Bitwise_Operators
            and http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf section 8.5
            */

            // should look for a zip64 EOCD locator
            offset = this.reader.lastIndexOfSignature(sig.ZIP64_CENTRAL_DIRECTORY_LOCATOR);
            if (offset === -1) {
                throw new Error("Corrupted zip : can't find the ZIP64 end of central directory locator");
            }
            this.reader.setIndex(offset);
            this.checkSignature(sig.ZIP64_CENTRAL_DIRECTORY_LOCATOR);
            this.readBlockZip64EndOfCentralLocator();

            // now the zip64 EOCD record
            this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir);
            this.checkSignature(sig.ZIP64_CENTRAL_DIRECTORY_END);
            this.readBlockZip64EndOfCentral();
        }
    },
    prepareReader: function(data) {
        var type = utils.getTypeOf(data);
        if (type === "string" && !support.uint8array) {
            this.reader = new StringReader(data, this.loadOptions.optimizedBinaryString);
        }
        else if (type === "nodebuffer") {
            this.reader = new NodeBufferReader(data);
        }
        else {
            this.reader = new Uint8ArrayReader(utils.transformTo("uint8array", data));
        }
    },
    /**
     * Read a zip file and create ZipEntries.
     * @param {String|ArrayBuffer|Uint8Array|Buffer} data the binary string representing a zip file.
     */
    load: function(data) {
        this.prepareReader(data);
        this.readEndOfCentral();
        this.readCentralDir();
        this.readLocalFiles();
    }
};
// }}} end of ZipEntries
module.exports = ZipEntries;

},{"./nodeBufferReader":118,"./object":119,"./signature":120,"./stringReader":121,"./support":123,"./uint8ArrayReader":124,"./utils":127,"./zipEntry":129}],129:[function(require,module,exports){
'use strict';
var StringReader = require('./stringReader');
var utils = require('./utils');
var CompressedObject = require('./compressedObject');
var jszipProto = require('./object');

var MADE_BY_DOS = 0x00;
var MADE_BY_UNIX = 0x03;

// class ZipEntry {{{
/**
 * An entry in the zip file.
 * @constructor
 * @param {Object} options Options of the current file.
 * @param {Object} loadOptions Options for loading the stream.
 */
function ZipEntry(options, loadOptions) {
    this.options = options;
    this.loadOptions = loadOptions;
}
ZipEntry.prototype = {
    /**
     * say if the file is encrypted.
     * @return {boolean} true if the file is encrypted, false otherwise.
     */
    isEncrypted: function() {
        // bit 1 is set
        return (this.bitFlag & 0x0001) === 0x0001;
    },
    /**
     * say if the file has utf-8 filename/comment.
     * @return {boolean} true if the filename/comment is in utf-8, false otherwise.
     */
    useUTF8: function() {
        // bit 11 is set
        return (this.bitFlag & 0x0800) === 0x0800;
    },
    /**
     * Prepare the function used to generate the compressed content from this ZipFile.
     * @param {DataReader} reader the reader to use.
     * @param {number} from the offset from where we should read the data.
     * @param {number} length the length of the data to read.
     * @return {Function} the callback to get the compressed content (the type depends of the DataReader class).
     */
    prepareCompressedContent: function(reader, from, length) {
        return function() {
            var previousIndex = reader.index;
            reader.setIndex(from);
            var compressedFileData = reader.readData(length);
            reader.setIndex(previousIndex);

            return compressedFileData;
        };
    },
    /**
     * Prepare the function used to generate the uncompressed content from this ZipFile.
     * @param {DataReader} reader the reader to use.
     * @param {number} from the offset from where we should read the data.
     * @param {number} length the length of the data to read.
     * @param {JSZip.compression} compression the compression used on this file.
     * @param {number} uncompressedSize the uncompressed size to expect.
     * @return {Function} the callback to get the uncompressed content (the type depends of the DataReader class).
     */
    prepareContent: function(reader, from, length, compression, uncompressedSize) {
        return function() {

            var compressedFileData = utils.transformTo(compression.uncompressInputType, this.getCompressedContent());
            var uncompressedFileData = compression.uncompress(compressedFileData);

            if (uncompressedFileData.length !== uncompressedSize) {
                throw new Error("Bug : uncompressed data size mismatch");
            }

            return uncompressedFileData;
        };
    },
    /**
     * Read the local part of a zip file and add the info in this object.
     * @param {DataReader} reader the reader to use.
     */
    readLocalPart: function(reader) {
        var compression, localExtraFieldsLength;

        // we already know everything from the central dir !
        // If the central dir data are false, we are doomed.
        // On the bright side, the local part is scary  : zip64, data descriptors, both, etc.
        // The less data we get here, the more reliable this should be.
        // Let's skip the whole header and dash to the data !
        reader.skip(22);
        // in some zip created on windows, the filename stored in the central dir contains \ instead of /.
        // Strangely, the filename here is OK.
        // I would love to treat these zip files as corrupted (see http://www.info-zip.org/FAQ.html#backslashes
        // or APPNOTE#4.4.17.1, "All slashes MUST be forward slashes '/'") but there are a lot of bad zip generators...
        // Search "unzip mismatching "local" filename continuing with "central" filename version" on
        // the internet.
        //
        // I think I see the logic here : the central directory is used to display
        // content and the local directory is used to extract the files. Mixing / and \
        // may be used to display \ to windows users and use / when extracting the files.
        // Unfortunately, this lead also to some issues : http://seclists.org/fulldisclosure/2009/Sep/394
        this.fileNameLength = reader.readInt(2);
        localExtraFieldsLength = reader.readInt(2); // can't be sure this will be the same as the central dir
        this.fileName = reader.readString(this.fileNameLength);
        reader.skip(localExtraFieldsLength);

        if (this.compressedSize == -1 || this.uncompressedSize == -1) {
            throw new Error("Bug or corrupted zip : didn't get enough informations from the central directory " + "(compressedSize == -1 || uncompressedSize == -1)");
        }

        compression = utils.findCompression(this.compressionMethod);
        if (compression === null) { // no compression found
            throw new Error("Corrupted zip : compression " + utils.pretty(this.compressionMethod) + " unknown (inner file : " + this.fileName + ")");
        }
        this.decompressed = new CompressedObject();
        this.decompressed.compressedSize = this.compressedSize;
        this.decompressed.uncompressedSize = this.uncompressedSize;
        this.decompressed.crc32 = this.crc32;
        this.decompressed.compressionMethod = this.compressionMethod;
        this.decompressed.getCompressedContent = this.prepareCompressedContent(reader, reader.index, this.compressedSize, compression);
        this.decompressed.getContent = this.prepareContent(reader, reader.index, this.compressedSize, compression, this.uncompressedSize);

        // we need to compute the crc32...
        if (this.loadOptions.checkCRC32) {
            this.decompressed = utils.transformTo("string", this.decompressed.getContent());
            if (jszipProto.crc32(this.decompressed) !== this.crc32) {
                throw new Error("Corrupted zip : CRC32 mismatch");
            }
        }
    },

    /**
     * Read the central part of a zip file and add the info in this object.
     * @param {DataReader} reader the reader to use.
     */
    readCentralPart: function(reader) {
        this.versionMadeBy = reader.readInt(2);
        this.versionNeeded = reader.readInt(2);
        this.bitFlag = reader.readInt(2);
        this.compressionMethod = reader.readString(2);
        this.date = reader.readDate();
        this.crc32 = reader.readInt(4);
        this.compressedSize = reader.readInt(4);
        this.uncompressedSize = reader.readInt(4);
        this.fileNameLength = reader.readInt(2);
        this.extraFieldsLength = reader.readInt(2);
        this.fileCommentLength = reader.readInt(2);
        this.diskNumberStart = reader.readInt(2);
        this.internalFileAttributes = reader.readInt(2);
        this.externalFileAttributes = reader.readInt(4);
        this.localHeaderOffset = reader.readInt(4);

        if (this.isEncrypted()) {
            throw new Error("Encrypted zip are not supported");
        }

        this.fileName = reader.readString(this.fileNameLength);
        this.readExtraFields(reader);
        this.parseZIP64ExtraField(reader);
        this.fileComment = reader.readString(this.fileCommentLength);
    },

    /**
     * Parse the external file attributes and get the unix/dos permissions.
     */
    processAttributes: function () {
        this.unixPermissions = null;
        this.dosPermissions = null;
        var madeBy = this.versionMadeBy >> 8;

        // Check if we have the DOS directory flag set.
        // We look for it in the DOS and UNIX permissions
        // but some unknown platform could set it as a compatibility flag.
        this.dir = this.externalFileAttributes & 0x0010 ? true : false;

        if(madeBy === MADE_BY_DOS) {
            // first 6 bits (0 to 5)
            this.dosPermissions = this.externalFileAttributes & 0x3F;
        }

        if(madeBy === MADE_BY_UNIX) {
            this.unixPermissions = (this.externalFileAttributes >> 16) & 0xFFFF;
            // the octal permissions are in (this.unixPermissions & 0x01FF).toString(8);
        }

        // fail safe : if the name ends with a / it probably means a folder
        if (!this.dir && this.fileName.slice(-1) === '/') {
            this.dir = true;
        }
    },

    /**
     * Parse the ZIP64 extra field and merge the info in the current ZipEntry.
     * @param {DataReader} reader the reader to use.
     */
    parseZIP64ExtraField: function(reader) {

        if (!this.extraFields[0x0001]) {
            return;
        }

        // should be something, preparing the extra reader
        var extraReader = new StringReader(this.extraFields[0x0001].value);

        // I really hope that these 64bits integer can fit in 32 bits integer, because js
        // won't let us have more.
        if (this.uncompressedSize === utils.MAX_VALUE_32BITS) {
            this.uncompressedSize = extraReader.readInt(8);
        }
        if (this.compressedSize === utils.MAX_VALUE_32BITS) {
            this.compressedSize = extraReader.readInt(8);
        }
        if (this.localHeaderOffset === utils.MAX_VALUE_32BITS) {
            this.localHeaderOffset = extraReader.readInt(8);
        }
        if (this.diskNumberStart === utils.MAX_VALUE_32BITS) {
            this.diskNumberStart = extraReader.readInt(4);
        }
    },
    /**
     * Read the central part of a zip file and add the info in this object.
     * @param {DataReader} reader the reader to use.
     */
    readExtraFields: function(reader) {
        var start = reader.index,
            extraFieldId,
            extraFieldLength,
            extraFieldValue;

        this.extraFields = this.extraFields || {};

        while (reader.index < start + this.extraFieldsLength) {
            extraFieldId = reader.readInt(2);
            extraFieldLength = reader.readInt(2);
            extraFieldValue = reader.readString(extraFieldLength);

            this.extraFields[extraFieldId] = {
                id: extraFieldId,
                length: extraFieldLength,
                value: extraFieldValue
            };
        }
    },
    /**
     * Apply an UTF8 transformation if needed.
     */
    handleUTF8: function() {
        if (this.useUTF8()) {
            this.fileName = jszipProto.utf8decode(this.fileName);
            this.fileComment = jszipProto.utf8decode(this.fileComment);
        } else {
            var upath = this.findExtraFieldUnicodePath();
            if (upath !== null) {
                this.fileName = upath;
            }
            var ucomment = this.findExtraFieldUnicodeComment();
            if (ucomment !== null) {
                this.fileComment = ucomment;
            }
        }
    },

    /**
     * Find the unicode path declared in the extra field, if any.
     * @return {String} the unicode path, null otherwise.
     */
    findExtraFieldUnicodePath: function() {
        var upathField = this.extraFields[0x7075];
        if (upathField) {
            var extraReader = new StringReader(upathField.value);

            // wrong version
            if (extraReader.readInt(1) !== 1) {
                return null;
            }

            // the crc of the filename changed, this field is out of date.
            if (jszipProto.crc32(this.fileName) !== extraReader.readInt(4)) {
                return null;
            }

            return jszipProto.utf8decode(extraReader.readString(upathField.length - 5));
        }
        return null;
    },

    /**
     * Find the unicode comment declared in the extra field, if any.
     * @return {String} the unicode comment, null otherwise.
     */
    findExtraFieldUnicodeComment: function() {
        var ucommentField = this.extraFields[0x6375];
        if (ucommentField) {
            var extraReader = new StringReader(ucommentField.value);

            // wrong version
            if (extraReader.readInt(1) !== 1) {
                return null;
            }

            // the crc of the comment changed, this field is out of date.
            if (jszipProto.crc32(this.fileComment) !== extraReader.readInt(4)) {
                return null;
            }

            return jszipProto.utf8decode(extraReader.readString(ucommentField.length - 5));
        }
        return null;
    }
};
module.exports = ZipEntry;

},{"./compressedObject":108,"./object":119,"./stringReader":121,"./utils":127}],130:[function(require,module,exports){
(function (global){
/**
 * @license
 * lodash 4.6.1 (Custom Build) <https://lodash.com/>
 * Build: `lodash -d -o ./foo/lodash.js`
 * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.6.1';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Used as the `TypeError` message for "Functions" methods. */
  var FUNC_ERROR_TEXT = 'Expected a function';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for wrapper metadata. */
  var BIND_FLAG = 1,
      BIND_KEY_FLAG = 2,
      CURRY_BOUND_FLAG = 4,
      CURRY_FLAG = 8,
      CURRY_RIGHT_FLAG = 16,
      PARTIAL_FLAG = 32,
      PARTIAL_RIGHT_FLAG = 64,
      ARY_FLAG = 128,
      REARG_FLAG = 256,
      FLIP_FLAG = 512;

  /** Used to compose bitmasks for comparison styles. */
  var UNORDERED_COMPARE_FLAG = 1,
      PARTIAL_COMPARE_FLAG = 2;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 150,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      objectTag = '[object Object]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,
      reUnescapedHtml = /[&<>"'`]/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]/g;

  /** Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns). */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading and trailing whitespace. */
  var reTrim = /^\s+|\s+$/g,
      reTrimStart = /^\s+/,
      reTrimEnd = /\s+$/;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect hexadecimal string values. */
  var reHasHexPrefix = /^0x/i;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari > 5). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */
  var reLatin1 = /[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f\\ufe20-\\ufe23',
      rsComboSymbolsRange = '\\u20d0-\\u20f0',
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsQuoteRange = '\\u2018\\u2019\\u201c\\u201d',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsQuoteRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',
      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');

  /** Used to match non-compound words composed of alphanumeric characters. */
  var reBasicWord = /[a-zA-Z0-9]+/g;

  /** Used to match complex or compound words. */
  var reComplexWord = RegExp([
    rsUpper + '?' + rsLower + '+(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsUpperMisc + '+(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',
    rsUpper + '?' + rsLowerMisc + '+',
    rsUpper + '+',
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasComplexWord = /[a-z][A-Z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', '_',
    'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dateTag] = typedArrayTags[errorTag] =
  typedArrayTags[funcTag] = typedArrayTags[mapTag] =
  typedArrayTags[numberTag] = typedArrayTags[objectTag] =
  typedArrayTags[regexpTag] = typedArrayTags[setTag] =
  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =
  cloneableTags[dateTag] = cloneableTags[float32Tag] =
  cloneableTags[float64Tag] = cloneableTags[int8Tag] =
  cloneableTags[int16Tag] = cloneableTags[int32Tag] =
  cloneableTags[mapTag] = cloneableTags[numberTag] =
  cloneableTags[objectTag] = cloneableTags[regexpTag] =
  cloneableTags[setTag] = cloneableTags[stringTag] =
  cloneableTags[symbolTag] = cloneableTags[uint8Tag] =
  cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] =
  cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map latin-1 supplementary letters to basic latin letters. */
  var deburredLetters = {
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcC': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xeC': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;',
    '`': '&#96;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'",
    '&#96;': '`'
  };

  /** Used to determine if values are of the language type `Object`. */
  var objectTypes = {
    'function': true,
    'object': true
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `exports`. */
  var freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)
    ? exports
    : undefined;

  /** Detect free variable `module`. */
  var freeModule = (objectTypes[typeof module] && module && !module.nodeType)
    ? module
    : undefined;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = (freeModule && freeModule.exports === freeExports)
    ? freeExports
    : undefined;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);

  /** Detect free variable `self`. */
  var freeSelf = checkGlobal(objectTypes[typeof self] && self);

  /** Detect free variable `window`. */
  var freeWindow = checkGlobal(objectTypes[typeof window] && window);

  /** Detect `this` as the global object. */
  var thisGlobal = checkGlobal(objectTypes[typeof this] && this);

  /**
   * Used as a reference to the global object.
   *
   * The `this` value is used if it's the global object to avoid Greasemonkey's
   * restricted `window` object, otherwise the `window` object is used.
   */
  var root = freeGlobal ||
    ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) ||
      freeSelf || thisGlobal || Function('return this')();

  /*--------------------------------------------------------------------------*/

  /**
   * Adds the key-value `pair` to `map`.
   *
   * @private
   * @param {Object} map The map to modify.
   * @param {Array} pair The key-value pair to add.
   * @returns {Object} Returns `map`.
   */
  function addMapEntry(map, pair) {
    // Don't return `Map#set` because it doesn't return the map instance in IE 11.
    map.set(pair[0], pair[1]);
    return map;
  }

  /**
   * Adds `value` to `set`.
   *
   * @private
   * @param {Object} set The set to modify.
   * @param {*} value The value to add.
   * @returns {Object} Returns `set`.
   */
  function addSetEntry(set, value) {
    set.add(value);
    return set;
  }

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {...*} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    var length = args.length;
    switch (length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * Creates a new array concatenating `array` with `other`.
   *
   * @private
   * @param {Array} array The first array to concatenate.
   * @param {Array} other The second array to concatenate.
   * @returns {Array} Returns the new concatenated array.
   */
  function arrayConcat(array, other) {
    var index = -1,
        length = array.length,
        othIndex = -1,
        othLength = other.length,
        result = Array(length + othLength);

    while (++index < length) {
      result[index] = array[index];
    }
    while (++othIndex < othLength) {
      result[index++] = other[othIndex];
    }
    return result;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} array The array to search.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    return !!array.length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to search.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * The base implementation of methods like `_.max` and `_.min` which accepts a
   * `comparator` to determine the extremum value.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The iteratee invoked per iteration.
   * @param {Function} comparator The comparator used to compare values.
   * @returns {*} Returns the extremum value.
   */
  function baseExtremum(array, iteratee, comparator) {
    var index = -1,
        length = array.length;

    while (++index < length) {
      var value = array[index],
          current = iteratee(value);

      if (current != null && (computed === undefined
            ? current === current
            : comparator(current, computed)
          )) {
        var computed = current,
            result = value;
      }
    }
    return result;
  }

  /**
   * The base implementation of methods like `_.find` and `_.findKey`, without
   * support for iteratee shorthands, which iterates over `collection` using
   * `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to search.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @param {boolean} [retKey] Specify returning the key of the found element instead of the element itself.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFind(collection, predicate, eachFunc, retKey) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = retKey ? key : value;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to search.
   * @param {Function} predicate The function invoked per iteration.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromRight) {
    var length = array.length,
        index = fromRight ? length : -1;

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to search.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    if (value !== value) {
      return indexOfNaN(array, fromIndex);
    }
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to search.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` without support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the new array of key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.unary` without support for storing wrapper metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Checks if `value` is a global object.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {null|Object} Returns `value` if it's a global object, else `null`.
   */
  function checkGlobal(value) {
    return (value && value.Object === Object) ? value : null;
  }

  /**
   * Compares values to sort them in ascending order.
   *
   * @private
   * @param {*} value The value to compare.
   * @param {*} other The other value to compare.
   * @returns {number} Returns the sort order indicator for `value`.
   */
  function compareAscending(value, other) {
    if (value !== other) {
      var valIsNull = value === null,
          valIsUndef = value === undefined,
          valIsReflexive = value === value;

      var othIsNull = other === null,
          othIsUndef = other === undefined,
          othIsReflexive = other === other;

      if ((value > other && !othIsNull) || !valIsReflexive ||
          (valIsNull && !othIsUndef && othIsReflexive) ||
          (valIsUndef && othIsReflexive)) {
        return 1;
      }
      if ((value < other && !valIsNull) || !othIsReflexive ||
          (othIsNull && !valIsUndef && valIsReflexive) ||
          (othIsUndef && valIsReflexive)) {
        return -1;
      }
    }
    return 0;
  }

  /**
   * Used by `_.orderBy` to compare multiple properties of a value to another
   * and stable sort them.
   *
   * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
   * specify an order of "desc" for descending or "asc" for ascending sort order
   * of corresponding values.
   *
   * @private
   * @param {Object} object The object to compare.
   * @param {Object} other The other object to compare.
   * @param {boolean[]|string[]} orders The order to sort by for each property.
   * @returns {number} Returns the sort order indicator for `object`.
   */
  function compareMultiple(object, other, orders) {
    var index = -1,
        objCriteria = object.criteria,
        othCriteria = other.criteria,
        length = objCriteria.length,
        ordersLength = orders.length;

    while (++index < length) {
      var result = compareAscending(objCriteria[index], othCriteria[index]);
      if (result) {
        if (index >= ordersLength) {
          return result;
        }
        var order = orders[index];
        return result * (order == 'desc' ? -1 : 1);
      }
    }
    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
    // that causes it, under certain circumstances, to provide the same value for
    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
    // for more details.
    //
    // This also ensures a stable sort in V8 and other engines.
    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.
    return object.index - other.index;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        result++;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  function deburrLetter(letter) {
    return deburredLetters[letter];
  }

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeHtmlChar(chr) {
    return htmlEscapes[chr];
  }

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the index at which the first occurrence of `NaN` is found in `array`.
   *
   * @private
   * @param {Array} array The array to search.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched `NaN`, else `-1`.
   */
  function indexOfNaN(array, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 0 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      var other = array[index];
      if (other !== other) {
        return index;
      }
    }
    return -1;
  }

  /**
   * Checks if `value` is a host object in IE < 9.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
   */
  function isHostObject(value) {
    // Many host objects are `Object` objects that can coerce to strings
    // despite having improperly defined `toString` methods.
    var result = false;
    if (value != null && typeof value.toString != 'function') {
      try {
        result = !!(value + '');
      } catch (e) {}
    }
    return result;
  }

  /**
   * Checks if `value` is a valid array-like index.
   *
   * @private
   * @param {*} value The value to check.
   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
   */
  function isIndex(value, length) {
    value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
    length = length == null ? MAX_SAFE_INTEGER : length;
    return value > -1 && value % 1 == 0 && value < length;
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to an array.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the converted array.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Converts `set` to an array.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the converted array.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    if (!(string && reHasComplexSymbol.test(string))) {
      return string.length;
    }
    var result = reComplexSymbol.lastIndex = 0;
    while (reComplexSymbol.test(string)) {
      result++;
    }
    return result;
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return string.match(reComplexSymbol);
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  function unescapeHtmlChar(chr) {
    return htmlUnescapes[chr];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Use `context` to mock `Date#getTime` use in `_.now`.
   * var mock = _.runInContext({
   *   'Date': function() {
   *     return { 'getTime': getTimeMock };
   *   }
   * });
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  function runInContext(context) {
    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;

    /** Built-in constructor references. */
    var Date = context.Date,
        Error = context.Error,
        Math = context.Math,
        RegExp = context.RegExp,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = context.Array.prototype,
        objectProto = context.Object.prototype;

    /** Used to resolve the decompiled source of functions. */
    var funcToString = context.Function.prototype.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /**
     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
     * of values.
     */
    var objectToString = objectProto.toString;

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Reflect = context.Reflect,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        clearTimeout = context.clearTimeout,
        enumerate = Reflect ? Reflect.enumerate : undefined,
        getPrototypeOf = Object.getPrototypeOf,
        getOwnPropertySymbols = Object.getOwnPropertySymbols,
        iteratorSymbol = typeof (iteratorSymbol = Symbol && Symbol.iterator) == 'symbol' ? iteratorSymbol : undefined,
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        setTimeout = context.setTimeout,
        splice = arrayProto.splice;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = Object.keys,
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    /* Built-in method references that are verified to be native. */
    var Map = getNative(context, 'Map'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */
    var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var mapCtorString = Map ? funcToString.call(Map) : '',
        setCtorString = Set ? funcToString.call(Set) : '',
        weakMapCtorString = WeakMap ? funcToString.call(WeakMap) : '';

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chaining. Methods that operate on and return arrays, collections, and
     * functions can be chained together. Methods that retrieve a single value or
     * may return a primitive value will automatically end the chain sequence and
     * return the unwrapped value. Otherwise, the value must be unwrapped with
     * `_#value`.
     *
     * Explicit chaining, which must be unwrapped with `_#value` in all cases,
     * may be enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut
     * fusion is an optimization to merge iteratee calls; this avoids the creation
     * of intermediate arrays and can greatly reduce the number of iteratee executions.
     * Sections of a chain sequence qualify for shortcut fusion if the section is
     * applied to an array of at least two hundred elements and any iteratees
     * accept only one argument. The heuristic for whether a section qualifies
     * for shortcut fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatten`, `flattenDeep`, `flattenDepth`, `flip`, `flow`, `flowRight`,
     * `fromPairs`, `functions`, `functionsIn`, `groupBy`, `initial`, `intersection`,
     * `intersectionBy`, `intersectionWith`, `invert`, `invertBy`, `invokeMap`,
     * `iteratee`, `keyBy`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`,
     * `matches`, `matchesProperty`, `memoize`, `merge`, `mergeWith`, `method`,
     * `methodOf`, `mixin`, `negate`, `nthArg`, `omit`, `omitBy`, `once`, `orderBy`,
     * `over`, `overArgs`, `overEvery`, `overSome`, `partial`, `partialRight`,
     * `partition`, `pick`, `pickBy`, `plant`, `property`, `propertyOf`, `pull`,
     * `pullAll`, `pullAllBy`, `pullAllWith`, `pullAt`, `push`, `range`,
     * `rangeRight`, `rearg`, `reject`, `remove`, `rest`, `reverse`, `sampleSize`,
     * `set`, `setWith`, `shuffle`, `slice`, `sort`, `sortBy`, `splice`, `spread`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `tap`, `throttle`,
     * `thru`, `toArray`, `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`,
     * `transform`, `unary`, `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`,
     * `uniqWith`, `unset`, `unshift`, `unzip`, `unzipWith`, `update`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`, `zipObject`,
     * `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `deburr`, `each`, `eachRight`,
     * `endsWith`, `eq`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,
     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `first`, `floor`,
     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,
     * `get`, `gt`, `gte`, `has`, `hasIn`, `head`, `identity`, `includes`,
     * `indexOf`, `inRange`, `invoke`, `isArguments`, `isArray`, `isArrayBuffer`,
     * `isArrayLike`, `isArrayLikeObject`, `isBoolean`, `isBuffer`, `isDate`,
     * `isElement`, `isEmpty`, `isEqual`, `isEqualWith`, `isError`, `isFinite`,
     * `isFunction`, `isInteger`, `isLength`, `isMap`, `isMatch`, `isMatchWith`,
     * `isNaN`, `isNative`, `isNil`, `isNull`, `isNumber`, `isObject`, `isObjectLike`,
     * `isPlainObject`, `isRegExp`, `isSafeInteger`, `isSet`, `isString`,
     * `isUndefined`, `isTypedArray`, `isWeakMap`, `isWeakSet`, `join`, `kebabCase`,
     * `last`, `lastIndexOf`, `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`,
     * `maxBy`, `mean`, `min`, `minBy`, `noConflict`, `noop`, `now`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toInteger`, `toJSON`, `toLength`, `toLower`,
     * `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`, `trimEnd`,
     * `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`, `upperFirst`,
     * `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The function whose prototype all chaining wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB). Change the following template settings to use
     * alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||
          (arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an hash object.
     *
     * @private
     * @constructor
     * @returns {Object} Returns the new hash object.
     */
    function Hash() {}

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(hash, key) {
      return hashHas(hash, key) && delete hash[key];
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @param {Object} hash The hash to query.
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(hash, key) {
      if (nativeCreate) {
        var result = hash[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(hash, key) ? hash[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @param {Object} hash The hash to query.
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(hash, key) {
      return nativeCreate ? hash[key] !== undefined : hasOwnProperty.call(hash, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     */
    function hashSet(hash, key, value) {
      hash[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function MapCache(values) {
      var index = -1,
          length = values ? values.length : 0;

      this.clear();
      while (++index < length) {
        var entry = values[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapClear() {
      this.__data__ = {
        'hash': new Hash,
        'map': Map ? new Map : [],
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapDelete(key) {
      var data = this.__data__;
      if (isKeyable(key)) {
        return hashDelete(typeof key == 'string' ? data.string : data.hash, key);
      }
      return Map ? data.map['delete'](key) : assocDelete(data.map, key);
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapGet(key) {
      var data = this.__data__;
      if (isKeyable(key)) {
        return hashGet(typeof key == 'string' ? data.string : data.hash, key);
      }
      return Map ? data.map.get(key) : assocGet(data.map, key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapHas(key) {
      var data = this.__data__;
      if (isKeyable(key)) {
        return hashHas(typeof key == 'string' ? data.string : data.hash, key);
      }
      return Map ? data.map.has(key) : assocHas(data.map, key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache object.
     */
    function mapSet(key, value) {
      var data = this.__data__;
      if (isKeyable(key)) {
        hashSet(typeof key == 'string' ? data.string : data.hash, key, value);
      } else if (Map) {
        data.map.set(key, value);
      } else {
        assocSet(data.map, key, value);
      }
      return this;
    }

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates a set cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values ? values.length : 0;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.push(values[index]);
      }
    }

    /**
     * Checks if `value` is in `cache`.
     *
     * @private
     * @param {Object} cache The set cache to search.
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function cacheHas(cache, value) {
      var map = cache.__data__;
      if (isKeyable(value)) {
        var data = map.__data__,
            hash = typeof value == 'string' ? data.string : data.hash;

        return hash[value] === HASH_UNDEFINED;
      }
      return map.has(value);
    }

    /**
     * Adds `value` to the set cache.
     *
     * @private
     * @name push
     * @memberOf SetCache
     * @param {*} value The value to cache.
     */
    function cachePush(value) {
      var map = this.__data__;
      if (isKeyable(value)) {
        var data = map.__data__,
            hash = typeof value == 'string' ? data.string : data.hash;

        hash[value] = HASH_UNDEFINED;
      }
      else {
        map.set(value, HASH_UNDEFINED);
      }
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function Stack(values) {
      var index = -1,
          length = values ? values.length : 0;

      this.clear();
      while (++index < length) {
        var entry = values[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = { 'array': [], 'map': null };
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          array = data.array;

      return array ? assocDelete(array, key) : data.map['delete'](key);
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      var data = this.__data__,
          array = data.array;

      return array ? assocGet(array, key) : data.map.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      var data = this.__data__,
          array = data.array;

      return array ? assocHas(array, key) : data.map.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache object.
     */
    function stackSet(key, value) {
      var data = this.__data__,
          array = data.array;

      if (array) {
        if (array.length < (LARGE_ARRAY_SIZE - 1)) {
          assocSet(array, key, value);
        } else {
          data.array = null;
          data.map = new MapCache(array);
        }
      }
      var map = data.map;
      if (map) {
        map.set(key, value);
      }
      return this;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Removes `key` and its value from the associative array.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function assocDelete(array, key) {
      var index = assocIndexOf(array, key);
      if (index < 0) {
        return false;
      }
      var lastIndex = array.length - 1;
      if (index == lastIndex) {
        array.pop();
      } else {
        splice.call(array, index, 1);
      }
      return true;
    }

    /**
     * Gets the associative array value for `key`.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function assocGet(array, key) {
      var index = assocIndexOf(array, key);
      return index < 0 ? undefined : array[index][1];
    }

    /**
     * Checks if an associative array value for `key` exists.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function assocHas(array, key) {
      return assocIndexOf(array, key) > -1;
    }

    /**
     * Gets the index at which the first occurrence of `key` is found in `array`
     * of key-value pairs.
     *
     * @private
     * @param {Array} array The array to search.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Sets the associative array `key` to `value`.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     */
    function assocSet(array, key, value) {
      var index = assocIndexOf(array, key);
      if (index < 0) {
        array.push([key, value]);
      } else {
        array[index][1] = value;
      }
    }

    /*------------------------------------------------------------------------*/

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function assignInDefaults(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (typeof key == 'number' && value === undefined && !(key in object))) {
        object[key] = value;
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        object[key] = value;
      }
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths of elements to pick.
     * @returns {Array} Returns the new array of picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          isNil = object == null,
          length = paths.length,
          result = Array(length);

      while (++index < length) {
        result[index] = isNil ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the array-like object.
     */
    function baseCastArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the array-like object.
     */
    function baseCastFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast property path array.
     */
    function baseCastPath(value) {
      return isArray(value) ? value : stringToPath(value);
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments to numbers.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @param {boolean} [isFull] Specify a clone including symbols.
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {
      var result;
      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          if (isHostObject(value)) {
            return object ? value : {};
          }
          result = initCloneObject(isFunc ? {} : value);
          if (!isDeep) {
            result = baseAssign(result, value);
            return isFull ? copySymbols(value, result) : result;
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      // Recursively populate clone (susceptible to call stack limits).
      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {
        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));
      });
      return (isFull && !isArr) ? copySymbols(value, result) : result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new function.
     */
    function baseConforms(source) {
      var props = keys(source),
          length = props.length;

      return function(object) {
        if (object == null) {
          return !length;
        }
        var index = length;
        while (index--) {
          var key = props[index],
              predicate = source[key],
              value = object[key];

          if ((value === undefined && !(key in Object(object))) || !predicate(value)) {
            return false;
          }
        }
        return true;
      };
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} prototype The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    function baseCreate(proto) {
      return isObject(proto) ? objectCreate(proto) : {};
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts an array
     * of `func` arguments.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Object} args The arguments to provide to `func`.
     * @returns {number} Returns the timer id.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support for
     * excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, isStrict, result) {
      result || (result = []);

      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && isArrayLikeObject(value) &&
            (isStrict || isArray(value) || isArguments(value))) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForIn` and `baseForOwn` which iterates
     * over `object` properties returned by `keysFunc` invoking `iteratee` for
     * each property. Iteratee functions may exit iteration early by explicitly
     * returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forIn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForIn(object, iteratee) {
      return object == null ? object : baseFor(object, iteratee, keysIn);
    }

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the new array of filtered property names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = isKey(path, object) ? [path + ''] : baseCastPath(path);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[path[index++]];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,
      // that are composed entirely of index properties, return `false` for
      // `hasOwnProperty` checks of them.
      return hasOwnProperty.call(object, key) ||
        (typeof object == 'object' && key in object && getPrototypeOf(object) === null);
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments to numbers.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      if (!isKey(path, object)) {
        path = baseCastPath(path);
        object = parent(object, path);
        path = last(path);
      }
      var func = object == null ? object : object[path];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {boolean} [bitmask] The bitmask of comparison flags.
     *  The bitmask may be composed of the following flags:
     *     1 - Unordered comparison
     *     2 - Partial comparison
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, customizer, bitmask, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = arrayTag,
          othTag = arrayTag;

      if (!objIsArr) {
        objTag = getTag(object);
        objTag = objTag == argsTag ? objectTag : objTag;
      }
      if (!othIsArr) {
        othTag = getTag(other);
        othTag = othTag == argsTag ? objectTag : othTag;
      }
      var objIsObj = objTag == objectTag && !isHostObject(object),
          othIsObj = othTag == objectTag && !isHostObject(other),
          isSameTag = objTag == othTag;

      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)
          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);
      }
      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          stack || (stack = new Stack);
          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, bitmask, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack,
              result = customizer ? customizer(objValue, srcValue, key, object, source, stack) : undefined;

          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      var type = typeof value;
      if (type == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (type == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't skip the constructor
     * property of prototypes or treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      return nativeKeys(Object(object));
    }

    /**
     * The base implementation of `_.keysIn` which doesn't skip the constructor
     * property of prototypes or treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      object = object == null ? object : Object(object);

      var result = [];
      for (var key in object) {
        result.push(key);
      }
      return result;
    }

    // Fallback for IE < 9 with es6-shim.
    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {
      baseKeysIn = function(object) {
        return iteratorToArray(enumerate(object));
      };
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        var key = matchData[0][0],
            value = matchData[0][1];

        return function(object) {
          if (object == null) {
            return false;
          }
          return object[key] === value &&
            (value !== undefined || (key in Object(object)));
        };
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new function.
     */
    function baseMatchesProperty(path, srcValue) {
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      var props = (isArray(source) || isTypedArray(source))
        ? undefined
        : keysIn(source);

      arrayEach(props || source, function(srcValue, key) {
        if (props) {
          key = srcValue;
          srcValue = source[key];
        }
        if (isObject(srcValue)) {
          stack || (stack = new Stack);
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(object[key], srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      });
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = object[key],
          srcValue = source[key],
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        newValue = srcValue;
        if (isArray(srcValue) || isTypedArray(srcValue)) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else {
            isCommon = false;
            newValue = baseClone(srcValue, !customizer);
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
            isCommon = false;
            newValue = baseClone(srcValue, !customizer);
          }
          else {
            newValue = objValue;
          }
        }
        else {
          isCommon = false;
        }
      }
      stack.set(srcValue, newValue);

      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
      }
      stack['delete'](srcValue);
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      var index = -1;
      iteratees = arrayMap(iteratees.length ? iteratees : Array(1), getIteratee());

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property names.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} props The property names to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, props) {
      object = Object(object);
      return arrayReduce(props, function(result, key) {
        if (key in object) {
          result[key] = object[key];
        }
        return result;
      }, {});
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, predicate) {
      var result = {};
      baseForIn(object, function(value, key) {
        if (predicate(value, key)) {
          result[key] = value;
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.property` without support for deep paths.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @returns {Function} Returns the new function.
     */
    function baseProperty(key) {
      return function(object) {
        return object == null ? undefined : object[key];
      };
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (lastIndex == length || index != previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          }
          else if (!isKey(index, array)) {
            var path = baseCastPath(index),
                object = parent(array, path);

            if (object != null) {
              delete object[last(path)];
            }
          }
          else {
            delete array[index];
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments to numbers.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the new array of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      path = isKey(path, object) ? [path + ''] : baseCastPath(path);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = path[index];
        if (isObject(nested)) {
          var newValue = value;
          if (index != lastIndex) {
            var objValue = nested[key];
            newValue = customizer ? customizer(objValue, key, nested) : undefined;
            if (newValue === undefined) {
              newValue = objValue == null
                ? (isIndex(path[index + 1]) ? [] : {})
                : objValue;
            }
          }
          assignValue(nested, key, newValue);
        }
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop detection.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array ? array.length : low;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      value = iteratee(value);

      var low = 0,
          high = array ? array.length : 0,
          valIsNaN = value !== value,
          valIsNull = value === null,
          valIsUndef = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            isDef = computed !== undefined,
            isReflexive = computed === computed;

        if (valIsNaN) {
          var setLow = isReflexive || retHighest;
        } else if (valIsNull) {
          setLow = isReflexive && isDef && (retHighest || computed != null);
        } else if (valIsUndef) {
          setLow = isReflexive && (retHighest || isDef);
        } else if (computed == null) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq`.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array) {
      return baseSortedUniqBy(array);
    }

    /**
     * The base implementation of `_.sortedUniqBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniqBy(array, iteratee) {
      var index = 0,
          length = array.length,
          value = array[0],
          computed = iteratee ? iteratee(value) : value,
          seen = computed,
          resIndex = 1,
          result = [value];

      while (++index < length) {
        value = array[index],
        computed = iteratee ? iteratee(value) : value;

        if (!eq(computed, seen)) {
          seen = computed;
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = isKey(path, object) ? [path + ''] : baseCastPath(path);
      object = parent(object, path);
      var key = last(path);
      return (object != null && has(object, key)) ? delete object[key] : true;
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var index = -1,
          length = arrays.length;

      while (++index < length) {
        var result = result
          ? arrayPush(
              baseDifference(result, arrays[index], iteratee, comparator),
              baseDifference(arrays[index], result, iteratee, comparator)
            )
          : arrays[index];
      }
      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property names.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        assignFunc(result, props[index], index < valsLength ? values[index] : undefined);
      }
      return result;
    }

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var result = new buffer.constructor(buffer.length);
      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `map`.
     *
     * @private
     * @param {Object} map The map to clone.
     * @returns {Object} Returns the cloned map.
     */
    function cloneMap(map) {
      return arrayReduce(mapToArray(map), addMapEntry, new map.constructor);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of `set`.
     *
     * @private
     * @param {Object} set The set to clone.
     * @returns {Object} Returns the cloned set.
     */
    function cloneSet(set) {
      return arrayReduce(setToArray(set), addSetEntry, new set.constructor);
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array|Object} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array|Object} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property names to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object) {
      return copyObjectWith(source, props, object);
    }

    /**
     * This function is like `copyObject` except that it accepts a function to
     * customize copied values.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property names to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObjectWith(source, props, object, customizer) {
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : source[key];

        assignValue(object, key, newValue);
      }
      return object;
    }

    /**
     * Copies own symbol properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return rest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = typeof customizer == 'function'
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBaseWrapper(func, bitmask, thisArg) {
      var isBind = bitmask & BIND_FLAG,
          Ctor = createCtorWrapper(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = reHasComplexSymbol.test(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols ? strSymbols[0] : string.charAt(0),
            trailing = strSymbols ? strSymbols.slice(1).join('') : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string)), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtorWrapper(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors.
        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurryWrapper(func, bitmask, arity) {
      var Ctor = createCtorWrapper(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getPlaceholder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurryWrapper(
            func, bitmask, createHybridWrapper, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return rest(function(funcs) {
        funcs = baseFlatten(funcs, 1);

        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 &&
              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & ARY_FLAG,
          isBind = bitmask & BIND_FLAG,
          isBindKey = bitmask & BIND_KEY_FLAG,
          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),
          isFlip = bitmask & FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtorWrapper(func);

      function wrapper() {
        var length = arguments.length,
            index = length,
            args = Array(length);

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getPlaceholder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurryWrapper(
            func, bitmask, createHybridWrapper, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtorWrapper(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new invoker function.
     */
    function createOver(arrayFunc) {
      return rest(function(iteratees) {
        iteratees = arrayMap(baseFlatten(iteratees, 1), getIteratee());
        return rest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {string} string The string to create padding for.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(string, length, chars) {
      length = toInteger(length);

      var strLength = stringSize(string);
      if (!length || strLength >= length) {
        return '';
      }
      var padLength = length - strLength;
      chars = chars === undefined ? ' ' : (chars + '');

      var result = repeat(chars, nativeCeil(padLength / stringSize(chars)));
      return reHasComplexSymbol.test(chars)
        ? stringToArray(result).slice(0, padLength).join('')
        : result.slice(0, padLength);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg` and the `partials` prepended to those provided to
     * the wrapper.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartialWrapper(func, bitmask, thisArg, partials) {
      var isBind = bitmask & BIND_FLAG,
          Ctor = createCtorWrapper(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toNumber(start);
        start = start === start ? start : 0;
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toNumber(end) || 0;
        }
        step = step === undefined ? (start < end ? 1 : -1) : (toNumber(step) || 0);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurryWrapper(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & CURRY_FLAG,
          newArgPos = argPos ? copyArray(argPos) : undefined,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);

      if (!(bitmask & CURRY_BOUND_FLAG)) {
        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, newArgPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return result;
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = toInteger(precision);
        if (precision) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && new Set([1, 2]).size === 2) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask of wrapper flags.
     *  The bitmask may be composed of the following flags:
     *     1 - `_.bind`
     *     2 - `_.bindKey`
     *     4 - `_.curry` or `_.curryRight` of a bound function
     *     8 - `_.curry`
     *    16 - `_.curryRight`
     *    32 - `_.partial`
     *    64 - `_.partialRight`
     *   128 - `_.rearg`
     *   256 - `_.ary`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] == null
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {
        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == BIND_FLAG) {
        var result = createBaseWrapper(func, bitmask, thisArg);
      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {
        result = createCurryWrapper(func, bitmask, arity);
      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {
        result = createPartialWrapper(func, bitmask, thisArg, partials);
      } else {
        result = createHybridWrapper.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setter(result, newData);
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Function} customizer The function to customize comparisons.
     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual` for more details.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {
      var index = -1,
          isPartial = bitmask & PARTIAL_COMPARE_FLAG,
          isUnordered = bitmask & UNORDERED_COMPARE_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(array);
      if (stacked) {
        return stacked == other;
      }
      var result = true;
      stack.set(array, other);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (isUnordered) {
          if (!arraySome(other, function(othValue) {
                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack);
              })) {
            result = false;
            break;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Function} customizer The function to customize comparisons.
     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual` for more details.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {
      switch (tag) {
        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
          // Coerce dates and booleans to numbers, dates to milliseconds and booleans
          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.
          return +object == +other;

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case numberTag:
          // Treat `NaN` vs. `NaN` as equal.
          return (object != +object) ? other != +other : object == +other;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings primitives and string
          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          // Recursively compare objects (susceptible to call stack limits).
          return equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask | UNORDERED_COMPARE_FLAG, stack.set(object, other));

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Function} customizer The function to customize comparisons.
     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual` for more details.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {
      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
          objProps = keys(object),
          objLength = objProps.length,
          othProps = keys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : baseHas(other, key))) {
          return false;
        }
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      return result;
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the appropriate "iteratee" function. If the `_.iteratee` method is
     * customized this function returns the custom method, otherwise it returns
     * `baseIteratee`. If arguments are provided the chosen function is invoked
     * with them and its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the "length" property value of `object`.
     *
     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)
     * that affects Safari on at least iOS 8.1-8.3 ARM64.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {*} Returns the "length" value.
     */
    var getLength = baseProperty('length');

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = toPairs(object),
          length = result.length;

      while (length--) {
        result[length][2] = isStrictComparable(result[length][1]);
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = object[key];
      return isNative(value) ? value : undefined;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getPlaceholder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Creates an array of the own symbol properties of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = getOwnPropertySymbols || function() {
      return [];
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function getTag(value) {
      return objectToString.call(value);
    }

    // Fallback for IE 11 providing `toStringTag` values for maps, sets, and weakmaps.
    if ((Map && getTag(new Map) != mapTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = objectToString.call(value),
            Ctor = result == objectTag ? value.constructor : null,
            ctorString = typeof Ctor == 'function' ? funcToString.call(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case mapCtorString: return mapTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      if (object == null) {
        return false;
      }
      var result = hasFunc(object, path);
      if (!result && !isKey(path)) {
        path = baseCastPath(path);
        object = parent(object, path);
        if (object != null) {
          path = last(path);
          result = hasFunc(object, path);
        }
      }
      var length = object ? object.length : undefined;
      return result || (
        !!length && isLength(length) && isIndex(path, length) &&
        (isArray(object) || isString(object) || isArguments(object))
      );
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototypeOf(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return cloneMap(object);

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return cloneSet(object);

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Creates an array of index keys for `object` values of arrays,
     * `arguments` objects, and strings, otherwise `null` is returned.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array|null} Returns index keys, else `null`.
     */
    function indexKeys(object) {
      var length = object ? object.length : undefined;
      if (isLength(length) &&
          (isArray(object) || isString(object) || isArguments(object))) {
        return baseTimes(length, String);
      }
      return null;
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
          ? (isArrayLike(object) && isIndex(index, object.length))
          : (type == 'string' && index in object)) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (typeof value == 'number') {
        return true;
      }
      return !isArray(value) &&
        (reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
          (object != null && value in Object(object)));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return type == 'number' || type == 'boolean' ||
        (type == 'string' && value != '__proto__') || value == null;
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`
     * modify function arguments, making the order in which they are executed important,
     * preventing the merging of metadata. However, we make an exception for a safe
     * combined case where curried functions have `_.ary` and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);

      var isCombo =
        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||
        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : copyArray(value);
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : copyArray(source[4]);
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : copyArray(value);
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : copyArray(source[6]);
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = copyArray(value);
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged counterparts.
     * @returns {*} Returns the value to assign.
     */
    function mergeDefaults(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack.set(srcValue, objValue));
      }
      return objValue;
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length == 1 ? object : get(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity function
     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = (function() {
      var count = 0,
          lastCalled = 0;

      return function(key, value) {
        var stamp = now(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return key;
          }
        } else {
          count = 0;
        }
        return baseSetData(key, value);
      };
    }());

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    function stringToPath(string) {
      var result = [];
      toString(string).replace(rePropName, function(match, number, quote, string) {
        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=0] The length of each chunk.
     * @returns {Array} Returns the new array containing chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size) {
      size = nativeMax(toInteger(size), 0);

      var length = array ? array.length : 0;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array ? array.length : 0,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    var concat = rest(function(array, values) {
      if (!isArray(array)) {
        array = array == null ? [] : [Object(array)];
      }
      values = baseFlatten(values, 1);
      return arrayConcat(array, values);
    });

    /**
     * Creates an array of unique `array` values not included in the other
     * given arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * for equality comparisons. The order of result values is determined by the
     * order they occur in the first array.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.difference([3, 2, 1], [4, 2]);
     * // => [3, 1]
     */
    var difference = rest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. Result values are chosen from the first array.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([3.1, 2.2, 1.3], [4.4, 2.5], Math.floor);
     * // => [3.1, 1.3]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = rest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, true), getIteratee(iteratee))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. Result values
     * are chosen from the first array. The comparator is invoked with two arguments:
     * (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = rest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to search.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate) {
      return (array && array.length)
        ? baseFindIndex(array, getIteratee(predicate, 3))
        : -1;
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to search.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate) {
      return (array && array.length)
        ? baseFindIndex(array, getIteratee(predicate, 3), true)
        : -1;
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array ? array.length : 0;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array ? array.length : 0;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['fred', 30], ['barney', 40]]);
     * // => { 'fred': 30, 'barney': 40 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs ? pairs.length : 0,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return array ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the offset
     * from the end of `array`.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to search.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array ? array.length : 0;
      if (!length) {
        return -1;
      }
      fromIndex = toInteger(fromIndex);
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return baseIndexOf(array, value, fromIndex);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      return dropRight(array, 1);
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * for equality comparisons. The order of result values is determined by the
     * order they occur in the first array.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [4, 2], [1, 2]);
     * // => [2]
     */
    var intersection = rest(function(arrays) {
      var mapped = arrayMap(arrays, baseCastArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. Result values are chosen from the first array.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [4.3, 2.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = rest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, baseCastArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. Result values are chosen
     * from the first array. The comparator is invoked with two arguments:
     * (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = rest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, baseCastArrayLikeObject);

      if (comparator === last(mapped)) {
        comparator = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array ? nativeJoin.call(array, separator) : '';
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array ? array.length : 0;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to search.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array ? array.length : 0;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = (index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1)) + 1;
      }
      if (value !== value) {
        return indexOfNaN(array, index, true);
      }
      while (index--) {
        if (array[index] === value) {
          return index;
        }
      }
      return -1;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3, 1, 2, 3];
     *
     * _.pull(array, 2, 3);
     * console.log(array);
     * // => [1, 1]
     */
    var pull = rest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3, 1, 2, 3];
     *
     * _.pullAll(array, [2, 3]);
     * console.log(array);
     * // => [1, 1]
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove,
     *  specified individually or in arrays.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [5, 10, 15, 20];
     * var evens = _.pullAt(array, 1, 3);
     *
     * console.log(array);
     * // => [5, 15]
     *
     * console.log(evens);
     * // => [10, 20]
     */
    var pullAt = rest(function(array, indexes) {
      indexes = arrayMap(baseFlatten(indexes, 1), String);

      var result = baseAt(array, indexes);
      basePullAt(array, indexes.sort(compareAscending));
      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @category Array
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array ? nativeReverse.call(array) : array;
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of [`Array#slice`](https://mdn.io/Array/slice)
     * to ensure dense arrays are returned.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value` should
     * be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     *
     * _.sortedIndex([4, 5], 4);
     * // => 0
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted into `array`.
     * @example
     *
     * var dict = { 'thirty': 30, 'forty': 40, 'fifty': 50 };
     *
     * _.sortedIndexBy(['thirty', 'fifty'], 'forty', _.propertyOf(dict));
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to search.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([1, 1, 2, 2], 2);
     * // => 2
     */
    function sortedIndexOf(array, value) {
      var length = array ? array.length : 0;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5], 4);
     * // => 1
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted into `array`.
     * @example
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to search.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([1, 1, 2, 2], 2);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array ? array.length : 0;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniqBy(array, getIteratee(iteratee))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      return drop(array, 1);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with three
     * arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false},
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2, 1], [4, 2], [1, 2]);
     * // => [2, 1, 4]
     */
    var union = rest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by which
     * uniqueness is computed. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1, 1.2], [4.3, 2.4], Math.floor);
     * // => [2.1, 1.2, 4.3]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = rest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, true), getIteratee(iteratee));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = rest(function(arrays) {
      var comparator = last(arrays);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length)
        ? baseUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length)
        ? baseUniq(array, getIteratee(iteratee))
        : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The comparator is invoked with
     * two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 },  { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      return (array && array.length)
        ? baseUniq(array, undefined, comparator)
        : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);
     * // => [['fred', 30, true], ['barney', 40, false]]
     *
     * _.unzip(zipped);
     * // => [['fred', 'barney'], [30, 40], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to filter.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.without([1, 2, 1, 3], 1, 2);
     * // => [3]
     */
    var without = rest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of values.
     * @example
     *
     * _.xor([2, 1], [4, 2]);
     * // => [1, 4]
     */
    var xor = rest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by which
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [4.3, 2.4], Math.floor);
     * // => [1.2, 4.3]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = rest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The comparator is invoked with
     * two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = rest(function(arrays) {
      var comparator = last(arrays);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the first
     * elements of the given arrays, the second of which contains the second elements
     * of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['fred', 'barney'], [30, 40], [true, false]);
     * // => [['fred', 30, true], ['barney', 40, false]]
     */
    var zip = rest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property names and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} [props=[]] The property names.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} [props=[]] The property names.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = rest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object that wraps `value` with explicit method chaining enabled.
     * The result of such method chaining must be unwrapped with `_#value`.
     *
     * @static
     * @memberOf _
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain.
     *
     * @static
     * @memberOf _
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths of elements to pick,
     *  specified individually or in arrays.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     *
     * _(['a', 'b', 'c']).at(0, 2).value();
     * // => ['a', 'c']
     */
    var wrapperAt = rest(function(paths) {
      paths = baseFlatten(paths, 1);
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Enables explicit method chaining on the wrapper object.
     *
     * @name chain
     * @memberOf _
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chained sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * This method is the wrapper version of `_.flatMap`.
     *
     * @name flatMap
     * @memberOf _
     * @category Seq
     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _([1, 2]).flatMap(duplicate).value();
     * // => [1, 1, 2, 2]
     */
    function wrapperFlatMap(iteratee) {
      return this.map(iteratee).flatten();
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chained sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chained sequence to extract the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` through `iteratee`. The corresponding value
     * of each key is the number of times the key was returned by `iteratee`.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'active': false },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three arguments:
     * (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three arguments:
     * (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object} collection The collection to search.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    function find(collection, predicate) {
      predicate = getIteratee(predicate, 3);
      if (isArray(collection)) {
        var index = baseFindIndex(collection, predicate);
        return index > -1 ? collection[index] : undefined;
      }
      return baseFind(collection, predicate, baseEach);
    }

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object} collection The collection to search.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    function findLast(collection, predicate) {
      predicate = getIteratee(predicate, 3);
      if (isArray(collection)) {
        var index = baseFindIndex(collection, predicate, true);
        return index > -1 ? collection[index] : undefined;
      }
      return baseFind(collection, predicate, baseEachRight);
    }

    /**
     * Creates an array of flattened values by running each element in `collection`
     * through `iteratee` and concating its result to the other mapped values.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * Iterates over elements of `collection` invoking `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length" property
     * are iterated like arrays. To avoid this behavior use `_.forIn` or `_.forOwn`
     * for object iteration.
     *
     * @static
     * @memberOf _
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @example
     *
     * _([1, 2]).forEach(function(value) {
     *   console.log(value);
     * });
     * // => logs `1` then `2`
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => logs 'a' then 'b' (iteration order is not guaranteed)
     */
    function forEach(collection, iteratee) {
      return (typeof iteratee == 'function' && isArray(collection))
        ? arrayEach(collection, iteratee)
        : baseEach(collection, baseCastFunction(iteratee));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => logs `2` then `1`
     */
    function forEachRight(collection, iteratee) {
      return (typeof iteratee == 'function' && isArray(collection))
        ? arrayEachRight(collection, iteratee)
        : baseEachRight(collection, baseCastFunction(iteratee));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` through `iteratee`. The corresponding value
     * of each key is an array of elements responsible for generating the key.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        result[key] = [value];
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string it's checked
     * for a substring of `value`, otherwise [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object|string} collection The collection to search.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');
     * // => true
     *
     * _.includes('pebbles', 'eb');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `methodName` is a function it's
     * invoked for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = rest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          isProp = isKey(path),
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);
        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` through `iteratee`. The corresponding value
     * of each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      result[key] = value;
    });

    /**
     * Creates an array of values by running each element in `collection` through
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `curry`, `curryRight`, `drop`, `dropRight`, `every`, `fill`,
     * `invert`, `parseInt`, `random`, `range`, `rangeRight`, `slice`, `some`,
     * `sortBy`, `take`, `takeRight`, `template`, `trim`, `trimEnd`, `trimStart`,
     * and `words`
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} [iteratees=[_.identity]] The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 42 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` through `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      predicate = getIteratee(predicate, 3);
      return func(collection, function(value, index, collection) {
        return !predicate(value, index, collection);
      });
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var array = isArrayLike(collection) ? collection : values(collection),
          length = array.length;

      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=0] The number of elements to sample.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n) {
      var index = -1,
          result = toArray(collection),
          length = result.length,
          lastIndex = length - 1;

      n = baseClamp(toInteger(n), 0, length);
      while (++index < n) {
        var rand = baseRandom(index, lastIndex),
            value = result[rand];

        result[rand] = result[index];
        result[index] = value;
      }
      result.length = n;
      return result;
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      return sampleSize(collection, MAX_ARRAY_LENGTH);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable properties for objects.
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        var result = collection.length;
        return (result && isString(collection)) ? stringSize(collection) : result;
      }
      return keys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection through each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[]|Object|Object[]|string|string[])} [iteratees=[_.identity]]
     *  The iteratees to sort by, specified individually or in arrays.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 42 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, function(o) { return o.user; });
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]
     *
     * _.sortBy(users, 'user', function(o) {
     *   return Math.floor(o.age / 10);
     * });
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]
     */
    var sortBy = rest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees.length = 1;
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @type {Function}
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => logs the number of milliseconds it took for the deferred function to be invoked
     */
    var now = Date.now;

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => logs 'done saving!' after the two async saves have completed
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that accepts up to `n` arguments, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.
     * @returns {Function} Returns the new function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => allows adding up to 4 contacts to the list
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and prepends any additional `_.bind` arguments to those provided to the
     * bound function.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind` this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var greet = function(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * };
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = rest(function(func, thisArg, partials) {
      var bitmask = BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getPlaceholder(bind));
        bitmask |= PARTIAL_FLAG;
      }
      return createWrapper(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` and prepends
     * any additional `_.bindKey` arguments to those provided to the bound function.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist.
     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = rest(function(object, key, partials) {
      var bitmask = BIND_FLAG | BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getPlaceholder(bindKey));
        bitmask |= PARTIAL_FLAG;
      }
      return createWrapper(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrapper(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrapper(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide an options object to indicate whether `func` should be invoked on
     * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent calls
     * to the debounced function return the result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked
     * on the trailing edge of the timeout only if the debounced function is
     * invoked more than once during the `wait` timeout.
     *
     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options] The options object.
     * @param {boolean} [options.leading=false] Specify invoking on the leading
     *  edge of the timeout.
     * @param {number} [options.maxWait] The maximum time `func` is allowed to be
     *  delayed before it's invoked.
     * @param {boolean} [options.trailing=true] Specify invoking on the trailing
     *  edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var args,
          maxTimeoutId,
          result,
          stamp,
          thisArg,
          timeoutId,
          trailingCall,
          lastCalled = 0,
          leading = false,
          maxWait = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxWait = 'maxWait' in options && nativeMax(toNumber(options.maxWait) || 0, wait);
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function cancel() {
        if (timeoutId) {
          clearTimeout(timeoutId);
        }
        if (maxTimeoutId) {
          clearTimeout(maxTimeoutId);
        }
        lastCalled = 0;
        args = maxTimeoutId = thisArg = timeoutId = trailingCall = undefined;
      }

      function complete(isCalled, id) {
        if (id) {
          clearTimeout(id);
        }
        maxTimeoutId = timeoutId = trailingCall = undefined;
        if (isCalled) {
          lastCalled = now();
          result = func.apply(thisArg, args);
          if (!timeoutId && !maxTimeoutId) {
            args = thisArg = undefined;
          }
        }
      }

      function delayed() {
        var remaining = wait - (now() - stamp);
        if (remaining <= 0 || remaining > wait) {
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }

      function flush() {
        if ((timeoutId && trailingCall) || (maxTimeoutId && trailing)) {
          result = func.apply(thisArg, args);
        }
        cancel();
        return result;
      }

      function maxDelayed() {
        complete(trailing, timeoutId);
      }

      function debounced() {
        args = arguments;
        stamp = now();
        thisArg = this;
        trailingCall = trailing && (timeoutId || !leading);

        if (maxWait === false) {
          var leadingCall = leading && !timeoutId;
        } else {
          if (!lastCalled && !maxTimeoutId && !leading) {
            lastCalled = stamp;
          }
          var remaining = maxWait - (stamp - lastCalled);

          var isCalled = (remaining <= 0 || remaining > maxWait) &&
            (leading || maxTimeoutId);

          if (isCalled) {
            if (maxTimeoutId) {
              maxTimeoutId = clearTimeout(maxTimeoutId);
            }
            lastCalled = stamp;
            result = func.apply(thisArg, args);
          }
          else if (!maxTimeoutId) {
            maxTimeoutId = setTimeout(maxDelayed, remaining);
          }
        }
        if (isCalled && timeoutId) {
          timeoutId = clearTimeout(timeoutId);
        }
        else if (!timeoutId && wait !== maxWait) {
          timeoutId = setTimeout(delayed, wait);
        }
        if (leadingCall) {
          isCalled = true;
          result = func.apply(thisArg, args);
        }
        if (isCalled && !timeoutId && !maxTimeoutId) {
          args = thisArg = undefined;
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => logs 'deferred' after one or more milliseconds
     */
    var defer = rest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => logs 'later' after one second
     */
    var delay = rest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrapper(func, FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoizing function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result);
        return result;
      };
      memoized.cache = new memoize.Cache;
      return memoized;
    }

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        return !predicate.apply(this, arguments);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // `initialize` invokes `createApplication` once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with arguments transformed by
     * corresponding `transforms`.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms] The functions to transform
     * arguments, specified individually or in arrays.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, square, doubled);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = rest(function(func, transforms) {
      transforms = arrayMap(baseFlatten(transforms, 1), getIteratee());

      var funcsLength = transforms.length;
      return rest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partial` arguments prepended
     * to those provided to the new function. This method is like `_.bind` except
     * it does **not** alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * var greet = function(greeting, name) {
     *   return greeting + ' ' + name;
     * };
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = rest(function(func, partials) {
      var holders = replaceHolders(partials, getPlaceholder(partial));
      return createWrapper(func, PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to those provided to the new function.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * var greet = function(greeting, name) {
     *   return greeting + ' ' + name;
     * };
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = rest(function(func, partials) {
      var holders = replaceHolders(partials, getPlaceholder(partialRight));
      return createWrapper(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified indexes where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes,
     *  specified individually or in arrays.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, 2, 0, 1);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = rest(function(func, indexes) {
      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as an array.
     *
     * **Note:** This method is based on the [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        switch (start) {
          case 0: return func.call(this, array);
          case 1: return func.call(this, args[0], array);
          case 2: return func.call(this, args[0], args[1], array);
        }
        var otherArgs = Array(start + 1);
        index = -1;
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = array;
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the created
     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).
     *
     * **Note:** This method is based on the [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);
      return rest(function(args) {
        var array = args[start],
            otherArgs = args.slice(0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide an options object to indicate whether
     * `func` should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked
     * on the trailing edge of the timeout only if the throttled function is
     * invoked more than once during the `wait` timeout.
     *
     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options] The options object.
     * @param {boolean} [options.leading=true] Specify invoking on the leading
     *  edge of the timeout.
     * @param {boolean} [options.trailing=true] Specify invoking on the trailing
     *  edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to the wrapper function as its
     * first argument. Any additional arguments provided to the function are
     * appended to those provided to the wrapper function. The wrapper is invoked
     * with the `this` binding of the created function.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      wrapper = wrapper == null ? identity : wrapper;
      return partial(wrapper, value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, false, true);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      return baseClone(value, false, true, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, true, true);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      return baseClone(value, true, true, customizer);
    }

    /**
     * Performs a [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'user': 'fred' };
     * var other = { 'user': 'fred' };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    function gt(value, other) {
      return value > other;
    }

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    function gte(value, other) {
      return value >= other;
    }

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    function isArguments(value) {
      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.
      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
    }

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @type {Function}
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    function isArrayBuffer(value) {
      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;
    }

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(getLength(value)) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object, else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && objectToString.call(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = !Buffer ? constant(false) : function(value) {
      return value instanceof Buffer;
    };

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    function isDate(value) {
      return isObjectLike(value) && objectToString.call(value) == dateTag;
    }

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty collection or object. A value is considered
     * empty if it's an `arguments` object, array, string, or jQuery-like collection
     * with a length of `0` or has no own enumerable properties.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (isArrayLike(value) &&
          (isArray(value) || isString(value) ||
            isFunction(value.splice) || isArguments(value))) {
        return !value.length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are **not** supported.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'user': 'fred' };
     * var other = { 'user': 'fred' };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined` comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      return (objectToString.call(value) == errorTag) ||
        (typeof value.message == 'string' && typeof value.name == 'string');
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MAX_VALUE);
     * // => true
     *
     * _.isFinite(3.14);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 8 which returns 'object' for typed array and weak map constructors,
      // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.
      var tag = isObject(value) ? objectToString.call(value) : '';
      return tag == funcTag || tag == genTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This function is loosely based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return !!value && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return !!value && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    function isMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values. This method is
     * equivalent to a `_.matches` function when `source` is partially applied.
     *
     * **Note:** This method supports comparing the same values as `_.isEqual`.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'user': 'fred', 'age': 40 };
     *
     * _.isMatch(object, { 'age': 40 });
     * // => true
     *
     * _.isMatch(object, { 'age': 36 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined` comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)
     * which returns `true` for `undefined` and other non-numeric values.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a native function.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (value == null) {
        return false;
      }
      if (isFunction(value)) {
        return reIsNative.test(funcToString.call(value));
      }
      return isObjectLike(value) &&
        (isHostObject(value) ? reIsNative : reIsHostCtor).test(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified
     * as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && objectToString.call(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) ||
          objectToString.call(value) != objectTag || isHostObject(value)) {
        return false;
      }
      var proto = getPrototypeOf(value);
      if (proto === null) {
        return true;
      }
      var Ctor = proto.constructor;
      return (typeof Ctor == 'function' &&
        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    function isRegExp(value) {
      return isObject(value) && objectToString.call(value) == regexpTag;
    }

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    function isSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && objectToString.call(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    function isTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];
    }

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && objectToString.call(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    function lt(value, other) {
      return value < other;
    }

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    function lte(value, other) {
      return value <= other;
    }

    /**
     * Converts `value` to an array.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (iteratorSymbol && value[iteratorSymbol]) {
        return iteratorToArray(value[iteratorSymbol]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This function is loosely based on [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3');
     * // => 3
     */
    function toInteger(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      var remainder = value % 1;
      return value === value ? (remainder ? value - remainder : value) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3);
     * // => 3
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3');
     * // => 3
     */
    function toNumber(value) {
      if (isObject(value)) {
        var other = isFunction(value.valueOf) ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, '');
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable
     * properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3');
     * // => 3
     */
    function toSafeInteger(value) {
      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);
    }

    /**
     * Converts `value` to a string if it's not one. An empty string is returned
     * for `null` and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (value == null) {
        return '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable properties of source objects to the destination
     * object. Source objects are applied from left to right. Subsequent sources
     * overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function Foo() {
     *   this.c = 3;
     * }
     *
     * function Bar() {
     *   this.e = 5;
     * }
     *
     * Foo.prototype.d = 4;
     * Bar.prototype.f = 6;
     *
     * _.assign({ 'a': 1 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3, 'e': 5 }
     */
    var assign = createAssigner(function(object, source) {
      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * function Bar() {
     *   this.d = 4;
     * }
     *
     * Foo.prototype.c = 3;
     * Bar.prototype.e = 5;
     *
     * _.assignIn({ 'a': 1 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }
     */
    var assignIn = createAssigner(function(object, source) {
      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keysIn(source), object);
        return;
      }
      for (var key in source) {
        assignValue(object, key, source[key]);
      }
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer` which
     * is invoked to produce the assigned values. If `customizer` returns `undefined`
     * assignment is handled by the method instead. The `customizer` is invoked
     * with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObjectWith(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer` which
     * is invoked to produce the assigned values. If `customizer` returns `undefined`
     * assignment is handled by the method instead. The `customizer` is invoked
     * with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObjectWith(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths of elements to pick,
     *  specified individually or in arrays.
     * @returns {Array} Returns the new array of picked elements.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     *
     * _.at(['a', 'b', 'c'], 0, 2);
     * // => ['a', 'c']
     */
    var at = rest(function(object, paths) {
      return baseAt(object, baseFlatten(paths, 1));
    });

    /**
     * Creates an object that inherits from the `prototype` object. If a `properties`
     * object is given its own enumerable properties are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties ? baseAssign(result, properties) : result;
    }

    /**
     * Assigns own and inherited enumerable properties of source objects to the
     * destination object for all destination properties that resolve to `undefined`.
     * Source objects are applied from left to right. Once a property is set,
     * additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });
     * // => { 'user': 'barney', 'age': 36 }
     */
    var defaults = rest(function(args) {
      args.push(undefined, assignInDefaults);
      return apply(assignInWith, undefined, args);
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });
     * // => { 'user': { 'name': 'barney', 'age': 36 } }
     *
     */
    var defaultsDeep = rest(function(args) {
      args.push(undefined, mergeDefaults);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to search.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFind(object, getIteratee(predicate, 3), baseForOwn, true);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to search.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFind(object, getIteratee(predicate, 3), baseForOwnRight, true);
    }

    /**
     * Iterates over own and inherited enumerable properties of an object invoking
     * `iteratee` for each property. The iteratee is invoked with three arguments:
     * (value, key, object). Iteratee functions may exit iteration early by explicitly
     * returning `false`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => logs 'a', 'b', then 'c' (iteration order is not guaranteed)
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, baseCastFunction(iteratee), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, baseCastFunction(iteratee), keysIn);
    }

    /**
     * Iterates over own enumerable properties of an object invoking `iteratee`
     * for each property. The iteratee is invoked with three arguments:
     * (value, key, object). Iteratee functions may exit iteration early by
     * explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => logs 'a' then 'b' (iteration order is not guaranteed)
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, baseCastFunction(iteratee));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, baseCastFunction(iteratee));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the new array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the new array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined` the `defaultValue` is used in its place.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': { 'c': 3 } } };
     * var other = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b.c');
     * // => true
     *
     * _.has(object, ['a', 'b', 'c']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b.c');
     * // => true
     *
     * _.hasIn(object, ['a', 'b', 'c']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite property
     * assignments of previous values.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` through `iteratee`.
     * The corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = rest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      var isProto = isPrototype(object);
      if (!(isProto || isArrayLike(object))) {
        return baseKeys(object);
      }
      var indexes = indexKeys(object),
          skipIndexes = !!indexes,
          result = indexes || [],
          length = result.length;

      for (var key in object) {
        if (baseHas(object, key) &&
            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&
            !(isProto && key == 'constructor')) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      var index = -1,
          isProto = isPrototype(object),
          props = baseKeysIn(object),
          propsLength = props.length,
          indexes = indexKeys(object),
          skipIndexes = !!indexes,
          result = indexes || [],
          length = result.length;

      while (++index < propsLength) {
        var key = props[index];
        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&
            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * property of `object` through `iteratee`. The iteratee is invoked with
     * three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        result[iteratee(value, key, object)] = value;
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated by
     * running each own enumerable property of `object` through `iteratee`. The
     * iteratee is invoked with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        result[key] = iteratee(value, key, object);
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable properties of source objects into the destination
     * object. Source properties that resolve to `undefined` are skipped if a
     * destination value exists. Array and plain object properties are merged
     * recursively.Other objects and value types are overridden by assignment.
     * Source objects are applied from left to right. Subsequent sources
     * overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var users = {
     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]
     * };
     *
     * var ages = {
     *   'data': [{ 'age': 36 }, { 'age': 40 }]
     * };
     *
     * _.merge(users, ages);
     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined` merging is handled by the
     * method instead. The `customizer` is invoked with seven arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = {
     *   'fruits': ['apple'],
     *   'vegetables': ['beet']
     * };
     *
     * var other = {
     *   'fruits': ['banana'],
     *   'vegetables': ['carrot']
     * };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable properties of `object` that are not omitted.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [props] The property names to omit, specified
     *  individually or in arrays.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = rest(function(object, props) {
      if (object == null) {
        return {};
      }
      props = arrayMap(baseFlatten(props, 1), String);
      return basePick(object, baseDifference(keysIn(object), props));
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable properties of `object` that `predicate`
     * doesn't return truthy for. The predicate is invoked with two arguments:
     * (value, key).
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      predicate = getIteratee(predicate);
      return basePickBy(object, function(value, key) {
        return !predicate(value, key);
      });
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [props] The property names to pick, specified
     *  individually or in arrays.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = rest(function(object, props) {
      return object == null ? {} : basePick(object, baseFlatten(props, 1));
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      return object == null ? {} : basePickBy(object, getIteratee(predicate));
    }

    /**
     * This method is like `_.get` except that if the resolved value is a function
     * it's invoked with the `this` binding of its parent object and its result
     * is returned.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      if (!isKey(path, object)) {
        path = baseCastPath(path);
        var result = get(object, path);
        object = parent(object, path);
      } else {
        result = object == null ? undefined : object[path];
      }
      if (result === undefined) {
        result = defaultValue;
      }
      return isFunction(result) ? result.call(object) : result;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, 'x[0].y.z', 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable key-value pairs for `object` which
     * can be consumed by `_.fromPairs`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the new array of key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    function toPairs(object) {
      return baseToPairs(object, keys(object));
    }

    /**
     * Creates an array of own and inherited enumerable key-value pairs for
     * `object` which can be consumed by `_.fromPairs`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the new array of key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 1]] (iteration order is not guaranteed)
     */
    function toPairsIn(object) {
      return baseToPairs(object, keysIn(object));
    }

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own enumerable
     * properties through `iteratee`, with each invocation potentially mutating
     * the `accumulator` object. The iteratee is invoked with four arguments:
     * (accumulator, value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Array|Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object) || isTypedArray(object);
      iteratee = getIteratee(iteratee, 4);

      if (accumulator == null) {
        if (isArr || isObject(object)) {
          var Ctor = object.constructor;
          if (isArr) {
            accumulator = isArray(object) ? new Ctor : [];
          } else {
            accumulator = isFunction(Ctor) ? baseCreate(getPrototypeOf(object)) : {};
          }
        } else {
          accumulator = {};
        }
      }
      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, baseCastFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, baseCastFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object ? baseValues(object, keys(object)) : [];
    }

    /**
     * Creates an array of the own and inherited enumerable property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to but not including, `end`. If
     * `end` is not specified it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toNumber(start) || 0;
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toNumber(end) || 0;
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are floats,
     * a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toNumber(lower) || 0;
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toNumber(upper) || 0;
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar');
     * // => 'fooBar'
     *
     * _.camelCase('__foo_bar__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to search.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search from.
     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = typeof target == 'string' ? target : (target + '');

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      position -= target.length;
      return position >= 0 && string.indexOf(target, position) == position;
    }

    /**
     * Converts the characters "&", "<", ">", '"', "'", and "\`" in `string` to
     * their corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value.
     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * Backticks are escaped because in IE < 9, they can break out of
     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),
     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and
     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)
     * for more details.
     *
     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)
     * to reduce XSS vectors.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__foo_bar__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = stringSize(string);
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2,
          leftLength = nativeFloor(mid),
          rightLength = nativeCeil(mid);

      return createPadding('', leftLength, chars) + string + createPadding('', rightLength, chars);
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      return string + createPadding(string, length, chars);
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      return createPadding(string, length, chars) + string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,
     * in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#x15.1.2.2)
     * of `parseInt`.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      // Chrome fails to trim leading <BOM> whitespace characters.
      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      string = toString(string).replace(reTrim, '');
      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=0] The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n) {
      string = toString(string);
      n = toInteger(n);

      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        string += string;
      } while (n);

      return result;
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /**
     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--foo-bar');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the new array of string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      return toString(string).split(separator, limit);
    }

    /**
     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__foo_bar__');
     * // => 'Foo Bar'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + capitalize(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to search.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = baseClamp(toInteger(position), 0, string.length);
      return string.lastIndexOf(target, position) == position;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options] The options object.
     * @param {RegExp} [options.escape] The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate] The "evaluate" delimiter.
     * @param {Object} [options.imports] An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate] The "interpolate" delimiter.
     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.
     * @param {string} [options.variable] The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES delimiter as an alternative to the default "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, assignInDefaults);

      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      var sourceURL = '//# sourceURL=' +
        ('sourceURL' in options
          ? options.sourceURL
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      var variable = options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar');
     * // => '--foo-bar'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar');
     * // => '--FOO-BAR'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (!string) {
        return string;
      }
      if (guard || chars === undefined) {
        return string.replace(reTrim, '');
      }
      chars = (chars + '');
      if (!chars) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars);

      return strSymbols
        .slice(charsStartIndex(strSymbols, chrSymbols), charsEndIndex(strSymbols, chrSymbols) + 1)
        .join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (!string) {
        return string;
      }
      if (guard || chars === undefined) {
        return string.replace(reTrimEnd, '');
      }
      chars = (chars + '');
      if (!chars) {
        return string;
      }
      var strSymbols = stringToArray(string);
      return strSymbols
        .slice(0, charsEndIndex(strSymbols, stringToArray(chars)) + 1)
        .join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (!string) {
        return string;
      }
      if (guard || chars === undefined) {
        return string.replace(reTrimStart, '');
      }
      chars = (chars + '');
      if (!chars) {
        return string;
      }
      var strSymbols = stringToArray(string);
      return strSymbols
        .slice(charsStartIndex(strSymbols, stringToArray(chars)))
        .join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options=({})] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? toString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (reHasComplexSymbol.test(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? strSymbols.slice(0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(separator, end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their
     * corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional HTML
     * entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @category Util
     * @param {Function} func The function to attempt.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = rest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind,
     *  specified individually or in arrays.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'onClick': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, 'onClick');
     * jQuery(element).on('click', view.onClick);
     * // => logs 'clicked docs' when clicked
     */
    var bindAll = rest(function(object, methodNames) {
      arrayEach(baseFlatten(methodNames, 1), function(key) {
        object[key] = bind(object[key], object);
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` invoking the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.constant(true),                _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs ? pairs.length : 0,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return rest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * @static
     * @memberOf _
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * _.filter(users, _.conforms({ 'age': _.partial(_.gt, _, 38) }));
     * // => [{ 'user': 'fred', 'age': 40 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, true));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var object = { 'user': 'fred' };
     * var getter = _.constant(object);
     *
     * getter() === object;
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] Functions to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow(_.add, square);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] Functions to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight(square, _.add);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument given to it.
     *
     * @static
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'user': 'fred' };
     *
     * _.identity(object) === object;
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name the created callback returns the
     * property value for a given element. If `func` is an object the created
     * callback returns `true` for elements that contain the equivalent object
     * properties, otherwise it returns `false`.
     *
     * @static
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(callback, func) {
     *   var p = /^(\S+)\s*([<>])\s*(\S+)$/.exec(func);
     *   return !p ? callback(func) : function(object) {
     *     return (p[2] == '>' ? object[p[1]] > p[3] : object[p[1]] < p[3]);
     *   };
     * });
     *
     * _.filter(users, 'age > 36');
     * // => [{ 'user': 'fred', 'age': 40 }]
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`. The created function is equivalent to
     * `_.isMatch` with a `source` partially applied.
     *
     * **Note:** This method supports comparing the same values as `_.isEqual`.
     *
     * @static
     * @memberOf _
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, _.matches({ 'age': 40, 'active': false }));
     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, true));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** This method supports comparing the same values as `_.isEqual`.
     *
     * @static
     * @memberOf _
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * _.find(users, _.matchesProperty('user', 'fred'));
     * // => { 'user': 'fred' }
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, true));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': { 'c': _.constant(2) } } },
     *   { 'a': { 'b': { 'c': _.constant(1) } } }
     * ];
     *
     * _.map(objects, _.method('a.b.c'));
     * // => [2, 1]
     *
     * _.invokeMap(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');
     * // => [1, 2]
     */
    var method = rest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = rest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable function properties of a source object to the
     * destination object. If `object` is a function then methods are added to
     * its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options] The options object.
     * @param {boolean} [options.chain=true] Specify whether the functions added
     *  are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = (isObject(options) && 'chain' in options) ? options.chain : true,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * A no-operation function that returns `undefined` regardless of the
     * arguments it receives.
     *
     * @static
     * @memberOf _
     * @category Util
     * @example
     *
     * var object = { 'user': 'fred' };
     *
     * _.noop(object) === undefined;
     * // => true
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that returns its nth argument.
     *
     * @static
     * @memberOf _
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.nthArg(1);
     *
     * func('a', 'b', 'c');
     * // => 'b'
     */
    function nthArg(n) {
      n = toInteger(n);
      return function() {
        return arguments[n];
      };
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments provided
     * to the created function and returns their results.
     *
     * @static
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} iteratees The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over(Math.max, Math.min);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments provided to the created function.
     *
     * @static
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} predicates The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery(Boolean, isFinite);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments provided to the created function.
     *
     * @static
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} predicates The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome(Boolean, isFinite);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': { 'c': 2 } } },
     *   { 'a': { 'b': { 'c': 1 } } }
     * ];
     *
     * _.map(objects, _.property('a.b.c'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the new array of numbers.
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the new array of numbers.
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(true));
     * // => [true, true, true, true]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = baseCastFunction(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     *
     * var path = ['a', 'b', 'c'],
     *     newPath = _.toPath(path);
     *
     * console.log(newPath);
     * // => ['a', 'b', 'c']
     *
     * console.log(path === newPath);
     * // => false
     */
    function toPath(value) {
      return isArray(value) ? arrayMap(value, String) : stringToPath(value);
    }

    /**
     * Generates a unique ID. If `prefix` is given the ID is appended to it.
     *
     * @static
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    function add(augend, addend) {
      var result;
      if (augend === undefined && addend === undefined) {
        return 0;
      }
      if (augend !== undefined) {
        result = augend;
      }
      if (addend !== undefined) {
        result = result === undefined ? addend : (result + addend);
      }
      return result;
    }

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey
     * `undefined` is returned.
     *
     * @static
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, gt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee), gt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return sum(array) / (array ? array.length : 0);
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey
     * `undefined` is returned.
     *
     * @static
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, lt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee), lt)
        : undefined;
    }

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    function subtract(minuend, subtrahend) {
      var result;
      if (minuend === undefined && subtrahend === undefined) {
        return 0;
      }
      if (minuend !== undefined) {
        result = minuend;
      }
      if (subtrahend !== undefined) {
        result = result === undefined ? subtrahend : (result - subtrahend);
      }
      return result;
    }

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    // Avoid inheriting from `Object.prototype` when possible.
    Hash.prototype = nativeCreate ? nativeCreate(null) : objectProto;

    // Add functions to the `MapCache`.
    MapCache.prototype.clear = mapClear;
    MapCache.prototype['delete'] = mapDelete;
    MapCache.prototype.get = mapGet;
    MapCache.prototype.has = mapHas;
    MapCache.prototype.set = mapSet;

    // Add functions to the `SetCache`.
    SetCache.prototype.push = cachePush;

    // Add functions to the `Stack` cache.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    // Assign cache to `_.memoize`.
    memoize.Cache = MapCache;

    // Add functions that return wrapped values when chaining.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add functions to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add functions that return unwrapped values when chaining.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.deburr = deburr;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        var filtered = this.__filtered__;
        if (filtered && !index) {
          return new LazyWrapper(this);
        }
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = this.clone();
        if (filtered) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = rest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      predicate = getIteratee(predicate, 3);
      return this.filter(function(value) {
        return !predicate(value);
      });
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` and `String` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          return func.apply(this.value(), args);
        }
        return this[chainName](function(value) {
          return func.apply(value, args);
        });
      };
    });

    // Map minified function names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = (lodashFunc.name + ''),
            names = realNames[key] || (realNames[key] = []);

        names.push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add functions to the lazy wrapper.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chaining functions to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.flatMap = wrapperFlatMap;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    if (iteratorSymbol) {
      lodash.prototype[iteratorSymbol] = wrapperToIterator;
    }
    return lodash;
  }

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Expose lodash on the free variable `window` or `self` when available. This
  // prevents errors in cases where lodash is loaded by a script tag in the presence
  // of an AMD loader. See http://requirejs.org/docs/errors.html#mismatch for more details.
  (freeWindow || freeSelf || {})._ = _;

  // Some AMD build optimizers like r.js check for condition patterns like the following:
  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {
    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    define(function() {
      return _;
    });
  }
  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.
  else if (freeExports && freeModule) {
    // Export for Node.js.
    if (moduleExports) {
      (freeModule.exports = _)._ = _;
    }
    // Export for CommonJS support.
    freeExports._ = _;
  }
  else {
    // Export to the global object.
    root._ = _;
  }
}.call(this));

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],131:[function(require,module,exports){
var bn = require('bn.js');
var brorand = require('brorand');

function MillerRabin(rand) {
  this.rand = rand || new brorand.Rand();
}
module.exports = MillerRabin;

MillerRabin.create = function create(rand) {
  return new MillerRabin(rand);
};

MillerRabin.prototype._rand = function _rand(n) {
  var len = n.bitLength();
  var buf = this.rand.generate(Math.ceil(len / 8));

  // Set low bits
  buf[0] |= 3;

  // Mask high bits
  var mask = len & 0x7;
  if (mask !== 0)
    buf[buf.length - 1] >>= 7 - mask;

  return new bn(buf);
}

MillerRabin.prototype.test = function test(n, k, cb) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  var n2 = n1.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  var prime = true;
  for (; k > 0; k--) {
    var a = this._rand(n2);
    if (cb)
      cb(a);

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return false;
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s)
      return false;
  }

  return prime;
};

MillerRabin.prototype.getDivisor = function getDivisor(n, k) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  var n2 = n1.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  for (; k > 0; k--) {
    var a = this._rand(n2);

    var g = n.gcd(a);
    if (g.cmpn(1) !== 0)
      return g;

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return x.fromRed().subn(1).gcd(n);
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s) {
      x = x.redSqr();
      return x.fromRed().subn(1).gcd(n);
    }
  }

  return false;
};

},{"bn.js":16,"brorand":17}],132:[function(require,module,exports){
module.exports = assert;

function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

assert.equal = function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
};

},{}],133:[function(require,module,exports){
(function (Buffer){
//     uuid.js
//
//     Copyright (c) 2010-2012 Robert Kieffer
//     MIT License - http://opensource.org/licenses/mit-license.php

/*global window, require, define */
(function(_window) {
  'use strict';

  // Unique ID creation requires a high quality random # generator.  We feature
  // detect to determine the best RNG source, normalizing to a function that
  // returns 128-bits of randomness, since that's what's usually required
  var _rng, _mathRNG, _nodeRNG, _whatwgRNG, _previousRoot;

  function setupBrowser() {
    // Allow for MSIE11 msCrypto
    var _crypto = _window.crypto || _window.msCrypto;

    if (!_rng && _crypto && _crypto.getRandomValues) {
      // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto
      //
      // Moderately fast, high quality
      try {
        var _rnds8 = new Uint8Array(16);
        _whatwgRNG = _rng = function whatwgRNG() {
          _crypto.getRandomValues(_rnds8);
          return _rnds8;
        };
        _rng();
      } catch(e) {}
    }

    if (!_rng) {
      // Math.random()-based (RNG)
      //
      // If all else fails, use Math.random().  It's fast, but is of unspecified
      // quality.
      var  _rnds = new Array(16);
      _mathRNG = _rng = function() {
        for (var i = 0, r; i < 16; i++) {
          if ((i & 0x03) === 0) { r = Math.random() * 0x100000000; }
          _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;
        }

        return _rnds;
      };
      if ('undefined' !== typeof console && console.warn) {
        console.warn("[SECURITY] node-uuid: crypto not usable, falling back to insecure Math.random()");
      }
    }
  }

  function setupNode() {
    // Node.js crypto-based RNG - http://nodejs.org/docs/v0.6.2/api/crypto.html
    //
    // Moderately fast, high quality
    if ('function' === typeof require) {
      try {
        var _rb = require('crypto').randomBytes;
        _nodeRNG = _rng = _rb && function() {return _rb(16);};
        _rng();
      } catch(e) {}
    }
  }

  if (_window) {
    setupBrowser();
  } else {
    setupNode();
  }

  // Buffer class to use
  var BufferClass = ('function' === typeof Buffer) ? Buffer : Array;

  // Maps for number <-> hex string conversion
  var _byteToHex = [];
  var _hexToByte = {};
  for (var i = 0; i < 256; i++) {
    _byteToHex[i] = (i + 0x100).toString(16).substr(1);
    _hexToByte[_byteToHex[i]] = i;
  }

  // **`parse()` - Parse a UUID into it's component bytes**
  function parse(s, buf, offset) {
    var i = (buf && offset) || 0, ii = 0;

    buf = buf || [];
    s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {
      if (ii < 16) { // Don't overflow!
        buf[i + ii++] = _hexToByte[oct];
      }
    });

    // Zero out remaining bytes if string was short
    while (ii < 16) {
      buf[i + ii++] = 0;
    }

    return buf;
  }

  // **`unparse()` - Convert UUID byte array (ala parse()) into a string**
  function unparse(buf, offset) {
    var i = offset || 0, bth = _byteToHex;
    return  bth[buf[i++]] + bth[buf[i++]] +
            bth[buf[i++]] + bth[buf[i++]] + '-' +
            bth[buf[i++]] + bth[buf[i++]] + '-' +
            bth[buf[i++]] + bth[buf[i++]] + '-' +
            bth[buf[i++]] + bth[buf[i++]] + '-' +
            bth[buf[i++]] + bth[buf[i++]] +
            bth[buf[i++]] + bth[buf[i++]] +
            bth[buf[i++]] + bth[buf[i++]];
  }

  // **`v1()` - Generate time-based UUID**
  //
  // Inspired by https://github.com/LiosK/UUID.js
  // and http://docs.python.org/library/uuid.html

  // random #'s we need to init node and clockseq
  var _seedBytes = _rng();

  // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
  var _nodeId = [
    _seedBytes[0] | 0x01,
    _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]
  ];

  // Per 4.2.2, randomize (14 bit) clockseq
  var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;

  // Previous uuid creation time
  var _lastMSecs = 0, _lastNSecs = 0;

  // See https://github.com/broofa/node-uuid for API details
  function v1(options, buf, offset) {
    var i = buf && offset || 0;
    var b = buf || [];

    options = options || {};

    var clockseq = (options.clockseq != null) ? options.clockseq : _clockseq;

    // UUID timestamps are 100 nano-second units since the Gregorian epoch,
    // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
    // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
    // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.
    var msecs = (options.msecs != null) ? options.msecs : new Date().getTime();

    // Per 4.2.1.2, use count of uuid's generated during the current clock
    // cycle to simulate higher resolution clock
    var nsecs = (options.nsecs != null) ? options.nsecs : _lastNSecs + 1;

    // Time since last uuid creation (in msecs)
    var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;

    // Per 4.2.1.2, Bump clockseq on clock regression
    if (dt < 0 && options.clockseq == null) {
      clockseq = clockseq + 1 & 0x3fff;
    }

    // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
    // time interval
    if ((dt < 0 || msecs > _lastMSecs) && options.nsecs == null) {
      nsecs = 0;
    }

    // Per 4.2.1.2 Throw error if too many uuids are requested
    if (nsecs >= 10000) {
      throw new Error('uuid.v1(): Can\'t create more than 10M uuids/sec');
    }

    _lastMSecs = msecs;
    _lastNSecs = nsecs;
    _clockseq = clockseq;

    // Per 4.1.4 - Convert from unix epoch to Gregorian epoch
    msecs += 12219292800000;

    // `time_low`
    var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
    b[i++] = tl >>> 24 & 0xff;
    b[i++] = tl >>> 16 & 0xff;
    b[i++] = tl >>> 8 & 0xff;
    b[i++] = tl & 0xff;

    // `time_mid`
    var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;
    b[i++] = tmh >>> 8 & 0xff;
    b[i++] = tmh & 0xff;

    // `time_high_and_version`
    b[i++] = tmh >>> 24 & 0xf | 0x10; // include version
    b[i++] = tmh >>> 16 & 0xff;

    // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)
    b[i++] = clockseq >>> 8 | 0x80;

    // `clock_seq_low`
    b[i++] = clockseq & 0xff;

    // `node`
    var node = options.node || _nodeId;
    for (var n = 0; n < 6; n++) {
      b[i + n] = node[n];
    }

    return buf ? buf : unparse(b);
  }

  // **`v4()` - Generate random UUID**

  // See https://github.com/broofa/node-uuid for API details
  function v4(options, buf, offset) {
    // Deprecated - 'format' argument, as supported in v1.2
    var i = buf && offset || 0;

    if (typeof(options) === 'string') {
      buf = (options === 'binary') ? new BufferClass(16) : null;
      options = null;
    }
    options = options || {};

    var rnds = options.random || (options.rng || _rng)();

    // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
    rnds[6] = (rnds[6] & 0x0f) | 0x40;
    rnds[8] = (rnds[8] & 0x3f) | 0x80;

    // Copy bytes to buffer, if provided
    if (buf) {
      for (var ii = 0; ii < 16; ii++) {
        buf[i + ii] = rnds[ii];
      }
    }

    return buf || unparse(rnds);
  }

  // Export public API
  var uuid = v4;
  uuid.v1 = v1;
  uuid.v4 = v4;
  uuid.parse = parse;
  uuid.unparse = unparse;
  uuid.BufferClass = BufferClass;
  uuid._rng = _rng;
  uuid._mathRNG = _mathRNG;
  uuid._nodeRNG = _nodeRNG;
  uuid._whatwgRNG = _whatwgRNG;

  if (('undefined' !== typeof module) && module.exports) {
    // Publish as node.js module
    module.exports = uuid;
  } else if (typeof define === 'function' && define.amd) {
    // Publish as AMD module
    define(function() {return uuid;});


  } else {
    // Publish as global (in browsers)
    _previousRoot = _window.uuid;

    // **`noConflict()` - (browser only) to reset global 'uuid' var**
    uuid.noConflict = function() {
      _window.uuid = _previousRoot;
      return uuid;
    };

    _window.uuid = uuid;
  }
})('undefined' !== typeof window ? window : null);

}).call(this,require("buffer").Buffer)
},{"buffer":45,"crypto":56}],134:[function(require,module,exports){
(function (root, factory){
  'use strict';

  /*istanbul ignore next:cant test*/
  if (typeof module === 'object' && typeof module.exports === 'object') {
    module.exports = factory();
  } else if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define([], factory);
  } else {
    // Browser globals
    root.objectPath = factory();
  }
})(this, function(){
  'use strict';

  var
    toStr = Object.prototype.toString,
    _hasOwnProperty = Object.prototype.hasOwnProperty;

  function isEmpty(value){
    if (!value) {
      return true;
    }
    if (isArray(value) && value.length === 0) {
        return true;
    } else if (!isString(value)) {
        for (var i in value) {
            if (_hasOwnProperty.call(value, i)) {
                return false;
            }
        }
        return true;
    }
    return false;
  }

  function toString(type){
    return toStr.call(type);
  }

  function isNumber(value){
    return typeof value === 'number' || toString(value) === "[object Number]";
  }

  function isString(obj){
    return typeof obj === 'string' || toString(obj) === "[object String]";
  }

  function isObject(obj){
    return typeof obj === 'object' && toString(obj) === "[object Object]";
  }

  function isArray(obj){
    return typeof obj === 'object' && typeof obj.length === 'number' && toString(obj) === '[object Array]';
  }

  function isBoolean(obj){
    return typeof obj === 'boolean' || toString(obj) === '[object Boolean]';
  }

  function getKey(key){
    var intKey = parseInt(key);
    if (intKey.toString() === key) {
      return intKey;
    }
    return key;
  }

  function set(obj, path, value, doNotReplace){
    if (isNumber(path)) {
      path = [path];
    }
    if (isEmpty(path)) {
      return obj;
    }
    if (isString(path)) {
      return set(obj, path.split('.').map(getKey), value, doNotReplace);
    }
    var currentPath = path[0];

    if (path.length === 1) {
      var oldVal = obj[currentPath];
      if (oldVal === void 0 || !doNotReplace) {
        obj[currentPath] = value;
      }
      return oldVal;
    }

    if (obj[currentPath] === void 0) {
      //check if we assume an array
      if(isNumber(path[1])) {
        obj[currentPath] = [];
      } else {
        obj[currentPath] = {};
      }
    }

    return set(obj[currentPath], path.slice(1), value, doNotReplace);
  }

  function del(obj, path) {
    if (isNumber(path)) {
      path = [path];
    }

    if (isEmpty(obj)) {
      return void 0;
    }

    if (isEmpty(path)) {
      return obj;
    }
    if(isString(path)) {
      return del(obj, path.split('.'));
    }

    var currentPath = getKey(path[0]);
    var oldVal = obj[currentPath];

    if(path.length === 1) {
      if (oldVal !== void 0) {
        if (isArray(obj)) {
          obj.splice(currentPath, 1);
        } else {
          delete obj[currentPath];
        }
      }
    } else {
      if (obj[currentPath] !== void 0) {
        return del(obj[currentPath], path.slice(1));
      }
    }

    return obj;
  }

  var objectPath = function(obj) {
    return Object.keys(objectPath).reduce(function(proxy, prop) {
      if (typeof objectPath[prop] === 'function') {
        proxy[prop] = objectPath[prop].bind(objectPath, obj);
      }

      return proxy;
    }, {});
  };

  objectPath.has = function (obj, path) {
    if (isEmpty(obj)) {
      return false;
    }

    if (isNumber(path)) {
      path = [path];
    } else if (isString(path)) {
      path = path.split('.');
    }

    if (isEmpty(path) || path.length === 0) {
      return false;
    }

    for (var i = 0; i < path.length; i++) {
      var j = path[i];
      if ((isObject(obj) || isArray(obj)) && _hasOwnProperty.call(obj, j)) {
        obj = obj[j];
      } else {
        return false;
      }
    }

    return true;
  };

  objectPath.ensureExists = function (obj, path, value){
    return set(obj, path, value, true);
  };

  objectPath.set = function (obj, path, value, doNotReplace){
    return set(obj, path, value, doNotReplace);
  };

  objectPath.insert = function (obj, path, value, at){
    var arr = objectPath.get(obj, path);
    at = ~~at;
    if (!isArray(arr)) {
      arr = [];
      objectPath.set(obj, path, arr);
    }
    arr.splice(at, 0, value);
  };

  objectPath.empty = function(obj, path) {
    if (isEmpty(path)) {
      return obj;
    }
    if (isEmpty(obj)) {
      return void 0;
    }

    var value, i;
    if (!(value = objectPath.get(obj, path))) {
      return obj;
    }

    if (isString(value)) {
      return objectPath.set(obj, path, '');
    } else if (isBoolean(value)) {
      return objectPath.set(obj, path, false);
    } else if (isNumber(value)) {
      return objectPath.set(obj, path, 0);
    } else if (isArray(value)) {
      value.length = 0;
    } else if (isObject(value)) {
      for (i in value) {
        if (_hasOwnProperty.call(value, i)) {
          delete value[i];
        }
      }
    } else {
      return objectPath.set(obj, path, null);
    }
  };

  objectPath.push = function (obj, path /*, values */){
    var arr = objectPath.get(obj, path);
    if (!isArray(arr)) {
      arr = [];
      objectPath.set(obj, path, arr);
    }

    arr.push.apply(arr, Array.prototype.slice.call(arguments, 2));
  };

  objectPath.coalesce = function (obj, paths, defaultValue) {
    var value;

    for (var i = 0, len = paths.length; i < len; i++) {
      if ((value = objectPath.get(obj, paths[i])) !== void 0) {
        return value;
      }
    }

    return defaultValue;
  };

  objectPath.get = function (obj, path, defaultValue){
    if (isNumber(path)) {
      path = [path];
    }
    if (isEmpty(path)) {
      return obj;
    }
    if (isEmpty(obj)) {
      return defaultValue;
    }
    if (isString(path)) {
      return objectPath.get(obj, path.split('.'), defaultValue);
    }

    var currentPath = getKey(path[0]);

    if (path.length === 1) {
      if (obj[currentPath] === void 0) {
        return defaultValue;
      }
      return obj[currentPath];
    }

    return objectPath.get(obj[currentPath], path.slice(1), defaultValue);
  };

  objectPath.del = function(obj, path) {
    return del(obj, path);
  };

  return objectPath;
});

},{}],135:[function(require,module,exports){
// Top level file is just a mixin of submodules & constants
'use strict';

var assign    = require('./lib/utils/common').assign;

var deflate   = require('./lib/deflate');
var inflate   = require('./lib/inflate');
var constants = require('./lib/zlib/constants');

var pako = {};

assign(pako, deflate, inflate, constants);

module.exports = pako;

},{"./lib/deflate":136,"./lib/inflate":137,"./lib/utils/common":138,"./lib/zlib/constants":141}],136:[function(require,module,exports){
'use strict';


var zlib_deflate = require('./zlib/deflate.js');
var utils = require('./utils/common');
var strings = require('./utils/strings');
var msg = require('./zlib/messages');
var zstream = require('./zlib/zstream');

var toString = Object.prototype.toString;

/* Public constants ==========================================================*/
/* ===========================================================================*/

var Z_NO_FLUSH      = 0;
var Z_FINISH        = 4;

var Z_OK            = 0;
var Z_STREAM_END    = 1;
var Z_SYNC_FLUSH    = 2;

var Z_DEFAULT_COMPRESSION = -1;

var Z_DEFAULT_STRATEGY    = 0;

var Z_DEFLATED  = 8;

/* ===========================================================================*/


/**
 * class Deflate
 *
 * Generic JS-style wrapper for zlib calls. If you don't need
 * streaming behaviour - use more simple functions: [[deflate]],
 * [[deflateRaw]] and [[gzip]].
 **/

/* internal
 * Deflate.chunks -> Array
 *
 * Chunks of output data, if [[Deflate#onData]] not overriden.
 **/

/**
 * Deflate.result -> Uint8Array|Array
 *
 * Compressed result, generated by default [[Deflate#onData]]
 * and [[Deflate#onEnd]] handlers. Filled after you push last chunk
 * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you
 * push a chunk with explicit flush (call [[Deflate#push]] with
 * `Z_SYNC_FLUSH` param).
 **/

/**
 * Deflate.err -> Number
 *
 * Error code after deflate finished. 0 (Z_OK) on success.
 * You will not need it in real life, because deflate errors
 * are possible only on wrong options or bad `onData` / `onEnd`
 * custom handlers.
 **/

/**
 * Deflate.msg -> String
 *
 * Error message, if [[Deflate.err]] != 0
 **/


/**
 * new Deflate(options)
 * - options (Object): zlib deflate options.
 *
 * Creates new deflator instance with specified params. Throws exception
 * on bad params. Supported options:
 *
 * - `level`
 * - `windowBits`
 * - `memLevel`
 * - `strategy`
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Additional options, for internal needs:
 *
 * - `chunkSize` - size of generated data chunks (16K by default)
 * - `raw` (Boolean) - do raw deflate
 * - `gzip` (Boolean) - create gzip wrapper
 * - `to` (String) - if equal to 'string', then result will be "binary string"
 *    (each char code [0..255])
 * - `header` (Object) - custom header for gzip
 *   - `text` (Boolean) - true if compressed data believed to be text
 *   - `time` (Number) - modification time, unix timestamp
 *   - `os` (Number) - operation system code
 *   - `extra` (Array) - array of bytes with extra data (max 65536)
 *   - `name` (String) - file name (binary string)
 *   - `comment` (String) - comment (binary string)
 *   - `hcrc` (Boolean) - true if header crc should be added
 *
 * ##### Example:
 *
 * ```javascript
 * var pako = require('pako')
 *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])
 *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);
 *
 * var deflate = new pako.Deflate({ level: 3});
 *
 * deflate.push(chunk1, false);
 * deflate.push(chunk2, true);  // true -> last chunk
 *
 * if (deflate.err) { throw new Error(deflate.err); }
 *
 * console.log(deflate.result);
 * ```
 **/
var Deflate = function(options) {

  this.options = utils.assign({
    level: Z_DEFAULT_COMPRESSION,
    method: Z_DEFLATED,
    chunkSize: 16384,
    windowBits: 15,
    memLevel: 8,
    strategy: Z_DEFAULT_STRATEGY,
    to: ''
  }, options || {});

  var opt = this.options;

  if (opt.raw && (opt.windowBits > 0)) {
    opt.windowBits = -opt.windowBits;
  }

  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {
    opt.windowBits += 16;
  }

  this.err    = 0;      // error code, if happens (0 = Z_OK)
  this.msg    = '';     // error message
  this.ended  = false;  // used to avoid multiple onEnd() calls
  this.chunks = [];     // chunks of compressed data

  this.strm = new zstream();
  this.strm.avail_out = 0;

  var status = zlib_deflate.deflateInit2(
    this.strm,
    opt.level,
    opt.method,
    opt.windowBits,
    opt.memLevel,
    opt.strategy
  );

  if (status !== Z_OK) {
    throw new Error(msg[status]);
  }

  if (opt.header) {
    zlib_deflate.deflateSetHeader(this.strm, opt.header);
  }
};

/**
 * Deflate#push(data[, mode]) -> Boolean
 * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be
 *   converted to utf8 byte sequence.
 * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.
 *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` meansh Z_FINISH.
 *
 * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with
 * new compressed chunks. Returns `true` on success. The last data block must have
 * mode Z_FINISH (or `true`). That will flush internal pending buffers and call
 * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you
 * can use mode Z_SYNC_FLUSH, keeping the compression context.
 *
 * On fail call [[Deflate#onEnd]] with error code and return false.
 *
 * We strongly recommend to use `Uint8Array` on input for best speed (output
 * array format is detected automatically). Also, don't skip last param and always
 * use the same type in your code (boolean or number). That will improve JS speed.
 *
 * For regular `Array`-s make sure all elements are [0..255].
 *
 * ##### Example
 *
 * ```javascript
 * push(chunk, false); // push one of data chunks
 * ...
 * push(chunk, true);  // push last chunk
 * ```
 **/
Deflate.prototype.push = function(data, mode) {
  var strm = this.strm;
  var chunkSize = this.options.chunkSize;
  var status, _mode;

  if (this.ended) { return false; }

  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);

  // Convert data if needed
  if (typeof data === 'string') {
    // If we need to compress text, change encoding to utf8.
    strm.input = strings.string2buf(data);
  } else if (toString.call(data) === '[object ArrayBuffer]') {
    strm.input = new Uint8Array(data);
  } else {
    strm.input = data;
  }

  strm.next_in = 0;
  strm.avail_in = strm.input.length;

  do {
    if (strm.avail_out === 0) {
      strm.output = new utils.Buf8(chunkSize);
      strm.next_out = 0;
      strm.avail_out = chunkSize;
    }
    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */

    if (status !== Z_STREAM_END && status !== Z_OK) {
      this.onEnd(status);
      this.ended = true;
      return false;
    }
    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {
      if (this.options.to === 'string') {
        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));
      } else {
        this.onData(utils.shrinkBuf(strm.output, strm.next_out));
      }
    }
  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);

  // Finalize on the last chunk.
  if (_mode === Z_FINISH) {
    status = zlib_deflate.deflateEnd(this.strm);
    this.onEnd(status);
    this.ended = true;
    return status === Z_OK;
  }

  // callback interim results if Z_SYNC_FLUSH.
  if (_mode === Z_SYNC_FLUSH) {
    this.onEnd(Z_OK);
    strm.avail_out = 0;
    return true;
  }

  return true;
};


/**
 * Deflate#onData(chunk) -> Void
 * - chunk (Uint8Array|Array|String): ouput data. Type of array depends
 *   on js engine support. When string output requested, each chunk
 *   will be string.
 *
 * By default, stores data blocks in `chunks[]` property and glue
 * those in `onEnd`. Override this handler, if you need another behaviour.
 **/
Deflate.prototype.onData = function(chunk) {
  this.chunks.push(chunk);
};


/**
 * Deflate#onEnd(status) -> Void
 * - status (Number): deflate status. 0 (Z_OK) on success,
 *   other if not.
 *
 * Called once after you tell deflate that the input stream is
 * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)
 * or if an error happened. By default - join collected chunks,
 * free memory and fill `results` / `err` properties.
 **/
Deflate.prototype.onEnd = function(status) {
  // On success - join
  if (status === Z_OK) {
    if (this.options.to === 'string') {
      this.result = this.chunks.join('');
    } else {
      this.result = utils.flattenChunks(this.chunks);
    }
  }
  this.chunks = [];
  this.err = status;
  this.msg = this.strm.msg;
};


/**
 * deflate(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * Compress `data` with deflate alrorythm and `options`.
 *
 * Supported options are:
 *
 * - level
 * - windowBits
 * - memLevel
 * - strategy
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Sugar (options):
 *
 * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify
 *   negative windowBits implicitly.
 * - `to` (String) - if equal to 'string', then result will be "binary string"
 *    (each char code [0..255])
 *
 * ##### Example:
 *
 * ```javascript
 * var pako = require('pako')
 *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);
 *
 * console.log(pako.deflate(data));
 * ```
 **/
function deflate(input, options) {
  var deflator = new Deflate(options);

  deflator.push(input, true);

  // That will never happens, if you don't cheat with options :)
  if (deflator.err) { throw deflator.msg; }

  return deflator.result;
}


/**
 * deflateRaw(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * The same as [[deflate]], but creates raw data, without wrapper
 * (header and adler32 crc).
 **/
function deflateRaw(input, options) {
  options = options || {};
  options.raw = true;
  return deflate(input, options);
}


/**
 * gzip(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to compress.
 * - options (Object): zlib deflate options.
 *
 * The same as [[deflate]], but create gzip wrapper instead of
 * deflate one.
 **/
function gzip(input, options) {
  options = options || {};
  options.gzip = true;
  return deflate(input, options);
}


exports.Deflate = Deflate;
exports.deflate = deflate;
exports.deflateRaw = deflateRaw;
exports.gzip = gzip;

},{"./utils/common":138,"./utils/strings":139,"./zlib/deflate.js":143,"./zlib/messages":148,"./zlib/zstream":150}],137:[function(require,module,exports){
'use strict';


var zlib_inflate = require('./zlib/inflate.js');
var utils = require('./utils/common');
var strings = require('./utils/strings');
var c = require('./zlib/constants');
var msg = require('./zlib/messages');
var zstream = require('./zlib/zstream');
var gzheader = require('./zlib/gzheader');

var toString = Object.prototype.toString;

/**
 * class Inflate
 *
 * Generic JS-style wrapper for zlib calls. If you don't need
 * streaming behaviour - use more simple functions: [[inflate]]
 * and [[inflateRaw]].
 **/

/* internal
 * inflate.chunks -> Array
 *
 * Chunks of output data, if [[Inflate#onData]] not overriden.
 **/

/**
 * Inflate.result -> Uint8Array|Array|String
 *
 * Uncompressed result, generated by default [[Inflate#onData]]
 * and [[Inflate#onEnd]] handlers. Filled after you push last chunk
 * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you
 * push a chunk with explicit flush (call [[Inflate#push]] with
 * `Z_SYNC_FLUSH` param).
 **/

/**
 * Inflate.err -> Number
 *
 * Error code after inflate finished. 0 (Z_OK) on success.
 * Should be checked if broken data possible.
 **/

/**
 * Inflate.msg -> String
 *
 * Error message, if [[Inflate.err]] != 0
 **/


/**
 * new Inflate(options)
 * - options (Object): zlib inflate options.
 *
 * Creates new inflator instance with specified params. Throws exception
 * on bad params. Supported options:
 *
 * - `windowBits`
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information on these.
 *
 * Additional options, for internal needs:
 *
 * - `chunkSize` - size of generated data chunks (16K by default)
 * - `raw` (Boolean) - do raw inflate
 * - `to` (String) - if equal to 'string', then result will be converted
 *   from utf8 to utf16 (javascript) string. When string output requested,
 *   chunk length can differ from `chunkSize`, depending on content.
 *
 * By default, when no options set, autodetect deflate/gzip data format via
 * wrapper header.
 *
 * ##### Example:
 *
 * ```javascript
 * var pako = require('pako')
 *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])
 *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);
 *
 * var inflate = new pako.Inflate({ level: 3});
 *
 * inflate.push(chunk1, false);
 * inflate.push(chunk2, true);  // true -> last chunk
 *
 * if (inflate.err) { throw new Error(inflate.err); }
 *
 * console.log(inflate.result);
 * ```
 **/
var Inflate = function(options) {

  this.options = utils.assign({
    chunkSize: 16384,
    windowBits: 0,
    to: ''
  }, options || {});

  var opt = this.options;

  // Force window size for `raw` data, if not set directly,
  // because we have no header for autodetect.
  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {
    opt.windowBits = -opt.windowBits;
    if (opt.windowBits === 0) { opt.windowBits = -15; }
  }

  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate
  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&
      !(options && options.windowBits)) {
    opt.windowBits += 32;
  }

  // Gzip header has no info about windows size, we can do autodetect only
  // for deflate. So, if window size not set, force it to max when gzip possible
  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {
    // bit 3 (16) -> gzipped data
    // bit 4 (32) -> autodetect gzip/deflate
    if ((opt.windowBits & 15) === 0) {
      opt.windowBits |= 15;
    }
  }

  this.err    = 0;      // error code, if happens (0 = Z_OK)
  this.msg    = '';     // error message
  this.ended  = false;  // used to avoid multiple onEnd() calls
  this.chunks = [];     // chunks of compressed data

  this.strm   = new zstream();
  this.strm.avail_out = 0;

  var status  = zlib_inflate.inflateInit2(
    this.strm,
    opt.windowBits
  );

  if (status !== c.Z_OK) {
    throw new Error(msg[status]);
  }

  this.header = new gzheader();

  zlib_inflate.inflateGetHeader(this.strm, this.header);
};

/**
 * Inflate#push(data[, mode]) -> Boolean
 * - data (Uint8Array|Array|ArrayBuffer|String): input data
 * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.
 *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` meansh Z_FINISH.
 *
 * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with
 * new output chunks. Returns `true` on success. The last data block must have
 * mode Z_FINISH (or `true`). That will flush internal pending buffers and call
 * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you
 * can use mode Z_SYNC_FLUSH, keeping the decompression context.
 *
 * On fail call [[Inflate#onEnd]] with error code and return false.
 *
 * We strongly recommend to use `Uint8Array` on input for best speed (output
 * format is detected automatically). Also, don't skip last param and always
 * use the same type in your code (boolean or number). That will improve JS speed.
 *
 * For regular `Array`-s make sure all elements are [0..255].
 *
 * ##### Example
 *
 * ```javascript
 * push(chunk, false); // push one of data chunks
 * ...
 * push(chunk, true);  // push last chunk
 * ```
 **/
Inflate.prototype.push = function(data, mode) {
  var strm = this.strm;
  var chunkSize = this.options.chunkSize;
  var status, _mode;
  var next_out_utf8, tail, utf8str;

  // Flag to properly process Z_BUF_ERROR on testing inflate call
  // when we check that all output data was flushed.
  var allowBufError = false;

  if (this.ended) { return false; }
  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);

  // Convert data if needed
  if (typeof data === 'string') {
    // Only binary strings can be decompressed on practice
    strm.input = strings.binstring2buf(data);
  } else if (toString.call(data) === '[object ArrayBuffer]') {
    strm.input = new Uint8Array(data);
  } else {
    strm.input = data;
  }

  strm.next_in = 0;
  strm.avail_in = strm.input.length;

  do {
    if (strm.avail_out === 0) {
      strm.output = new utils.Buf8(chunkSize);
      strm.next_out = 0;
      strm.avail_out = chunkSize;
    }

    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */

    if (status === c.Z_BUF_ERROR && allowBufError === true) {
      status = c.Z_OK;
      allowBufError = false;
    }

    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {
      this.onEnd(status);
      this.ended = true;
      return false;
    }

    if (strm.next_out) {
      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {

        if (this.options.to === 'string') {

          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);

          tail = strm.next_out - next_out_utf8;
          utf8str = strings.buf2string(strm.output, next_out_utf8);

          // move tail
          strm.next_out = tail;
          strm.avail_out = chunkSize - tail;
          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }

          this.onData(utf8str);

        } else {
          this.onData(utils.shrinkBuf(strm.output, strm.next_out));
        }
      }
    }

    // When no more input data, we should check that internal inflate buffers
    // are flushed. The only way to do it when avail_out = 0 - run one more
    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.
    // Here we set flag to process this error properly.
    //
    // NOTE. Deflate does not return error in this case and does not needs such
    // logic.
    if (strm.avail_in === 0 && strm.avail_out === 0) {
      allowBufError = true;
    }

  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);

  if (status === c.Z_STREAM_END) {
    _mode = c.Z_FINISH;
  }

  // Finalize on the last chunk.
  if (_mode === c.Z_FINISH) {
    status = zlib_inflate.inflateEnd(this.strm);
    this.onEnd(status);
    this.ended = true;
    return status === c.Z_OK;
  }

  // callback interim results if Z_SYNC_FLUSH.
  if (_mode === c.Z_SYNC_FLUSH) {
    this.onEnd(c.Z_OK);
    strm.avail_out = 0;
    return true;
  }

  return true;
};


/**
 * Inflate#onData(chunk) -> Void
 * - chunk (Uint8Array|Array|String): ouput data. Type of array depends
 *   on js engine support. When string output requested, each chunk
 *   will be string.
 *
 * By default, stores data blocks in `chunks[]` property and glue
 * those in `onEnd`. Override this handler, if you need another behaviour.
 **/
Inflate.prototype.onData = function(chunk) {
  this.chunks.push(chunk);
};


/**
 * Inflate#onEnd(status) -> Void
 * - status (Number): inflate status. 0 (Z_OK) on success,
 *   other if not.
 *
 * Called either after you tell inflate that the input stream is
 * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)
 * or if an error happened. By default - join collected chunks,
 * free memory and fill `results` / `err` properties.
 **/
Inflate.prototype.onEnd = function(status) {
  // On success - join
  if (status === c.Z_OK) {
    if (this.options.to === 'string') {
      // Glue & convert here, until we teach pako to send
      // utf8 alligned strings to onData
      this.result = this.chunks.join('');
    } else {
      this.result = utils.flattenChunks(this.chunks);
    }
  }
  this.chunks = [];
  this.err = status;
  this.msg = this.strm.msg;
};


/**
 * inflate(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * Decompress `data` with inflate/ungzip and `options`. Autodetect
 * format via wrapper header by default. That's why we don't provide
 * separate `ungzip` method.
 *
 * Supported options are:
 *
 * - windowBits
 *
 * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)
 * for more information.
 *
 * Sugar (options):
 *
 * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify
 *   negative windowBits implicitly.
 * - `to` (String) - if equal to 'string', then result will be converted
 *   from utf8 to utf16 (javascript) string. When string output requested,
 *   chunk length can differ from `chunkSize`, depending on content.
 *
 *
 * ##### Example:
 *
 * ```javascript
 * var pako = require('pako')
 *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])
 *   , output;
 *
 * try {
 *   output = pako.inflate(input);
 * } catch (err)
 *   console.log(err);
 * }
 * ```
 **/
function inflate(input, options) {
  var inflator = new Inflate(options);

  inflator.push(input, true);

  // That will never happens, if you don't cheat with options :)
  if (inflator.err) { throw inflator.msg; }

  return inflator.result;
}


/**
 * inflateRaw(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * The same as [[inflate]], but creates raw data, without wrapper
 * (header and adler32 crc).
 **/
function inflateRaw(input, options) {
  options = options || {};
  options.raw = true;
  return inflate(input, options);
}


/**
 * ungzip(data[, options]) -> Uint8Array|Array|String
 * - data (Uint8Array|Array|String): input data to decompress.
 * - options (Object): zlib inflate options.
 *
 * Just shortcut to [[inflate]], because it autodetects format
 * by header.content. Done for convenience.
 **/


exports.Inflate = Inflate;
exports.inflate = inflate;
exports.inflateRaw = inflateRaw;
exports.ungzip  = inflate;

},{"./utils/common":138,"./utils/strings":139,"./zlib/constants":141,"./zlib/gzheader":144,"./zlib/inflate.js":146,"./zlib/messages":148,"./zlib/zstream":150}],138:[function(require,module,exports){
'use strict';


var TYPED_OK =  (typeof Uint8Array !== 'undefined') &&
                (typeof Uint16Array !== 'undefined') &&
                (typeof Int32Array !== 'undefined');


exports.assign = function (obj /*from1, from2, from3, ...*/) {
  var sources = Array.prototype.slice.call(arguments, 1);
  while (sources.length) {
    var source = sources.shift();
    if (!source) { continue; }

    if (typeof source !== 'object') {
      throw new TypeError(source + 'must be non-object');
    }

    for (var p in source) {
      if (source.hasOwnProperty(p)) {
        obj[p] = source[p];
      }
    }
  }

  return obj;
};


// reduce buffer size, avoiding mem copy
exports.shrinkBuf = function (buf, size) {
  if (buf.length === size) { return buf; }
  if (buf.subarray) { return buf.subarray(0, size); }
  buf.length = size;
  return buf;
};


var fnTyped = {
  arraySet: function (dest, src, src_offs, len, dest_offs) {
    if (src.subarray && dest.subarray) {
      dest.set(src.subarray(src_offs, src_offs+len), dest_offs);
      return;
    }
    // Fallback to ordinary array
    for (var i=0; i<len; i++) {
      dest[dest_offs + i] = src[src_offs + i];
    }
  },
  // Join array of chunks to single array.
  flattenChunks: function(chunks) {
    var i, l, len, pos, chunk, result;

    // calculate data length
    len = 0;
    for (i=0, l=chunks.length; i<l; i++) {
      len += chunks[i].length;
    }

    // join chunks
    result = new Uint8Array(len);
    pos = 0;
    for (i=0, l=chunks.length; i<l; i++) {
      chunk = chunks[i];
      result.set(chunk, pos);
      pos += chunk.length;
    }

    return result;
  }
};

var fnUntyped = {
  arraySet: function (dest, src, src_offs, len, dest_offs) {
    for (var i=0; i<len; i++) {
      dest[dest_offs + i] = src[src_offs + i];
    }
  },
  // Join array of chunks to single array.
  flattenChunks: function(chunks) {
    return [].concat.apply([], chunks);
  }
};


// Enable/Disable typed arrays use, for testing
//
exports.setTyped = function (on) {
  if (on) {
    exports.Buf8  = Uint8Array;
    exports.Buf16 = Uint16Array;
    exports.Buf32 = Int32Array;
    exports.assign(exports, fnTyped);
  } else {
    exports.Buf8  = Array;
    exports.Buf16 = Array;
    exports.Buf32 = Array;
    exports.assign(exports, fnUntyped);
  }
};

exports.setTyped(TYPED_OK);

},{}],139:[function(require,module,exports){
// String encode/decode helpers
'use strict';


var utils = require('./common');


// Quick check if we can use fast array to bin string conversion
//
// - apply(Array) can fail on Android 2.2
// - apply(Uint8Array) can fail on iOS 5.1 Safary
//
var STR_APPLY_OK = true;
var STR_APPLY_UIA_OK = true;

try { String.fromCharCode.apply(null, [0]); } catch(__) { STR_APPLY_OK = false; }
try { String.fromCharCode.apply(null, new Uint8Array(1)); } catch(__) { STR_APPLY_UIA_OK = false; }


// Table with utf8 lengths (calculated by first byte of sequence)
// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,
// because max possible codepoint is 0x10ffff
var _utf8len = new utils.Buf8(256);
for (var q=0; q<256; q++) {
  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);
}
_utf8len[254]=_utf8len[254]=1; // Invalid sequence start


// convert string to array (typed, when possible)
exports.string2buf = function (str) {
  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;

  // count binary size
  for (m_pos = 0; m_pos < str_len; m_pos++) {
    c = str.charCodeAt(m_pos);
    if ((c & 0xfc00) === 0xd800 && (m_pos+1 < str_len)) {
      c2 = str.charCodeAt(m_pos+1);
      if ((c2 & 0xfc00) === 0xdc00) {
        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);
        m_pos++;
      }
    }
    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;
  }

  // allocate buffer
  buf = new utils.Buf8(buf_len);

  // convert
  for (i=0, m_pos = 0; i < buf_len; m_pos++) {
    c = str.charCodeAt(m_pos);
    if ((c & 0xfc00) === 0xd800 && (m_pos+1 < str_len)) {
      c2 = str.charCodeAt(m_pos+1);
      if ((c2 & 0xfc00) === 0xdc00) {
        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);
        m_pos++;
      }
    }
    if (c < 0x80) {
      /* one byte */
      buf[i++] = c;
    } else if (c < 0x800) {
      /* two bytes */
      buf[i++] = 0xC0 | (c >>> 6);
      buf[i++] = 0x80 | (c & 0x3f);
    } else if (c < 0x10000) {
      /* three bytes */
      buf[i++] = 0xE0 | (c >>> 12);
      buf[i++] = 0x80 | (c >>> 6 & 0x3f);
      buf[i++] = 0x80 | (c & 0x3f);
    } else {
      /* four bytes */
      buf[i++] = 0xf0 | (c >>> 18);
      buf[i++] = 0x80 | (c >>> 12 & 0x3f);
      buf[i++] = 0x80 | (c >>> 6 & 0x3f);
      buf[i++] = 0x80 | (c & 0x3f);
    }
  }

  return buf;
};

// Helper (used in 2 places)
function buf2binstring(buf, len) {
  // use fallback for big arrays to avoid stack overflow
  if (len < 65537) {
    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {
      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));
    }
  }

  var result = '';
  for (var i=0; i < len; i++) {
    result += String.fromCharCode(buf[i]);
  }
  return result;
}


// Convert byte array to binary string
exports.buf2binstring = function(buf) {
  return buf2binstring(buf, buf.length);
};


// Convert binary string (typed, when possible)
exports.binstring2buf = function(str) {
  var buf = new utils.Buf8(str.length);
  for (var i=0, len=buf.length; i < len; i++) {
    buf[i] = str.charCodeAt(i);
  }
  return buf;
};


// convert array to string
exports.buf2string = function (buf, max) {
  var i, out, c, c_len;
  var len = max || buf.length;

  // Reserve max possible length (2 words per char)
  // NB: by unknown reasons, Array is significantly faster for
  //     String.fromCharCode.apply than Uint16Array.
  var utf16buf = new Array(len*2);

  for (out=0, i=0; i<len;) {
    c = buf[i++];
    // quick process ascii
    if (c < 0x80) { utf16buf[out++] = c; continue; }

    c_len = _utf8len[c];
    // skip 5 & 6 byte codes
    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len-1; continue; }

    // apply mask on first byte
    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;
    // join the rest
    while (c_len > 1 && i < len) {
      c = (c << 6) | (buf[i++] & 0x3f);
      c_len--;
    }

    // terminated by end of string?
    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }

    if (c < 0x10000) {
      utf16buf[out++] = c;
    } else {
      c -= 0x10000;
      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);
      utf16buf[out++] = 0xdc00 | (c & 0x3ff);
    }
  }

  return buf2binstring(utf16buf, out);
};


// Calculate max possible position in utf8 buffer,
// that will not break sequence. If that's not possible
// - (very small limits) return max size as is.
//
// buf[] - utf8 bytes array
// max   - length limit (mandatory);
exports.utf8border = function(buf, max) {
  var pos;

  max = max || buf.length;
  if (max > buf.length) { max = buf.length; }

  // go back from last position, until start of sequence found
  pos = max-1;
  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }

  // Fuckup - very small and broken sequence,
  // return max, because we should return something anyway.
  if (pos < 0) { return max; }

  // If we came to start of buffer - that means vuffer is too small,
  // return max too.
  if (pos === 0) { return max; }

  return (pos + _utf8len[buf[pos]] > max) ? pos : max;
};

},{"./common":138}],140:[function(require,module,exports){
'use strict';

// Note: adler32 takes 12% for level 0 and 2% for level 6.
// It doesn't worth to make additional optimizationa as in original.
// Small size is preferable.

function adler32(adler, buf, len, pos) {
  var s1 = (adler & 0xffff) |0,
      s2 = ((adler >>> 16) & 0xffff) |0,
      n = 0;

  while (len !== 0) {
    // Set limit ~ twice less than 5552, to keep
    // s2 in 31-bits, because we force signed ints.
    // in other case %= will fail.
    n = len > 2000 ? 2000 : len;
    len -= n;

    do {
      s1 = (s1 + buf[pos++]) |0;
      s2 = (s2 + s1) |0;
    } while (--n);

    s1 %= 65521;
    s2 %= 65521;
  }

  return (s1 | (s2 << 16)) |0;
}


module.exports = adler32;

},{}],141:[function(require,module,exports){
module.exports = {

  /* Allowed flush values; see deflate() and inflate() below for details */
  Z_NO_FLUSH:         0,
  Z_PARTIAL_FLUSH:    1,
  Z_SYNC_FLUSH:       2,
  Z_FULL_FLUSH:       3,
  Z_FINISH:           4,
  Z_BLOCK:            5,
  Z_TREES:            6,

  /* Return codes for the compression/decompression functions. Negative values
  * are errors, positive values are used for special but normal events.
  */
  Z_OK:               0,
  Z_STREAM_END:       1,
  Z_NEED_DICT:        2,
  Z_ERRNO:           -1,
  Z_STREAM_ERROR:    -2,
  Z_DATA_ERROR:      -3,
  //Z_MEM_ERROR:     -4,
  Z_BUF_ERROR:       -5,
  //Z_VERSION_ERROR: -6,

  /* compression levels */
  Z_NO_COMPRESSION:         0,
  Z_BEST_SPEED:             1,
  Z_BEST_COMPRESSION:       9,
  Z_DEFAULT_COMPRESSION:   -1,


  Z_FILTERED:               1,
  Z_HUFFMAN_ONLY:           2,
  Z_RLE:                    3,
  Z_FIXED:                  4,
  Z_DEFAULT_STRATEGY:       0,

  /* Possible values of the data_type field (though see inflate()) */
  Z_BINARY:                 0,
  Z_TEXT:                   1,
  //Z_ASCII:                1, // = Z_TEXT (deprecated)
  Z_UNKNOWN:                2,

  /* The deflate compression method */
  Z_DEFLATED:               8
  //Z_NULL:                 null // Use -1 or null inline, depending on var type
};

},{}],142:[function(require,module,exports){
'use strict';

// Note: we can't get significant speed boost here.
// So write code to minimize size - no pregenerated tables
// and array tools dependencies.


// Use ordinary array, since untyped makes no boost here
function makeTable() {
  var c, table = [];

  for (var n =0; n < 256; n++) {
    c = n;
    for (var k =0; k < 8; k++) {
      c = ((c&1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));
    }
    table[n] = c;
  }

  return table;
}

// Create table on load. Just 255 signed longs. Not a problem.
var crcTable = makeTable();


function crc32(crc, buf, len, pos) {
  var t = crcTable,
      end = pos + len;

  crc = crc ^ (-1);

  for (var i = pos; i < end; i++) {
    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];
  }

  return (crc ^ (-1)); // >>> 0;
}


module.exports = crc32;

},{}],143:[function(require,module,exports){
'use strict';

var utils   = require('../utils/common');
var trees   = require('./trees');
var adler32 = require('./adler32');
var crc32   = require('./crc32');
var msg   = require('./messages');

/* Public constants ==========================================================*/
/* ===========================================================================*/


/* Allowed flush values; see deflate() and inflate() below for details */
var Z_NO_FLUSH      = 0;
var Z_PARTIAL_FLUSH = 1;
//var Z_SYNC_FLUSH    = 2;
var Z_FULL_FLUSH    = 3;
var Z_FINISH        = 4;
var Z_BLOCK         = 5;
//var Z_TREES         = 6;


/* Return codes for the compression/decompression functions. Negative values
 * are errors, positive values are used for special but normal events.
 */
var Z_OK            = 0;
var Z_STREAM_END    = 1;
//var Z_NEED_DICT     = 2;
//var Z_ERRNO         = -1;
var Z_STREAM_ERROR  = -2;
var Z_DATA_ERROR    = -3;
//var Z_MEM_ERROR     = -4;
var Z_BUF_ERROR     = -5;
//var Z_VERSION_ERROR = -6;


/* compression levels */
//var Z_NO_COMPRESSION      = 0;
//var Z_BEST_SPEED          = 1;
//var Z_BEST_COMPRESSION    = 9;
var Z_DEFAULT_COMPRESSION = -1;


var Z_FILTERED            = 1;
var Z_HUFFMAN_ONLY        = 2;
var Z_RLE                 = 3;
var Z_FIXED               = 4;
var Z_DEFAULT_STRATEGY    = 0;

/* Possible values of the data_type field (though see inflate()) */
//var Z_BINARY              = 0;
//var Z_TEXT                = 1;
//var Z_ASCII               = 1; // = Z_TEXT
var Z_UNKNOWN             = 2;


/* The deflate compression method */
var Z_DEFLATED  = 8;

/*============================================================================*/


var MAX_MEM_LEVEL = 9;
/* Maximum value for memLevel in deflateInit2 */
var MAX_WBITS = 15;
/* 32K LZ77 window */
var DEF_MEM_LEVEL = 8;


var LENGTH_CODES  = 29;
/* number of length codes, not counting the special END_BLOCK code */
var LITERALS      = 256;
/* number of literal bytes 0..255 */
var L_CODES       = LITERALS + 1 + LENGTH_CODES;
/* number of Literal or Length codes, including the END_BLOCK code */
var D_CODES       = 30;
/* number of distance codes */
var BL_CODES      = 19;
/* number of codes used to transfer the bit lengths */
var HEAP_SIZE     = 2*L_CODES + 1;
/* maximum heap size */
var MAX_BITS  = 15;
/* All codes must not exceed MAX_BITS bits */

var MIN_MATCH = 3;
var MAX_MATCH = 258;
var MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);

var PRESET_DICT = 0x20;

var INIT_STATE = 42;
var EXTRA_STATE = 69;
var NAME_STATE = 73;
var COMMENT_STATE = 91;
var HCRC_STATE = 103;
var BUSY_STATE = 113;
var FINISH_STATE = 666;

var BS_NEED_MORE      = 1; /* block not completed, need more input or more output */
var BS_BLOCK_DONE     = 2; /* block flush performed */
var BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */
var BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */

var OS_CODE = 0x03; // Unix :) . Don't detect, use this default.

function err(strm, errorCode) {
  strm.msg = msg[errorCode];
  return errorCode;
}

function rank(f) {
  return ((f) << 1) - ((f) > 4 ? 9 : 0);
}

function zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }


/* =========================================================================
 * Flush as much pending output as possible. All deflate() output goes
 * through this function so some applications may wish to modify it
 * to avoid allocating a large strm->output buffer and copying into it.
 * (See also read_buf()).
 */
function flush_pending(strm) {
  var s = strm.state;

  //_tr_flush_bits(s);
  var len = s.pending;
  if (len > strm.avail_out) {
    len = strm.avail_out;
  }
  if (len === 0) { return; }

  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);
  strm.next_out += len;
  s.pending_out += len;
  strm.total_out += len;
  strm.avail_out -= len;
  s.pending -= len;
  if (s.pending === 0) {
    s.pending_out = 0;
  }
}


function flush_block_only (s, last) {
  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);
  s.block_start = s.strstart;
  flush_pending(s.strm);
}


function put_byte(s, b) {
  s.pending_buf[s.pending++] = b;
}


/* =========================================================================
 * Put a short in the pending buffer. The 16-bit value is put in MSB order.
 * IN assertion: the stream state is correct and there is enough room in
 * pending_buf.
 */
function putShortMSB(s, b) {
//  put_byte(s, (Byte)(b >> 8));
//  put_byte(s, (Byte)(b & 0xff));
  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;
  s.pending_buf[s.pending++] = b & 0xff;
}


/* ===========================================================================
 * Read a new buffer from the current input stream, update the adler32
 * and total number of bytes read.  All deflate() input goes through
 * this function so some applications may wish to modify it to avoid
 * allocating a large strm->input buffer and copying from it.
 * (See also flush_pending()).
 */
function read_buf(strm, buf, start, size) {
  var len = strm.avail_in;

  if (len > size) { len = size; }
  if (len === 0) { return 0; }

  strm.avail_in -= len;

  utils.arraySet(buf, strm.input, strm.next_in, len, start);
  if (strm.state.wrap === 1) {
    strm.adler = adler32(strm.adler, buf, len, start);
  }

  else if (strm.state.wrap === 2) {
    strm.adler = crc32(strm.adler, buf, len, start);
  }

  strm.next_in += len;
  strm.total_in += len;

  return len;
}


/* ===========================================================================
 * Set match_start to the longest match starting at the given string and
 * return its length. Matches shorter or equal to prev_length are discarded,
 * in which case the result is equal to prev_length and match_start is
 * garbage.
 * IN assertions: cur_match is the head of the hash chain for the current
 *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1
 * OUT assertion: the match length is not greater than s->lookahead.
 */
function longest_match(s, cur_match) {
  var chain_length = s.max_chain_length;      /* max hash chain length */
  var scan = s.strstart; /* current string */
  var match;                       /* matched string */
  var len;                           /* length of current match */
  var best_len = s.prev_length;              /* best match length so far */
  var nice_match = s.nice_match;             /* stop if match long enough */
  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?
      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;

  var _win = s.window; // shortcut

  var wmask = s.w_mask;
  var prev  = s.prev;

  /* Stop when cur_match becomes <= limit. To simplify the code,
   * we prevent matches with the string of window index 0.
   */

  var strend = s.strstart + MAX_MATCH;
  var scan_end1  = _win[scan + best_len - 1];
  var scan_end   = _win[scan + best_len];

  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.
   * It is easy to get rid of this optimization if necessary.
   */
  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");

  /* Do not waste too much time if we already have a good match: */
  if (s.prev_length >= s.good_match) {
    chain_length >>= 2;
  }
  /* Do not look for matches beyond the end of the input. This is necessary
   * to make deflate deterministic.
   */
  if (nice_match > s.lookahead) { nice_match = s.lookahead; }

  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");

  do {
    // Assert(cur_match < s->strstart, "no future");
    match = cur_match;

    /* Skip to next match if the match length cannot increase
     * or if the match length is less than 2.  Note that the checks below
     * for insufficient lookahead only occur occasionally for performance
     * reasons.  Therefore uninitialized memory will be accessed, and
     * conditional jumps will be made that depend on those values.
     * However the length of the match is limited to the lookahead, so
     * the output of deflate is not affected by the uninitialized values.
     */

    if (_win[match + best_len]     !== scan_end  ||
        _win[match + best_len - 1] !== scan_end1 ||
        _win[match]                !== _win[scan] ||
        _win[++match]              !== _win[scan + 1]) {
      continue;
    }

    /* The check at best_len-1 can be removed because it will be made
     * again later. (This heuristic is not always a win.)
     * It is not necessary to compare scan[2] and match[2] since they
     * are always equal when the other bytes match, given that
     * the hash keys are equal and that HASH_BITS >= 8.
     */
    scan += 2;
    match++;
    // Assert(*scan == *match, "match[2]?");

    /* We check for insufficient lookahead only every 8th comparison;
     * the 256th check will be made at strstart+258.
     */
    do {
      /*jshint noempty:false*/
    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&
             scan < strend);

    // Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");

    len = MAX_MATCH - (strend - scan);
    scan = strend - MAX_MATCH;

    if (len > best_len) {
      s.match_start = cur_match;
      best_len = len;
      if (len >= nice_match) {
        break;
      }
      scan_end1  = _win[scan + best_len - 1];
      scan_end   = _win[scan + best_len];
    }
  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);

  if (best_len <= s.lookahead) {
    return best_len;
  }
  return s.lookahead;
}


/* ===========================================================================
 * Fill the window when the lookahead becomes insufficient.
 * Updates strstart and lookahead.
 *
 * IN assertion: lookahead < MIN_LOOKAHEAD
 * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD
 *    At least one byte has been read, or avail_in == 0; reads are
 *    performed for at least two bytes (required for the zip translate_eol
 *    option -- not supported here).
 */
function fill_window(s) {
  var _w_size = s.w_size;
  var p, n, m, more, str;

  //Assert(s->lookahead < MIN_LOOKAHEAD, "already enough lookahead");

  do {
    more = s.window_size - s.lookahead - s.strstart;

    // JS ints have 32 bit, block below not needed
    /* Deal with !@#$% 64K limit: */
    //if (sizeof(int) <= 2) {
    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {
    //        more = wsize;
    //
    //  } else if (more == (unsigned)(-1)) {
    //        /* Very unlikely, but possible on 16 bit machine if
    //         * strstart == 0 && lookahead == 1 (input done a byte at time)
    //         */
    //        more--;
    //    }
    //}


    /* If the window is almost full and there is insufficient lookahead,
     * move the upper half to the lower one to make room in the upper half.
     */
    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {

      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);
      s.match_start -= _w_size;
      s.strstart -= _w_size;
      /* we now have strstart >= MAX_DIST */
      s.block_start -= _w_size;

      /* Slide the hash table (could be avoided with 32 bit values
       at the expense of memory usage). We slide even when level == 0
       to keep the hash table consistent if we switch back to level > 0
       later. (Using level 0 permanently is not an optimal usage of
       zlib, so we don't care about this pathological case.)
       */

      n = s.hash_size;
      p = n;
      do {
        m = s.head[--p];
        s.head[p] = (m >= _w_size ? m - _w_size : 0);
      } while (--n);

      n = _w_size;
      p = n;
      do {
        m = s.prev[--p];
        s.prev[p] = (m >= _w_size ? m - _w_size : 0);
        /* If n is not on any hash chain, prev[n] is garbage but
         * its value will never be used.
         */
      } while (--n);

      more += _w_size;
    }
    if (s.strm.avail_in === 0) {
      break;
    }

    /* If there was no sliding:
     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&
     *    more == window_size - lookahead - strstart
     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)
     * => more >= window_size - 2*WSIZE + 2
     * In the BIG_MEM or MMAP case (not yet supported),
     *   window_size == input_size + MIN_LOOKAHEAD  &&
     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.
     * Otherwise, window_size == 2*WSIZE so more >= 2.
     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.
     */
    //Assert(more >= 2, "more < 2");
    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);
    s.lookahead += n;

    /* Initialize the hash value now that we have some input: */
    if (s.lookahead + s.insert >= MIN_MATCH) {
      str = s.strstart - s.insert;
      s.ins_h = s.window[str];

      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;
//#if MIN_MATCH != 3
//        Call update_hash() MIN_MATCH-3 more times
//#endif
      while (s.insert) {
        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */
        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH-1]) & s.hash_mask;

        s.prev[str & s.w_mask] = s.head[s.ins_h];
        s.head[s.ins_h] = str;
        str++;
        s.insert--;
        if (s.lookahead + s.insert < MIN_MATCH) {
          break;
        }
      }
    }
    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,
     * but this is not important since only literal bytes will be emitted.
     */

  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);

  /* If the WIN_INIT bytes after the end of the current data have never been
   * written, then zero those bytes in order to avoid memory check reports of
   * the use of uninitialized (or uninitialised as Julian writes) bytes by
   * the longest match routines.  Update the high water mark for the next
   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match
   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.
   */
//  if (s.high_water < s.window_size) {
//    var curr = s.strstart + s.lookahead;
//    var init = 0;
//
//    if (s.high_water < curr) {
//      /* Previous high water mark below current data -- zero WIN_INIT
//       * bytes or up to end of window, whichever is less.
//       */
//      init = s.window_size - curr;
//      if (init > WIN_INIT)
//        init = WIN_INIT;
//      zmemzero(s->window + curr, (unsigned)init);
//      s->high_water = curr + init;
//    }
//    else if (s->high_water < (ulg)curr + WIN_INIT) {
//      /* High water mark at or above current data, but below current data
//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up
//       * to end of window, whichever is less.
//       */
//      init = (ulg)curr + WIN_INIT - s->high_water;
//      if (init > s->window_size - s->high_water)
//        init = s->window_size - s->high_water;
//      zmemzero(s->window + s->high_water, (unsigned)init);
//      s->high_water += init;
//    }
//  }
//
//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,
//    "not enough room for search");
}

/* ===========================================================================
 * Copy without compression as much as possible from the input stream, return
 * the current block state.
 * This function does not insert new strings in the dictionary since
 * uncompressible data is probably not useful. This function is used
 * only for the level=0 compression option.
 * NOTE: this function should be optimized to avoid extra copying from
 * window to pending_buf.
 */
function deflate_stored(s, flush) {
  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited
   * to pending_buf_size, and each stored block has a 5 byte header:
   */
  var max_block_size = 0xffff;

  if (max_block_size > s.pending_buf_size - 5) {
    max_block_size = s.pending_buf_size - 5;
  }

  /* Copy as much as possible from input to output: */
  for (;;) {
    /* Fill the window as much as possible: */
    if (s.lookahead <= 1) {

      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||
      //  s->block_start >= (long)s->w_size, "slide too late");
//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||
//        s.block_start >= s.w_size)) {
//        throw  new Error("slide too late");
//      }

      fill_window(s);
      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }

      if (s.lookahead === 0) {
        break;
      }
      /* flush the current block */
    }
    //Assert(s->block_start >= 0L, "block gone");
//    if (s.block_start < 0) throw new Error("block gone");

    s.strstart += s.lookahead;
    s.lookahead = 0;

    /* Emit a stored block if pending_buf will be full: */
    var max_start = s.block_start + max_block_size;

    if (s.strstart === 0 || s.strstart >= max_start) {
      /* strstart == 0 is possible when wraparound on 16-bit machine */
      s.lookahead = s.strstart - max_start;
      s.strstart = max_start;
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/


    }
    /* Flush if we may have to slide, otherwise block_start may become
     * negative and the data will be gone:
     */
    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }

  s.insert = 0;

  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }

  if (s.strstart > s.block_start) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }

  return BS_NEED_MORE;
}

/* ===========================================================================
 * Compress as much as possible from the input stream, return the current
 * block state.
 * This function does not perform lazy evaluation of matches and inserts
 * new strings in the dictionary only for unmatched strings or for short
 * matches. It is used only for the fast compression options.
 */
function deflate_fast(s, flush) {
  var hash_head;        /* head of the hash chain */
  var bflush;           /* set if current block must be flushed */

  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) {
        break; /* flush the current block */
      }
    }

    /* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */
    hash_head = 0/*NIL*/;
    if (s.lookahead >= MIN_MATCH) {
      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
      /***/
    }

    /* Find the longest match, discarding those <= prev_length.
     * At this point we have always match_length < MIN_MATCH
     */
    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {
      /* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */
      s.match_length = longest_match(s, hash_head);
      /* longest_match() sets match_start */
    }
    if (s.match_length >= MIN_MATCH) {
      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only

      /*** _tr_tally_dist(s, s.strstart - s.match_start,
                     s.match_length - MIN_MATCH, bflush); ***/
      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);

      s.lookahead -= s.match_length;

      /* Insert new strings in the hash table only if the match length
       * is not too large. This saves time but degrades compression.
       */
      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {
        s.match_length--; /* string at strstart already in table */
        do {
          s.strstart++;
          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
          /***/
          /* strstart never exceeds WSIZE-MAX_MATCH, so there are
           * always MIN_MATCH bytes ahead.
           */
        } while (--s.match_length !== 0);
        s.strstart++;
      } else
      {
        s.strstart += s.match_length;
        s.match_length = 0;
        s.ins_h = s.window[s.strstart];
        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */
        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;

//#if MIN_MATCH != 3
//                Call UPDATE_HASH() MIN_MATCH-3 more times
//#endif
        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not
         * matter since it will be recomputed at next deflate call.
         */
      }
    } else {
      /* No match, output a literal byte */
      //Tracevv((stderr,"%c", s.window[s.strstart]));
      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);

      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = ((s.strstart < (MIN_MATCH-1)) ? s.strstart : MIN_MATCH-1);
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* ===========================================================================
 * Same as above, but achieves better compression. We use a lazy
 * evaluation for matches: a match is finally adopted only if there is
 * no better match at the next window position.
 */
function deflate_slow(s, flush) {
  var hash_head;          /* head of hash chain */
  var bflush;              /* set if current block must be flushed */

  var max_insert;

  /* Process the input block. */
  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) { break; } /* flush the current block */
    }

    /* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */
    hash_head = 0/*NIL*/;
    if (s.lookahead >= MIN_MATCH) {
      /*** INSERT_STRING(s, s.strstart, hash_head); ***/
      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
      /***/
    }

    /* Find the longest match, discarding those <= prev_length.
     */
    s.prev_length = s.match_length;
    s.prev_match = s.match_start;
    s.match_length = MIN_MATCH-1;

    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&
        s.strstart - hash_head <= (s.w_size-MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {
      /* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */
      s.match_length = longest_match(s, hash_head);
      /* longest_match() sets match_start */

      if (s.match_length <= 5 &&
         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {

        /* If prev_match is also MIN_MATCH, match_start is garbage
         * but we will ignore the current match anyway.
         */
        s.match_length = MIN_MATCH-1;
      }
    }
    /* If there was a match at the previous step and the current
     * match is not better, output the previous match:
     */
    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {
      max_insert = s.strstart + s.lookahead - MIN_MATCH;
      /* Do not insert strings in hash table beyond this. */

      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);

      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,
                     s.prev_length - MIN_MATCH, bflush);***/
      bflush = trees._tr_tally(s, s.strstart - 1- s.prev_match, s.prev_length - MIN_MATCH);
      /* Insert in hash table all strings up to the end of the match.
       * strstart-1 and strstart are already inserted. If there is not
       * enough lookahead, the last two strings are not inserted in
       * the hash table.
       */
      s.lookahead -= s.prev_length-1;
      s.prev_length -= 2;
      do {
        if (++s.strstart <= max_insert) {
          /*** INSERT_STRING(s, s.strstart, hash_head); ***/
          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
          /***/
        }
      } while (--s.prev_length !== 0);
      s.match_available = 0;
      s.match_length = MIN_MATCH-1;
      s.strstart++;

      if (bflush) {
        /*** FLUSH_BLOCK(s, 0); ***/
        flush_block_only(s, false);
        if (s.strm.avail_out === 0) {
          return BS_NEED_MORE;
        }
        /***/
      }

    } else if (s.match_available) {
      /* If there was no match at the previous position, output a
       * single literal. If there was a match but the current match
       * is longer, truncate the previous match to a single literal.
       */
      //Tracevv((stderr,"%c", s->window[s->strstart-1]));
      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart-1]);

      if (bflush) {
        /*** FLUSH_BLOCK_ONLY(s, 0) ***/
        flush_block_only(s, false);
        /***/
      }
      s.strstart++;
      s.lookahead--;
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
    } else {
      /* There is no previous match to compare with, wait for
       * the next step to decide.
       */
      s.match_available = 1;
      s.strstart++;
      s.lookahead--;
    }
  }
  //Assert (flush != Z_NO_FLUSH, "no flush?");
  if (s.match_available) {
    //Tracevv((stderr,"%c", s->window[s->strstart-1]));
    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/
    bflush = trees._tr_tally(s, 0, s.window[s.strstart-1]);

    s.match_available = 0;
  }
  s.insert = s.strstart < MIN_MATCH-1 ? s.strstart : MIN_MATCH-1;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }

  return BS_BLOCK_DONE;
}


/* ===========================================================================
 * For Z_RLE, simply look for runs of bytes, generate matches only of distance
 * one.  Do not maintain a hash table.  (It will be regenerated if this run of
 * deflate switches away from Z_RLE.)
 */
function deflate_rle(s, flush) {
  var bflush;            /* set if current block must be flushed */
  var prev;              /* byte at distance one to match */
  var scan, strend;      /* scan goes up to strend for length of run */

  var _win = s.window;

  for (;;) {
    /* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the longest run, plus one for the unrolled loop.
     */
    if (s.lookahead <= MAX_MATCH) {
      fill_window(s);
      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) { break; } /* flush the current block */
    }

    /* See how many times the previous byte repeats */
    s.match_length = 0;
    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {
      scan = s.strstart - 1;
      prev = _win[scan];
      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {
        strend = s.strstart + MAX_MATCH;
        do {
          /*jshint noempty:false*/
        } while (prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 prev === _win[++scan] && prev === _win[++scan] &&
                 scan < strend);
        s.match_length = MAX_MATCH - (strend - scan);
        if (s.match_length > s.lookahead) {
          s.match_length = s.lookahead;
        }
      }
      //Assert(scan <= s->window+(uInt)(s->window_size-1), "wild scan");
    }

    /* Emit match if have run of MIN_MATCH or longer, else emit literal */
    if (s.match_length >= MIN_MATCH) {
      //check_match(s, s.strstart, s.strstart - 1, s.match_length);

      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/
      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);

      s.lookahead -= s.match_length;
      s.strstart += s.match_length;
      s.match_length = 0;
    } else {
      /* No match, output a literal byte */
      //Tracevv((stderr,"%c", s->window[s->strstart]));
      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);

      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* ===========================================================================
 * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.
 * (It will be regenerated if this run of deflate switches away from Huffman.)
 */
function deflate_huff(s, flush) {
  var bflush;             /* set if current block must be flushed */

  for (;;) {
    /* Make sure that we have a literal to write. */
    if (s.lookahead === 0) {
      fill_window(s);
      if (s.lookahead === 0) {
        if (flush === Z_NO_FLUSH) {
          return BS_NEED_MORE;
        }
        break;      /* flush the current block */
      }
    }

    /* Output a literal byte */
    s.match_length = 0;
    //Tracevv((stderr,"%c", s->window[s->strstart]));
    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/
    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);
    s.lookahead--;
    s.strstart++;
    if (bflush) {
      /*** FLUSH_BLOCK(s, 0); ***/
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
      /***/
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH) {
    /*** FLUSH_BLOCK(s, 1); ***/
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    /***/
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    /*** FLUSH_BLOCK(s, 0); ***/
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
    /***/
  }
  return BS_BLOCK_DONE;
}

/* Values for max_lazy_match, good_match and max_chain_length, depending on
 * the desired pack level (0..9). The values given below have been tuned to
 * exclude worst case performance for pathological files. Better values may be
 * found for specific files.
 */
var Config = function (good_length, max_lazy, nice_length, max_chain, func) {
  this.good_length = good_length;
  this.max_lazy = max_lazy;
  this.nice_length = nice_length;
  this.max_chain = max_chain;
  this.func = func;
};

var configuration_table;

configuration_table = [
  /*      good lazy nice chain */
  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */
  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */
  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */
  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */

  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */
  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */
  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */
  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */
  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */
  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */
];


/* ===========================================================================
 * Initialize the "longest match" routines for a new zlib stream
 */
function lm_init(s) {
  s.window_size = 2 * s.w_size;

  /*** CLEAR_HASH(s); ***/
  zero(s.head); // Fill with NIL (= 0);

  /* Set the default configuration parameters:
   */
  s.max_lazy_match = configuration_table[s.level].max_lazy;
  s.good_match = configuration_table[s.level].good_length;
  s.nice_match = configuration_table[s.level].nice_length;
  s.max_chain_length = configuration_table[s.level].max_chain;

  s.strstart = 0;
  s.block_start = 0;
  s.lookahead = 0;
  s.insert = 0;
  s.match_length = s.prev_length = MIN_MATCH - 1;
  s.match_available = 0;
  s.ins_h = 0;
}


function DeflateState() {
  this.strm = null;            /* pointer back to this zlib stream */
  this.status = 0;            /* as the name implies */
  this.pending_buf = null;      /* output still pending */
  this.pending_buf_size = 0;  /* size of pending_buf */
  this.pending_out = 0;       /* next pending byte to output to the stream */
  this.pending = 0;           /* nb of bytes in the pending buffer */
  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */
  this.gzhead = null;         /* gzip header information to write */
  this.gzindex = 0;           /* where in extra, name, or comment */
  this.method = Z_DEFLATED; /* can only be DEFLATED */
  this.last_flush = -1;   /* value of flush param for previous deflate call */

  this.w_size = 0;  /* LZ77 window size (32K by default) */
  this.w_bits = 0;  /* log2(w_size)  (8..16) */
  this.w_mask = 0;  /* w_size - 1 */

  this.window = null;
  /* Sliding window. Input bytes are read into the second half of the window,
   * and move to the first half later to keep a dictionary of at least wSize
   * bytes. With this organization, matches are limited to a distance of
   * wSize-MAX_MATCH bytes, but this ensures that IO is always
   * performed with a length multiple of the block size.
   */

  this.window_size = 0;
  /* Actual size of window: 2*wSize, except when the user input buffer
   * is directly used as sliding window.
   */

  this.prev = null;
  /* Link to older string with same hash index. To limit the size of this
   * array to 64K, this link is maintained only for the last 32K strings.
   * An index in this array is thus a window index modulo 32K.
   */

  this.head = null;   /* Heads of the hash chains or NIL. */

  this.ins_h = 0;       /* hash index of string to be inserted */
  this.hash_size = 0;   /* number of elements in hash table */
  this.hash_bits = 0;   /* log2(hash_size) */
  this.hash_mask = 0;   /* hash_size-1 */

  this.hash_shift = 0;
  /* Number of bits by which ins_h must be shifted at each input
   * step. It must be such that after MIN_MATCH steps, the oldest
   * byte no longer takes part in the hash key, that is:
   *   hash_shift * MIN_MATCH >= hash_bits
   */

  this.block_start = 0;
  /* Window position at the beginning of the current output block. Gets
   * negative when the window is moved backwards.
   */

  this.match_length = 0;      /* length of best match */
  this.prev_match = 0;        /* previous match */
  this.match_available = 0;   /* set if previous match exists */
  this.strstart = 0;          /* start of string to insert */
  this.match_start = 0;       /* start of matching string */
  this.lookahead = 0;         /* number of valid bytes ahead in window */

  this.prev_length = 0;
  /* Length of the best match at previous step. Matches not greater than this
   * are discarded. This is used in the lazy match evaluation.
   */

  this.max_chain_length = 0;
  /* To speed up deflation, hash chains are never searched beyond this
   * length.  A higher limit improves compression ratio but degrades the
   * speed.
   */

  this.max_lazy_match = 0;
  /* Attempt to find a better match only when the current match is strictly
   * smaller than this value. This mechanism is used only for compression
   * levels >= 4.
   */
  // That's alias to max_lazy_match, don't use directly
  //this.max_insert_length = 0;
  /* Insert new strings in the hash table only if the match length is not
   * greater than this length. This saves time but degrades compression.
   * max_insert_length is used only for compression levels <= 3.
   */

  this.level = 0;     /* compression level (1..9) */
  this.strategy = 0;  /* favor or force Huffman coding*/

  this.good_match = 0;
  /* Use a faster search when the previous match is longer than this */

  this.nice_match = 0; /* Stop searching when current match exceeds this */

              /* used by trees.c: */

  /* Didn't use ct_data typedef below to suppress compiler warning */

  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */
  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */
  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */

  // Use flat array of DOUBLE size, with interleaved fata,
  // because JS does not support effective
  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);
  this.dyn_dtree  = new utils.Buf16((2*D_CODES+1) * 2);
  this.bl_tree    = new utils.Buf16((2*BL_CODES+1) * 2);
  zero(this.dyn_ltree);
  zero(this.dyn_dtree);
  zero(this.bl_tree);

  this.l_desc   = null;         /* desc. for literal tree */
  this.d_desc   = null;         /* desc. for distance tree */
  this.bl_desc  = null;         /* desc. for bit length tree */

  //ush bl_count[MAX_BITS+1];
  this.bl_count = new utils.Buf16(MAX_BITS+1);
  /* number of codes at each bit length for an optimal tree */

  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */
  this.heap = new utils.Buf16(2*L_CODES+1);  /* heap used to build the Huffman trees */
  zero(this.heap);

  this.heap_len = 0;               /* number of elements in the heap */
  this.heap_max = 0;               /* element of largest frequency */
  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.
   * The same heap array is used to build all trees.
   */

  this.depth = new utils.Buf16(2*L_CODES+1); //uch depth[2*L_CODES+1];
  zero(this.depth);
  /* Depth of each subtree used as tie breaker for trees of equal frequency
   */

  this.l_buf = 0;          /* buffer index for literals or lengths */

  this.lit_bufsize = 0;
  /* Size of match buffer for literals/lengths.  There are 4 reasons for
   * limiting lit_bufsize to 64K:
   *   - frequencies can be kept in 16 bit counters
   *   - if compression is not successful for the first block, all input
   *     data is still in the window so we can still emit a stored block even
   *     when input comes from standard input.  (This can also be done for
   *     all blocks if lit_bufsize is not greater than 32K.)
   *   - if compression is not successful for a file smaller than 64K, we can
   *     even emit a stored file instead of a stored block (saving 5 bytes).
   *     This is applicable only for zip (not gzip or zlib).
   *   - creating new Huffman trees less frequently may not provide fast
   *     adaptation to changes in the input data statistics. (Take for
   *     example a binary file with poorly compressible code followed by
   *     a highly compressible string table.) Smaller buffer sizes give
   *     fast adaptation but have of course the overhead of transmitting
   *     trees more frequently.
   *   - I can't count above 4
   */

  this.last_lit = 0;      /* running index in l_buf */

  this.d_buf = 0;
  /* Buffer index for distances. To simplify the code, d_buf and l_buf have
   * the same number of elements. To use different lengths, an extra flag
   * array would be necessary.
   */

  this.opt_len = 0;       /* bit length of current block with optimal trees */
  this.static_len = 0;    /* bit length of current block with static trees */
  this.matches = 0;       /* number of string matches in current block */
  this.insert = 0;        /* bytes at end of window left to insert */


  this.bi_buf = 0;
  /* Output buffer. bits are inserted starting at the bottom (least
   * significant bits).
   */
  this.bi_valid = 0;
  /* Number of valid bits in bi_buf.  All bits above the last valid bit
   * are always zero.
   */

  // Used for window memory init. We safely ignore it for JS. That makes
  // sense only for pointers and memory check tools.
  //this.high_water = 0;
  /* High water mark offset in window for initialized bytes -- bytes above
   * this are set to zero in order to avoid memory check warnings when
   * longest match routines access bytes past the input.  This is then
   * updated to the new high water mark.
   */
}


function deflateResetKeep(strm) {
  var s;

  if (!strm || !strm.state) {
    return err(strm, Z_STREAM_ERROR);
  }

  strm.total_in = strm.total_out = 0;
  strm.data_type = Z_UNKNOWN;

  s = strm.state;
  s.pending = 0;
  s.pending_out = 0;

  if (s.wrap < 0) {
    s.wrap = -s.wrap;
    /* was made negative by deflate(..., Z_FINISH); */
  }
  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);
  strm.adler = (s.wrap === 2) ?
    0  // crc32(0, Z_NULL, 0)
  :
    1; // adler32(0, Z_NULL, 0)
  s.last_flush = Z_NO_FLUSH;
  trees._tr_init(s);
  return Z_OK;
}


function deflateReset(strm) {
  var ret = deflateResetKeep(strm);
  if (ret === Z_OK) {
    lm_init(strm.state);
  }
  return ret;
}


function deflateSetHeader(strm, head) {
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }
  strm.state.gzhead = head;
  return Z_OK;
}


function deflateInit2(strm, level, method, windowBits, memLevel, strategy) {
  if (!strm) { // === Z_NULL
    return Z_STREAM_ERROR;
  }
  var wrap = 1;

  if (level === Z_DEFAULT_COMPRESSION) {
    level = 6;
  }

  if (windowBits < 0) { /* suppress zlib wrapper */
    wrap = 0;
    windowBits = -windowBits;
  }

  else if (windowBits > 15) {
    wrap = 2;           /* write gzip wrapper instead */
    windowBits -= 16;
  }


  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||
    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||
    strategy < 0 || strategy > Z_FIXED) {
    return err(strm, Z_STREAM_ERROR);
  }


  if (windowBits === 8) {
    windowBits = 9;
  }
  /* until 256-byte window bug fixed */

  var s = new DeflateState();

  strm.state = s;
  s.strm = strm;

  s.wrap = wrap;
  s.gzhead = null;
  s.w_bits = windowBits;
  s.w_size = 1 << s.w_bits;
  s.w_mask = s.w_size - 1;

  s.hash_bits = memLevel + 7;
  s.hash_size = 1 << s.hash_bits;
  s.hash_mask = s.hash_size - 1;
  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);

  s.window = new utils.Buf8(s.w_size * 2);
  s.head = new utils.Buf16(s.hash_size);
  s.prev = new utils.Buf16(s.w_size);

  // Don't need mem init magic for JS.
  //s.high_water = 0;  /* nothing written to s->window yet */

  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */

  s.pending_buf_size = s.lit_bufsize * 4;
  s.pending_buf = new utils.Buf8(s.pending_buf_size);

  s.d_buf = s.lit_bufsize >> 1;
  s.l_buf = (1 + 2) * s.lit_bufsize;

  s.level = level;
  s.strategy = strategy;
  s.method = method;

  return deflateReset(strm);
}

function deflateInit(strm, level) {
  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);
}


function deflate(strm, flush) {
  var old_flush, s;
  var beg, val; // for gzip header write only

  if (!strm || !strm.state ||
    flush > Z_BLOCK || flush < 0) {
    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;
  }

  s = strm.state;

  if (!strm.output ||
      (!strm.input && strm.avail_in !== 0) ||
      (s.status === FINISH_STATE && flush !== Z_FINISH)) {
    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);
  }

  s.strm = strm; /* just in case */
  old_flush = s.last_flush;
  s.last_flush = flush;

  /* Write the header */
  if (s.status === INIT_STATE) {

    if (s.wrap === 2) { // GZIP header
      strm.adler = 0;  //crc32(0L, Z_NULL, 0);
      put_byte(s, 31);
      put_byte(s, 139);
      put_byte(s, 8);
      if (!s.gzhead) { // s->gzhead == Z_NULL
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, s.level === 9 ? 2 :
                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
                     4 : 0));
        put_byte(s, OS_CODE);
        s.status = BUSY_STATE;
      }
      else {
        put_byte(s, (s.gzhead.text ? 1 : 0) +
                    (s.gzhead.hcrc ? 2 : 0) +
                    (!s.gzhead.extra ? 0 : 4) +
                    (!s.gzhead.name ? 0 : 8) +
                    (!s.gzhead.comment ? 0 : 16)
                );
        put_byte(s, s.gzhead.time & 0xff);
        put_byte(s, (s.gzhead.time >> 8) & 0xff);
        put_byte(s, (s.gzhead.time >> 16) & 0xff);
        put_byte(s, (s.gzhead.time >> 24) & 0xff);
        put_byte(s, s.level === 9 ? 2 :
                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?
                     4 : 0));
        put_byte(s, s.gzhead.os & 0xff);
        if (s.gzhead.extra && s.gzhead.extra.length) {
          put_byte(s, s.gzhead.extra.length & 0xff);
          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);
        }
        if (s.gzhead.hcrc) {
          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);
        }
        s.gzindex = 0;
        s.status = EXTRA_STATE;
      }
    }
    else // DEFLATE header
    {
      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;
      var level_flags = -1;

      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {
        level_flags = 0;
      } else if (s.level < 6) {
        level_flags = 1;
      } else if (s.level === 6) {
        level_flags = 2;
      } else {
        level_flags = 3;
      }
      header |= (level_flags << 6);
      if (s.strstart !== 0) { header |= PRESET_DICT; }
      header += 31 - (header % 31);

      s.status = BUSY_STATE;
      putShortMSB(s, header);

      /* Save the adler32 of the preset dictionary: */
      if (s.strstart !== 0) {
        putShortMSB(s, strm.adler >>> 16);
        putShortMSB(s, strm.adler & 0xffff);
      }
      strm.adler = 1; // adler32(0L, Z_NULL, 0);
    }
  }

//#ifdef GZIP
  if (s.status === EXTRA_STATE) {
    if (s.gzhead.extra/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */

      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            break;
          }
        }
        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);
        s.gzindex++;
      }
      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (s.gzindex === s.gzhead.extra.length) {
        s.gzindex = 0;
        s.status = NAME_STATE;
      }
    }
    else {
      s.status = NAME_STATE;
    }
  }
  if (s.status === NAME_STATE) {
    if (s.gzhead.name/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */
      //int val;

      do {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            val = 1;
            break;
          }
        }
        // JS specific: little magic to add zero terminator to end of string
        if (s.gzindex < s.gzhead.name.length) {
          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);

      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (val === 0) {
        s.gzindex = 0;
        s.status = COMMENT_STATE;
      }
    }
    else {
      s.status = COMMENT_STATE;
    }
  }
  if (s.status === COMMENT_STATE) {
    if (s.gzhead.comment/* != Z_NULL*/) {
      beg = s.pending;  /* start of bytes to update crc */
      //int val;

      do {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            val = 1;
            break;
          }
        }
        // JS specific: little magic to add zero terminator to end of string
        if (s.gzindex < s.gzhead.comment.length) {
          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);

      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (val === 0) {
        s.status = HCRC_STATE;
      }
    }
    else {
      s.status = HCRC_STATE;
    }
  }
  if (s.status === HCRC_STATE) {
    if (s.gzhead.hcrc) {
      if (s.pending + 2 > s.pending_buf_size) {
        flush_pending(strm);
      }
      if (s.pending + 2 <= s.pending_buf_size) {
        put_byte(s, strm.adler & 0xff);
        put_byte(s, (strm.adler >> 8) & 0xff);
        strm.adler = 0; //crc32(0L, Z_NULL, 0);
        s.status = BUSY_STATE;
      }
    }
    else {
      s.status = BUSY_STATE;
    }
  }
//#endif

  /* Flush as much pending output as possible */
  if (s.pending !== 0) {
    flush_pending(strm);
    if (strm.avail_out === 0) {
      /* Since avail_out is 0, deflate will be called again with
       * more output space, but possibly with both pending and
       * avail_in equal to zero. There won't be anything to do,
       * but this is not an error situation so make sure we
       * return OK instead of BUF_ERROR at next call of deflate:
       */
      s.last_flush = -1;
      return Z_OK;
    }

    /* Make sure there is something to do and avoid duplicate consecutive
     * flushes. For repeated and useless calls with Z_FINISH, we keep
     * returning Z_STREAM_END instead of Z_BUF_ERROR.
     */
  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&
    flush !== Z_FINISH) {
    return err(strm, Z_BUF_ERROR);
  }

  /* User must not provide more input after the first FINISH: */
  if (s.status === FINISH_STATE && strm.avail_in !== 0) {
    return err(strm, Z_BUF_ERROR);
  }

  /* Start a new block or continue the current one.
   */
  if (strm.avail_in !== 0 || s.lookahead !== 0 ||
    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {
    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :
      (s.strategy === Z_RLE ? deflate_rle(s, flush) :
        configuration_table[s.level].func(s, flush));

    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {
      s.status = FINISH_STATE;
    }
    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {
      if (strm.avail_out === 0) {
        s.last_flush = -1;
        /* avoid BUF_ERROR next call, see above */
      }
      return Z_OK;
      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call
       * of deflate should use the same flush parameter to make sure
       * that the flush is complete. So we don't have to output an
       * empty block here, this will be done at next call. This also
       * ensures that for a very small output buffer, we emit at most
       * one empty block.
       */
    }
    if (bstate === BS_BLOCK_DONE) {
      if (flush === Z_PARTIAL_FLUSH) {
        trees._tr_align(s);
      }
      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */

        trees._tr_stored_block(s, 0, 0, false);
        /* For a full flush, this empty block will be recognized
         * as a special marker by inflate_sync().
         */
        if (flush === Z_FULL_FLUSH) {
          /*** CLEAR_HASH(s); ***/             /* forget history */
          zero(s.head); // Fill with NIL (= 0);

          if (s.lookahead === 0) {
            s.strstart = 0;
            s.block_start = 0;
            s.insert = 0;
          }
        }
      }
      flush_pending(strm);
      if (strm.avail_out === 0) {
        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */
        return Z_OK;
      }
    }
  }
  //Assert(strm->avail_out > 0, "bug2");
  //if (strm.avail_out <= 0) { throw new Error("bug2");}

  if (flush !== Z_FINISH) { return Z_OK; }
  if (s.wrap <= 0) { return Z_STREAM_END; }

  /* Write the trailer */
  if (s.wrap === 2) {
    put_byte(s, strm.adler & 0xff);
    put_byte(s, (strm.adler >> 8) & 0xff);
    put_byte(s, (strm.adler >> 16) & 0xff);
    put_byte(s, (strm.adler >> 24) & 0xff);
    put_byte(s, strm.total_in & 0xff);
    put_byte(s, (strm.total_in >> 8) & 0xff);
    put_byte(s, (strm.total_in >> 16) & 0xff);
    put_byte(s, (strm.total_in >> 24) & 0xff);
  }
  else
  {
    putShortMSB(s, strm.adler >>> 16);
    putShortMSB(s, strm.adler & 0xffff);
  }

  flush_pending(strm);
  /* If avail_out is zero, the application will call deflate again
   * to flush the rest.
   */
  if (s.wrap > 0) { s.wrap = -s.wrap; }
  /* write the trailer only once! */
  return s.pending !== 0 ? Z_OK : Z_STREAM_END;
}

function deflateEnd(strm) {
  var status;

  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {
    return Z_STREAM_ERROR;
  }

  status = strm.state.status;
  if (status !== INIT_STATE &&
    status !== EXTRA_STATE &&
    status !== NAME_STATE &&
    status !== COMMENT_STATE &&
    status !== HCRC_STATE &&
    status !== BUSY_STATE &&
    status !== FINISH_STATE
  ) {
    return err(strm, Z_STREAM_ERROR);
  }

  strm.state = null;

  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;
}

/* =========================================================================
 * Copy the source state to the destination state
 */
//function deflateCopy(dest, source) {
//
//}

exports.deflateInit = deflateInit;
exports.deflateInit2 = deflateInit2;
exports.deflateReset = deflateReset;
exports.deflateResetKeep = deflateResetKeep;
exports.deflateSetHeader = deflateSetHeader;
exports.deflate = deflate;
exports.deflateEnd = deflateEnd;
exports.deflateInfo = 'pako deflate (from Nodeca project)';

/* Not implemented
exports.deflateBound = deflateBound;
exports.deflateCopy = deflateCopy;
exports.deflateSetDictionary = deflateSetDictionary;
exports.deflateParams = deflateParams;
exports.deflatePending = deflatePending;
exports.deflatePrime = deflatePrime;
exports.deflateTune = deflateTune;
*/

},{"../utils/common":138,"./adler32":140,"./crc32":142,"./messages":148,"./trees":149}],144:[function(require,module,exports){
'use strict';


function GZheader() {
  /* true if compressed data believed to be text */
  this.text       = 0;
  /* modification time */
  this.time       = 0;
  /* extra flags (not used when writing a gzip file) */
  this.xflags     = 0;
  /* operating system */
  this.os         = 0;
  /* pointer to extra field or Z_NULL if none */
  this.extra      = null;
  /* extra field length (valid if extra != Z_NULL) */
  this.extra_len  = 0; // Actually, we don't need it in JS,
                       // but leave for few code modifications

  //
  // Setup limits is not necessary because in js we should not preallocate memory
  // for inflate use constant limit in 65536 bytes
  //

  /* space at extra (only when reading header) */
  // this.extra_max  = 0;
  /* pointer to zero-terminated file name or Z_NULL */
  this.name       = '';
  /* space at name (only when reading header) */
  // this.name_max   = 0;
  /* pointer to zero-terminated comment or Z_NULL */
  this.comment    = '';
  /* space at comment (only when reading header) */
  // this.comm_max   = 0;
  /* true if there was or will be a header crc */
  this.hcrc       = 0;
  /* true when done reading gzip header (not used when writing a gzip file) */
  this.done       = false;
}

module.exports = GZheader;

},{}],145:[function(require,module,exports){
'use strict';

// See state defs from inflate.js
var BAD = 30;       /* got a data error -- remain here until reset */
var TYPE = 12;      /* i: waiting for type bits, including last-flag bit */

/*
   Decode literal, length, and distance codes and write out the resulting
   literal and match bytes until either not enough input or output is
   available, an end-of-block is encountered, or a data error is encountered.
   When large enough input and output buffers are supplied to inflate(), for
   example, a 16K input buffer and a 64K output buffer, more than 95% of the
   inflate execution time is spent in this routine.

   Entry assumptions:

        state.mode === LEN
        strm.avail_in >= 6
        strm.avail_out >= 258
        start >= strm.avail_out
        state.bits < 8

   On return, state.mode is one of:

        LEN -- ran out of enough output space or enough available input
        TYPE -- reached end of block code, inflate() to interpret next block
        BAD -- error in block data

   Notes:

    - The maximum input bits used by a length/distance pair is 15 bits for the
      length code, 5 bits for the length extra, 15 bits for the distance code,
      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.
      Therefore if strm.avail_in >= 6, then there is enough input to avoid
      checking for available input while decoding.

    - The maximum bytes that a single length/distance pair can output is 258
      bytes, which is the maximum length that can be coded.  inflate_fast()
      requires strm.avail_out >= 258 for each loop to avoid checking for
      output space.
 */
module.exports = function inflate_fast(strm, start) {
  var state;
  var _in;                    /* local strm.input */
  var last;                   /* have enough input while in < last */
  var _out;                   /* local strm.output */
  var beg;                    /* inflate()'s initial strm.output */
  var end;                    /* while out < end, enough space available */
//#ifdef INFLATE_STRICT
  var dmax;                   /* maximum distance from zlib header */
//#endif
  var wsize;                  /* window size or zero if not using window */
  var whave;                  /* valid bytes in the window */
  var wnext;                  /* window write index */
  // Use `s_window` instead `window`, avoid conflict with instrumentation tools
  var s_window;               /* allocated sliding window, if wsize != 0 */
  var hold;                   /* local strm.hold */
  var bits;                   /* local strm.bits */
  var lcode;                  /* local strm.lencode */
  var dcode;                  /* local strm.distcode */
  var lmask;                  /* mask for first level of length codes */
  var dmask;                  /* mask for first level of distance codes */
  var here;                   /* retrieved table entry */
  var op;                     /* code bits, operation, extra bits, or */
                              /*  window position, window bytes to copy */
  var len;                    /* match length, unused bytes */
  var dist;                   /* match distance */
  var from;                   /* where to copy match from */
  var from_source;


  var input, output; // JS specific, because we have no pointers

  /* copy state to local variables */
  state = strm.state;
  //here = state.here;
  _in = strm.next_in;
  input = strm.input;
  last = _in + (strm.avail_in - 5);
  _out = strm.next_out;
  output = strm.output;
  beg = _out - (start - strm.avail_out);
  end = _out + (strm.avail_out - 257);
//#ifdef INFLATE_STRICT
  dmax = state.dmax;
//#endif
  wsize = state.wsize;
  whave = state.whave;
  wnext = state.wnext;
  s_window = state.window;
  hold = state.hold;
  bits = state.bits;
  lcode = state.lencode;
  dcode = state.distcode;
  lmask = (1 << state.lenbits) - 1;
  dmask = (1 << state.distbits) - 1;


  /* decode literals and length/distances until end-of-block or not enough
     input data or output space */

  top:
  do {
    if (bits < 15) {
      hold += input[_in++] << bits;
      bits += 8;
      hold += input[_in++] << bits;
      bits += 8;
    }

    here = lcode[hold & lmask];

    dolen:
    for (;;) { // Goto emulation
      op = here >>> 24/*here.bits*/;
      hold >>>= op;
      bits -= op;
      op = (here >>> 16) & 0xff/*here.op*/;
      if (op === 0) {                          /* literal */
        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
        //        "inflate:         literal '%c'\n" :
        //        "inflate:         literal 0x%02x\n", here.val));
        output[_out++] = here & 0xffff/*here.val*/;
      }
      else if (op & 16) {                     /* length base */
        len = here & 0xffff/*here.val*/;
        op &= 15;                           /* number of extra bits */
        if (op) {
          if (bits < op) {
            hold += input[_in++] << bits;
            bits += 8;
          }
          len += hold & ((1 << op) - 1);
          hold >>>= op;
          bits -= op;
        }
        //Tracevv((stderr, "inflate:         length %u\n", len));
        if (bits < 15) {
          hold += input[_in++] << bits;
          bits += 8;
          hold += input[_in++] << bits;
          bits += 8;
        }
        here = dcode[hold & dmask];

        dodist:
        for (;;) { // goto emulation
          op = here >>> 24/*here.bits*/;
          hold >>>= op;
          bits -= op;
          op = (here >>> 16) & 0xff/*here.op*/;

          if (op & 16) {                      /* distance base */
            dist = here & 0xffff/*here.val*/;
            op &= 15;                       /* number of extra bits */
            if (bits < op) {
              hold += input[_in++] << bits;
              bits += 8;
              if (bits < op) {
                hold += input[_in++] << bits;
                bits += 8;
              }
            }
            dist += hold & ((1 << op) - 1);
//#ifdef INFLATE_STRICT
            if (dist > dmax) {
              strm.msg = 'invalid distance too far back';
              state.mode = BAD;
              break top;
            }
//#endif
            hold >>>= op;
            bits -= op;
            //Tracevv((stderr, "inflate:         distance %u\n", dist));
            op = _out - beg;                /* max distance in output */
            if (dist > op) {                /* see if copy from window */
              op = dist - op;               /* distance back in window */
              if (op > whave) {
                if (state.sane) {
                  strm.msg = 'invalid distance too far back';
                  state.mode = BAD;
                  break top;
                }

// (!) This block is disabled in zlib defailts,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//                if (len <= op - whave) {
//                  do {
//                    output[_out++] = 0;
//                  } while (--len);
//                  continue top;
//                }
//                len -= op - whave;
//                do {
//                  output[_out++] = 0;
//                } while (--op > whave);
//                if (op === 0) {
//                  from = _out - dist;
//                  do {
//                    output[_out++] = output[from++];
//                  } while (--len);
//                  continue top;
//                }
//#endif
              }
              from = 0; // window index
              from_source = s_window;
              if (wnext === 0) {           /* very common case */
                from += wsize - op;
                if (op < len) {         /* some from window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = _out - dist;  /* rest from output */
                  from_source = output;
                }
              }
              else if (wnext < op) {      /* wrap around window */
                from += wsize + wnext - op;
                op -= wnext;
                if (op < len) {         /* some from end of window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = 0;
                  if (wnext < len) {  /* some from start of window */
                    op = wnext;
                    len -= op;
                    do {
                      output[_out++] = s_window[from++];
                    } while (--op);
                    from = _out - dist;      /* rest from output */
                    from_source = output;
                  }
                }
              }
              else {                      /* contiguous in window */
                from += wnext - op;
                if (op < len) {         /* some from window */
                  len -= op;
                  do {
                    output[_out++] = s_window[from++];
                  } while (--op);
                  from = _out - dist;  /* rest from output */
                  from_source = output;
                }
              }
              while (len > 2) {
                output[_out++] = from_source[from++];
                output[_out++] = from_source[from++];
                output[_out++] = from_source[from++];
                len -= 3;
              }
              if (len) {
                output[_out++] = from_source[from++];
                if (len > 1) {
                  output[_out++] = from_source[from++];
                }
              }
            }
            else {
              from = _out - dist;          /* copy direct from output */
              do {                        /* minimum length is three */
                output[_out++] = output[from++];
                output[_out++] = output[from++];
                output[_out++] = output[from++];
                len -= 3;
              } while (len > 2);
              if (len) {
                output[_out++] = output[from++];
                if (len > 1) {
                  output[_out++] = output[from++];
                }
              }
            }
          }
          else if ((op & 64) === 0) {          /* 2nd level distance code */
            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
            continue dodist;
          }
          else {
            strm.msg = 'invalid distance code';
            state.mode = BAD;
            break top;
          }

          break; // need to emulate goto via "continue"
        }
      }
      else if ((op & 64) === 0) {              /* 2nd level length code */
        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];
        continue dolen;
      }
      else if (op & 32) {                     /* end-of-block */
        //Tracevv((stderr, "inflate:         end of block\n"));
        state.mode = TYPE;
        break top;
      }
      else {
        strm.msg = 'invalid literal/length code';
        state.mode = BAD;
        break top;
      }

      break; // need to emulate goto via "continue"
    }
  } while (_in < last && _out < end);

  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */
  len = bits >> 3;
  _in -= len;
  bits -= len << 3;
  hold &= (1 << bits) - 1;

  /* update state and return */
  strm.next_in = _in;
  strm.next_out = _out;
  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));
  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));
  state.hold = hold;
  state.bits = bits;
  return;
};

},{}],146:[function(require,module,exports){
'use strict';


var utils = require('../utils/common');
var adler32 = require('./adler32');
var crc32   = require('./crc32');
var inflate_fast = require('./inffast');
var inflate_table = require('./inftrees');

var CODES = 0;
var LENS = 1;
var DISTS = 2;

/* Public constants ==========================================================*/
/* ===========================================================================*/


/* Allowed flush values; see deflate() and inflate() below for details */
//var Z_NO_FLUSH      = 0;
//var Z_PARTIAL_FLUSH = 1;
//var Z_SYNC_FLUSH    = 2;
//var Z_FULL_FLUSH    = 3;
var Z_FINISH        = 4;
var Z_BLOCK         = 5;
var Z_TREES         = 6;


/* Return codes for the compression/decompression functions. Negative values
 * are errors, positive values are used for special but normal events.
 */
var Z_OK            = 0;
var Z_STREAM_END    = 1;
var Z_NEED_DICT     = 2;
//var Z_ERRNO         = -1;
var Z_STREAM_ERROR  = -2;
var Z_DATA_ERROR    = -3;
var Z_MEM_ERROR     = -4;
var Z_BUF_ERROR     = -5;
//var Z_VERSION_ERROR = -6;

/* The deflate compression method */
var Z_DEFLATED  = 8;


/* STATES ====================================================================*/
/* ===========================================================================*/


var    HEAD = 1;       /* i: waiting for magic header */
var    FLAGS = 2;      /* i: waiting for method and flags (gzip) */
var    TIME = 3;       /* i: waiting for modification time (gzip) */
var    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */
var    EXLEN = 5;      /* i: waiting for extra length (gzip) */
var    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */
var    NAME = 7;       /* i: waiting for end of file name (gzip) */
var    COMMENT = 8;    /* i: waiting for end of comment (gzip) */
var    HCRC = 9;       /* i: waiting for header crc (gzip) */
var    DICTID = 10;    /* i: waiting for dictionary check value */
var    DICT = 11;      /* waiting for inflateSetDictionary() call */
var        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */
var        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */
var        STORED = 14;    /* i: waiting for stored size (length and complement) */
var        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */
var        COPY = 16;      /* i/o: waiting for input or output to copy stored block */
var        TABLE = 17;     /* i: waiting for dynamic block table lengths */
var        LENLENS = 18;   /* i: waiting for code length code lengths */
var        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */
var            LEN_ = 20;      /* i: same as LEN below, but only first time in */
var            LEN = 21;       /* i: waiting for length/lit/eob code */
var            LENEXT = 22;    /* i: waiting for length extra bits */
var            DIST = 23;      /* i: waiting for distance code */
var            DISTEXT = 24;   /* i: waiting for distance extra bits */
var            MATCH = 25;     /* o: waiting for output space to copy string */
var            LIT = 26;       /* o: waiting for output space to write literal */
var    CHECK = 27;     /* i: waiting for 32-bit check value */
var    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */
var    DONE = 29;      /* finished check, done -- remain here until reset */
var    BAD = 30;       /* got a data error -- remain here until reset */
var    MEM = 31;       /* got an inflate() memory error -- remain here until reset */
var    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */

/* ===========================================================================*/



var ENOUGH_LENS = 852;
var ENOUGH_DISTS = 592;
//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);

var MAX_WBITS = 15;
/* 32K LZ77 window */
var DEF_WBITS = MAX_WBITS;


function ZSWAP32(q) {
  return  (((q >>> 24) & 0xff) +
          ((q >>> 8) & 0xff00) +
          ((q & 0xff00) << 8) +
          ((q & 0xff) << 24));
}


function InflateState() {
  this.mode = 0;             /* current inflate mode */
  this.last = false;          /* true if processing last block */
  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */
  this.havedict = false;      /* true if dictionary provided */
  this.flags = 0;             /* gzip header method and flags (0 if zlib) */
  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */
  this.check = 0;             /* protected copy of check value */
  this.total = 0;             /* protected copy of output count */
  // TODO: may be {}
  this.head = null;           /* where to save gzip header information */

  /* sliding window */
  this.wbits = 0;             /* log base 2 of requested window size */
  this.wsize = 0;             /* window size or zero if not using window */
  this.whave = 0;             /* valid bytes in the window */
  this.wnext = 0;             /* window write index */
  this.window = null;         /* allocated sliding window, if needed */

  /* bit accumulator */
  this.hold = 0;              /* input bit accumulator */
  this.bits = 0;              /* number of bits in "in" */

  /* for string and stored block copying */
  this.length = 0;            /* literal or length of data to copy */
  this.offset = 0;            /* distance back to copy string from */

  /* for table and code decoding */
  this.extra = 0;             /* extra bits needed */

  /* fixed and dynamic code tables */
  this.lencode = null;          /* starting table for length/literal codes */
  this.distcode = null;         /* starting table for distance codes */
  this.lenbits = 0;           /* index bits for lencode */
  this.distbits = 0;          /* index bits for distcode */

  /* dynamic table building */
  this.ncode = 0;             /* number of code length code lengths */
  this.nlen = 0;              /* number of length code lengths */
  this.ndist = 0;             /* number of distance code lengths */
  this.have = 0;              /* number of code lengths in lens[] */
  this.next = null;              /* next available space in codes[] */

  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */
  this.work = new utils.Buf16(288); /* work area for code table building */

  /*
   because we don't have pointers in js, we use lencode and distcode directly
   as buffers so we don't need codes
  */
  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */
  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */
  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */
  this.sane = 0;                   /* if false, allow invalid distance too far */
  this.back = 0;                   /* bits back of last unprocessed length/lit */
  this.was = 0;                    /* initial length of match */
}

function inflateResetKeep(strm) {
  var state;

  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  strm.total_in = strm.total_out = state.total = 0;
  strm.msg = ''; /*Z_NULL*/
  if (state.wrap) {       /* to support ill-conceived Java test suite */
    strm.adler = state.wrap & 1;
  }
  state.mode = HEAD;
  state.last = 0;
  state.havedict = 0;
  state.dmax = 32768;
  state.head = null/*Z_NULL*/;
  state.hold = 0;
  state.bits = 0;
  //state.lencode = state.distcode = state.next = state.codes;
  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);
  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);

  state.sane = 1;
  state.back = -1;
  //Tracev((stderr, "inflate: reset\n"));
  return Z_OK;
}

function inflateReset(strm) {
  var state;

  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  state.wsize = 0;
  state.whave = 0;
  state.wnext = 0;
  return inflateResetKeep(strm);

}

function inflateReset2(strm, windowBits) {
  var wrap;
  var state;

  /* get the state */
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;

  /* extract wrap request from windowBits parameter */
  if (windowBits < 0) {
    wrap = 0;
    windowBits = -windowBits;
  }
  else {
    wrap = (windowBits >> 4) + 1;
    if (windowBits < 48) {
      windowBits &= 15;
    }
  }

  /* set number of window bits, free window if different */
  if (windowBits && (windowBits < 8 || windowBits > 15)) {
    return Z_STREAM_ERROR;
  }
  if (state.window !== null && state.wbits !== windowBits) {
    state.window = null;
  }

  /* update state and reset the rest of it */
  state.wrap = wrap;
  state.wbits = windowBits;
  return inflateReset(strm);
}

function inflateInit2(strm, windowBits) {
  var ret;
  var state;

  if (!strm) { return Z_STREAM_ERROR; }
  //strm.msg = Z_NULL;                 /* in case we return an error */

  state = new InflateState();

  //if (state === Z_NULL) return Z_MEM_ERROR;
  //Tracev((stderr, "inflate: allocated\n"));
  strm.state = state;
  state.window = null/*Z_NULL*/;
  ret = inflateReset2(strm, windowBits);
  if (ret !== Z_OK) {
    strm.state = null/*Z_NULL*/;
  }
  return ret;
}

function inflateInit(strm) {
  return inflateInit2(strm, DEF_WBITS);
}


/*
 Return state with length and distance decoding tables and index sizes set to
 fixed code decoding.  Normally this returns fixed tables from inffixed.h.
 If BUILDFIXED is defined, then instead this routine builds the tables the
 first time it's called, and returns those tables the first time and
 thereafter.  This reduces the size of the code by about 2K bytes, in
 exchange for a little execution time.  However, BUILDFIXED should not be
 used for threaded applications, since the rewriting of the tables and virgin
 may not be thread-safe.
 */
var virgin = true;

var lenfix, distfix; // We have no pointers in JS, so keep tables separate

function fixedtables(state) {
  /* build fixed huffman tables if first call (may not be thread safe) */
  if (virgin) {
    var sym;

    lenfix = new utils.Buf32(512);
    distfix = new utils.Buf32(32);

    /* literal/length table */
    sym = 0;
    while (sym < 144) { state.lens[sym++] = 8; }
    while (sym < 256) { state.lens[sym++] = 9; }
    while (sym < 280) { state.lens[sym++] = 7; }
    while (sym < 288) { state.lens[sym++] = 8; }

    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, {bits: 9});

    /* distance table */
    sym = 0;
    while (sym < 32) { state.lens[sym++] = 5; }

    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, {bits: 5});

    /* do this just once */
    virgin = false;
  }

  state.lencode = lenfix;
  state.lenbits = 9;
  state.distcode = distfix;
  state.distbits = 5;
}


/*
 Update the window with the last wsize (normally 32K) bytes written before
 returning.  If window does not exist yet, create it.  This is only called
 when a window is already in use, or when output has been written during this
 inflate call, but the end of the deflate stream has not been reached yet.
 It is also called to create a window for dictionary data when a dictionary
 is loaded.

 Providing output buffers larger than 32K to inflate() should provide a speed
 advantage, since only the last 32K of output is copied to the sliding window
 upon return from inflate(), and since all distances after the first 32K of
 output will fall in the output data, making match copies simpler and faster.
 The advantage may be dependent on the size of the processor's data caches.
 */
function updatewindow(strm, src, end, copy) {
  var dist;
  var state = strm.state;

  /* if it hasn't been done already, allocate space for the window */
  if (state.window === null) {
    state.wsize = 1 << state.wbits;
    state.wnext = 0;
    state.whave = 0;

    state.window = new utils.Buf8(state.wsize);
  }

  /* copy state->wsize or less output bytes into the circular window */
  if (copy >= state.wsize) {
    utils.arraySet(state.window,src, end - state.wsize, state.wsize, 0);
    state.wnext = 0;
    state.whave = state.wsize;
  }
  else {
    dist = state.wsize - state.wnext;
    if (dist > copy) {
      dist = copy;
    }
    //zmemcpy(state->window + state->wnext, end - copy, dist);
    utils.arraySet(state.window,src, end - copy, dist, state.wnext);
    copy -= dist;
    if (copy) {
      //zmemcpy(state->window, end - copy, copy);
      utils.arraySet(state.window,src, end - copy, copy, 0);
      state.wnext = copy;
      state.whave = state.wsize;
    }
    else {
      state.wnext += dist;
      if (state.wnext === state.wsize) { state.wnext = 0; }
      if (state.whave < state.wsize) { state.whave += dist; }
    }
  }
  return 0;
}

function inflate(strm, flush) {
  var state;
  var input, output;          // input/output buffers
  var next;                   /* next input INDEX */
  var put;                    /* next output INDEX */
  var have, left;             /* available input and output */
  var hold;                   /* bit buffer */
  var bits;                   /* bits in bit buffer */
  var _in, _out;              /* save starting available input and output */
  var copy;                   /* number of stored or match bytes to copy */
  var from;                   /* where to copy match bytes from */
  var from_source;
  var here = 0;               /* current decoding table entry */
  var here_bits, here_op, here_val; // paked "here" denormalized (JS specific)
  //var last;                   /* parent table entry */
  var last_bits, last_op, last_val; // paked "last" denormalized (JS specific)
  var len;                    /* length to copy for repeats, bits to drop */
  var ret;                    /* return code */
  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */
  var opts;

  var n; // temporary var for NEED_BITS

  var order = /* permutation of code lengths */
    [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];


  if (!strm || !strm.state || !strm.output ||
      (!strm.input && strm.avail_in !== 0)) {
    return Z_STREAM_ERROR;
  }

  state = strm.state;
  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */


  //--- LOAD() ---
  put = strm.next_out;
  output = strm.output;
  left = strm.avail_out;
  next = strm.next_in;
  input = strm.input;
  have = strm.avail_in;
  hold = state.hold;
  bits = state.bits;
  //---

  _in = have;
  _out = left;
  ret = Z_OK;

  inf_leave: // goto emulation
  for (;;) {
    switch (state.mode) {
    case HEAD:
      if (state.wrap === 0) {
        state.mode = TYPEDO;
        break;
      }
      //=== NEEDBITS(16);
      while (bits < 16) {
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
      }
      //===//
      if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */
        state.check = 0/*crc32(0L, Z_NULL, 0)*/;
        //=== CRC2(state.check, hold);
        hbuf[0] = hold & 0xff;
        hbuf[1] = (hold >>> 8) & 0xff;
        state.check = crc32(state.check, hbuf, 2, 0);
        //===//

        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        state.mode = FLAGS;
        break;
      }
      state.flags = 0;           /* expect zlib header */
      if (state.head) {
        state.head.done = false;
      }
      if (!(state.wrap & 1) ||   /* check if zlib header allowed */
        (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {
        strm.msg = 'incorrect header check';
        state.mode = BAD;
        break;
      }
      if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {
        strm.msg = 'unknown compression method';
        state.mode = BAD;
        break;
      }
      //--- DROPBITS(4) ---//
      hold >>>= 4;
      bits -= 4;
      //---//
      len = (hold & 0x0f)/*BITS(4)*/ + 8;
      if (state.wbits === 0) {
        state.wbits = len;
      }
      else if (len > state.wbits) {
        strm.msg = 'invalid window size';
        state.mode = BAD;
        break;
      }
      state.dmax = 1 << len;
      //Tracev((stderr, "inflate:   zlib header ok\n"));
      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
      state.mode = hold & 0x200 ? DICTID : TYPE;
      //=== INITBITS();
      hold = 0;
      bits = 0;
      //===//
      break;
    case FLAGS:
      //=== NEEDBITS(16); */
      while (bits < 16) {
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
      }
      //===//
      state.flags = hold;
      if ((state.flags & 0xff) !== Z_DEFLATED) {
        strm.msg = 'unknown compression method';
        state.mode = BAD;
        break;
      }
      if (state.flags & 0xe000) {
        strm.msg = 'unknown header flags set';
        state.mode = BAD;
        break;
      }
      if (state.head) {
        state.head.text = ((hold >> 8) & 1);
      }
      if (state.flags & 0x0200) {
        //=== CRC2(state.check, hold);
        hbuf[0] = hold & 0xff;
        hbuf[1] = (hold >>> 8) & 0xff;
        state.check = crc32(state.check, hbuf, 2, 0);
        //===//
      }
      //=== INITBITS();
      hold = 0;
      bits = 0;
      //===//
      state.mode = TIME;
      /* falls through */
    case TIME:
      //=== NEEDBITS(32); */
      while (bits < 32) {
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
      }
      //===//
      if (state.head) {
        state.head.time = hold;
      }
      if (state.flags & 0x0200) {
        //=== CRC4(state.check, hold)
        hbuf[0] = hold & 0xff;
        hbuf[1] = (hold >>> 8) & 0xff;
        hbuf[2] = (hold >>> 16) & 0xff;
        hbuf[3] = (hold >>> 24) & 0xff;
        state.check = crc32(state.check, hbuf, 4, 0);
        //===
      }
      //=== INITBITS();
      hold = 0;
      bits = 0;
      //===//
      state.mode = OS;
      /* falls through */
    case OS:
      //=== NEEDBITS(16); */
      while (bits < 16) {
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
      }
      //===//
      if (state.head) {
        state.head.xflags = (hold & 0xff);
        state.head.os = (hold >> 8);
      }
      if (state.flags & 0x0200) {
        //=== CRC2(state.check, hold);
        hbuf[0] = hold & 0xff;
        hbuf[1] = (hold >>> 8) & 0xff;
        state.check = crc32(state.check, hbuf, 2, 0);
        //===//
      }
      //=== INITBITS();
      hold = 0;
      bits = 0;
      //===//
      state.mode = EXLEN;
      /* falls through */
    case EXLEN:
      if (state.flags & 0x0400) {
        //=== NEEDBITS(16); */
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.length = hold;
        if (state.head) {
          state.head.extra_len = hold;
        }
        if (state.flags & 0x0200) {
          //=== CRC2(state.check, hold);
          hbuf[0] = hold & 0xff;
          hbuf[1] = (hold >>> 8) & 0xff;
          state.check = crc32(state.check, hbuf, 2, 0);
          //===//
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
      }
      else if (state.head) {
        state.head.extra = null/*Z_NULL*/;
      }
      state.mode = EXTRA;
      /* falls through */
    case EXTRA:
      if (state.flags & 0x0400) {
        copy = state.length;
        if (copy > have) { copy = have; }
        if (copy) {
          if (state.head) {
            len = state.head.extra_len - state.length;
            if (!state.head.extra) {
              // Use untyped array for more conveniend processing later
              state.head.extra = new Array(state.head.extra_len);
            }
            utils.arraySet(
              state.head.extra,
              input,
              next,
              // extra field is limited to 65536 bytes
              // - no need for additional size check
              copy,
              /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/
              len
            );
            //zmemcpy(state.head.extra + len, next,
            //        len + copy > state.head.extra_max ?
            //        state.head.extra_max - len : copy);
          }
          if (state.flags & 0x0200) {
            state.check = crc32(state.check, input, copy, next);
          }
          have -= copy;
          next += copy;
          state.length -= copy;
        }
        if (state.length) { break inf_leave; }
      }
      state.length = 0;
      state.mode = NAME;
      /* falls through */
    case NAME:
      if (state.flags & 0x0800) {
        if (have === 0) { break inf_leave; }
        copy = 0;
        do {
          // TODO: 2 or 1 bytes?
          len = input[next + copy++];
          /* use constant limit because in js we should not preallocate memory */
          if (state.head && len &&
              (state.length < 65536 /*state.head.name_max*/)) {
            state.head.name += String.fromCharCode(len);
          }
        } while (len && copy < have);

        if (state.flags & 0x0200) {
          state.check = crc32(state.check, input, copy, next);
        }
        have -= copy;
        next += copy;
        if (len) { break inf_leave; }
      }
      else if (state.head) {
        state.head.name = null;
      }
      state.length = 0;
      state.mode = COMMENT;
      /* falls through */
    case COMMENT:
      if (state.flags & 0x1000) {
        if (have === 0) { break inf_leave; }
        copy = 0;
        do {
          len = input[next + copy++];
          /* use constant limit because in js we should not preallocate memory */
          if (state.head && len &&
              (state.length < 65536 /*state.head.comm_max*/)) {
            state.head.comment += String.fromCharCode(len);
          }
        } while (len && copy < have);
        if (state.flags & 0x0200) {
          state.check = crc32(state.check, input, copy, next);
        }
        have -= copy;
        next += copy;
        if (len) { break inf_leave; }
      }
      else if (state.head) {
        state.head.comment = null;
      }
      state.mode = HCRC;
      /* falls through */
    case HCRC:
      if (state.flags & 0x0200) {
        //=== NEEDBITS(16); */
        while (bits < 16) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if (hold !== (state.check & 0xffff)) {
          strm.msg = 'header crc mismatch';
          state.mode = BAD;
          break;
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
      }
      if (state.head) {
        state.head.hcrc = ((state.flags >> 9) & 1);
        state.head.done = true;
      }
      strm.adler = state.check = 0 /*crc32(0L, Z_NULL, 0)*/;
      state.mode = TYPE;
      break;
    case DICTID:
      //=== NEEDBITS(32); */
      while (bits < 32) {
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
      }
      //===//
      strm.adler = state.check = ZSWAP32(hold);
      //=== INITBITS();
      hold = 0;
      bits = 0;
      //===//
      state.mode = DICT;
      /* falls through */
    case DICT:
      if (state.havedict === 0) {
        //--- RESTORE() ---
        strm.next_out = put;
        strm.avail_out = left;
        strm.next_in = next;
        strm.avail_in = have;
        state.hold = hold;
        state.bits = bits;
        //---
        return Z_NEED_DICT;
      }
      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;
      state.mode = TYPE;
      /* falls through */
    case TYPE:
      if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }
      /* falls through */
    case TYPEDO:
      if (state.last) {
        //--- BYTEBITS() ---//
        hold >>>= bits & 7;
        bits -= bits & 7;
        //---//
        state.mode = CHECK;
        break;
      }
      //=== NEEDBITS(3); */
      while (bits < 3) {
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
      }
      //===//
      state.last = (hold & 0x01)/*BITS(1)*/;
      //--- DROPBITS(1) ---//
      hold >>>= 1;
      bits -= 1;
      //---//

      switch ((hold & 0x03)/*BITS(2)*/) {
      case 0:                             /* stored block */
        //Tracev((stderr, "inflate:     stored block%s\n",
        //        state.last ? " (last)" : ""));
        state.mode = STORED;
        break;
      case 1:                             /* fixed block */
        fixedtables(state);
        //Tracev((stderr, "inflate:     fixed codes block%s\n",
        //        state.last ? " (last)" : ""));
        state.mode = LEN_;             /* decode codes */
        if (flush === Z_TREES) {
          //--- DROPBITS(2) ---//
          hold >>>= 2;
          bits -= 2;
          //---//
          break inf_leave;
        }
        break;
      case 2:                             /* dynamic block */
        //Tracev((stderr, "inflate:     dynamic codes block%s\n",
        //        state.last ? " (last)" : ""));
        state.mode = TABLE;
        break;
      case 3:
        strm.msg = 'invalid block type';
        state.mode = BAD;
      }
      //--- DROPBITS(2) ---//
      hold >>>= 2;
      bits -= 2;
      //---//
      break;
    case STORED:
      //--- BYTEBITS() ---// /* go to byte boundary */
      hold >>>= bits & 7;
      bits -= bits & 7;
      //---//
      //=== NEEDBITS(32); */
      while (bits < 32) {
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
      }
      //===//
      if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {
        strm.msg = 'invalid stored block lengths';
        state.mode = BAD;
        break;
      }
      state.length = hold & 0xffff;
      //Tracev((stderr, "inflate:       stored length %u\n",
      //        state.length));
      //=== INITBITS();
      hold = 0;
      bits = 0;
      //===//
      state.mode = COPY_;
      if (flush === Z_TREES) { break inf_leave; }
      /* falls through */
    case COPY_:
      state.mode = COPY;
      /* falls through */
    case COPY:
      copy = state.length;
      if (copy) {
        if (copy > have) { copy = have; }
        if (copy > left) { copy = left; }
        if (copy === 0) { break inf_leave; }
        //--- zmemcpy(put, next, copy); ---
        utils.arraySet(output, input, next, copy, put);
        //---//
        have -= copy;
        next += copy;
        left -= copy;
        put += copy;
        state.length -= copy;
        break;
      }
      //Tracev((stderr, "inflate:       stored end\n"));
      state.mode = TYPE;
      break;
    case TABLE:
      //=== NEEDBITS(14); */
      while (bits < 14) {
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
      }
      //===//
      state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;
      //--- DROPBITS(5) ---//
      hold >>>= 5;
      bits -= 5;
      //---//
      state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;
      //--- DROPBITS(5) ---//
      hold >>>= 5;
      bits -= 5;
      //---//
      state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;
      //--- DROPBITS(4) ---//
      hold >>>= 4;
      bits -= 4;
      //---//
//#ifndef PKZIP_BUG_WORKAROUND
      if (state.nlen > 286 || state.ndist > 30) {
        strm.msg = 'too many length or distance symbols';
        state.mode = BAD;
        break;
      }
//#endif
      //Tracev((stderr, "inflate:       table sizes ok\n"));
      state.have = 0;
      state.mode = LENLENS;
      /* falls through */
    case LENLENS:
      while (state.have < state.ncode) {
        //=== NEEDBITS(3);
        while (bits < 3) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);
        //--- DROPBITS(3) ---//
        hold >>>= 3;
        bits -= 3;
        //---//
      }
      while (state.have < 19) {
        state.lens[order[state.have++]] = 0;
      }
      // We have separate tables & no pointers. 2 commented lines below not needed.
      //state.next = state.codes;
      //state.lencode = state.next;
      // Switch to use dynamic table
      state.lencode = state.lendyn;
      state.lenbits = 7;

      opts = {bits: state.lenbits};
      ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);
      state.lenbits = opts.bits;

      if (ret) {
        strm.msg = 'invalid code lengths set';
        state.mode = BAD;
        break;
      }
      //Tracev((stderr, "inflate:       code lengths ok\n"));
      state.have = 0;
      state.mode = CODELENS;
      /* falls through */
    case CODELENS:
      while (state.have < state.nlen + state.ndist) {
        for (;;) {
          here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if ((here_bits) <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        if (here_val < 16) {
          //--- DROPBITS(here.bits) ---//
          hold >>>= here_bits;
          bits -= here_bits;
          //---//
          state.lens[state.have++] = here_val;
        }
        else {
          if (here_val === 16) {
            //=== NEEDBITS(here.bits + 2);
            n = here_bits + 2;
            while (bits < n) {
              if (have === 0) { break inf_leave; }
              have--;
              hold += input[next++] << bits;
              bits += 8;
            }
            //===//
            //--- DROPBITS(here.bits) ---//
            hold >>>= here_bits;
            bits -= here_bits;
            //---//
            if (state.have === 0) {
              strm.msg = 'invalid bit length repeat';
              state.mode = BAD;
              break;
            }
            len = state.lens[state.have - 1];
            copy = 3 + (hold & 0x03);//BITS(2);
            //--- DROPBITS(2) ---//
            hold >>>= 2;
            bits -= 2;
            //---//
          }
          else if (here_val === 17) {
            //=== NEEDBITS(here.bits + 3);
            n = here_bits + 3;
            while (bits < n) {
              if (have === 0) { break inf_leave; }
              have--;
              hold += input[next++] << bits;
              bits += 8;
            }
            //===//
            //--- DROPBITS(here.bits) ---//
            hold >>>= here_bits;
            bits -= here_bits;
            //---//
            len = 0;
            copy = 3 + (hold & 0x07);//BITS(3);
            //--- DROPBITS(3) ---//
            hold >>>= 3;
            bits -= 3;
            //---//
          }
          else {
            //=== NEEDBITS(here.bits + 7);
            n = here_bits + 7;
            while (bits < n) {
              if (have === 0) { break inf_leave; }
              have--;
              hold += input[next++] << bits;
              bits += 8;
            }
            //===//
            //--- DROPBITS(here.bits) ---//
            hold >>>= here_bits;
            bits -= here_bits;
            //---//
            len = 0;
            copy = 11 + (hold & 0x7f);//BITS(7);
            //--- DROPBITS(7) ---//
            hold >>>= 7;
            bits -= 7;
            //---//
          }
          if (state.have + copy > state.nlen + state.ndist) {
            strm.msg = 'invalid bit length repeat';
            state.mode = BAD;
            break;
          }
          while (copy--) {
            state.lens[state.have++] = len;
          }
        }
      }

      /* handle error breaks in while */
      if (state.mode === BAD) { break; }

      /* check for end-of-block code (better have one) */
      if (state.lens[256] === 0) {
        strm.msg = 'invalid code -- missing end-of-block';
        state.mode = BAD;
        break;
      }

      /* build code tables -- note: do not change the lenbits or distbits
         values here (9 and 6) without reading the comments in inftrees.h
         concerning the ENOUGH constants, which depend on those values */
      state.lenbits = 9;

      opts = {bits: state.lenbits};
      ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);
      // We have separate tables & no pointers. 2 commented lines below not needed.
      // state.next_index = opts.table_index;
      state.lenbits = opts.bits;
      // state.lencode = state.next;

      if (ret) {
        strm.msg = 'invalid literal/lengths set';
        state.mode = BAD;
        break;
      }

      state.distbits = 6;
      //state.distcode.copy(state.codes);
      // Switch to use dynamic table
      state.distcode = state.distdyn;
      opts = {bits: state.distbits};
      ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);
      // We have separate tables & no pointers. 2 commented lines below not needed.
      // state.next_index = opts.table_index;
      state.distbits = opts.bits;
      // state.distcode = state.next;

      if (ret) {
        strm.msg = 'invalid distances set';
        state.mode = BAD;
        break;
      }
      //Tracev((stderr, 'inflate:       codes ok\n'));
      state.mode = LEN_;
      if (flush === Z_TREES) { break inf_leave; }
      /* falls through */
    case LEN_:
      state.mode = LEN;
      /* falls through */
    case LEN:
      if (have >= 6 && left >= 258) {
        //--- RESTORE() ---
        strm.next_out = put;
        strm.avail_out = left;
        strm.next_in = next;
        strm.avail_in = have;
        state.hold = hold;
        state.bits = bits;
        //---
        inflate_fast(strm, _out);
        //--- LOAD() ---
        put = strm.next_out;
        output = strm.output;
        left = strm.avail_out;
        next = strm.next_in;
        input = strm.input;
        have = strm.avail_in;
        hold = state.hold;
        bits = state.bits;
        //---

        if (state.mode === TYPE) {
          state.back = -1;
        }
        break;
      }
      state.back = 0;
      for (;;) {
        here = state.lencode[hold & ((1 << state.lenbits) -1)];  /*BITS(state.lenbits)*/
        here_bits = here >>> 24;
        here_op = (here >>> 16) & 0xff;
        here_val = here & 0xffff;

        if (here_bits <= bits) { break; }
        //--- PULLBYTE() ---//
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
        //---//
      }
      if (here_op && (here_op & 0xf0) === 0) {
        last_bits = here_bits;
        last_op = here_op;
        last_val = here_val;
        for (;;) {
          here = state.lencode[last_val +
                  ((hold & ((1 << (last_bits + last_op)) -1))/*BITS(last.bits + last.op)*/ >> last_bits)];
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if ((last_bits + here_bits) <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        //--- DROPBITS(last.bits) ---//
        hold >>>= last_bits;
        bits -= last_bits;
        //---//
        state.back += last_bits;
      }
      //--- DROPBITS(here.bits) ---//
      hold >>>= here_bits;
      bits -= here_bits;
      //---//
      state.back += here_bits;
      state.length = here_val;
      if (here_op === 0) {
        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?
        //        "inflate:         literal '%c'\n" :
        //        "inflate:         literal 0x%02x\n", here.val));
        state.mode = LIT;
        break;
      }
      if (here_op & 32) {
        //Tracevv((stderr, "inflate:         end of block\n"));
        state.back = -1;
        state.mode = TYPE;
        break;
      }
      if (here_op & 64) {
        strm.msg = 'invalid literal/length code';
        state.mode = BAD;
        break;
      }
      state.extra = here_op & 15;
      state.mode = LENEXT;
      /* falls through */
    case LENEXT:
      if (state.extra) {
        //=== NEEDBITS(state.extra);
        n = state.extra;
        while (bits < n) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.length += hold & ((1 << state.extra) -1)/*BITS(state.extra)*/;
        //--- DROPBITS(state.extra) ---//
        hold >>>= state.extra;
        bits -= state.extra;
        //---//
        state.back += state.extra;
      }
      //Tracevv((stderr, "inflate:         length %u\n", state.length));
      state.was = state.length;
      state.mode = DIST;
      /* falls through */
    case DIST:
      for (;;) {
        here = state.distcode[hold & ((1 << state.distbits) -1)];/*BITS(state.distbits)*/
        here_bits = here >>> 24;
        here_op = (here >>> 16) & 0xff;
        here_val = here & 0xffff;

        if ((here_bits) <= bits) { break; }
        //--- PULLBYTE() ---//
        if (have === 0) { break inf_leave; }
        have--;
        hold += input[next++] << bits;
        bits += 8;
        //---//
      }
      if ((here_op & 0xf0) === 0) {
        last_bits = here_bits;
        last_op = here_op;
        last_val = here_val;
        for (;;) {
          here = state.distcode[last_val +
                  ((hold & ((1 << (last_bits + last_op)) -1))/*BITS(last.bits + last.op)*/ >> last_bits)];
          here_bits = here >>> 24;
          here_op = (here >>> 16) & 0xff;
          here_val = here & 0xffff;

          if ((last_bits + here_bits) <= bits) { break; }
          //--- PULLBYTE() ---//
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
          //---//
        }
        //--- DROPBITS(last.bits) ---//
        hold >>>= last_bits;
        bits -= last_bits;
        //---//
        state.back += last_bits;
      }
      //--- DROPBITS(here.bits) ---//
      hold >>>= here_bits;
      bits -= here_bits;
      //---//
      state.back += here_bits;
      if (here_op & 64) {
        strm.msg = 'invalid distance code';
        state.mode = BAD;
        break;
      }
      state.offset = here_val;
      state.extra = (here_op) & 15;
      state.mode = DISTEXT;
      /* falls through */
    case DISTEXT:
      if (state.extra) {
        //=== NEEDBITS(state.extra);
        n = state.extra;
        while (bits < n) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        state.offset += hold & ((1 << state.extra) -1)/*BITS(state.extra)*/;
        //--- DROPBITS(state.extra) ---//
        hold >>>= state.extra;
        bits -= state.extra;
        //---//
        state.back += state.extra;
      }
//#ifdef INFLATE_STRICT
      if (state.offset > state.dmax) {
        strm.msg = 'invalid distance too far back';
        state.mode = BAD;
        break;
      }
//#endif
      //Tracevv((stderr, "inflate:         distance %u\n", state.offset));
      state.mode = MATCH;
      /* falls through */
    case MATCH:
      if (left === 0) { break inf_leave; }
      copy = _out - left;
      if (state.offset > copy) {         /* copy from window */
        copy = state.offset - copy;
        if (copy > state.whave) {
          if (state.sane) {
            strm.msg = 'invalid distance too far back';
            state.mode = BAD;
            break;
          }
// (!) This block is disabled in zlib defailts,
// don't enable it for binary compatibility
//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR
//          Trace((stderr, "inflate.c too far\n"));
//          copy -= state.whave;
//          if (copy > state.length) { copy = state.length; }
//          if (copy > left) { copy = left; }
//          left -= copy;
//          state.length -= copy;
//          do {
//            output[put++] = 0;
//          } while (--copy);
//          if (state.length === 0) { state.mode = LEN; }
//          break;
//#endif
        }
        if (copy > state.wnext) {
          copy -= state.wnext;
          from = state.wsize - copy;
        }
        else {
          from = state.wnext - copy;
        }
        if (copy > state.length) { copy = state.length; }
        from_source = state.window;
      }
      else {                              /* copy from output */
        from_source = output;
        from = put - state.offset;
        copy = state.length;
      }
      if (copy > left) { copy = left; }
      left -= copy;
      state.length -= copy;
      do {
        output[put++] = from_source[from++];
      } while (--copy);
      if (state.length === 0) { state.mode = LEN; }
      break;
    case LIT:
      if (left === 0) { break inf_leave; }
      output[put++] = state.length;
      left--;
      state.mode = LEN;
      break;
    case CHECK:
      if (state.wrap) {
        //=== NEEDBITS(32);
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          // Use '|' insdead of '+' to make sure that result is signed
          hold |= input[next++] << bits;
          bits += 8;
        }
        //===//
        _out -= left;
        strm.total_out += _out;
        state.total += _out;
        if (_out) {
          strm.adler = state.check =
              /*UPDATE(state.check, put - _out, _out);*/
              (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));

        }
        _out = left;
        // NB: crc32 stored as signed 32-bit int, ZSWAP32 returns signed too
        if ((state.flags ? hold : ZSWAP32(hold)) !== state.check) {
          strm.msg = 'incorrect data check';
          state.mode = BAD;
          break;
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        //Tracev((stderr, "inflate:   check matches trailer\n"));
      }
      state.mode = LENGTH;
      /* falls through */
    case LENGTH:
      if (state.wrap && state.flags) {
        //=== NEEDBITS(32);
        while (bits < 32) {
          if (have === 0) { break inf_leave; }
          have--;
          hold += input[next++] << bits;
          bits += 8;
        }
        //===//
        if (hold !== (state.total & 0xffffffff)) {
          strm.msg = 'incorrect length check';
          state.mode = BAD;
          break;
        }
        //=== INITBITS();
        hold = 0;
        bits = 0;
        //===//
        //Tracev((stderr, "inflate:   length matches trailer\n"));
      }
      state.mode = DONE;
      /* falls through */
    case DONE:
      ret = Z_STREAM_END;
      break inf_leave;
    case BAD:
      ret = Z_DATA_ERROR;
      break inf_leave;
    case MEM:
      return Z_MEM_ERROR;
    case SYNC:
      /* falls through */
    default:
      return Z_STREAM_ERROR;
    }
  }

  // inf_leave <- here is real place for "goto inf_leave", emulated via "break inf_leave"

  /*
     Return from inflate(), updating the total counts and the check value.
     If there was no progress during the inflate() call, return a buffer
     error.  Call updatewindow() to create and/or update the window state.
     Note: a memory error from inflate() is non-recoverable.
   */

  //--- RESTORE() ---
  strm.next_out = put;
  strm.avail_out = left;
  strm.next_in = next;
  strm.avail_in = have;
  state.hold = hold;
  state.bits = bits;
  //---

  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&
                      (state.mode < CHECK || flush !== Z_FINISH))) {
    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {
      state.mode = MEM;
      return Z_MEM_ERROR;
    }
  }
  _in -= strm.avail_in;
  _out -= strm.avail_out;
  strm.total_in += _in;
  strm.total_out += _out;
  state.total += _out;
  if (state.wrap && _out) {
    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/
      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));
  }
  strm.data_type = state.bits + (state.last ? 64 : 0) +
                    (state.mode === TYPE ? 128 : 0) +
                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);
  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {
    ret = Z_BUF_ERROR;
  }
  return ret;
}

function inflateEnd(strm) {

  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {
    return Z_STREAM_ERROR;
  }

  var state = strm.state;
  if (state.window) {
    state.window = null;
  }
  strm.state = null;
  return Z_OK;
}

function inflateGetHeader(strm, head) {
  var state;

  /* check state */
  if (!strm || !strm.state) { return Z_STREAM_ERROR; }
  state = strm.state;
  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }

  /* save header structure */
  state.head = head;
  head.done = false;
  return Z_OK;
}


exports.inflateReset = inflateReset;
exports.inflateReset2 = inflateReset2;
exports.inflateResetKeep = inflateResetKeep;
exports.inflateInit = inflateInit;
exports.inflateInit2 = inflateInit2;
exports.inflate = inflate;
exports.inflateEnd = inflateEnd;
exports.inflateGetHeader = inflateGetHeader;
exports.inflateInfo = 'pako inflate (from Nodeca project)';

/* Not implemented
exports.inflateCopy = inflateCopy;
exports.inflateGetDictionary = inflateGetDictionary;
exports.inflateMark = inflateMark;
exports.inflatePrime = inflatePrime;
exports.inflateSetDictionary = inflateSetDictionary;
exports.inflateSync = inflateSync;
exports.inflateSyncPoint = inflateSyncPoint;
exports.inflateUndermine = inflateUndermine;
*/

},{"../utils/common":138,"./adler32":140,"./crc32":142,"./inffast":145,"./inftrees":147}],147:[function(require,module,exports){
'use strict';


var utils = require('../utils/common');

var MAXBITS = 15;
var ENOUGH_LENS = 852;
var ENOUGH_DISTS = 592;
//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);

var CODES = 0;
var LENS = 1;
var DISTS = 2;

var lbase = [ /* Length codes 257..285 base */
  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,
  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0
];

var lext = [ /* Length codes 257..285 extra */
  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,
  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78
];

var dbase = [ /* Distance codes 0..29 base */
  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,
  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,
  8193, 12289, 16385, 24577, 0, 0
];

var dext = [ /* Distance codes 0..29 extra */
  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,
  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,
  28, 28, 29, 29, 64, 64
];

module.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)
{
  var bits = opts.bits;
      //here = opts.here; /* table entry for duplication */

  var len = 0;               /* a code's length in bits */
  var sym = 0;               /* index of code symbols */
  var min = 0, max = 0;          /* minimum and maximum code lengths */
  var root = 0;              /* number of index bits for root table */
  var curr = 0;              /* number of index bits for current table */
  var drop = 0;              /* code bits to drop for sub-table */
  var left = 0;                   /* number of prefix codes available */
  var used = 0;              /* code entries in table used */
  var huff = 0;              /* Huffman code */
  var incr;              /* for incrementing code, index */
  var fill;              /* index for replicating entries */
  var low;               /* low bits for current root entry */
  var mask;              /* mask for low root bits */
  var next;             /* next available space in table */
  var base = null;     /* base value table to use */
  var base_index = 0;
//  var shoextra;    /* extra bits table to use */
  var end;                    /* use base and extra for symbol > end */
  var count = new utils.Buf16(MAXBITS+1); //[MAXBITS+1];    /* number of codes of each length */
  var offs = new utils.Buf16(MAXBITS+1); //[MAXBITS+1];     /* offsets in table for each length */
  var extra = null;
  var extra_index = 0;

  var here_bits, here_op, here_val;

  /*
   Process a set of code lengths to create a canonical Huffman code.  The
   code lengths are lens[0..codes-1].  Each length corresponds to the
   symbols 0..codes-1.  The Huffman code is generated by first sorting the
   symbols by length from short to long, and retaining the symbol order
   for codes with equal lengths.  Then the code starts with all zero bits
   for the first code of the shortest length, and the codes are integer
   increments for the same length, and zeros are appended as the length
   increases.  For the deflate format, these bits are stored backwards
   from their more natural integer increment ordering, and so when the
   decoding tables are built in the large loop below, the integer codes
   are incremented backwards.

   This routine assumes, but does not check, that all of the entries in
   lens[] are in the range 0..MAXBITS.  The caller must assure this.
   1..MAXBITS is interpreted as that code length.  zero means that that
   symbol does not occur in this code.

   The codes are sorted by computing a count of codes for each length,
   creating from that a table of starting indices for each length in the
   sorted table, and then entering the symbols in order in the sorted
   table.  The sorted table is work[], with that space being provided by
   the caller.

   The length counts are used for other purposes as well, i.e. finding
   the minimum and maximum length codes, determining if there are any
   codes at all, checking for a valid set of lengths, and looking ahead
   at length counts to determine sub-table sizes when building the
   decoding tables.
   */

  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */
  for (len = 0; len <= MAXBITS; len++) {
    count[len] = 0;
  }
  for (sym = 0; sym < codes; sym++) {
    count[lens[lens_index + sym]]++;
  }

  /* bound code lengths, force root to be within code lengths */
  root = bits;
  for (max = MAXBITS; max >= 1; max--) {
    if (count[max] !== 0) { break; }
  }
  if (root > max) {
    root = max;
  }
  if (max === 0) {                     /* no symbols to code at all */
    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */
    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;
    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;
    table[table_index++] = (1 << 24) | (64 << 16) | 0;


    //table.op[opts.table_index] = 64;
    //table.bits[opts.table_index] = 1;
    //table.val[opts.table_index++] = 0;
    table[table_index++] = (1 << 24) | (64 << 16) | 0;

    opts.bits = 1;
    return 0;     /* no symbols, but wait for decoding to report error */
  }
  for (min = 1; min < max; min++) {
    if (count[min] !== 0) { break; }
  }
  if (root < min) {
    root = min;
  }

  /* check for an over-subscribed or incomplete set of lengths */
  left = 1;
  for (len = 1; len <= MAXBITS; len++) {
    left <<= 1;
    left -= count[len];
    if (left < 0) {
      return -1;
    }        /* over-subscribed */
  }
  if (left > 0 && (type === CODES || max !== 1)) {
    return -1;                      /* incomplete set */
  }

  /* generate offsets into symbol table for each length for sorting */
  offs[1] = 0;
  for (len = 1; len < MAXBITS; len++) {
    offs[len + 1] = offs[len] + count[len];
  }

  /* sort symbols by length, by symbol order within each length */
  for (sym = 0; sym < codes; sym++) {
    if (lens[lens_index + sym] !== 0) {
      work[offs[lens[lens_index + sym]]++] = sym;
    }
  }

  /*
   Create and fill in decoding tables.  In this loop, the table being
   filled is at next and has curr index bits.  The code being used is huff
   with length len.  That code is converted to an index by dropping drop
   bits off of the bottom.  For codes where len is less than drop + curr,
   those top drop + curr - len bits are incremented through all values to
   fill the table with replicated entries.

   root is the number of index bits for the root table.  When len exceeds
   root, sub-tables are created pointed to by the root entry with an index
   of the low root bits of huff.  This is saved in low to check for when a
   new sub-table should be started.  drop is zero when the root table is
   being filled, and drop is root when sub-tables are being filled.

   When a new sub-table is needed, it is necessary to look ahead in the
   code lengths to determine what size sub-table is needed.  The length
   counts are used for this, and so count[] is decremented as codes are
   entered in the tables.

   used keeps track of how many table entries have been allocated from the
   provided *table space.  It is checked for LENS and DIST tables against
   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in
   the initial root table size constants.  See the comments in inftrees.h
   for more information.

   sym increments through all symbols, and the loop terminates when
   all codes of length max, i.e. all codes, have been processed.  This
   routine permits incomplete codes, so another loop after this one fills
   in the rest of the decoding tables with invalid code markers.
   */

  /* set up for code type */
  // poor man optimization - use if-else instead of switch,
  // to avoid deopts in old v8
  if (type === CODES) {
    base = extra = work;    /* dummy value--not used */
    end = 19;

  } else if (type === LENS) {
    base = lbase;
    base_index -= 257;
    extra = lext;
    extra_index -= 257;
    end = 256;

  } else {                    /* DISTS */
    base = dbase;
    extra = dext;
    end = -1;
  }

  /* initialize opts for loop */
  huff = 0;                   /* starting code */
  sym = 0;                    /* starting code symbol */
  len = min;                  /* starting code length */
  next = table_index;              /* current table to fill in */
  curr = root;                /* current table index bits */
  drop = 0;                   /* current bits to drop from code for index */
  low = -1;                   /* trigger new sub-table when len > root */
  used = 1 << root;          /* use root table entries */
  mask = used - 1;            /* mask for comparing low */

  /* check available table space */
  if ((type === LENS && used > ENOUGH_LENS) ||
    (type === DISTS && used > ENOUGH_DISTS)) {
    return 1;
  }

  var i=0;
  /* process all codes and make table entries */
  for (;;) {
    i++;
    /* create table entry */
    here_bits = len - drop;
    if (work[sym] < end) {
      here_op = 0;
      here_val = work[sym];
    }
    else if (work[sym] > end) {
      here_op = extra[extra_index + work[sym]];
      here_val = base[base_index + work[sym]];
    }
    else {
      here_op = 32 + 64;         /* end of block */
      here_val = 0;
    }

    /* replicate for those indices with low len bits equal to huff */
    incr = 1 << (len - drop);
    fill = 1 << curr;
    min = fill;                 /* save offset to next table */
    do {
      fill -= incr;
      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;
    } while (fill !== 0);

    /* backwards increment the len-bit code huff */
    incr = 1 << (len - 1);
    while (huff & incr) {
      incr >>= 1;
    }
    if (incr !== 0) {
      huff &= incr - 1;
      huff += incr;
    } else {
      huff = 0;
    }

    /* go to next symbol, update count, len */
    sym++;
    if (--count[len] === 0) {
      if (len === max) { break; }
      len = lens[lens_index + work[sym]];
    }

    /* create new sub-table if needed */
    if (len > root && (huff & mask) !== low) {
      /* if first time, transition to sub-tables */
      if (drop === 0) {
        drop = root;
      }

      /* increment past last table */
      next += min;            /* here min is 1 << curr */

      /* determine length of next table */
      curr = len - drop;
      left = 1 << curr;
      while (curr + drop < max) {
        left -= count[curr + drop];
        if (left <= 0) { break; }
        curr++;
        left <<= 1;
      }

      /* check for enough space */
      used += 1 << curr;
      if ((type === LENS && used > ENOUGH_LENS) ||
        (type === DISTS && used > ENOUGH_DISTS)) {
        return 1;
      }

      /* point entry in root table to sub-table */
      low = huff & mask;
      /*table.op[low] = curr;
      table.bits[low] = root;
      table.val[low] = next - opts.table_index;*/
      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;
    }
  }

  /* fill in remaining table entry if code is incomplete (guaranteed to have
   at most one remaining entry, since if the code is incomplete, the
   maximum code length that was allowed to get this far is one bit) */
  if (huff !== 0) {
    //table.op[next + huff] = 64;            /* invalid code marker */
    //table.bits[next + huff] = len - drop;
    //table.val[next + huff] = 0;
    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;
  }

  /* set return parameters */
  //opts.table_index += used;
  opts.bits = root;
  return 0;
};

},{"../utils/common":138}],148:[function(require,module,exports){
'use strict';

module.exports = {
  '2':    'need dictionary',     /* Z_NEED_DICT       2  */
  '1':    'stream end',          /* Z_STREAM_END      1  */
  '0':    '',                    /* Z_OK              0  */
  '-1':   'file error',          /* Z_ERRNO         (-1) */
  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */
  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */
  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */
  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */
  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */
};

},{}],149:[function(require,module,exports){
'use strict';


var utils = require('../utils/common');

/* Public constants ==========================================================*/
/* ===========================================================================*/


//var Z_FILTERED          = 1;
//var Z_HUFFMAN_ONLY      = 2;
//var Z_RLE               = 3;
var Z_FIXED               = 4;
//var Z_DEFAULT_STRATEGY  = 0;

/* Possible values of the data_type field (though see inflate()) */
var Z_BINARY              = 0;
var Z_TEXT                = 1;
//var Z_ASCII             = 1; // = Z_TEXT
var Z_UNKNOWN             = 2;

/*============================================================================*/


function zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }

// From zutil.h

var STORED_BLOCK = 0;
var STATIC_TREES = 1;
var DYN_TREES    = 2;
/* The three kinds of block type */

var MIN_MATCH    = 3;
var MAX_MATCH    = 258;
/* The minimum and maximum match lengths */

// From deflate.h
/* ===========================================================================
 * Internal compression state.
 */

var LENGTH_CODES  = 29;
/* number of length codes, not counting the special END_BLOCK code */

var LITERALS      = 256;
/* number of literal bytes 0..255 */

var L_CODES       = LITERALS + 1 + LENGTH_CODES;
/* number of Literal or Length codes, including the END_BLOCK code */

var D_CODES       = 30;
/* number of distance codes */

var BL_CODES      = 19;
/* number of codes used to transfer the bit lengths */

var HEAP_SIZE     = 2*L_CODES + 1;
/* maximum heap size */

var MAX_BITS      = 15;
/* All codes must not exceed MAX_BITS bits */

var Buf_size      = 16;
/* size of bit buffer in bi_buf */


/* ===========================================================================
 * Constants
 */

var MAX_BL_BITS = 7;
/* Bit length codes must not exceed MAX_BL_BITS bits */

var END_BLOCK   = 256;
/* end of block literal code */

var REP_3_6     = 16;
/* repeat previous bit length 3-6 times (2 bits of repeat count) */

var REPZ_3_10   = 17;
/* repeat a zero length 3-10 times  (3 bits of repeat count) */

var REPZ_11_138 = 18;
/* repeat a zero length 11-138 times  (7 bits of repeat count) */

var extra_lbits =   /* extra bits for each length code */
  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];

var extra_dbits =   /* extra bits for each distance code */
  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];

var extra_blbits =  /* extra bits for each bit length code */
  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];

var bl_order =
  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];
/* The lengths of the bit length codes are sent in order of decreasing
 * probability, to avoid transmitting the lengths for unused bit length codes.
 */

/* ===========================================================================
 * Local data. These are initialized only once.
 */

// We pre-fill arrays with 0 to avoid uninitialized gaps

var DIST_CODE_LEN = 512; /* see definition of array dist_code below */

// !!!! Use flat array insdead of structure, Freq = i*2, Len = i*2+1
var static_ltree  = new Array((L_CODES+2) * 2);
zero(static_ltree);
/* The static literal tree. Since the bit lengths are imposed, there is no
 * need for the L_CODES extra codes used during heap construction. However
 * The codes 286 and 287 are needed to build a canonical tree (see _tr_init
 * below).
 */

var static_dtree  = new Array(D_CODES * 2);
zero(static_dtree);
/* The static distance tree. (Actually a trivial tree since all codes use
 * 5 bits.)
 */

var _dist_code    = new Array(DIST_CODE_LEN);
zero(_dist_code);
/* Distance codes. The first 256 values correspond to the distances
 * 3 .. 258, the last 256 values correspond to the top 8 bits of
 * the 15 bit distances.
 */

var _length_code  = new Array(MAX_MATCH-MIN_MATCH+1);
zero(_length_code);
/* length code for each normalized match length (0 == MIN_MATCH) */

var base_length   = new Array(LENGTH_CODES);
zero(base_length);
/* First normalized length for each code (0 = MIN_MATCH) */

var base_dist     = new Array(D_CODES);
zero(base_dist);
/* First normalized distance for each code (0 = distance of 1) */


var StaticTreeDesc = function (static_tree, extra_bits, extra_base, elems, max_length) {

  this.static_tree  = static_tree;  /* static tree or NULL */
  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */
  this.extra_base   = extra_base;   /* base index for extra_bits */
  this.elems        = elems;        /* max number of elements in the tree */
  this.max_length   = max_length;   /* max bit length for the codes */

  // show if `static_tree` has data or dummy - needed for monomorphic objects
  this.has_stree    = static_tree && static_tree.length;
};


var static_l_desc;
var static_d_desc;
var static_bl_desc;


var TreeDesc = function(dyn_tree, stat_desc) {
  this.dyn_tree = dyn_tree;     /* the dynamic tree */
  this.max_code = 0;            /* largest code with non zero frequency */
  this.stat_desc = stat_desc;   /* the corresponding static tree */
};



function d_code(dist) {
  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];
}


/* ===========================================================================
 * Output a short LSB first on the stream.
 * IN assertion: there is enough room in pendingBuf.
 */
function put_short (s, w) {
//    put_byte(s, (uch)((w) & 0xff));
//    put_byte(s, (uch)((ush)(w) >> 8));
  s.pending_buf[s.pending++] = (w) & 0xff;
  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;
}


/* ===========================================================================
 * Send a value on a given number of bits.
 * IN assertion: length <= 16 and value fits in length bits.
 */
function send_bits(s, value, length) {
  if (s.bi_valid > (Buf_size - length)) {
    s.bi_buf |= (value << s.bi_valid) & 0xffff;
    put_short(s, s.bi_buf);
    s.bi_buf = value >> (Buf_size - s.bi_valid);
    s.bi_valid += length - Buf_size;
  } else {
    s.bi_buf |= (value << s.bi_valid) & 0xffff;
    s.bi_valid += length;
  }
}


function send_code(s, c, tree) {
  send_bits(s, tree[c*2]/*.Code*/, tree[c*2 + 1]/*.Len*/);
}


/* ===========================================================================
 * Reverse the first len bits of a code, using straightforward code (a faster
 * method would use a table)
 * IN assertion: 1 <= len <= 15
 */
function bi_reverse(code, len) {
  var res = 0;
  do {
    res |= code & 1;
    code >>>= 1;
    res <<= 1;
  } while (--len > 0);
  return res >>> 1;
}


/* ===========================================================================
 * Flush the bit buffer, keeping at most 7 bits in it.
 */
function bi_flush(s) {
  if (s.bi_valid === 16) {
    put_short(s, s.bi_buf);
    s.bi_buf = 0;
    s.bi_valid = 0;

  } else if (s.bi_valid >= 8) {
    s.pending_buf[s.pending++] = s.bi_buf & 0xff;
    s.bi_buf >>= 8;
    s.bi_valid -= 8;
  }
}


/* ===========================================================================
 * Compute the optimal bit lengths for a tree and update the total bit length
 * for the current block.
 * IN assertion: the fields freq and dad are set, heap[heap_max] and
 *    above are the tree nodes sorted by increasing frequency.
 * OUT assertions: the field len is set to the optimal bit length, the
 *     array bl_count contains the frequencies for each bit length.
 *     The length opt_len is updated; static_len is also updated if stree is
 *     not null.
 */
function gen_bitlen(s, desc)
//    deflate_state *s;
//    tree_desc *desc;    /* the tree descriptor */
{
  var tree            = desc.dyn_tree;
  var max_code        = desc.max_code;
  var stree           = desc.stat_desc.static_tree;
  var has_stree       = desc.stat_desc.has_stree;
  var extra           = desc.stat_desc.extra_bits;
  var base            = desc.stat_desc.extra_base;
  var max_length      = desc.stat_desc.max_length;
  var h;              /* heap index */
  var n, m;           /* iterate over the tree elements */
  var bits;           /* bit length */
  var xbits;          /* extra bits */
  var f;              /* frequency */
  var overflow = 0;   /* number of elements with bit length too large */

  for (bits = 0; bits <= MAX_BITS; bits++) {
    s.bl_count[bits] = 0;
  }

  /* In a first pass, compute the optimal bit lengths (which may
   * overflow in the case of the bit length tree).
   */
  tree[s.heap[s.heap_max]*2 + 1]/*.Len*/ = 0; /* root of the heap */

  for (h = s.heap_max+1; h < HEAP_SIZE; h++) {
    n = s.heap[h];
    bits = tree[tree[n*2 +1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;
    if (bits > max_length) {
      bits = max_length;
      overflow++;
    }
    tree[n*2 + 1]/*.Len*/ = bits;
    /* We overwrite tree[n].Dad which is no longer needed */

    if (n > max_code) { continue; } /* not a leaf node */

    s.bl_count[bits]++;
    xbits = 0;
    if (n >= base) {
      xbits = extra[n-base];
    }
    f = tree[n * 2]/*.Freq*/;
    s.opt_len += f * (bits + xbits);
    if (has_stree) {
      s.static_len += f * (stree[n*2 + 1]/*.Len*/ + xbits);
    }
  }
  if (overflow === 0) { return; }

  // Trace((stderr,"\nbit length overflow\n"));
  /* This happens for example on obj2 and pic of the Calgary corpus */

  /* Find the first bit length which could increase: */
  do {
    bits = max_length-1;
    while (s.bl_count[bits] === 0) { bits--; }
    s.bl_count[bits]--;      /* move one leaf down the tree */
    s.bl_count[bits+1] += 2; /* move one overflow item as its brother */
    s.bl_count[max_length]--;
    /* The brother of the overflow item also moves one step up,
     * but this does not affect bl_count[max_length]
     */
    overflow -= 2;
  } while (overflow > 0);

  /* Now recompute all bit lengths, scanning in increasing frequency.
   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all
   * lengths instead of fixing only the wrong ones. This idea is taken
   * from 'ar' written by Haruhiko Okumura.)
   */
  for (bits = max_length; bits !== 0; bits--) {
    n = s.bl_count[bits];
    while (n !== 0) {
      m = s.heap[--h];
      if (m > max_code) { continue; }
      if (tree[m*2 + 1]/*.Len*/ !== bits) {
        // Trace((stderr,"code %d bits %d->%d\n", m, tree[m].Len, bits));
        s.opt_len += (bits - tree[m*2 + 1]/*.Len*/)*tree[m*2]/*.Freq*/;
        tree[m*2 + 1]/*.Len*/ = bits;
      }
      n--;
    }
  }
}


/* ===========================================================================
 * Generate the codes for a given tree and bit counts (which need not be
 * optimal).
 * IN assertion: the array bl_count contains the bit length statistics for
 * the given tree and the field len is set for all tree elements.
 * OUT assertion: the field code is set for all tree elements of non
 *     zero code length.
 */
function gen_codes(tree, max_code, bl_count)
//    ct_data *tree;             /* the tree to decorate */
//    int max_code;              /* largest code with non zero frequency */
//    ushf *bl_count;            /* number of codes at each bit length */
{
  var next_code = new Array(MAX_BITS+1); /* next code value for each bit length */
  var code = 0;              /* running code value */
  var bits;                  /* bit index */
  var n;                     /* code index */

  /* The distribution counts are first used to generate the code values
   * without bit reversal.
   */
  for (bits = 1; bits <= MAX_BITS; bits++) {
    next_code[bits] = code = (code + bl_count[bits-1]) << 1;
  }
  /* Check that the bit counts in bl_count are consistent. The last code
   * must be all ones.
   */
  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,
  //        "inconsistent bit counts");
  //Tracev((stderr,"\ngen_codes: max_code %d ", max_code));

  for (n = 0;  n <= max_code; n++) {
    var len = tree[n*2 + 1]/*.Len*/;
    if (len === 0) { continue; }
    /* Now reverse the bits */
    tree[n*2]/*.Code*/ = bi_reverse(next_code[len]++, len);

    //Tracecv(tree != static_ltree, (stderr,"\nn %3d %c l %2d c %4x (%x) ",
    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));
  }
}


/* ===========================================================================
 * Initialize the various 'constant' tables.
 */
function tr_static_init() {
  var n;        /* iterates over tree elements */
  var bits;     /* bit counter */
  var length;   /* length value */
  var code;     /* code value */
  var dist;     /* distance index */
  var bl_count = new Array(MAX_BITS+1);
  /* number of codes at each bit length for an optimal tree */

  // do check in _tr_init()
  //if (static_init_done) return;

  /* For some embedded targets, global variables are not initialized: */
/*#ifdef NO_INIT_GLOBAL_POINTERS
  static_l_desc.static_tree = static_ltree;
  static_l_desc.extra_bits = extra_lbits;
  static_d_desc.static_tree = static_dtree;
  static_d_desc.extra_bits = extra_dbits;
  static_bl_desc.extra_bits = extra_blbits;
#endif*/

  /* Initialize the mapping length (0..255) -> length code (0..28) */
  length = 0;
  for (code = 0; code < LENGTH_CODES-1; code++) {
    base_length[code] = length;
    for (n = 0; n < (1<<extra_lbits[code]); n++) {
      _length_code[length++] = code;
    }
  }
  //Assert (length == 256, "tr_static_init: length != 256");
  /* Note that the length 255 (match length 258) can be represented
   * in two different ways: code 284 + 5 bits or code 285, so we
   * overwrite length_code[255] to use the best encoding:
   */
  _length_code[length-1] = code;

  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */
  dist = 0;
  for (code = 0 ; code < 16; code++) {
    base_dist[code] = dist;
    for (n = 0; n < (1<<extra_dbits[code]); n++) {
      _dist_code[dist++] = code;
    }
  }
  //Assert (dist == 256, "tr_static_init: dist != 256");
  dist >>= 7; /* from now on, all distances are divided by 128 */
  for (; code < D_CODES; code++) {
    base_dist[code] = dist << 7;
    for (n = 0; n < (1<<(extra_dbits[code]-7)); n++) {
      _dist_code[256 + dist++] = code;
    }
  }
  //Assert (dist == 256, "tr_static_init: 256+dist != 512");

  /* Construct the codes of the static literal tree */
  for (bits = 0; bits <= MAX_BITS; bits++) {
    bl_count[bits] = 0;
  }

  n = 0;
  while (n <= 143) {
    static_ltree[n*2 + 1]/*.Len*/ = 8;
    n++;
    bl_count[8]++;
  }
  while (n <= 255) {
    static_ltree[n*2 + 1]/*.Len*/ = 9;
    n++;
    bl_count[9]++;
  }
  while (n <= 279) {
    static_ltree[n*2 + 1]/*.Len*/ = 7;
    n++;
    bl_count[7]++;
  }
  while (n <= 287) {
    static_ltree[n*2 + 1]/*.Len*/ = 8;
    n++;
    bl_count[8]++;
  }
  /* Codes 286 and 287 do not exist, but we must include them in the
   * tree construction to get a canonical Huffman tree (longest code
   * all ones)
   */
  gen_codes(static_ltree, L_CODES+1, bl_count);

  /* The static distance tree is trivial: */
  for (n = 0; n < D_CODES; n++) {
    static_dtree[n*2 + 1]/*.Len*/ = 5;
    static_dtree[n*2]/*.Code*/ = bi_reverse(n, 5);
  }

  // Now data ready and we can init static trees
  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS+1, L_CODES, MAX_BITS);
  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);
  static_bl_desc =new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);

  //static_init_done = true;
}


/* ===========================================================================
 * Initialize a new block.
 */
function init_block(s) {
  var n; /* iterates over tree elements */

  /* Initialize the trees. */
  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n*2]/*.Freq*/ = 0; }
  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n*2]/*.Freq*/ = 0; }
  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n*2]/*.Freq*/ = 0; }

  s.dyn_ltree[END_BLOCK*2]/*.Freq*/ = 1;
  s.opt_len = s.static_len = 0;
  s.last_lit = s.matches = 0;
}


/* ===========================================================================
 * Flush the bit buffer and align the output on a byte boundary
 */
function bi_windup(s)
{
  if (s.bi_valid > 8) {
    put_short(s, s.bi_buf);
  } else if (s.bi_valid > 0) {
    //put_byte(s, (Byte)s->bi_buf);
    s.pending_buf[s.pending++] = s.bi_buf;
  }
  s.bi_buf = 0;
  s.bi_valid = 0;
}

/* ===========================================================================
 * Copy a stored block, storing first the length and its
 * one's complement if requested.
 */
function copy_block(s, buf, len, header)
//DeflateState *s;
//charf    *buf;    /* the input data */
//unsigned len;     /* its length */
//int      header;  /* true if block header must be written */
{
  bi_windup(s);        /* align on byte boundary */

  if (header) {
    put_short(s, len);
    put_short(s, ~len);
  }
//  while (len--) {
//    put_byte(s, *buf++);
//  }
  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);
  s.pending += len;
}

/* ===========================================================================
 * Compares to subtrees, using the tree depth as tie breaker when
 * the subtrees have equal frequency. This minimizes the worst case length.
 */
function smaller(tree, n, m, depth) {
  var _n2 = n*2;
  var _m2 = m*2;
  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||
         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));
}

/* ===========================================================================
 * Restore the heap property by moving down the tree starting at node k,
 * exchanging a node with the smallest of its two sons if necessary, stopping
 * when the heap property is re-established (each father smaller than its
 * two sons).
 */
function pqdownheap(s, tree, k)
//    deflate_state *s;
//    ct_data *tree;  /* the tree to restore */
//    int k;               /* node to move down */
{
  var v = s.heap[k];
  var j = k << 1;  /* left son of k */
  while (j <= s.heap_len) {
    /* Set j to the smallest of the two sons: */
    if (j < s.heap_len &&
      smaller(tree, s.heap[j+1], s.heap[j], s.depth)) {
      j++;
    }
    /* Exit if v is smaller than both sons */
    if (smaller(tree, v, s.heap[j], s.depth)) { break; }

    /* Exchange v with the smallest son */
    s.heap[k] = s.heap[j];
    k = j;

    /* And continue down the tree, setting j to the left son of k */
    j <<= 1;
  }
  s.heap[k] = v;
}


// inlined manually
// var SMALLEST = 1;

/* ===========================================================================
 * Send the block data compressed using the given Huffman trees
 */
function compress_block(s, ltree, dtree)
//    deflate_state *s;
//    const ct_data *ltree; /* literal tree */
//    const ct_data *dtree; /* distance tree */
{
  var dist;           /* distance of matched string */
  var lc;             /* match length or unmatched char (if dist == 0) */
  var lx = 0;         /* running index in l_buf */
  var code;           /* the code to send */
  var extra;          /* number of extra bits to send */

  if (s.last_lit !== 0) {
    do {
      dist = (s.pending_buf[s.d_buf + lx*2] << 8) | (s.pending_buf[s.d_buf + lx*2 + 1]);
      lc = s.pending_buf[s.l_buf + lx];
      lx++;

      if (dist === 0) {
        send_code(s, lc, ltree); /* send a literal byte */
        //Tracecv(isgraph(lc), (stderr," '%c' ", lc));
      } else {
        /* Here, lc is the match length - MIN_MATCH */
        code = _length_code[lc];
        send_code(s, code+LITERALS+1, ltree); /* send the length code */
        extra = extra_lbits[code];
        if (extra !== 0) {
          lc -= base_length[code];
          send_bits(s, lc, extra);       /* send the extra length bits */
        }
        dist--; /* dist is now the match distance - 1 */
        code = d_code(dist);
        //Assert (code < D_CODES, "bad d_code");

        send_code(s, code, dtree);       /* send the distance code */
        extra = extra_dbits[code];
        if (extra !== 0) {
          dist -= base_dist[code];
          send_bits(s, dist, extra);   /* send the extra distance bits */
        }
      } /* literal or match pair ? */

      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */
      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,
      //       "pendingBuf overflow");

    } while (lx < s.last_lit);
  }

  send_code(s, END_BLOCK, ltree);
}


/* ===========================================================================
 * Construct one Huffman tree and assigns the code bit strings and lengths.
 * Update the total bit length for the current block.
 * IN assertion: the field freq is set for all tree elements.
 * OUT assertions: the fields len and code are set to the optimal bit length
 *     and corresponding code. The length opt_len is updated; static_len is
 *     also updated if stree is not null. The field max_code is set.
 */
function build_tree(s, desc)
//    deflate_state *s;
//    tree_desc *desc; /* the tree descriptor */
{
  var tree     = desc.dyn_tree;
  var stree    = desc.stat_desc.static_tree;
  var has_stree = desc.stat_desc.has_stree;
  var elems    = desc.stat_desc.elems;
  var n, m;          /* iterate over heap elements */
  var max_code = -1; /* largest code with non zero frequency */
  var node;          /* new node being created */

  /* Construct the initial heap, with least frequent element in
   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].
   * heap[0] is not used.
   */
  s.heap_len = 0;
  s.heap_max = HEAP_SIZE;

  for (n = 0; n < elems; n++) {
    if (tree[n * 2]/*.Freq*/ !== 0) {
      s.heap[++s.heap_len] = max_code = n;
      s.depth[n] = 0;

    } else {
      tree[n*2 + 1]/*.Len*/ = 0;
    }
  }

  /* The pkzip format requires that at least one distance code exists,
   * and that at least one bit should be sent even if there is only one
   * possible code. So to avoid special checks later on we force at least
   * two codes of non zero frequency.
   */
  while (s.heap_len < 2) {
    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);
    tree[node * 2]/*.Freq*/ = 1;
    s.depth[node] = 0;
    s.opt_len--;

    if (has_stree) {
      s.static_len -= stree[node*2 + 1]/*.Len*/;
    }
    /* node is 0 or 1 so it does not have extra bits */
  }
  desc.max_code = max_code;

  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,
   * establish sub-heaps of increasing lengths:
   */
  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }

  /* Construct the Huffman tree by repeatedly combining the least two
   * frequent nodes.
   */
  node = elems;              /* next internal node of the tree */
  do {
    //pqremove(s, tree, n);  /* n = node of least frequency */
    /*** pqremove ***/
    n = s.heap[1/*SMALLEST*/];
    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];
    pqdownheap(s, tree, 1/*SMALLEST*/);
    /***/

    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */

    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */
    s.heap[--s.heap_max] = m;

    /* Create a new node father of n and m */
    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;
    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;
    tree[n*2 + 1]/*.Dad*/ = tree[m*2 + 1]/*.Dad*/ = node;

    /* and insert the new node in the heap */
    s.heap[1/*SMALLEST*/] = node++;
    pqdownheap(s, tree, 1/*SMALLEST*/);

  } while (s.heap_len >= 2);

  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];

  /* At this point, the fields freq and dad are set. We can now
   * generate the bit lengths.
   */
  gen_bitlen(s, desc);

  /* The field len is now set, we can generate the bit codes */
  gen_codes(tree, max_code, s.bl_count);
}


/* ===========================================================================
 * Scan a literal or distance tree to determine the frequencies of the codes
 * in the bit length tree.
 */
function scan_tree(s, tree, max_code)
//    deflate_state *s;
//    ct_data *tree;   /* the tree to be scanned */
//    int max_code;    /* and its largest code of non zero frequency */
{
  var n;                     /* iterates over all tree elements */
  var prevlen = -1;          /* last emitted length */
  var curlen;                /* length of current code */

  var nextlen = tree[0*2 + 1]/*.Len*/; /* length of next code */

  var count = 0;             /* repeat count of the current code */
  var max_count = 7;         /* max repeat count */
  var min_count = 4;         /* min repeat count */

  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }
  tree[(max_code+1)*2 + 1]/*.Len*/ = 0xffff; /* guard */

  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n+1)*2 + 1]/*.Len*/;

    if (++count < max_count && curlen === nextlen) {
      continue;

    } else if (count < min_count) {
      s.bl_tree[curlen * 2]/*.Freq*/ += count;

    } else if (curlen !== 0) {

      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }
      s.bl_tree[REP_3_6*2]/*.Freq*/++;

    } else if (count <= 10) {
      s.bl_tree[REPZ_3_10*2]/*.Freq*/++;

    } else {
      s.bl_tree[REPZ_11_138*2]/*.Freq*/++;
    }

    count = 0;
    prevlen = curlen;

    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;

    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;

    } else {
      max_count = 7;
      min_count = 4;
    }
  }
}


/* ===========================================================================
 * Send a literal or distance tree in compressed form, using the codes in
 * bl_tree.
 */
function send_tree(s, tree, max_code)
//    deflate_state *s;
//    ct_data *tree; /* the tree to be scanned */
//    int max_code;       /* and its largest code of non zero frequency */
{
  var n;                     /* iterates over all tree elements */
  var prevlen = -1;          /* last emitted length */
  var curlen;                /* length of current code */

  var nextlen = tree[0*2 + 1]/*.Len*/; /* length of next code */

  var count = 0;             /* repeat count of the current code */
  var max_count = 7;         /* max repeat count */
  var min_count = 4;         /* min repeat count */

  /* tree[max_code+1].Len = -1; */  /* guard already set */
  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }

  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n+1)*2 + 1]/*.Len*/;

    if (++count < max_count && curlen === nextlen) {
      continue;

    } else if (count < min_count) {
      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);

    } else if (curlen !== 0) {
      if (curlen !== prevlen) {
        send_code(s, curlen, s.bl_tree);
        count--;
      }
      //Assert(count >= 3 && count <= 6, " 3_6?");
      send_code(s, REP_3_6, s.bl_tree);
      send_bits(s, count-3, 2);

    } else if (count <= 10) {
      send_code(s, REPZ_3_10, s.bl_tree);
      send_bits(s, count-3, 3);

    } else {
      send_code(s, REPZ_11_138, s.bl_tree);
      send_bits(s, count-11, 7);
    }

    count = 0;
    prevlen = curlen;
    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;

    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;

    } else {
      max_count = 7;
      min_count = 4;
    }
  }
}


/* ===========================================================================
 * Construct the Huffman tree for the bit lengths and return the index in
 * bl_order of the last bit length code to send.
 */
function build_bl_tree(s) {
  var max_blindex;  /* index of last bit length code of non zero freq */

  /* Determine the bit length frequencies for literal and distance trees */
  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);
  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);

  /* Build the bit length tree: */
  build_tree(s, s.bl_desc);
  /* opt_len now includes the length of the tree representations, except
   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.
   */

  /* Determine the number of bit length codes to send. The pkzip format
   * requires that at least 4 bit length codes be sent. (appnote.txt says
   * 3 but the actual value used is 4.)
   */
  for (max_blindex = BL_CODES-1; max_blindex >= 3; max_blindex--) {
    if (s.bl_tree[bl_order[max_blindex]*2 + 1]/*.Len*/ !== 0) {
      break;
    }
  }
  /* Update opt_len to include the bit length tree and counts */
  s.opt_len += 3*(max_blindex+1) + 5+5+4;
  //Tracev((stderr, "\ndyn trees: dyn %ld, stat %ld",
  //        s->opt_len, s->static_len));

  return max_blindex;
}


/* ===========================================================================
 * Send the header for a block using dynamic Huffman trees: the counts, the
 * lengths of the bit length codes, the literal tree and the distance tree.
 * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.
 */
function send_all_trees(s, lcodes, dcodes, blcodes)
//    deflate_state *s;
//    int lcodes, dcodes, blcodes; /* number of codes for each tree */
{
  var rank;                    /* index in bl_order */

  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, "not enough codes");
  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,
  //        "too many codes");
  //Tracev((stderr, "\nbl counts: "));
  send_bits(s, lcodes-257, 5); /* not +255 as stated in appnote.txt */
  send_bits(s, dcodes-1,   5);
  send_bits(s, blcodes-4,  4); /* not -3 as stated in appnote.txt */
  for (rank = 0; rank < blcodes; rank++) {
    //Tracev((stderr, "\nbl code %2d ", bl_order[rank]));
    send_bits(s, s.bl_tree[bl_order[rank]*2 + 1]/*.Len*/, 3);
  }
  //Tracev((stderr, "\nbl tree: sent %ld", s->bits_sent));

  send_tree(s, s.dyn_ltree, lcodes-1); /* literal tree */
  //Tracev((stderr, "\nlit tree: sent %ld", s->bits_sent));

  send_tree(s, s.dyn_dtree, dcodes-1); /* distance tree */
  //Tracev((stderr, "\ndist tree: sent %ld", s->bits_sent));
}


/* ===========================================================================
 * Check if the data type is TEXT or BINARY, using the following algorithm:
 * - TEXT if the two conditions below are satisfied:
 *    a) There are no non-portable control characters belonging to the
 *       "black list" (0..6, 14..25, 28..31).
 *    b) There is at least one printable character belonging to the
 *       "white list" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).
 * - BINARY otherwise.
 * - The following partially-portable control characters form a
 *   "gray list" that is ignored in this detection algorithm:
 *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).
 * IN assertion: the fields Freq of dyn_ltree are set.
 */
function detect_data_type(s) {
  /* black_mask is the bit mask of black-listed bytes
   * set bits 0..6, 14..25, and 28..31
   * 0xf3ffc07f = binary 11110011111111111100000001111111
   */
  var black_mask = 0xf3ffc07f;
  var n;

  /* Check for non-textual ("black-listed") bytes. */
  for (n = 0; n <= 31; n++, black_mask >>>= 1) {
    if ((black_mask & 1) && (s.dyn_ltree[n*2]/*.Freq*/ !== 0)) {
      return Z_BINARY;
    }
  }

  /* Check for textual ("white-listed") bytes. */
  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||
      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {
    return Z_TEXT;
  }
  for (n = 32; n < LITERALS; n++) {
    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {
      return Z_TEXT;
    }
  }

  /* There are no "black-listed" or "white-listed" bytes:
   * this stream either is empty or has tolerated ("gray-listed") bytes only.
   */
  return Z_BINARY;
}


var static_init_done = false;

/* ===========================================================================
 * Initialize the tree data structures for a new zlib stream.
 */
function _tr_init(s)
{

  if (!static_init_done) {
    tr_static_init();
    static_init_done = true;
  }

  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);
  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);
  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);

  s.bi_buf = 0;
  s.bi_valid = 0;

  /* Initialize the first block of the first file: */
  init_block(s);
}


/* ===========================================================================
 * Send a stored block
 */
function _tr_stored_block(s, buf, stored_len, last)
//DeflateState *s;
//charf *buf;       /* input block */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */
{
  send_bits(s, (STORED_BLOCK<<1)+(last ? 1 : 0), 3);    /* send block type */
  copy_block(s, buf, stored_len, true); /* with header */
}


/* ===========================================================================
 * Send one empty static block to give enough lookahead for inflate.
 * This takes 10 bits, of which 7 may remain in the bit buffer.
 */
function _tr_align(s) {
  send_bits(s, STATIC_TREES<<1, 3);
  send_code(s, END_BLOCK, static_ltree);
  bi_flush(s);
}


/* ===========================================================================
 * Determine the best encoding for the current block: dynamic trees, static
 * trees or store, and output the encoded block to the zip file.
 */
function _tr_flush_block(s, buf, stored_len, last)
//DeflateState *s;
//charf *buf;       /* input block, or NULL if too old */
//ulg stored_len;   /* length of input block */
//int last;         /* one if this is the last block for a file */
{
  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */
  var max_blindex = 0;        /* index of last bit length code of non zero freq */

  /* Build the Huffman trees unless a stored block is forced */
  if (s.level > 0) {

    /* Check if the file is binary or text */
    if (s.strm.data_type === Z_UNKNOWN) {
      s.strm.data_type = detect_data_type(s);
    }

    /* Construct the literal and distance trees */
    build_tree(s, s.l_desc);
    // Tracev((stderr, "\nlit data: dyn %ld, stat %ld", s->opt_len,
    //        s->static_len));

    build_tree(s, s.d_desc);
    // Tracev((stderr, "\ndist data: dyn %ld, stat %ld", s->opt_len,
    //        s->static_len));
    /* At this point, opt_len and static_len are the total bit lengths of
     * the compressed block data, excluding the tree representations.
     */

    /* Build the bit length tree for the above two trees, and get the index
     * in bl_order of the last bit length code to send.
     */
    max_blindex = build_bl_tree(s);

    /* Determine the best encoding. Compute the block lengths in bytes. */
    opt_lenb = (s.opt_len+3+7) >>> 3;
    static_lenb = (s.static_len+3+7) >>> 3;

    // Tracev((stderr, "\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u ",
    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,
    //        s->last_lit));

    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }

  } else {
    // Assert(buf != (char*)0, "lost buf");
    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */
  }

  if ((stored_len+4 <= opt_lenb) && (buf !== -1)) {
    /* 4: two words for the lengths */

    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.
     * Otherwise we can't have processed more than WSIZE input bytes since
     * the last block flush, because compression would have been
     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to
     * transform a block into a stored block.
     */
    _tr_stored_block(s, buf, stored_len, last);

  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {

    send_bits(s, (STATIC_TREES<<1) + (last ? 1 : 0), 3);
    compress_block(s, static_ltree, static_dtree);

  } else {
    send_bits(s, (DYN_TREES<<1) + (last ? 1 : 0), 3);
    send_all_trees(s, s.l_desc.max_code+1, s.d_desc.max_code+1, max_blindex+1);
    compress_block(s, s.dyn_ltree, s.dyn_dtree);
  }
  // Assert (s->compressed_len == s->bits_sent, "bad compressed size");
  /* The above check is made mod 2^32, for files larger than 512 MB
   * and uLong implemented on 32 bits.
   */
  init_block(s);

  if (last) {
    bi_windup(s);
  }
  // Tracev((stderr,"\ncomprlen %lu(%lu) ", s->compressed_len>>3,
  //       s->compressed_len-7*last));
}

/* ===========================================================================
 * Save the match info and tally the frequency counts. Return true if
 * the current block must be flushed.
 */
function _tr_tally(s, dist, lc)
//    deflate_state *s;
//    unsigned dist;  /* distance of matched string */
//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */
{
  //var out_length, in_length, dcode;

  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;
  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;

  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;
  s.last_lit++;

  if (dist === 0) {
    /* lc is the unmatched char */
    s.dyn_ltree[lc*2]/*.Freq*/++;
  } else {
    s.matches++;
    /* Here, lc is the match length - MIN_MATCH */
    dist--;             /* dist = match distance - 1 */
    //Assert((ush)dist < (ush)MAX_DIST(s) &&
    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&
    //       (ush)d_code(dist) < (ush)D_CODES,  "_tr_tally: bad match");

    s.dyn_ltree[(_length_code[lc]+LITERALS+1) * 2]/*.Freq*/++;
    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;
  }

// (!) This block is disabled in zlib defailts,
// don't enable it for binary compatibility

//#ifdef TRUNCATE_BLOCK
//  /* Try to guess if it is profitable to stop the current block here */
//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {
//    /* Compute an upper bound for the compressed length */
//    out_length = s.last_lit*8;
//    in_length = s.strstart - s.block_start;
//
//    for (dcode = 0; dcode < D_CODES; dcode++) {
//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);
//    }
//    out_length >>>= 3;
//    //Tracev((stderr,"\nlast_lit %u, in %ld, out ~%ld(%ld%%) ",
//    //       s->last_lit, in_length, out_length,
//    //       100L - out_length*100L/in_length));
//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {
//      return true;
//    }
//  }
//#endif

  return (s.last_lit === s.lit_bufsize-1);
  /* We avoid equality with lit_bufsize because of wraparound at 64K
   * on 16 bit machines and because stored blocks are restricted to
   * 64K-1 bytes.
   */
}

exports._tr_init  = _tr_init;
exports._tr_stored_block = _tr_stored_block;
exports._tr_flush_block  = _tr_flush_block;
exports._tr_tally = _tr_tally;
exports._tr_align = _tr_align;

},{"../utils/common":138}],150:[function(require,module,exports){
'use strict';


function ZStream() {
  /* next input byte */
  this.input = null; // JS specific, because we have no pointers
  this.next_in = 0;
  /* number of bytes available at input */
  this.avail_in = 0;
  /* total number of input bytes read so far */
  this.total_in = 0;
  /* next output byte should be put there */
  this.output = null; // JS specific, because we have no pointers
  this.next_out = 0;
  /* remaining free space at output */
  this.avail_out = 0;
  /* total number of bytes output so far */
  this.total_out = 0;
  /* last error message, NULL if no error */
  this.msg = ''/*Z_NULL*/;
  /* not visible by applications */
  this.state = null;
  /* best guess about the data type: binary or text */
  this.data_type = 2/*Z_UNKNOWN*/;
  /* adler32 value of the uncompressed data */
  this.adler = 0;
}

module.exports = ZStream;

},{}],151:[function(require,module,exports){
module.exports={"2.16.840.1.101.3.4.1.1": "aes-128-ecb",
"2.16.840.1.101.3.4.1.2": "aes-128-cbc",
"2.16.840.1.101.3.4.1.3": "aes-128-ofb",
"2.16.840.1.101.3.4.1.4": "aes-128-cfb",
"2.16.840.1.101.3.4.1.21": "aes-192-ecb",
"2.16.840.1.101.3.4.1.22": "aes-192-cbc",
"2.16.840.1.101.3.4.1.23": "aes-192-ofb",
"2.16.840.1.101.3.4.1.24": "aes-192-cfb",
"2.16.840.1.101.3.4.1.41": "aes-256-ecb",
"2.16.840.1.101.3.4.1.42": "aes-256-cbc",
"2.16.840.1.101.3.4.1.43": "aes-256-ofb",
"2.16.840.1.101.3.4.1.44": "aes-256-cfb"
}
},{}],152:[function(require,module,exports){
// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js
// Fedor, you are amazing.

var asn1 = require('asn1.js')

var RSAPrivateKey = asn1.define('RSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('modulus').int(),
    this.key('publicExponent').int(),
    this.key('privateExponent').int(),
    this.key('prime1').int(),
    this.key('prime2').int(),
    this.key('exponent1').int(),
    this.key('exponent2').int(),
    this.key('coefficient').int()
  )
})
exports.RSAPrivateKey = RSAPrivateKey

var RSAPublicKey = asn1.define('RSAPublicKey', function () {
  this.seq().obj(
    this.key('modulus').int(),
    this.key('publicExponent').int()
  )
})
exports.RSAPublicKey = RSAPublicKey

var PublicKey = asn1.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})
exports.PublicKey = PublicKey

var AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('none').null_().optional(),
    this.key('curve').objid().optional(),
    this.key('params').seq().obj(
      this.key('p').int(),
      this.key('q').int(),
      this.key('g').int()
    ).optional()
  )
})

var PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPrivateKey').octstr()
  )
})
exports.PrivateKey = PrivateKeyInfo
var EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').seq().obj(
      this.key('id').objid(),
      this.key('decrypt').seq().obj(
        this.key('kde').seq().obj(
          this.key('id').objid(),
          this.key('kdeparams').seq().obj(
            this.key('salt').octstr(),
            this.key('iters').int()
          )
        ),
        this.key('cipher').seq().obj(
          this.key('algo').objid(),
          this.key('iv').octstr()
        )
      )
    ),
    this.key('subjectPrivateKey').octstr()
  )
})

exports.EncryptedPrivateKey = EncryptedPrivateKeyInfo

var DSAPrivateKey = asn1.define('DSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('p').int(),
    this.key('q').int(),
    this.key('g').int(),
    this.key('pub_key').int(),
    this.key('priv_key').int()
  )
})
exports.DSAPrivateKey = DSAPrivateKey

exports.DSAparam = asn1.define('DSAparam', function () {
  this.int()
})
var ECPrivateKey = asn1.define('ECPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('privateKey').octstr(),
    this.key('parameters').optional().explicit(0).use(ECParameters),
    this.key('publicKey').optional().explicit(1).bitstr()
  )
})
exports.ECPrivateKey = ECPrivateKey
var ECParameters = asn1.define('ECParameters', function () {
  this.choice({
    namedCurve: this.objid()
  })
})

exports.signature = asn1.define('signature', function () {
  this.seq().obj(
    this.key('r').int(),
    this.key('s').int()
  )
})

},{"asn1.js":1}],153:[function(require,module,exports){
(function (Buffer){
// adapted from https://github.com/apatil/pemstrip
var findProc = /Proc-Type: 4,ENCRYPTED\r?\nDEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)\r?\n\r?\n([0-9A-z\n\r\+\/\=]+)\r?\n/m
var startRegex = /^-----BEGIN (.*) KEY-----\r?\n/m
var fullRegex = /^-----BEGIN (.*) KEY-----\r?\n([0-9A-z\n\r\+\/\=]+)\r?\n-----END \1 KEY-----$/m
var evp = require('evp_bytestokey')
var ciphers = require('browserify-aes')
module.exports = function (okey, password) {
  var key = okey.toString()
  var match = key.match(findProc)
  var decrypted
  if (!match) {
    var match2 = key.match(fullRegex)
    decrypted = new Buffer(match2[2].replace(/\r?\n/g, ''), 'base64')
  } else {
    var suite = 'aes' + match[1]
    var iv = new Buffer(match[2], 'hex')
    var cipherText = new Buffer(match[3].replace(/\r?\n/g, ''), 'base64')
    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key
    var out = []
    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)
    out.push(cipher.update(cipherText))
    out.push(cipher.final())
    decrypted = Buffer.concat(out)
  }
  var tag = key.match(startRegex)[1] + ' KEY'
  return {
    tag: tag,
    data: decrypted
  }
}

}).call(this,require("buffer").Buffer)
},{"browserify-aes":21,"buffer":45,"evp_bytestokey":86}],154:[function(require,module,exports){
(function (Buffer){
var asn1 = require('./asn1')
var aesid = require('./aesid.json')
var fixProc = require('./fixProc')
var ciphers = require('browserify-aes')
var compat = require('pbkdf2')
module.exports = parseKeys

function parseKeys (buffer) {
  var password
  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {
    password = buffer.passphrase
    buffer = buffer.key
  }
  if (typeof buffer === 'string') {
    buffer = new Buffer(buffer)
  }

  var stripped = fixProc(buffer, password)

  var type = stripped.tag
  var data = stripped.data
  var subtype, ndata
  switch (type) {
    case 'PUBLIC KEY':
      ndata = asn1.PublicKey.decode(data, 'der')
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')
        case '1.2.840.10045.2.1':
          ndata.subjectPrivateKey = ndata.subjectPublicKey
          return {
            type: 'ec',
            data: ndata
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')
          return {
            type: 'dsa',
            data: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      throw new Error('unknown key type ' + type)
    case 'ENCRYPTED PRIVATE KEY':
      data = asn1.EncryptedPrivateKey.decode(data, 'der')
      data = decrypt(data, password)
      // falls through
    case 'PRIVATE KEY':
      ndata = asn1.PrivateKey.decode(data, 'der')
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')
        case '1.2.840.10045.2.1':
          return {
            curve: ndata.algorithm.curve,
            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')
          return {
            type: 'dsa',
            params: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      throw new Error('unknown key type ' + type)
    case 'RSA PUBLIC KEY':
      return asn1.RSAPublicKey.decode(data, 'der')
    case 'RSA PRIVATE KEY':
      return asn1.RSAPrivateKey.decode(data, 'der')
    case 'DSA PRIVATE KEY':
      return {
        type: 'dsa',
        params: asn1.DSAPrivateKey.decode(data, 'der')
      }
    case 'EC PRIVATE KEY':
      data = asn1.ECPrivateKey.decode(data, 'der')
      return {
        curve: data.parameters.value,
        privateKey: data.privateKey
      }
    default: throw new Error('unknown key type ' + type)
  }
}
parseKeys.signature = asn1.signature
function decrypt (data, password) {
  var salt = data.algorithm.decrypt.kde.kdeparams.salt
  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)
  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]
  var iv = data.algorithm.decrypt.cipher.iv
  var cipherText = data.subjectPrivateKey
  var keylen = parseInt(algo.split('-')[1], 10) / 8
  var key = compat.pbkdf2Sync(password, salt, iters, keylen)
  var cipher = ciphers.createDecipheriv(algo, key, iv)
  var out = []
  out.push(cipher.update(cipherText))
  out.push(cipher.final())
  return Buffer.concat(out)
}

}).call(this,require("buffer").Buffer)
},{"./aesid.json":151,"./asn1":152,"./fixProc":153,"browserify-aes":21,"buffer":45,"pbkdf2":156}],155:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var splitPath = function(filename) {
  return splitPathRe.exec(filename).slice(1);
};

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function(path) {
  var result = splitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


exports.basename = function(path, ext) {
  var f = splitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


exports.extname = function(path) {
  return splitPath(path)[3];
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

}).call(this,require('_process'))
},{"_process":158}],156:[function(require,module,exports){
(function (Buffer){
var createHmac = require('create-hmac')
var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs

exports.pbkdf2 = pbkdf2
function pbkdf2 (password, salt, iterations, keylen, digest, callback) {
  if (typeof digest === 'function') {
    callback = digest
    digest = undefined
  }

  if (typeof callback !== 'function') {
    throw new Error('No callback provided to pbkdf2')
  }

  var result = pbkdf2Sync(password, salt, iterations, keylen, digest)
  setTimeout(function () {
    callback(undefined, result)
  })
}

exports.pbkdf2Sync = pbkdf2Sync
function pbkdf2Sync (password, salt, iterations, keylen, digest) {
  if (typeof iterations !== 'number') {
    throw new TypeError('Iterations not a number')
  }

  if (iterations < 0) {
    throw new TypeError('Bad iterations')
  }

  if (typeof keylen !== 'number') {
    throw new TypeError('Key length not a number')
  }

  if (keylen < 0 || keylen > MAX_ALLOC) {
    throw new TypeError('Bad key length')
  }

  digest = digest || 'sha1'

  if (!Buffer.isBuffer(password)) password = new Buffer(password, 'binary')
  if (!Buffer.isBuffer(salt)) salt = new Buffer(salt, 'binary')

  var hLen
  var l = 1
  var DK = new Buffer(keylen)
  var block1 = new Buffer(salt.length + 4)
  salt.copy(block1, 0, 0, salt.length)

  var r
  var T

  for (var i = 1; i <= l; i++) {
    block1.writeUInt32BE(i, salt.length)
    var U = createHmac(digest, password).update(block1).digest()

    if (!hLen) {
      hLen = U.length
      T = new Buffer(hLen)
      l = Math.ceil(keylen / hLen)
      r = keylen - (l - 1) * hLen
    }

    U.copy(T, 0, 0, hLen)

    for (var j = 1; j < iterations; j++) {
      U = createHmac(digest, password).update(U).digest()

      for (var k = 0; k < hLen; k++) {
        T[k] ^= U[k]
      }
    }

    var destPos = (i - 1) * hLen
    var len = (i === l ? r : hLen)
    T.copy(DK, destPos, 0, len)
  }

  return DK
}

}).call(this,require("buffer").Buffer)
},{"buffer":45,"create-hmac":55}],157:[function(require,module,exports){
(function (process){
'use strict';

if (!process.version ||
    process.version.indexOf('v0.') === 0 ||
    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
  module.exports = nextTick;
} else {
  module.exports = process.nextTick;
}

function nextTick(fn) {
  var args = new Array(arguments.length - 1);
  var i = 0;
  while (i < args.length) {
    args[i++] = arguments[i];
  }
  process.nextTick(function afterTick() {
    fn.apply(null, args);
  });
}

}).call(this,require('_process'))
},{"_process":158}],158:[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = setTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    clearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        setTimeout(drainQueue, 0);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],159:[function(require,module,exports){
exports.publicEncrypt = require('./publicEncrypt');
exports.privateDecrypt = require('./privateDecrypt');

exports.privateEncrypt = function privateEncrypt(key, buf) {
  return exports.publicEncrypt(key, buf, true);
};

exports.publicDecrypt = function publicDecrypt(key, buf) {
  return exports.privateDecrypt(key, buf, true);
};
},{"./privateDecrypt":161,"./publicEncrypt":162}],160:[function(require,module,exports){
(function (Buffer){
var createHash = require('create-hash');
module.exports = function (seed, len) {
  var t = new Buffer('');
  var  i = 0, c;
  while (t.length < len) {
    c = i2ops(i++);
    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()]);
  }
  return t.slice(0, len);
};

function i2ops(c) {
  var out = new Buffer(4);
  out.writeUInt32BE(c,0);
  return out;
}
}).call(this,require("buffer").Buffer)
},{"buffer":45,"create-hash":52}],161:[function(require,module,exports){
(function (Buffer){
var parseKeys = require('parse-asn1');
var mgf = require('./mgf');
var xor = require('./xor');
var bn = require('bn.js');
var crt = require('browserify-rsa');
var createHash = require('create-hash');
var withPublic = require('./withPublic');
module.exports = function privateDecrypt(private_key, enc, reverse) {
  var padding;
  if (private_key.padding) {
    padding = private_key.padding;
  } else if (reverse) {
    padding = 1;
  } else {
    padding = 4;
  }
  
  var key = parseKeys(private_key);
  var k = key.modulus.byteLength();
  if (enc.length > k || new bn(enc).cmp(key.modulus) >= 0) {
    throw new Error('decryption error');
  }
  var msg;
  if (reverse) {
    msg = withPublic(new bn(enc), key);
  } else {
    msg = crt(enc, key);
  }
  var zBuffer = new Buffer(k - msg.length);
  zBuffer.fill(0);
  msg = Buffer.concat([zBuffer, msg], k);
  if (padding === 4) {
    return oaep(key, msg);
  } else if (padding === 1) {
    return pkcs1(key, msg, reverse);
  } else if (padding === 3) {
    return msg;
  } else {
    throw new Error('unknown padding');
  }
};

function oaep(key, msg){
  var n = key.modulus;
  var k = key.modulus.byteLength();
  var mLen = msg.length;
  var iHash = createHash('sha1').update(new Buffer('')).digest();
  var hLen = iHash.length;
  var hLen2 = 2 * hLen;
  if (msg[0] !== 0) {
    throw new Error('decryption error');
  }
  var maskedSeed = msg.slice(1, hLen + 1);
  var maskedDb =  msg.slice(hLen + 1);
  var seed = xor(maskedSeed, mgf(maskedDb, hLen));
  var db = xor(maskedDb, mgf(seed, k - hLen - 1));
  if (compare(iHash, db.slice(0, hLen))) {
    throw new Error('decryption error');
  }
  var i = hLen;
  while (db[i] === 0) {
    i++;
  }
  if (db[i++] !== 1) {
    throw new Error('decryption error');
  }
  return db.slice(i);
}

function pkcs1(key, msg, reverse){
  var p1 = msg.slice(0, 2);
  var i = 2;
  var status = 0;
  while (msg[i++] !== 0) {
    if (i >= msg.length) {
      status++;
      break;
    }
  }
  var ps = msg.slice(2, i - 1);
  var p2 = msg.slice(i - 1, i);

  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)){
    status++;
  }
  if (ps.length < 8) {
    status++;
  }
  if (status) {
    throw new Error('decryption error');
  }
  return  msg.slice(i);
}
function compare(a, b){
  a = new Buffer(a);
  b = new Buffer(b);
  var dif = 0;
  var len = a.length;
  if (a.length !== b.length) {
    dif++;
    len = Math.min(a.length, b.length);
  }
  var i = -1;
  while (++i < len) {
    dif += (a[i] ^ b[i]);
  }
  return dif;
}
}).call(this,require("buffer").Buffer)
},{"./mgf":160,"./withPublic":163,"./xor":164,"bn.js":16,"browserify-rsa":37,"buffer":45,"create-hash":52,"parse-asn1":154}],162:[function(require,module,exports){
(function (Buffer){
var parseKeys = require('parse-asn1');
var randomBytes = require('randombytes');
var createHash = require('create-hash');
var mgf = require('./mgf');
var xor = require('./xor');
var bn = require('bn.js');
var withPublic = require('./withPublic');
var crt = require('browserify-rsa');

var constants = {
  RSA_PKCS1_OAEP_PADDING: 4,
  RSA_PKCS1_PADDIN: 1,
  RSA_NO_PADDING: 3
};

module.exports = function publicEncrypt(public_key, msg, reverse) {
  var padding;
  if (public_key.padding) {
    padding = public_key.padding;
  } else if (reverse) {
    padding = 1;
  } else {
    padding = 4;
  }
  var key = parseKeys(public_key);
  var paddedMsg;
  if (padding === 4) {
    paddedMsg = oaep(key, msg);
  } else if (padding === 1) {
    paddedMsg = pkcs1(key, msg, reverse);
  } else if (padding === 3) {
    paddedMsg = new bn(msg);
    if (paddedMsg.cmp(key.modulus) >= 0) {
      throw new Error('data too long for modulus');
    }
  } else {
    throw new Error('unknown padding');
  }
  if (reverse) {
    return crt(paddedMsg, key);
  } else {
    return withPublic(paddedMsg, key);
  }
};

function oaep(key, msg){
  var k = key.modulus.byteLength();
  var mLen = msg.length;
  var iHash = createHash('sha1').update(new Buffer('')).digest();
  var hLen = iHash.length;
  var hLen2 = 2 * hLen;
  if (mLen > k - hLen2 - 2) {
    throw new Error('message too long');
  }
  var ps = new Buffer(k - mLen - hLen2 - 2);
  ps.fill(0);
  var dblen = k - hLen - 1;
  var seed = randomBytes(hLen);
  var maskedDb = xor(Buffer.concat([iHash, ps, new Buffer([1]), msg], dblen), mgf(seed, dblen));
  var maskedSeed = xor(seed, mgf(maskedDb, hLen));
  return new bn(Buffer.concat([new Buffer([0]), maskedSeed, maskedDb], k));
}
function pkcs1(key, msg, reverse){
  var mLen = msg.length;
  var k = key.modulus.byteLength();
  if (mLen > k - 11) {
    throw new Error('message too long');
  }
  var ps;
  if (reverse) {
    ps = new Buffer(k - mLen - 3);
    ps.fill(0xff);
  } else {
    ps = nonZero(k - mLen - 3);
  }
  return new bn(Buffer.concat([new Buffer([0, reverse?1:2]), ps, new Buffer([0]), msg], k));
}
function nonZero(len, crypto) {
  var out = new Buffer(len);
  var i = 0;
  var cache = randomBytes(len*2);
  var cur = 0;
  var num;
  while (i < len) {
    if (cur === cache.length) {
      cache = randomBytes(len*2);
      cur = 0;
    }
    num = cache[cur++];
    if (num) {
      out[i++] = num;
    }
  }
  return out;
}
}).call(this,require("buffer").Buffer)
},{"./mgf":160,"./withPublic":163,"./xor":164,"bn.js":16,"browserify-rsa":37,"buffer":45,"create-hash":52,"parse-asn1":154,"randombytes":166}],163:[function(require,module,exports){
(function (Buffer){
var bn = require('bn.js');
function withPublic(paddedMsg, key) {
  return new Buffer(paddedMsg
    .toRed(bn.mont(key.modulus))
    .redPow(new bn(key.publicExponent))
    .fromRed()
    .toArray());
}

module.exports = withPublic;
}).call(this,require("buffer").Buffer)
},{"bn.js":16,"buffer":45}],164:[function(require,module,exports){
module.exports = function xor(a, b) {
  var len = a.length;
  var i = -1;
  while (++i < len) {
    a[i] ^= b[i];
  }
  return a
};
},{}],165:[function(require,module,exports){
(function (process){
// vim:ts=4:sts=4:sw=4:
/*!
 *
 * Copyright 2009-2012 Kris Kowal under the terms of the MIT
 * license found at http://github.com/kriskowal/q/raw/master/LICENSE
 *
 * With parts by Tyler Close
 * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found
 * at http://www.opensource.org/licenses/mit-license.html
 * Forked at ref_send.js version: 2009-05-11
 *
 * With parts by Mark Miller
 * Copyright (C) 2011 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

(function (definition) {
    "use strict";

    // This file will function properly as a <script> tag, or a module
    // using CommonJS and NodeJS or RequireJS module formats.  In
    // Common/Node/RequireJS, the module exports the Q API and when
    // executed as a simple <script>, it creates a Q global instead.

    // Montage Require
    if (typeof bootstrap === "function") {
        bootstrap("promise", definition);

    // CommonJS
    } else if (typeof exports === "object" && typeof module === "object") {
        module.exports = definition();

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
        define(definition);

    // SES (Secure EcmaScript)
    } else if (typeof ses !== "undefined") {
        if (!ses.ok()) {
            return;
        } else {
            ses.makeQ = definition;
        }

    // <script>
    } else if (typeof window !== "undefined" || typeof self !== "undefined") {
        // Prefer window over self for add-on scripts. Use self for
        // non-windowed contexts.
        var global = typeof window !== "undefined" ? window : self;

        // Get the `window` object, save the previous Q global
        // and initialize Q as a global.
        var previousQ = global.Q;
        global.Q = definition();

        // Add a noConflict function so Q can be removed from the
        // global namespace.
        global.Q.noConflict = function () {
            global.Q = previousQ;
            return this;
        };

    } else {
        throw new Error("This environment was not anticipated by Q. Please file a bug.");
    }

})(function () {
"use strict";

var hasStacks = false;
try {
    throw new Error();
} catch (e) {
    hasStacks = !!e.stack;
}

// All code after this point will be filtered from stack traces reported
// by Q.
var qStartingLine = captureLine();
var qFileName;

// shims

// used for fallback in "allResolved"
var noop = function () {};

// Use the fastest possible means to execute a task in a future turn
// of the event loop.
var nextTick =(function () {
    // linked list of tasks (single, with head node)
    var head = {task: void 0, next: null};
    var tail = head;
    var flushing = false;
    var requestTick = void 0;
    var isNodeJS = false;
    // queue for late tasks, used by unhandled rejection tracking
    var laterQueue = [];

    function flush() {
        /* jshint loopfunc: true */
        var task, domain;

        while (head.next) {
            head = head.next;
            task = head.task;
            head.task = void 0;
            domain = head.domain;

            if (domain) {
                head.domain = void 0;
                domain.enter();
            }
            runSingle(task, domain);

        }
        while (laterQueue.length) {
            task = laterQueue.pop();
            runSingle(task);
        }
        flushing = false;
    }
    // runs a single function in the async queue
    function runSingle(task, domain) {
        try {
            task();

        } catch (e) {
            if (isNodeJS) {
                // In node, uncaught exceptions are considered fatal errors.
                // Re-throw them synchronously to interrupt flushing!

                // Ensure continuation if the uncaught exception is suppressed
                // listening "uncaughtException" events (as domains does).
                // Continue in next event to avoid tick recursion.
                if (domain) {
                    domain.exit();
                }
                setTimeout(flush, 0);
                if (domain) {
                    domain.enter();
                }

                throw e;

            } else {
                // In browsers, uncaught exceptions are not fatal.
                // Re-throw them asynchronously to avoid slow-downs.
                setTimeout(function () {
                    throw e;
                }, 0);
            }
        }

        if (domain) {
            domain.exit();
        }
    }

    nextTick = function (task) {
        tail = tail.next = {
            task: task,
            domain: isNodeJS && process.domain,
            next: null
        };

        if (!flushing) {
            flushing = true;
            requestTick();
        }
    };

    if (typeof process === "object" &&
        process.toString() === "[object process]" && process.nextTick) {
        // Ensure Q is in a real Node environment, with a `process.nextTick`.
        // To see through fake Node environments:
        // * Mocha test runner - exposes a `process` global without a `nextTick`
        // * Browserify - exposes a `process.nexTick` function that uses
        //   `setTimeout`. In this case `setImmediate` is preferred because
        //    it is faster. Browserify's `process.toString()` yields
        //   "[object Object]", while in a real Node environment
        //   `process.nextTick()` yields "[object process]".
        isNodeJS = true;

        requestTick = function () {
            process.nextTick(flush);
        };

    } else if (typeof setImmediate === "function") {
        // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate
        if (typeof window !== "undefined") {
            requestTick = setImmediate.bind(window, flush);
        } else {
            requestTick = function () {
                setImmediate(flush);
            };
        }

    } else if (typeof MessageChannel !== "undefined") {
        // modern browsers
        // http://www.nonblocking.io/2011/06/windownexttick.html
        var channel = new MessageChannel();
        // At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create
        // working message ports the first time a page loads.
        channel.port1.onmessage = function () {
            requestTick = requestPortTick;
            channel.port1.onmessage = flush;
            flush();
        };
        var requestPortTick = function () {
            // Opera requires us to provide a message payload, regardless of
            // whether we use it.
            channel.port2.postMessage(0);
        };
        requestTick = function () {
            setTimeout(flush, 0);
            requestPortTick();
        };

    } else {
        // old browsers
        requestTick = function () {
            setTimeout(flush, 0);
        };
    }
    // runs a task after all other tasks have been run
    // this is useful for unhandled rejection tracking that needs to happen
    // after all `then`d tasks have been run.
    nextTick.runAfter = function (task) {
        laterQueue.push(task);
        if (!flushing) {
            flushing = true;
            requestTick();
        }
    };
    return nextTick;
})();

// Attempt to make generics safe in the face of downstream
// modifications.
// There is no situation where this is necessary.
// If you need a security guarantee, these primordials need to be
// deeply frozen anyway, and if you don’t need a security guarantee,
// this is just plain paranoid.
// However, this **might** have the nice side-effect of reducing the size of
// the minified code by reducing x.call() to merely x()
// See Mark Miller’s explanation of what this does.
// http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming
var call = Function.call;
function uncurryThis(f) {
    return function () {
        return call.apply(f, arguments);
    };
}
// This is equivalent, but slower:
// uncurryThis = Function_bind.bind(Function_bind.call);
// http://jsperf.com/uncurrythis

var array_slice = uncurryThis(Array.prototype.slice);

var array_reduce = uncurryThis(
    Array.prototype.reduce || function (callback, basis) {
        var index = 0,
            length = this.length;
        // concerning the initial value, if one is not provided
        if (arguments.length === 1) {
            // seek to the first value in the array, accounting
            // for the possibility that is is a sparse array
            do {
                if (index in this) {
                    basis = this[index++];
                    break;
                }
                if (++index >= length) {
                    throw new TypeError();
                }
            } while (1);
        }
        // reduce
        for (; index < length; index++) {
            // account for the possibility that the array is sparse
            if (index in this) {
                basis = callback(basis, this[index], index);
            }
        }
        return basis;
    }
);

var array_indexOf = uncurryThis(
    Array.prototype.indexOf || function (value) {
        // not a very good shim, but good enough for our one use of it
        for (var i = 0; i < this.length; i++) {
            if (this[i] === value) {
                return i;
            }
        }
        return -1;
    }
);

var array_map = uncurryThis(
    Array.prototype.map || function (callback, thisp) {
        var self = this;
        var collect = [];
        array_reduce(self, function (undefined, value, index) {
            collect.push(callback.call(thisp, value, index, self));
        }, void 0);
        return collect;
    }
);

var object_create = Object.create || function (prototype) {
    function Type() { }
    Type.prototype = prototype;
    return new Type();
};

var object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);

var object_keys = Object.keys || function (object) {
    var keys = [];
    for (var key in object) {
        if (object_hasOwnProperty(object, key)) {
            keys.push(key);
        }
    }
    return keys;
};

var object_toString = uncurryThis(Object.prototype.toString);

function isObject(value) {
    return value === Object(value);
}

// generator related shims

// FIXME: Remove this function once ES6 generators are in SpiderMonkey.
function isStopIteration(exception) {
    return (
        object_toString(exception) === "[object StopIteration]" ||
        exception instanceof QReturnValue
    );
}

// FIXME: Remove this helper and Q.return once ES6 generators are in
// SpiderMonkey.
var QReturnValue;
if (typeof ReturnValue !== "undefined") {
    QReturnValue = ReturnValue;
} else {
    QReturnValue = function (value) {
        this.value = value;
    };
}

// long stack traces

var STACK_JUMP_SEPARATOR = "From previous event:";

function makeStackTraceLong(error, promise) {
    // If possible, transform the error stack trace by removing Node and Q
    // cruft, then concatenating with the stack trace of `promise`. See #57.
    if (hasStacks &&
        promise.stack &&
        typeof error === "object" &&
        error !== null &&
        error.stack &&
        error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1
    ) {
        var stacks = [];
        for (var p = promise; !!p; p = p.source) {
            if (p.stack) {
                stacks.unshift(p.stack);
            }
        }
        stacks.unshift(error.stack);

        var concatedStacks = stacks.join("\n" + STACK_JUMP_SEPARATOR + "\n");
        error.stack = filterStackString(concatedStacks);
    }
}

function filterStackString(stackString) {
    var lines = stackString.split("\n");
    var desiredLines = [];
    for (var i = 0; i < lines.length; ++i) {
        var line = lines[i];

        if (!isInternalFrame(line) && !isNodeFrame(line) && line) {
            desiredLines.push(line);
        }
    }
    return desiredLines.join("\n");
}

function isNodeFrame(stackLine) {
    return stackLine.indexOf("(module.js:") !== -1 ||
           stackLine.indexOf("(node.js:") !== -1;
}

function getFileNameAndLineNumber(stackLine) {
    // Named functions: "at functionName (filename:lineNumber:columnNumber)"
    // In IE10 function name can have spaces ("Anonymous function") O_o
    var attempt1 = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(stackLine);
    if (attempt1) {
        return [attempt1[1], Number(attempt1[2])];
    }

    // Anonymous functions: "at filename:lineNumber:columnNumber"
    var attempt2 = /at ([^ ]+):(\d+):(?:\d+)$/.exec(stackLine);
    if (attempt2) {
        return [attempt2[1], Number(attempt2[2])];
    }

    // Firefox style: "function@filename:lineNumber or @filename:lineNumber"
    var attempt3 = /.*@(.+):(\d+)$/.exec(stackLine);
    if (attempt3) {
        return [attempt3[1], Number(attempt3[2])];
    }
}

function isInternalFrame(stackLine) {
    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);

    if (!fileNameAndLineNumber) {
        return false;
    }

    var fileName = fileNameAndLineNumber[0];
    var lineNumber = fileNameAndLineNumber[1];

    return fileName === qFileName &&
        lineNumber >= qStartingLine &&
        lineNumber <= qEndingLine;
}

// discover own file name and line number range for filtering stack
// traces
function captureLine() {
    if (!hasStacks) {
        return;
    }

    try {
        throw new Error();
    } catch (e) {
        var lines = e.stack.split("\n");
        var firstLine = lines[0].indexOf("@") > 0 ? lines[1] : lines[2];
        var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);
        if (!fileNameAndLineNumber) {
            return;
        }

        qFileName = fileNameAndLineNumber[0];
        return fileNameAndLineNumber[1];
    }
}

function deprecate(callback, name, alternative) {
    return function () {
        if (typeof console !== "undefined" &&
            typeof console.warn === "function") {
            console.warn(name + " is deprecated, use " + alternative +
                         " instead.", new Error("").stack);
        }
        return callback.apply(callback, arguments);
    };
}

// end of shims
// beginning of real work

/**
 * Constructs a promise for an immediate reference, passes promises through, or
 * coerces promises from different systems.
 * @param value immediate reference or promise
 */
function Q(value) {
    // If the object is already a Promise, return it directly.  This enables
    // the resolve function to both be used to created references from objects,
    // but to tolerably coerce non-promises to promises.
    if (value instanceof Promise) {
        return value;
    }

    // assimilate thenables
    if (isPromiseAlike(value)) {
        return coerce(value);
    } else {
        return fulfill(value);
    }
}
Q.resolve = Q;

/**
 * Performs a task in a future turn of the event loop.
 * @param {Function} task
 */
Q.nextTick = nextTick;

/**
 * Controls whether or not long stack traces will be on
 */
Q.longStackSupport = false;

// enable long stacks if Q_DEBUG is set
if (typeof process === "object" && process && process.env && process.env.Q_DEBUG) {
    Q.longStackSupport = true;
}

/**
 * Constructs a {promise, resolve, reject} object.
 *
 * `resolve` is a callback to invoke with a more resolved value for the
 * promise. To fulfill the promise, invoke `resolve` with any value that is
 * not a thenable. To reject the promise, invoke `resolve` with a rejected
 * thenable, or invoke `reject` with the reason directly. To resolve the
 * promise to another thenable, thus putting it in the same state, invoke
 * `resolve` with that other thenable.
 */
Q.defer = defer;
function defer() {
    // if "messages" is an "Array", that indicates that the promise has not yet
    // been resolved.  If it is "undefined", it has been resolved.  Each
    // element of the messages array is itself an array of complete arguments to
    // forward to the resolved promise.  We coerce the resolution value to a
    // promise using the `resolve` function because it handles both fully
    // non-thenable values and other thenables gracefully.
    var messages = [], progressListeners = [], resolvedPromise;

    var deferred = object_create(defer.prototype);
    var promise = object_create(Promise.prototype);

    promise.promiseDispatch = function (resolve, op, operands) {
        var args = array_slice(arguments);
        if (messages) {
            messages.push(args);
            if (op === "when" && operands[1]) { // progress operand
                progressListeners.push(operands[1]);
            }
        } else {
            Q.nextTick(function () {
                resolvedPromise.promiseDispatch.apply(resolvedPromise, args);
            });
        }
    };

    // XXX deprecated
    promise.valueOf = function () {
        if (messages) {
            return promise;
        }
        var nearerValue = nearer(resolvedPromise);
        if (isPromise(nearerValue)) {
            resolvedPromise = nearerValue; // shorten chain
        }
        return nearerValue;
    };

    promise.inspect = function () {
        if (!resolvedPromise) {
            return { state: "pending" };
        }
        return resolvedPromise.inspect();
    };

    if (Q.longStackSupport && hasStacks) {
        try {
            throw new Error();
        } catch (e) {
            // NOTE: don't try to use `Error.captureStackTrace` or transfer the
            // accessor around; that causes memory leaks as per GH-111. Just
            // reify the stack trace as a string ASAP.
            //
            // At the same time, cut off the first line; it's always just
            // "[object Promise]\n", as per the `toString`.
            promise.stack = e.stack.substring(e.stack.indexOf("\n") + 1);
        }
    }

    // NOTE: we do the checks for `resolvedPromise` in each method, instead of
    // consolidating them into `become`, since otherwise we'd create new
    // promises with the lines `become(whatever(value))`. See e.g. GH-252.

    function become(newPromise) {
        resolvedPromise = newPromise;
        promise.source = newPromise;

        array_reduce(messages, function (undefined, message) {
            Q.nextTick(function () {
                newPromise.promiseDispatch.apply(newPromise, message);
            });
        }, void 0);

        messages = void 0;
        progressListeners = void 0;
    }

    deferred.promise = promise;
    deferred.resolve = function (value) {
        if (resolvedPromise) {
            return;
        }

        become(Q(value));
    };

    deferred.fulfill = function (value) {
        if (resolvedPromise) {
            return;
        }

        become(fulfill(value));
    };
    deferred.reject = function (reason) {
        if (resolvedPromise) {
            return;
        }

        become(reject(reason));
    };
    deferred.notify = function (progress) {
        if (resolvedPromise) {
            return;
        }

        array_reduce(progressListeners, function (undefined, progressListener) {
            Q.nextTick(function () {
                progressListener(progress);
            });
        }, void 0);
    };

    return deferred;
}

/**
 * Creates a Node-style callback that will resolve or reject the deferred
 * promise.
 * @returns a nodeback
 */
defer.prototype.makeNodeResolver = function () {
    var self = this;
    return function (error, value) {
        if (error) {
            self.reject(error);
        } else if (arguments.length > 2) {
            self.resolve(array_slice(arguments, 1));
        } else {
            self.resolve(value);
        }
    };
};

/**
 * @param resolver {Function} a function that returns nothing and accepts
 * the resolve, reject, and notify functions for a deferred.
 * @returns a promise that may be resolved with the given resolve and reject
 * functions, or rejected by a thrown exception in resolver
 */
Q.Promise = promise; // ES6
Q.promise = promise;
function promise(resolver) {
    if (typeof resolver !== "function") {
        throw new TypeError("resolver must be a function.");
    }
    var deferred = defer();
    try {
        resolver(deferred.resolve, deferred.reject, deferred.notify);
    } catch (reason) {
        deferred.reject(reason);
    }
    return deferred.promise;
}

promise.race = race; // ES6
promise.all = all; // ES6
promise.reject = reject; // ES6
promise.resolve = Q; // ES6

// XXX experimental.  This method is a way to denote that a local value is
// serializable and should be immediately dispatched to a remote upon request,
// instead of passing a reference.
Q.passByCopy = function (object) {
    //freeze(object);
    //passByCopies.set(object, true);
    return object;
};

Promise.prototype.passByCopy = function () {
    //freeze(object);
    //passByCopies.set(object, true);
    return this;
};

/**
 * If two promises eventually fulfill to the same value, promises that value,
 * but otherwise rejects.
 * @param x {Any*}
 * @param y {Any*}
 * @returns {Any*} a promise for x and y if they are the same, but a rejection
 * otherwise.
 *
 */
Q.join = function (x, y) {
    return Q(x).join(y);
};

Promise.prototype.join = function (that) {
    return Q([this, that]).spread(function (x, y) {
        if (x === y) {
            // TODO: "===" should be Object.is or equiv
            return x;
        } else {
            throw new Error("Can't join: not the same: " + x + " " + y);
        }
    });
};

/**
 * Returns a promise for the first of an array of promises to become settled.
 * @param answers {Array[Any*]} promises to race
 * @returns {Any*} the first promise to be settled
 */
Q.race = race;
function race(answerPs) {
    return promise(function (resolve, reject) {
        // Switch to this once we can assume at least ES5
        // answerPs.forEach(function (answerP) {
        //     Q(answerP).then(resolve, reject);
        // });
        // Use this in the meantime
        for (var i = 0, len = answerPs.length; i < len; i++) {
            Q(answerPs[i]).then(resolve, reject);
        }
    });
}

Promise.prototype.race = function () {
    return this.then(Q.race);
};

/**
 * Constructs a Promise with a promise descriptor object and optional fallback
 * function.  The descriptor contains methods like when(rejected), get(name),
 * set(name, value), post(name, args), and delete(name), which all
 * return either a value, a promise for a value, or a rejection.  The fallback
 * accepts the operation name, a resolver, and any further arguments that would
 * have been forwarded to the appropriate method above had a method been
 * provided with the proper name.  The API makes no guarantees about the nature
 * of the returned object, apart from that it is usable whereever promises are
 * bought and sold.
 */
Q.makePromise = Promise;
function Promise(descriptor, fallback, inspect) {
    if (fallback === void 0) {
        fallback = function (op) {
            return reject(new Error(
                "Promise does not support operation: " + op
            ));
        };
    }
    if (inspect === void 0) {
        inspect = function () {
            return {state: "unknown"};
        };
    }

    var promise = object_create(Promise.prototype);

    promise.promiseDispatch = function (resolve, op, args) {
        var result;
        try {
            if (descriptor[op]) {
                result = descriptor[op].apply(promise, args);
            } else {
                result = fallback.call(promise, op, args);
            }
        } catch (exception) {
            result = reject(exception);
        }
        if (resolve) {
            resolve(result);
        }
    };

    promise.inspect = inspect;

    // XXX deprecated `valueOf` and `exception` support
    if (inspect) {
        var inspected = inspect();
        if (inspected.state === "rejected") {
            promise.exception = inspected.reason;
        }

        promise.valueOf = function () {
            var inspected = inspect();
            if (inspected.state === "pending" ||
                inspected.state === "rejected") {
                return promise;
            }
            return inspected.value;
        };
    }

    return promise;
}

Promise.prototype.toString = function () {
    return "[object Promise]";
};

Promise.prototype.then = function (fulfilled, rejected, progressed) {
    var self = this;
    var deferred = defer();
    var done = false;   // ensure the untrusted promise makes at most a
                        // single call to one of the callbacks

    function _fulfilled(value) {
        try {
            return typeof fulfilled === "function" ? fulfilled(value) : value;
        } catch (exception) {
            return reject(exception);
        }
    }

    function _rejected(exception) {
        if (typeof rejected === "function") {
            makeStackTraceLong(exception, self);
            try {
                return rejected(exception);
            } catch (newException) {
                return reject(newException);
            }
        }
        return reject(exception);
    }

    function _progressed(value) {
        return typeof progressed === "function" ? progressed(value) : value;
    }

    Q.nextTick(function () {
        self.promiseDispatch(function (value) {
            if (done) {
                return;
            }
            done = true;

            deferred.resolve(_fulfilled(value));
        }, "when", [function (exception) {
            if (done) {
                return;
            }
            done = true;

            deferred.resolve(_rejected(exception));
        }]);
    });

    // Progress propagator need to be attached in the current tick.
    self.promiseDispatch(void 0, "when", [void 0, function (value) {
        var newValue;
        var threw = false;
        try {
            newValue = _progressed(value);
        } catch (e) {
            threw = true;
            if (Q.onerror) {
                Q.onerror(e);
            } else {
                throw e;
            }
        }

        if (!threw) {
            deferred.notify(newValue);
        }
    }]);

    return deferred.promise;
};

Q.tap = function (promise, callback) {
    return Q(promise).tap(callback);
};

/**
 * Works almost like "finally", but not called for rejections.
 * Original resolution value is passed through callback unaffected.
 * Callback may return a promise that will be awaited for.
 * @param {Function} callback
 * @returns {Q.Promise}
 * @example
 * doSomething()
 *   .then(...)
 *   .tap(console.log)
 *   .then(...);
 */
Promise.prototype.tap = function (callback) {
    callback = Q(callback);

    return this.then(function (value) {
        return callback.fcall(value).thenResolve(value);
    });
};

/**
 * Registers an observer on a promise.
 *
 * Guarantees:
 *
 * 1. that fulfilled and rejected will be called only once.
 * 2. that either the fulfilled callback or the rejected callback will be
 *    called, but not both.
 * 3. that fulfilled and rejected will not be called in this turn.
 *
 * @param value      promise or immediate reference to observe
 * @param fulfilled  function to be called with the fulfilled value
 * @param rejected   function to be called with the rejection exception
 * @param progressed function to be called on any progress notifications
 * @return promise for the return value from the invoked callback
 */
Q.when = when;
function when(value, fulfilled, rejected, progressed) {
    return Q(value).then(fulfilled, rejected, progressed);
}

Promise.prototype.thenResolve = function (value) {
    return this.then(function () { return value; });
};

Q.thenResolve = function (promise, value) {
    return Q(promise).thenResolve(value);
};

Promise.prototype.thenReject = function (reason) {
    return this.then(function () { throw reason; });
};

Q.thenReject = function (promise, reason) {
    return Q(promise).thenReject(reason);
};

/**
 * If an object is not a promise, it is as "near" as possible.
 * If a promise is rejected, it is as "near" as possible too.
 * If it’s a fulfilled promise, the fulfillment value is nearer.
 * If it’s a deferred promise and the deferred has been resolved, the
 * resolution is "nearer".
 * @param object
 * @returns most resolved (nearest) form of the object
 */

// XXX should we re-do this?
Q.nearer = nearer;
function nearer(value) {
    if (isPromise(value)) {
        var inspected = value.inspect();
        if (inspected.state === "fulfilled") {
            return inspected.value;
        }
    }
    return value;
}

/**
 * @returns whether the given object is a promise.
 * Otherwise it is a fulfilled value.
 */
Q.isPromise = isPromise;
function isPromise(object) {
    return object instanceof Promise;
}

Q.isPromiseAlike = isPromiseAlike;
function isPromiseAlike(object) {
    return isObject(object) && typeof object.then === "function";
}

/**
 * @returns whether the given object is a pending promise, meaning not
 * fulfilled or rejected.
 */
Q.isPending = isPending;
function isPending(object) {
    return isPromise(object) && object.inspect().state === "pending";
}

Promise.prototype.isPending = function () {
    return this.inspect().state === "pending";
};

/**
 * @returns whether the given object is a value or fulfilled
 * promise.
 */
Q.isFulfilled = isFulfilled;
function isFulfilled(object) {
    return !isPromise(object) || object.inspect().state === "fulfilled";
}

Promise.prototype.isFulfilled = function () {
    return this.inspect().state === "fulfilled";
};

/**
 * @returns whether the given object is a rejected promise.
 */
Q.isRejected = isRejected;
function isRejected(object) {
    return isPromise(object) && object.inspect().state === "rejected";
}

Promise.prototype.isRejected = function () {
    return this.inspect().state === "rejected";
};

//// BEGIN UNHANDLED REJECTION TRACKING

// This promise library consumes exceptions thrown in handlers so they can be
// handled by a subsequent promise.  The exceptions get added to this array when
// they are created, and removed when they are handled.  Note that in ES6 or
// shimmed environments, this would naturally be a `Set`.
var unhandledReasons = [];
var unhandledRejections = [];
var reportedUnhandledRejections = [];
var trackUnhandledRejections = true;

function resetUnhandledRejections() {
    unhandledReasons.length = 0;
    unhandledRejections.length = 0;

    if (!trackUnhandledRejections) {
        trackUnhandledRejections = true;
    }
}

function trackRejection(promise, reason) {
    if (!trackUnhandledRejections) {
        return;
    }
    if (typeof process === "object" && typeof process.emit === "function") {
        Q.nextTick.runAfter(function () {
            if (array_indexOf(unhandledRejections, promise) !== -1) {
                process.emit("unhandledRejection", reason, promise);
                reportedUnhandledRejections.push(promise);
            }
        });
    }

    unhandledRejections.push(promise);
    if (reason && typeof reason.stack !== "undefined") {
        unhandledReasons.push(reason.stack);
    } else {
        unhandledReasons.push("(no stack) " + reason);
    }
}

function untrackRejection(promise) {
    if (!trackUnhandledRejections) {
        return;
    }

    var at = array_indexOf(unhandledRejections, promise);
    if (at !== -1) {
        if (typeof process === "object" && typeof process.emit === "function") {
            Q.nextTick.runAfter(function () {
                var atReport = array_indexOf(reportedUnhandledRejections, promise);
                if (atReport !== -1) {
                    process.emit("rejectionHandled", unhandledReasons[at], promise);
                    reportedUnhandledRejections.splice(atReport, 1);
                }
            });
        }
        unhandledRejections.splice(at, 1);
        unhandledReasons.splice(at, 1);
    }
}

Q.resetUnhandledRejections = resetUnhandledRejections;

Q.getUnhandledReasons = function () {
    // Make a copy so that consumers can't interfere with our internal state.
    return unhandledReasons.slice();
};

Q.stopUnhandledRejectionTracking = function () {
    resetUnhandledRejections();
    trackUnhandledRejections = false;
};

resetUnhandledRejections();

//// END UNHANDLED REJECTION TRACKING

/**
 * Constructs a rejected promise.
 * @param reason value describing the failure
 */
Q.reject = reject;
function reject(reason) {
    var rejection = Promise({
        "when": function (rejected) {
            // note that the error has been handled
            if (rejected) {
                untrackRejection(this);
            }
            return rejected ? rejected(reason) : this;
        }
    }, function fallback() {
        return this;
    }, function inspect() {
        return { state: "rejected", reason: reason };
    });

    // Note that the reason has not been handled.
    trackRejection(rejection, reason);

    return rejection;
}

/**
 * Constructs a fulfilled promise for an immediate reference.
 * @param value immediate reference
 */
Q.fulfill = fulfill;
function fulfill(value) {
    return Promise({
        "when": function () {
            return value;
        },
        "get": function (name) {
            return value[name];
        },
        "set": function (name, rhs) {
            value[name] = rhs;
        },
        "delete": function (name) {
            delete value[name];
        },
        "post": function (name, args) {
            // Mark Miller proposes that post with no name should apply a
            // promised function.
            if (name === null || name === void 0) {
                return value.apply(void 0, args);
            } else {
                return value[name].apply(value, args);
            }
        },
        "apply": function (thisp, args) {
            return value.apply(thisp, args);
        },
        "keys": function () {
            return object_keys(value);
        }
    }, void 0, function inspect() {
        return { state: "fulfilled", value: value };
    });
}

/**
 * Converts thenables to Q promises.
 * @param promise thenable promise
 * @returns a Q promise
 */
function coerce(promise) {
    var deferred = defer();
    Q.nextTick(function () {
        try {
            promise.then(deferred.resolve, deferred.reject, deferred.notify);
        } catch (exception) {
            deferred.reject(exception);
        }
    });
    return deferred.promise;
}

/**
 * Annotates an object such that it will never be
 * transferred away from this process over any promise
 * communication channel.
 * @param object
 * @returns promise a wrapping of that object that
 * additionally responds to the "isDef" message
 * without a rejection.
 */
Q.master = master;
function master(object) {
    return Promise({
        "isDef": function () {}
    }, function fallback(op, args) {
        return dispatch(object, op, args);
    }, function () {
        return Q(object).inspect();
    });
}

/**
 * Spreads the values of a promised array of arguments into the
 * fulfillment callback.
 * @param fulfilled callback that receives variadic arguments from the
 * promised array
 * @param rejected callback that receives the exception if the promise
 * is rejected.
 * @returns a promise for the return value or thrown exception of
 * either callback.
 */
Q.spread = spread;
function spread(value, fulfilled, rejected) {
    return Q(value).spread(fulfilled, rejected);
}

Promise.prototype.spread = function (fulfilled, rejected) {
    return this.all().then(function (array) {
        return fulfilled.apply(void 0, array);
    }, rejected);
};

/**
 * The async function is a decorator for generator functions, turning
 * them into asynchronous generators.  Although generators are only part
 * of the newest ECMAScript 6 drafts, this code does not cause syntax
 * errors in older engines.  This code should continue to work and will
 * in fact improve over time as the language improves.
 *
 * ES6 generators are currently part of V8 version 3.19 with the
 * --harmony-generators runtime flag enabled.  SpiderMonkey has had them
 * for longer, but under an older Python-inspired form.  This function
 * works on both kinds of generators.
 *
 * Decorates a generator function such that:
 *  - it may yield promises
 *  - execution will continue when that promise is fulfilled
 *  - the value of the yield expression will be the fulfilled value
 *  - it returns a promise for the return value (when the generator
 *    stops iterating)
 *  - the decorated function returns a promise for the return value
 *    of the generator or the first rejected promise among those
 *    yielded.
 *  - if an error is thrown in the generator, it propagates through
 *    every following yield until it is caught, or until it escapes
 *    the generator function altogether, and is translated into a
 *    rejection for the promise returned by the decorated generator.
 */
Q.async = async;
function async(makeGenerator) {
    return function () {
        // when verb is "send", arg is a value
        // when verb is "throw", arg is an exception
        function continuer(verb, arg) {
            var result;

            // Until V8 3.19 / Chromium 29 is released, SpiderMonkey is the only
            // engine that has a deployed base of browsers that support generators.
            // However, SM's generators use the Python-inspired semantics of
            // outdated ES6 drafts.  We would like to support ES6, but we'd also
            // like to make it possible to use generators in deployed browsers, so
            // we also support Python-style generators.  At some point we can remove
            // this block.

            if (typeof StopIteration === "undefined") {
                // ES6 Generators
                try {
                    result = generator[verb](arg);
                } catch (exception) {
                    return reject(exception);
                }
                if (result.done) {
                    return Q(result.value);
                } else {
                    return when(result.value, callback, errback);
                }
            } else {
                // SpiderMonkey Generators
                // FIXME: Remove this case when SM does ES6 generators.
                try {
                    result = generator[verb](arg);
                } catch (exception) {
                    if (isStopIteration(exception)) {
                        return Q(exception.value);
                    } else {
                        return reject(exception);
                    }
                }
                return when(result, callback, errback);
            }
        }
        var generator = makeGenerator.apply(this, arguments);
        var callback = continuer.bind(continuer, "next");
        var errback = continuer.bind(continuer, "throw");
        return callback();
    };
}

/**
 * The spawn function is a small wrapper around async that immediately
 * calls the generator and also ends the promise chain, so that any
 * unhandled errors are thrown instead of forwarded to the error
 * handler. This is useful because it's extremely common to run
 * generators at the top-level to work with libraries.
 */
Q.spawn = spawn;
function spawn(makeGenerator) {
    Q.done(Q.async(makeGenerator)());
}

// FIXME: Remove this interface once ES6 generators are in SpiderMonkey.
/**
 * Throws a ReturnValue exception to stop an asynchronous generator.
 *
 * This interface is a stop-gap measure to support generator return
 * values in older Firefox/SpiderMonkey.  In browsers that support ES6
 * generators like Chromium 29, just use "return" in your generator
 * functions.
 *
 * @param value the return value for the surrounding generator
 * @throws ReturnValue exception with the value.
 * @example
 * // ES6 style
 * Q.async(function* () {
 *      var foo = yield getFooPromise();
 *      var bar = yield getBarPromise();
 *      return foo + bar;
 * })
 * // Older SpiderMonkey style
 * Q.async(function () {
 *      var foo = yield getFooPromise();
 *      var bar = yield getBarPromise();
 *      Q.return(foo + bar);
 * })
 */
Q["return"] = _return;
function _return(value) {
    throw new QReturnValue(value);
}

/**
 * The promised function decorator ensures that any promise arguments
 * are settled and passed as values (`this` is also settled and passed
 * as a value).  It will also ensure that the result of a function is
 * always a promise.
 *
 * @example
 * var add = Q.promised(function (a, b) {
 *     return a + b;
 * });
 * add(Q(a), Q(B));
 *
 * @param {function} callback The function to decorate
 * @returns {function} a function that has been decorated.
 */
Q.promised = promised;
function promised(callback) {
    return function () {
        return spread([this, all(arguments)], function (self, args) {
            return callback.apply(self, args);
        });
    };
}

/**
 * sends a message to a value in a future turn
 * @param object* the recipient
 * @param op the name of the message operation, e.g., "when",
 * @param args further arguments to be forwarded to the operation
 * @returns result {Promise} a promise for the result of the operation
 */
Q.dispatch = dispatch;
function dispatch(object, op, args) {
    return Q(object).dispatch(op, args);
}

Promise.prototype.dispatch = function (op, args) {
    var self = this;
    var deferred = defer();
    Q.nextTick(function () {
        self.promiseDispatch(deferred.resolve, op, args);
    });
    return deferred.promise;
};

/**
 * Gets the value of a property in a future turn.
 * @param object    promise or immediate reference for target object
 * @param name      name of property to get
 * @return promise for the property value
 */
Q.get = function (object, key) {
    return Q(object).dispatch("get", [key]);
};

Promise.prototype.get = function (key) {
    return this.dispatch("get", [key]);
};

/**
 * Sets the value of a property in a future turn.
 * @param object    promise or immediate reference for object object
 * @param name      name of property to set
 * @param value     new value of property
 * @return promise for the return value
 */
Q.set = function (object, key, value) {
    return Q(object).dispatch("set", [key, value]);
};

Promise.prototype.set = function (key, value) {
    return this.dispatch("set", [key, value]);
};

/**
 * Deletes a property in a future turn.
 * @param object    promise or immediate reference for target object
 * @param name      name of property to delete
 * @return promise for the return value
 */
Q.del = // XXX legacy
Q["delete"] = function (object, key) {
    return Q(object).dispatch("delete", [key]);
};

Promise.prototype.del = // XXX legacy
Promise.prototype["delete"] = function (key) {
    return this.dispatch("delete", [key]);
};

/**
 * Invokes a method in a future turn.
 * @param object    promise or immediate reference for target object
 * @param name      name of method to invoke
 * @param value     a value to post, typically an array of
 *                  invocation arguments for promises that
 *                  are ultimately backed with `resolve` values,
 *                  as opposed to those backed with URLs
 *                  wherein the posted value can be any
 *                  JSON serializable object.
 * @return promise for the return value
 */
// bound locally because it is used by other methods
Q.mapply = // XXX As proposed by "Redsandro"
Q.post = function (object, name, args) {
    return Q(object).dispatch("post", [name, args]);
};

Promise.prototype.mapply = // XXX As proposed by "Redsandro"
Promise.prototype.post = function (name, args) {
    return this.dispatch("post", [name, args]);
};

/**
 * Invokes a method in a future turn.
 * @param object    promise or immediate reference for target object
 * @param name      name of method to invoke
 * @param ...args   array of invocation arguments
 * @return promise for the return value
 */
Q.send = // XXX Mark Miller's proposed parlance
Q.mcall = // XXX As proposed by "Redsandro"
Q.invoke = function (object, name /*...args*/) {
    return Q(object).dispatch("post", [name, array_slice(arguments, 2)]);
};

Promise.prototype.send = // XXX Mark Miller's proposed parlance
Promise.prototype.mcall = // XXX As proposed by "Redsandro"
Promise.prototype.invoke = function (name /*...args*/) {
    return this.dispatch("post", [name, array_slice(arguments, 1)]);
};

/**
 * Applies the promised function in a future turn.
 * @param object    promise or immediate reference for target function
 * @param args      array of application arguments
 */
Q.fapply = function (object, args) {
    return Q(object).dispatch("apply", [void 0, args]);
};

Promise.prototype.fapply = function (args) {
    return this.dispatch("apply", [void 0, args]);
};

/**
 * Calls the promised function in a future turn.
 * @param object    promise or immediate reference for target function
 * @param ...args   array of application arguments
 */
Q["try"] =
Q.fcall = function (object /* ...args*/) {
    return Q(object).dispatch("apply", [void 0, array_slice(arguments, 1)]);
};

Promise.prototype.fcall = function (/*...args*/) {
    return this.dispatch("apply", [void 0, array_slice(arguments)]);
};

/**
 * Binds the promised function, transforming return values into a fulfilled
 * promise and thrown errors into a rejected one.
 * @param object    promise or immediate reference for target function
 * @param ...args   array of application arguments
 */
Q.fbind = function (object /*...args*/) {
    var promise = Q(object);
    var args = array_slice(arguments, 1);
    return function fbound() {
        return promise.dispatch("apply", [
            this,
            args.concat(array_slice(arguments))
        ]);
    };
};
Promise.prototype.fbind = function (/*...args*/) {
    var promise = this;
    var args = array_slice(arguments);
    return function fbound() {
        return promise.dispatch("apply", [
            this,
            args.concat(array_slice(arguments))
        ]);
    };
};

/**
 * Requests the names of the owned properties of a promised
 * object in a future turn.
 * @param object    promise or immediate reference for target object
 * @return promise for the keys of the eventually settled object
 */
Q.keys = function (object) {
    return Q(object).dispatch("keys", []);
};

Promise.prototype.keys = function () {
    return this.dispatch("keys", []);
};

/**
 * Turns an array of promises into a promise for an array.  If any of
 * the promises gets rejected, the whole array is rejected immediately.
 * @param {Array*} an array (or promise for an array) of values (or
 * promises for values)
 * @returns a promise for an array of the corresponding values
 */
// By Mark Miller
// http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&rev=1308776521#allfulfilled
Q.all = all;
function all(promises) {
    return when(promises, function (promises) {
        var pendingCount = 0;
        var deferred = defer();
        array_reduce(promises, function (undefined, promise, index) {
            var snapshot;
            if (
                isPromise(promise) &&
                (snapshot = promise.inspect()).state === "fulfilled"
            ) {
                promises[index] = snapshot.value;
            } else {
                ++pendingCount;
                when(
                    promise,
                    function (value) {
                        promises[index] = value;
                        if (--pendingCount === 0) {
                            deferred.resolve(promises);
                        }
                    },
                    deferred.reject,
                    function (progress) {
                        deferred.notify({ index: index, value: progress });
                    }
                );
            }
        }, void 0);
        if (pendingCount === 0) {
            deferred.resolve(promises);
        }
        return deferred.promise;
    });
}

Promise.prototype.all = function () {
    return all(this);
};

/**
 * Returns the first resolved promise of an array. Prior rejected promises are
 * ignored.  Rejects only if all promises are rejected.
 * @param {Array*} an array containing values or promises for values
 * @returns a promise fulfilled with the value of the first resolved promise,
 * or a rejected promise if all promises are rejected.
 */
Q.any = any;

function any(promises) {
    if (promises.length === 0) {
        return Q.resolve();
    }

    var deferred = Q.defer();
    var pendingCount = 0;
    array_reduce(promises, function (prev, current, index) {
        var promise = promises[index];

        pendingCount++;

        when(promise, onFulfilled, onRejected, onProgress);
        function onFulfilled(result) {
            deferred.resolve(result);
        }
        function onRejected() {
            pendingCount--;
            if (pendingCount === 0) {
                deferred.reject(new Error(
                    "Can't get fulfillment value from any promise, all " +
                    "promises were rejected."
                ));
            }
        }
        function onProgress(progress) {
            deferred.notify({
                index: index,
                value: progress
            });
        }
    }, undefined);

    return deferred.promise;
}

Promise.prototype.any = function () {
    return any(this);
};

/**
 * Waits for all promises to be settled, either fulfilled or
 * rejected.  This is distinct from `all` since that would stop
 * waiting at the first rejection.  The promise returned by
 * `allResolved` will never be rejected.
 * @param promises a promise for an array (or an array) of promises
 * (or values)
 * @return a promise for an array of promises
 */
Q.allResolved = deprecate(allResolved, "allResolved", "allSettled");
function allResolved(promises) {
    return when(promises, function (promises) {
        promises = array_map(promises, Q);
        return when(all(array_map(promises, function (promise) {
            return when(promise, noop, noop);
        })), function () {
            return promises;
        });
    });
}

Promise.prototype.allResolved = function () {
    return allResolved(this);
};

/**
 * @see Promise#allSettled
 */
Q.allSettled = allSettled;
function allSettled(promises) {
    return Q(promises).allSettled();
}

/**
 * Turns an array of promises into a promise for an array of their states (as
 * returned by `inspect`) when they have all settled.
 * @param {Array[Any*]} values an array (or promise for an array) of values (or
 * promises for values)
 * @returns {Array[State]} an array of states for the respective values.
 */
Promise.prototype.allSettled = function () {
    return this.then(function (promises) {
        return all(array_map(promises, function (promise) {
            promise = Q(promise);
            function regardless() {
                return promise.inspect();
            }
            return promise.then(regardless, regardless);
        }));
    });
};

/**
 * Captures the failure of a promise, giving an oportunity to recover
 * with a callback.  If the given promise is fulfilled, the returned
 * promise is fulfilled.
 * @param {Any*} promise for something
 * @param {Function} callback to fulfill the returned promise if the
 * given promise is rejected
 * @returns a promise for the return value of the callback
 */
Q.fail = // XXX legacy
Q["catch"] = function (object, rejected) {
    return Q(object).then(void 0, rejected);
};

Promise.prototype.fail = // XXX legacy
Promise.prototype["catch"] = function (rejected) {
    return this.then(void 0, rejected);
};

/**
 * Attaches a listener that can respond to progress notifications from a
 * promise's originating deferred. This listener receives the exact arguments
 * passed to ``deferred.notify``.
 * @param {Any*} promise for something
 * @param {Function} callback to receive any progress notifications
 * @returns the given promise, unchanged
 */
Q.progress = progress;
function progress(object, progressed) {
    return Q(object).then(void 0, void 0, progressed);
}

Promise.prototype.progress = function (progressed) {
    return this.then(void 0, void 0, progressed);
};

/**
 * Provides an opportunity to observe the settling of a promise,
 * regardless of whether the promise is fulfilled or rejected.  Forwards
 * the resolution to the returned promise when the callback is done.
 * The callback can return a promise to defer completion.
 * @param {Any*} promise
 * @param {Function} callback to observe the resolution of the given
 * promise, takes no arguments.
 * @returns a promise for the resolution of the given promise when
 * ``fin`` is done.
 */
Q.fin = // XXX legacy
Q["finally"] = function (object, callback) {
    return Q(object)["finally"](callback);
};

Promise.prototype.fin = // XXX legacy
Promise.prototype["finally"] = function (callback) {
    callback = Q(callback);
    return this.then(function (value) {
        return callback.fcall().then(function () {
            return value;
        });
    }, function (reason) {
        // TODO attempt to recycle the rejection with "this".
        return callback.fcall().then(function () {
            throw reason;
        });
    });
};

/**
 * Terminates a chain of promises, forcing rejections to be
 * thrown as exceptions.
 * @param {Any*} promise at the end of a chain of promises
 * @returns nothing
 */
Q.done = function (object, fulfilled, rejected, progress) {
    return Q(object).done(fulfilled, rejected, progress);
};

Promise.prototype.done = function (fulfilled, rejected, progress) {
    var onUnhandledError = function (error) {
        // forward to a future turn so that ``when``
        // does not catch it and turn it into a rejection.
        Q.nextTick(function () {
            makeStackTraceLong(error, promise);
            if (Q.onerror) {
                Q.onerror(error);
            } else {
                throw error;
            }
        });
    };

    // Avoid unnecessary `nextTick`ing via an unnecessary `when`.
    var promise = fulfilled || rejected || progress ?
        this.then(fulfilled, rejected, progress) :
        this;

    if (typeof process === "object" && process && process.domain) {
        onUnhandledError = process.domain.bind(onUnhandledError);
    }

    promise.then(void 0, onUnhandledError);
};

/**
 * Causes a promise to be rejected if it does not get fulfilled before
 * some milliseconds time out.
 * @param {Any*} promise
 * @param {Number} milliseconds timeout
 * @param {Any*} custom error message or Error object (optional)
 * @returns a promise for the resolution of the given promise if it is
 * fulfilled before the timeout, otherwise rejected.
 */
Q.timeout = function (object, ms, error) {
    return Q(object).timeout(ms, error);
};

Promise.prototype.timeout = function (ms, error) {
    var deferred = defer();
    var timeoutId = setTimeout(function () {
        if (!error || "string" === typeof error) {
            error = new Error(error || "Timed out after " + ms + " ms");
            error.code = "ETIMEDOUT";
        }
        deferred.reject(error);
    }, ms);

    this.then(function (value) {
        clearTimeout(timeoutId);
        deferred.resolve(value);
    }, function (exception) {
        clearTimeout(timeoutId);
        deferred.reject(exception);
    }, deferred.notify);

    return deferred.promise;
};

/**
 * Returns a promise for the given value (or promised value), some
 * milliseconds after it resolved. Passes rejections immediately.
 * @param {Any*} promise
 * @param {Number} milliseconds
 * @returns a promise for the resolution of the given promise after milliseconds
 * time has elapsed since the resolution of the given promise.
 * If the given promise rejects, that is passed immediately.
 */
Q.delay = function (object, timeout) {
    if (timeout === void 0) {
        timeout = object;
        object = void 0;
    }
    return Q(object).delay(timeout);
};

Promise.prototype.delay = function (timeout) {
    return this.then(function (value) {
        var deferred = defer();
        setTimeout(function () {
            deferred.resolve(value);
        }, timeout);
        return deferred.promise;
    });
};

/**
 * Passes a continuation to a Node function, which is called with the given
 * arguments provided as an array, and returns a promise.
 *
 *      Q.nfapply(FS.readFile, [__filename])
 *      .then(function (content) {
 *      })
 *
 */
Q.nfapply = function (callback, args) {
    return Q(callback).nfapply(args);
};

Promise.prototype.nfapply = function (args) {
    var deferred = defer();
    var nodeArgs = array_slice(args);
    nodeArgs.push(deferred.makeNodeResolver());
    this.fapply(nodeArgs).fail(deferred.reject);
    return deferred.promise;
};

/**
 * Passes a continuation to a Node function, which is called with the given
 * arguments provided individually, and returns a promise.
 * @example
 * Q.nfcall(FS.readFile, __filename)
 * .then(function (content) {
 * })
 *
 */
Q.nfcall = function (callback /*...args*/) {
    var args = array_slice(arguments, 1);
    return Q(callback).nfapply(args);
};

Promise.prototype.nfcall = function (/*...args*/) {
    var nodeArgs = array_slice(arguments);
    var deferred = defer();
    nodeArgs.push(deferred.makeNodeResolver());
    this.fapply(nodeArgs).fail(deferred.reject);
    return deferred.promise;
};

/**
 * Wraps a NodeJS continuation passing function and returns an equivalent
 * version that returns a promise.
 * @example
 * Q.nfbind(FS.readFile, __filename)("utf-8")
 * .then(console.log)
 * .done()
 */
Q.nfbind =
Q.denodeify = function (callback /*...args*/) {
    var baseArgs = array_slice(arguments, 1);
    return function () {
        var nodeArgs = baseArgs.concat(array_slice(arguments));
        var deferred = defer();
        nodeArgs.push(deferred.makeNodeResolver());
        Q(callback).fapply(nodeArgs).fail(deferred.reject);
        return deferred.promise;
    };
};

Promise.prototype.nfbind =
Promise.prototype.denodeify = function (/*...args*/) {
    var args = array_slice(arguments);
    args.unshift(this);
    return Q.denodeify.apply(void 0, args);
};

Q.nbind = function (callback, thisp /*...args*/) {
    var baseArgs = array_slice(arguments, 2);
    return function () {
        var nodeArgs = baseArgs.concat(array_slice(arguments));
        var deferred = defer();
        nodeArgs.push(deferred.makeNodeResolver());
        function bound() {
            return callback.apply(thisp, arguments);
        }
        Q(bound).fapply(nodeArgs).fail(deferred.reject);
        return deferred.promise;
    };
};

Promise.prototype.nbind = function (/*thisp, ...args*/) {
    var args = array_slice(arguments, 0);
    args.unshift(this);
    return Q.nbind.apply(void 0, args);
};

/**
 * Calls a method of a Node-style object that accepts a Node-style
 * callback with a given array of arguments, plus a provided callback.
 * @param object an object that has the named method
 * @param {String} name name of the method of object
 * @param {Array} args arguments to pass to the method; the callback
 * will be provided by Q and appended to these arguments.
 * @returns a promise for the value or error
 */
Q.nmapply = // XXX As proposed by "Redsandro"
Q.npost = function (object, name, args) {
    return Q(object).npost(name, args);
};

Promise.prototype.nmapply = // XXX As proposed by "Redsandro"
Promise.prototype.npost = function (name, args) {
    var nodeArgs = array_slice(args || []);
    var deferred = defer();
    nodeArgs.push(deferred.makeNodeResolver());
    this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
    return deferred.promise;
};

/**
 * Calls a method of a Node-style object that accepts a Node-style
 * callback, forwarding the given variadic arguments, plus a provided
 * callback argument.
 * @param object an object that has the named method
 * @param {String} name name of the method of object
 * @param ...args arguments to pass to the method; the callback will
 * be provided by Q and appended to these arguments.
 * @returns a promise for the value or error
 */
Q.nsend = // XXX Based on Mark Miller's proposed "send"
Q.nmcall = // XXX Based on "Redsandro's" proposal
Q.ninvoke = function (object, name /*...args*/) {
    var nodeArgs = array_slice(arguments, 2);
    var deferred = defer();
    nodeArgs.push(deferred.makeNodeResolver());
    Q(object).dispatch("post", [name, nodeArgs]).fail(deferred.reject);
    return deferred.promise;
};

Promise.prototype.nsend = // XXX Based on Mark Miller's proposed "send"
Promise.prototype.nmcall = // XXX Based on "Redsandro's" proposal
Promise.prototype.ninvoke = function (name /*...args*/) {
    var nodeArgs = array_slice(arguments, 1);
    var deferred = defer();
    nodeArgs.push(deferred.makeNodeResolver());
    this.dispatch("post", [name, nodeArgs]).fail(deferred.reject);
    return deferred.promise;
};

/**
 * If a function would like to support both Node continuation-passing-style and
 * promise-returning-style, it can end its internal promise chain with
 * `nodeify(nodeback)`, forwarding the optional nodeback argument.  If the user
 * elects to use a nodeback, the result will be sent there.  If they do not
 * pass a nodeback, they will receive the result promise.
 * @param object a result (or a promise for a result)
 * @param {Function} nodeback a Node.js-style callback
 * @returns either the promise or nothing
 */
Q.nodeify = nodeify;
function nodeify(object, nodeback) {
    return Q(object).nodeify(nodeback);
}

Promise.prototype.nodeify = function (nodeback) {
    if (nodeback) {
        this.then(function (value) {
            Q.nextTick(function () {
                nodeback(null, value);
            });
        }, function (error) {
            Q.nextTick(function () {
                nodeback(error);
            });
        });
    } else {
        return this;
    }
};

Q.noConflict = function() {
    throw new Error("Q.noConflict only works when Q is used as a global");
};

// All code before this point will be filtered from stack traces.
var qEndingLine = captureLine();

return Q;

});

}).call(this,require('_process'))
},{"_process":158}],166:[function(require,module,exports){
(function (process,global,Buffer){
'use strict'

function oldBrowser () {
  throw new Error('secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11')
}

var crypto = global.crypto || global.msCrypto

if (crypto && crypto.getRandomValues) {
  module.exports = randomBytes
} else {
  module.exports = oldBrowser
}

function randomBytes (size, cb) {
  // phantomjs needs to throw
  if (size > 65536) throw new Error('requested too many random bytes')
  // in case browserify  isn't using the Uint8Array version
  var rawBytes = new global.Uint8Array(size)

  // This will not work in older browsers.
  // See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
  if (size > 0) {  // getRandomValues fails on IE if size == 0
    crypto.getRandomValues(rawBytes)
  }
  // phantomjs doesn't like a buffer being passed here
  var bytes = new Buffer(rawBytes.buffer)

  if (typeof cb === 'function') {
    return process.nextTick(function () {
      cb(null, bytes)
    })
  }

  return bytes
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer)
},{"_process":158,"buffer":45}],167:[function(require,module,exports){
module.exports = require("./lib/_stream_duplex.js")

},{"./lib/_stream_duplex.js":168}],168:[function(require,module,exports){
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

'use strict';

/*<replacement>*/

var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    keys.push(key);
  }return keys;
};
/*</replacement>*/

module.exports = Duplex;

/*<replacement>*/
var processNextTick = require('process-nextick-args');
/*</replacement>*/

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var Readable = require('./_stream_readable');
var Writable = require('./_stream_writable');

util.inherits(Duplex, Readable);

var keys = objectKeys(Writable.prototype);
for (var v = 0; v < keys.length; v++) {
  var method = keys[v];
  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false) this.readable = false;

  if (options && options.writable === false) this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

  this.once('end', onend);
}

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  processNextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}
},{"./_stream_readable":170,"./_stream_writable":172,"core-util-is":50,"inherits":95,"process-nextick-args":157}],169:[function(require,module,exports){
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.

'use strict';

module.exports = PassThrough;

var Transform = require('./_stream_transform');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};
},{"./_stream_transform":171,"core-util-is":50,"inherits":95}],170:[function(require,module,exports){
(function (process){
'use strict';

module.exports = Readable;

/*<replacement>*/
var processNextTick = require('process-nextick-args');
/*</replacement>*/

/*<replacement>*/
var isArray = require('isarray');
/*</replacement>*/

/*<replacement>*/
var Buffer = require('buffer').Buffer;
/*</replacement>*/

Readable.ReadableState = ReadableState;

var EE = require('events');

/*<replacement>*/
var EElistenerCount = function (emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream;
(function () {
  try {
    Stream = require('st' + 'ream');
  } catch (_) {} finally {
    if (!Stream) Stream = require('events').EventEmitter;
  }
})();
/*</replacement>*/

var Buffer = require('buffer').Buffer;

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var debugUtil = require('util');
var debug = undefined;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/

var StringDecoder;

util.inherits(Readable, Stream);

var Duplex;
function ReadableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;

  // cast to ints.
  this.highWaterMark = ~ ~this.highWaterMark;

  this.buffer = [];
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // when piping, we only care about 'readable' events that happen
  // after read()ing all the bytes and not getting any pushback.
  this.ranOut = false;

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

var Duplex;
function Readable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  if (!(this instanceof Readable)) return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  if (options && typeof options.read === 'function') this._read = options.read;

  Stream.call(this);
}

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;

  if (!state.objectMode && typeof chunk === 'string') {
    encoding = encoding || state.defaultEncoding;
    if (encoding !== state.encoding) {
      chunk = new Buffer(chunk, encoding);
      encoding = '';
    }
  }

  return readableAddChunk(this, state, chunk, encoding, false);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  var state = this._readableState;
  return readableAddChunk(this, state, chunk, '', true);
};

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

function readableAddChunk(stream, state, chunk, encoding, addToFront) {
  var er = chunkInvalid(state, chunk);
  if (er) {
    stream.emit('error', er);
  } else if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else if (state.objectMode || chunk && chunk.length > 0) {
    if (state.ended && !addToFront) {
      var e = new Error('stream.push() after EOF');
      stream.emit('error', e);
    } else if (state.endEmitted && addToFront) {
      var e = new Error('stream.unshift() after end event');
      stream.emit('error', e);
    } else {
      var skipAdd;
      if (state.decoder && !addToFront && !encoding) {
        chunk = state.decoder.write(chunk);
        skipAdd = !state.objectMode && chunk.length === 0;
      }

      if (!addToFront) state.reading = false;

      // Don't add to the buffer if we've decoded to an empty string chunk and
      // we're not in object mode
      if (!skipAdd) {
        // if we want the data now, just emit it.
        if (state.flowing && state.length === 0 && !state.sync) {
          stream.emit('data', chunk);
          stream.read(0);
        } else {
          // update the buffer info.
          state.length += state.objectMode ? 1 : chunk.length;
          if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

          if (state.needReadable) emitReadable(stream);
        }
      }

      maybeReadMore(stream, state);
    }
  } else if (!addToFront) {
    state.reading = false;
  }

  return needMoreData(state);
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

function howMuchToRead(n, state) {
  if (state.length === 0 && state.ended) return 0;

  if (state.objectMode) return n === 0 ? 0 : 1;

  if (n === null || isNaN(n)) {
    // only flow one buffer at a time
    if (state.flowing && state.buffer.length) return state.buffer[0].length;else return state.length;
  }

  if (n <= 0) return 0;

  // If we're asking for more than the target buffer level,
  // then raise the water mark.  Bump up to the next highest
  // power of 2, to prevent increasing it excessively in tiny
  // amounts.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);

  // don't have that much.  return null, unless we've ended.
  if (n > state.length) {
    if (!state.ended) {
      state.needReadable = true;
      return 0;
    } else {
      return state.length;
    }
  }

  return n;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  var state = this._readableState;
  var nOrig = n;

  if (typeof n !== 'number' || n > 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  }

  if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
  }

  // If _read pushed data synchronously, then `reading` will be false,
  // and we need to re-evaluate how much data we can return to the user.
  if (doRead && !state.reading) n = howMuchToRead(nOrig, state);

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  }

  state.length -= n;

  // If we have nothing in the buffer, then we want to know
  // as soon as we *do* get something into the buffer.
  if (state.length === 0 && !state.ended) state.needReadable = true;

  // If we tried to read() past the EOF, then emit end on the next tick.
  if (nOrig !== n && state.ended && state.length === 0) endReadable(this);

  if (ret !== null) this.emit('data', ret);

  return ret;
};

function chunkInvalid(state, chunk) {
  var er = null;
  if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}

function onEofChunk(stream, state) {
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    processNextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;else len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  this.emit('error', new Error('not implemented'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

  var endFn = doEnd ? onend : cleanup;
  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable) {
    debug('onunpipe');
    if (readable === src) {
      cleanup();
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', cleanup);
    src.removeListener('data', ondata);

    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    var ret = dest.write(chunk);
    if (false === ret) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      if (state.pipesCount === 1 && state.pipes[0] === dest && src.listenerCount('data') === 1 && !cleanedUp) {
        debug('false write response, pause', src._readableState.awaitDrain);
        src._readableState.awaitDrain++;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
  }
  // This is a brutally ugly hack to make sure that our error handler
  // is attached before any userland ones.  NEVER DO THIS.
  if (!dest._events || !dest._events.error) dest.on('error', onerror);else if (isArray(dest._events.error)) dest._events.error.unshift(onerror);else dest._events.error = [onerror, dest._events.error];

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function () {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;

    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var _i = 0; _i < len; _i++) {
      dests[_i].emit('unpipe', this);
    }return this;
  }

  // try to find the right one.
  var i = indexOf(state.pipes, dest);
  if (i === -1) return this;

  state.pipes.splice(i, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];

  dest.emit('unpipe', this);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  // If listening to data, and it has not explicitly been paused,
  // then call resume to start the flow of data on the next tick.
  if (ev === 'data' && false !== this._readableState.flowing) {
    this.resume();
  }

  if (ev === 'readable' && !this._readableState.endEmitted) {
    var state = this._readableState;
    if (!state.readableListening) {
      state.readableListening = true;
      state.emittedReadable = false;
      state.needReadable = true;
      if (!state.reading) {
        processNextTick(nReadingNextTick, this);
      } else if (state.length) {
        emitReadable(this, state);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    processNextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  if (!state.reading) {
    debug('resume read 0');
    stream.read(0);
  }

  state.resumeScheduled = false;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  if (state.flowing) {
    do {
      var chunk = stream.read();
    } while (null !== chunk && state.flowing);
  }
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var state = this._readableState;
  var paused = false;

  var self = this;
  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) self.push(chunk);
    }

    self.push(null);
  });

  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = self.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function (method) {
        return function () {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  var events = ['error', 'close', 'destroy', 'pause', 'resume'];
  forEach(events, function (ev) {
    stream.on(ev, self.emit.bind(self, ev));
  });

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  self._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return self;
};

// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
function fromList(n, state) {
  var list = state.buffer;
  var length = state.length;
  var stringMode = !!state.decoder;
  var objectMode = !!state.objectMode;
  var ret;

  // nothing in the list, definitely empty.
  if (list.length === 0) return null;

  if (length === 0) ret = null;else if (objectMode) ret = list.shift();else if (!n || n >= length) {
    // read it all, truncate the array.
    if (stringMode) ret = list.join('');else if (list.length === 1) ret = list[0];else ret = Buffer.concat(list, length);
    list.length = 0;
  } else {
    // read just some of it.
    if (n < list[0].length) {
      // just take a part of the first list item.
      // slice is the same for buffers and strings.
      var buf = list[0];
      ret = buf.slice(0, n);
      list[0] = buf.slice(n);
    } else if (n === list[0].length) {
      // first list is a perfect match
      ret = list.shift();
    } else {
      // complex case.
      // we have enough to cover it, but it spans past the first buffer.
      if (stringMode) ret = '';else ret = new Buffer(n);

      var c = 0;
      for (var i = 0, l = list.length; i < l && c < n; i++) {
        var buf = list[0];
        var cpy = Math.min(n - c, buf.length);

        if (stringMode) ret += buf.slice(0, cpy);else buf.copy(ret, c, 0, cpy);

        if (cpy < buf.length) list[0] = buf.slice(cpy);else list.shift();

        c += cpy;
      }
    }
  }

  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0) throw new Error('endReadable called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    processNextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
  }
}

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}
}).call(this,require('_process'))
},{"./_stream_duplex":168,"_process":158,"buffer":45,"core-util-is":50,"events":85,"inherits":95,"isarray":97,"process-nextick-args":157,"string_decoder/":190,"util":18}],171:[function(require,module,exports){
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

'use strict';

module.exports = Transform;

var Duplex = require('./_stream_duplex');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(Transform, Duplex);

function TransformState(stream) {
  this.afterTransform = function (er, data) {
    return afterTransform(stream, er, data);
  };

  this.needTransform = false;
  this.transforming = false;
  this.writecb = null;
  this.writechunk = null;
  this.writeencoding = null;
}

function afterTransform(stream, er, data) {
  var ts = stream._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb) return stream.emit('error', new Error('no writecb in Transform class'));

  ts.writechunk = null;
  ts.writecb = null;

  if (data !== null && data !== undefined) stream.push(data);

  cb(er);

  var rs = stream._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    stream._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);

  Duplex.call(this, options);

  this._transformState = new TransformState(this);

  // when the writable side finishes, then flush out anything remaining.
  var stream = this;

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;

    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  this.once('prefinish', function () {
    if (typeof this._flush === 'function') this._flush(function (er) {
      done(stream, er);
    });else done(stream);
  });
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  throw new Error('not implemented');
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

function done(stream, er) {
  if (er) return stream.emit('error', er);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  var ws = stream._writableState;
  var ts = stream._transformState;

  if (ws.length) throw new Error('calling transform done when ws.length != 0');

  if (ts.transforming) throw new Error('calling transform done when still transforming');

  return stream.push(null);
}
},{"./_stream_duplex":168,"core-util-is":50,"inherits":95}],172:[function(require,module,exports){
(function (process){
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.

'use strict';

module.exports = Writable;

/*<replacement>*/
var processNextTick = require('process-nextick-args');
/*</replacement>*/

/*<replacement>*/
var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;
/*</replacement>*/

/*<replacement>*/
var Buffer = require('buffer').Buffer;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var internalUtil = {
  deprecate: require('util-deprecate')
};
/*</replacement>*/

/*<replacement>*/
var Stream;
(function () {
  try {
    Stream = require('st' + 'ream');
  } catch (_) {} finally {
    if (!Stream) Stream = require('events').EventEmitter;
  }
})();
/*</replacement>*/

var Buffer = require('buffer').Buffer;

util.inherits(Writable, Stream);

function nop() {}

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

var Duplex;
function WritableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;

  // cast to ints.
  this.highWaterMark = ~ ~this.highWaterMark;

  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // create the two objects needed to store the corked requests
  // they are not a linked list, as no new elements are inserted in there
  this.corkedRequestsFree = new CorkedRequest(this);
  this.corkedRequestsFree.next = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function writableStateGetBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function () {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.')
    });
  } catch (_) {}
})();

var Duplex;
function Writable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  // Writable ctor is applied to Duplexes, though they're not
  // instanceof Writable, they're instanceof Readable.
  if (!(this instanceof Writable) && !(this instanceof Duplex)) return new Writable(options);

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;

    if (typeof options.writev === 'function') this._writev = options.writev;
  }

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  this.emit('error', new Error('Cannot pipe. Not readable.'));
};

function writeAfterEnd(stream, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  processNextTick(cb, er);
}

// If we get something that is not a buffer, string, null, or undefined,
// and we're not in objectMode, then that's an error.
// Otherwise stream chunks are all considered to be of length=1, and the
// watermarks determine how many objects to keep in the buffer, rather than
// how many bytes or characters.
function validChunk(stream, state, chunk, cb) {
  var valid = true;

  if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {
    var er = new TypeError('Invalid non-string/buffer chunk');
    stream.emit('error', er);
    processNextTick(cb, er);
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (Buffer.isBuffer(chunk)) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;

  if (typeof cb !== 'function') cb = nop;

  if (state.ended) writeAfterEnd(this, cb);else if (validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function () {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
  this._writableState.defaultEncoding = encoding;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = new Buffer(chunk, encoding);
  }
  return chunk;
}

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, chunk, encoding, cb) {
  chunk = decodeChunk(state, chunk, encoding);

  if (Buffer.isBuffer(chunk)) encoding = 'buffer';
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;
  if (sync) processNextTick(cb, er);else cb(er);

  stream._writableState.errorEmitted = true;
  stream.emit('error', er);
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
        afterWrite(stream, state, finished, cb);
      }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;

    var count = 0;
    while (entry) {
      buffer[count] = entry;
      entry = entry.next;
      count += 1;
    }

    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    state.corkedRequestsFree = holder.next;
    holder.next = null;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequestCount = 0;
  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new Error('not implemented'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished) endWritable(this, state, cb);
};

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}

function prefinish(stream, state) {
  if (!state.prefinished) {
    state.prefinished = true;
    stream.emit('prefinish');
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    if (state.pendingcb === 0) {
      prefinish(stream, state);
      state.finished = true;
      stream.emit('finish');
    } else {
      prefinish(stream, state);
    }
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) processNextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;

  this.finish = function (err) {
    var entry = _this.entry;
    _this.entry = null;
    while (entry) {
      var cb = entry.callback;
      state.pendingcb--;
      cb(err);
      entry = entry.next;
    }
    if (state.corkedRequestsFree) {
      state.corkedRequestsFree.next = _this;
    } else {
      state.corkedRequestsFree = _this;
    }
  };
}
}).call(this,require('_process'))
},{"./_stream_duplex":168,"_process":158,"buffer":45,"core-util-is":50,"events":85,"inherits":95,"process-nextick-args":157,"util-deprecate":192}],173:[function(require,module,exports){
module.exports = require("./lib/_stream_passthrough.js")

},{"./lib/_stream_passthrough.js":169}],174:[function(require,module,exports){
var Stream = (function (){
  try {
    return require('st' + 'ream'); // hack to fix a circular dependency issue when used with browserify
  } catch(_){}
}());
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = Stream || exports;
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');

},{"./lib/_stream_duplex.js":168,"./lib/_stream_passthrough.js":169,"./lib/_stream_readable.js":170,"./lib/_stream_transform.js":171,"./lib/_stream_writable.js":172}],175:[function(require,module,exports){
module.exports = require("./lib/_stream_transform.js")

},{"./lib/_stream_transform.js":171}],176:[function(require,module,exports){
module.exports = require("./lib/_stream_writable.js")

},{"./lib/_stream_writable.js":172}],177:[function(require,module,exports){
var path = require('path');

module.exports = function(npath, ext) {
  if (typeof npath !== 'string') return npath;
  if (npath.length === 0) return npath;

  var nFileName = path.basename(npath, path.extname(npath))+ext;
  return path.join(path.dirname(npath), nFileName);
};
},{"path":155}],178:[function(require,module,exports){
(function (Buffer){
/*
CryptoJS v3.1.2
code.google.com/p/crypto-js
(c) 2009-2013 by Jeff Mott. All rights reserved.
code.google.com/p/crypto-js/wiki/License
*/
/** @preserve
(c) 2012 by Cédric Mesnil. All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

// constants table
var zl = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
]

var zr = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
]

var sl = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
]

var sr = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
]

var hl = [0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]
var hr = [0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]

function bytesToWords (bytes) {
  var words = []
  for (var i = 0, b = 0; i < bytes.length; i++, b += 8) {
    words[b >>> 5] |= bytes[i] << (24 - b % 32)
  }
  return words
}

function wordsToBytes (words) {
  var bytes = []
  for (var b = 0; b < words.length * 32; b += 8) {
    bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF)
  }
  return bytes
}

function processBlock (H, M, offset) {
  // swap endian
  for (var i = 0; i < 16; i++) {
    var offset_i = offset + i
    var M_offset_i = M[offset_i]

    // Swap
    M[offset_i] = (
      (((M_offset_i << 8) | (M_offset_i >>> 24)) & 0x00ff00ff) |
      (((M_offset_i << 24) | (M_offset_i >>> 8)) & 0xff00ff00)
    )
  }

  // Working variables
  var al, bl, cl, dl, el
  var ar, br, cr, dr, er

  ar = al = H[0]
  br = bl = H[1]
  cr = cl = H[2]
  dr = dl = H[3]
  er = el = H[4]

  // computation
  var t
  for (i = 0; i < 80; i += 1) {
    t = (al + M[offset + zl[i]]) | 0
    if (i < 16) {
      t += f1(bl, cl, dl) + hl[0]
    } else if (i < 32) {
      t += f2(bl, cl, dl) + hl[1]
    } else if (i < 48) {
      t += f3(bl, cl, dl) + hl[2]
    } else if (i < 64) {
      t += f4(bl, cl, dl) + hl[3]
    } else {// if (i<80) {
      t += f5(bl, cl, dl) + hl[4]
    }
    t = t | 0
    t = rotl(t, sl[i])
    t = (t + el) | 0
    al = el
    el = dl
    dl = rotl(cl, 10)
    cl = bl
    bl = t

    t = (ar + M[offset + zr[i]]) | 0
    if (i < 16) {
      t += f5(br, cr, dr) + hr[0]
    } else if (i < 32) {
      t += f4(br, cr, dr) + hr[1]
    } else if (i < 48) {
      t += f3(br, cr, dr) + hr[2]
    } else if (i < 64) {
      t += f2(br, cr, dr) + hr[3]
    } else {// if (i<80) {
      t += f1(br, cr, dr) + hr[4]
    }

    t = t | 0
    t = rotl(t, sr[i])
    t = (t + er) | 0
    ar = er
    er = dr
    dr = rotl(cr, 10)
    cr = br
    br = t
  }

  // intermediate hash value
  t = (H[1] + cl + dr) | 0
  H[1] = (H[2] + dl + er) | 0
  H[2] = (H[3] + el + ar) | 0
  H[3] = (H[4] + al + br) | 0
  H[4] = (H[0] + bl + cr) | 0
  H[0] = t
}

function f1 (x, y, z) {
  return ((x) ^ (y) ^ (z))
}

function f2 (x, y, z) {
  return (((x) & (y)) | ((~x) & (z)))
}

function f3 (x, y, z) {
  return (((x) | (~(y))) ^ (z))
}

function f4 (x, y, z) {
  return (((x) & (z)) | ((y) & (~(z))))
}

function f5 (x, y, z) {
  return ((x) ^ ((y) | (~(z))))
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function ripemd160 (message) {
  var H = [0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]

  if (typeof message === 'string') {
    message = new Buffer(message, 'utf8')
  }

  var m = bytesToWords(message)

  var nBitsLeft = message.length * 8
  var nBitsTotal = message.length * 8

  // Add padding
  m[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32)
  m[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (
    (((nBitsTotal << 8) | (nBitsTotal >>> 24)) & 0x00ff00ff) |
    (((nBitsTotal << 24) | (nBitsTotal >>> 8)) & 0xff00ff00)
  )

  for (var i = 0; i < m.length; i += 16) {
    processBlock(H, m, i)
  }

  // swap endian
  for (i = 0; i < 5; i++) {
    // shortcut
    var H_i = H[i]

    // Swap
    H[i] = (((H_i << 8) | (H_i >>> 24)) & 0x00ff00ff) |
      (((H_i << 24) | (H_i >>> 8)) & 0xff00ff00)
  }

  var digestbytes = wordsToBytes(H)
  return new Buffer(digestbytes)
}

module.exports = ripemd160

}).call(this,require("buffer").Buffer)
},{"buffer":45}],179:[function(require,module,exports){
(function (process){
exports = module.exports = SemVer;

// The debug function is excluded entirely from the minified version.
/* nomin */ var debug;
/* nomin */ if (typeof process === 'object' &&
    /* nomin */ process.env &&
    /* nomin */ process.env.NODE_DEBUG &&
    /* nomin */ /\bsemver\b/i.test(process.env.NODE_DEBUG))
  /* nomin */ debug = function() {
    /* nomin */ var args = Array.prototype.slice.call(arguments, 0);
    /* nomin */ args.unshift('SEMVER');
    /* nomin */ console.log.apply(console, args);
    /* nomin */ };
/* nomin */ else
  /* nomin */ debug = function() {};

// Note: this is the semver.org version of the spec that it implements
// Not necessarily the package version of this code.
exports.SEMVER_SPEC_VERSION = '2.0.0';

var MAX_LENGTH = 256;
var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;

// The actual regexps go on exports.re
var re = exports.re = [];
var src = exports.src = [];
var R = 0;

// The following Regular Expressions can be used for tokenizing,
// validating, and parsing SemVer version strings.

// ## Numeric Identifier
// A single `0`, or a non-zero digit followed by zero or more digits.

var NUMERICIDENTIFIER = R++;
src[NUMERICIDENTIFIER] = '0|[1-9]\\d*';
var NUMERICIDENTIFIERLOOSE = R++;
src[NUMERICIDENTIFIERLOOSE] = '[0-9]+';


// ## Non-numeric Identifier
// Zero or more digits, followed by a letter or hyphen, and then zero or
// more letters, digits, or hyphens.

var NONNUMERICIDENTIFIER = R++;
src[NONNUMERICIDENTIFIER] = '\\d*[a-zA-Z-][a-zA-Z0-9-]*';


// ## Main Version
// Three dot-separated numeric identifiers.

var MAINVERSION = R++;
src[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\.' +
                   '(' + src[NUMERICIDENTIFIER] + ')\\.' +
                   '(' + src[NUMERICIDENTIFIER] + ')';

var MAINVERSIONLOOSE = R++;
src[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\.' +
                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\.' +
                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')';

// ## Pre-release Version Identifier
// A numeric identifier, or a non-numeric identifier.

var PRERELEASEIDENTIFIER = R++;
src[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +
                            '|' + src[NONNUMERICIDENTIFIER] + ')';

var PRERELEASEIDENTIFIERLOOSE = R++;
src[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +
                                 '|' + src[NONNUMERICIDENTIFIER] + ')';


// ## Pre-release Version
// Hyphen, followed by one or more dot-separated pre-release version
// identifiers.

var PRERELEASE = R++;
src[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +
                  '(?:\\.' + src[PRERELEASEIDENTIFIER] + ')*))';

var PRERELEASELOOSE = R++;
src[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +
                       '(?:\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';

// ## Build Metadata Identifier
// Any combination of digits, letters, or hyphens.

var BUILDIDENTIFIER = R++;
src[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';

// ## Build Metadata
// Plus sign, followed by one or more period-separated build metadata
// identifiers.

var BUILD = R++;
src[BUILD] = '(?:\\+(' + src[BUILDIDENTIFIER] +
             '(?:\\.' + src[BUILDIDENTIFIER] + ')*))';


// ## Full Version String
// A main version, followed optionally by a pre-release version and
// build metadata.

// Note that the only major, minor, patch, and pre-release sections of
// the version string are capturing groups.  The build metadata is not a
// capturing group, because it should not ever be used in version
// comparison.

var FULL = R++;
var FULLPLAIN = 'v?' + src[MAINVERSION] +
                src[PRERELEASE] + '?' +
                src[BUILD] + '?';

src[FULL] = '^' + FULLPLAIN + '$';

// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.
// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty
// common in the npm registry.
var LOOSEPLAIN = '[v=\\s]*' + src[MAINVERSIONLOOSE] +
                 src[PRERELEASELOOSE] + '?' +
                 src[BUILD] + '?';

var LOOSE = R++;
src[LOOSE] = '^' + LOOSEPLAIN + '$';

var GTLT = R++;
src[GTLT] = '((?:<|>)?=?)';

// Something like "2.*" or "1.2.x".
// Note that "x.x" is a valid xRange identifer, meaning "any version"
// Only the first item is strictly required.
var XRANGEIDENTIFIERLOOSE = R++;
src[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\*';
var XRANGEIDENTIFIER = R++;
src[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\*';

var XRANGEPLAIN = R++;
src[XRANGEPLAIN] = '[v=\\s]*(' + src[XRANGEIDENTIFIER] + ')' +
                   '(?:\\.(' + src[XRANGEIDENTIFIER] + ')' +
                   '(?:\\.(' + src[XRANGEIDENTIFIER] + ')' +
                   '(?:' + src[PRERELEASE] + ')?' +
                   src[BUILD] + '?' +
                   ')?)?';

var XRANGEPLAINLOOSE = R++;
src[XRANGEPLAINLOOSE] = '[v=\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +
                        '(?:\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +
                        '(?:\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +
                        '(?:' + src[PRERELEASELOOSE] + ')?' +
                        src[BUILD] + '?' +
                        ')?)?';

var XRANGE = R++;
src[XRANGE] = '^' + src[GTLT] + '\\s*' + src[XRANGEPLAIN] + '$';
var XRANGELOOSE = R++;
src[XRANGELOOSE] = '^' + src[GTLT] + '\\s*' + src[XRANGEPLAINLOOSE] + '$';

// Tilde ranges.
// Meaning is "reasonably at or greater than"
var LONETILDE = R++;
src[LONETILDE] = '(?:~>?)';

var TILDETRIM = R++;
src[TILDETRIM] = '(\\s*)' + src[LONETILDE] + '\\s+';
re[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');
var tildeTrimReplace = '$1~';

var TILDE = R++;
src[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';
var TILDELOOSE = R++;
src[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';

// Caret ranges.
// Meaning is "at least and backwards compatible with"
var LONECARET = R++;
src[LONECARET] = '(?:\\^)';

var CARETTRIM = R++;
src[CARETTRIM] = '(\\s*)' + src[LONECARET] + '\\s+';
re[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');
var caretTrimReplace = '$1^';

var CARET = R++;
src[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';
var CARETLOOSE = R++;
src[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';

// A simple gt/lt/eq thing, or just "" to indicate "any version"
var COMPARATORLOOSE = R++;
src[COMPARATORLOOSE] = '^' + src[GTLT] + '\\s*(' + LOOSEPLAIN + ')$|^$';
var COMPARATOR = R++;
src[COMPARATOR] = '^' + src[GTLT] + '\\s*(' + FULLPLAIN + ')$|^$';


// An expression to strip any whitespace between the gtlt and the thing
// it modifies, so that `> 1.2.3` ==> `>1.2.3`
var COMPARATORTRIM = R++;
src[COMPARATORTRIM] = '(\\s*)' + src[GTLT] +
                      '\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';

// this one has to use the /g flag
re[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');
var comparatorTrimReplace = '$1$2$3';


// Something like `1.2.3 - 1.2.4`
// Note that these all use the loose form, because they'll be
// checked against either the strict or loose comparator form
// later.
var HYPHENRANGE = R++;
src[HYPHENRANGE] = '^\\s*(' + src[XRANGEPLAIN] + ')' +
                   '\\s+-\\s+' +
                   '(' + src[XRANGEPLAIN] + ')' +
                   '\\s*$';

var HYPHENRANGELOOSE = R++;
src[HYPHENRANGELOOSE] = '^\\s*(' + src[XRANGEPLAINLOOSE] + ')' +
                        '\\s+-\\s+' +
                        '(' + src[XRANGEPLAINLOOSE] + ')' +
                        '\\s*$';

// Star ranges basically just allow anything at all.
var STAR = R++;
src[STAR] = '(<|>)?=?\\s*\\*';

// Compile to actual regexp objects.
// All are flag-free, unless they were created above with a flag.
for (var i = 0; i < R; i++) {
  debug(i, src[i]);
  if (!re[i])
    re[i] = new RegExp(src[i]);
}

exports.parse = parse;
function parse(version, loose) {
  if (version instanceof SemVer)
    return version;

  if (typeof version !== 'string')
    return null;

  if (version.length > MAX_LENGTH)
    return null;

  var r = loose ? re[LOOSE] : re[FULL];
  if (!r.test(version))
    return null;

  try {
    return new SemVer(version, loose);
  } catch (er) {
    return null;
  }
}

exports.valid = valid;
function valid(version, loose) {
  var v = parse(version, loose);
  return v ? v.version : null;
}


exports.clean = clean;
function clean(version, loose) {
  var s = parse(version.trim().replace(/^[=v]+/, ''), loose);
  return s ? s.version : null;
}

exports.SemVer = SemVer;

function SemVer(version, loose) {
  if (version instanceof SemVer) {
    if (version.loose === loose)
      return version;
    else
      version = version.version;
  } else if (typeof version !== 'string') {
    throw new TypeError('Invalid Version: ' + version);
  }

  if (version.length > MAX_LENGTH)
    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')

  if (!(this instanceof SemVer))
    return new SemVer(version, loose);

  debug('SemVer', version, loose);
  this.loose = loose;
  var m = version.trim().match(loose ? re[LOOSE] : re[FULL]);

  if (!m)
    throw new TypeError('Invalid Version: ' + version);

  this.raw = version;

  // these are actually numbers
  this.major = +m[1];
  this.minor = +m[2];
  this.patch = +m[3];

  if (this.major > MAX_SAFE_INTEGER || this.major < 0)
    throw new TypeError('Invalid major version')

  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0)
    throw new TypeError('Invalid minor version')

  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0)
    throw new TypeError('Invalid patch version')

  // numberify any prerelease numeric ids
  if (!m[4])
    this.prerelease = [];
  else
    this.prerelease = m[4].split('.').map(function(id) {
      if (/^[0-9]+$/.test(id)) {
        var num = +id
        if (num >= 0 && num < MAX_SAFE_INTEGER)
          return num
      }
      return id;
    });

  this.build = m[5] ? m[5].split('.') : [];
  this.format();
}

SemVer.prototype.format = function() {
  this.version = this.major + '.' + this.minor + '.' + this.patch;
  if (this.prerelease.length)
    this.version += '-' + this.prerelease.join('.');
  return this.version;
};

SemVer.prototype.toString = function() {
  return this.version;
};

SemVer.prototype.compare = function(other) {
  debug('SemVer.compare', this.version, this.loose, other);
  if (!(other instanceof SemVer))
    other = new SemVer(other, this.loose);

  return this.compareMain(other) || this.comparePre(other);
};

SemVer.prototype.compareMain = function(other) {
  if (!(other instanceof SemVer))
    other = new SemVer(other, this.loose);

  return compareIdentifiers(this.major, other.major) ||
         compareIdentifiers(this.minor, other.minor) ||
         compareIdentifiers(this.patch, other.patch);
};

SemVer.prototype.comparePre = function(other) {
  if (!(other instanceof SemVer))
    other = new SemVer(other, this.loose);

  // NOT having a prerelease is > having one
  if (this.prerelease.length && !other.prerelease.length)
    return -1;
  else if (!this.prerelease.length && other.prerelease.length)
    return 1;
  else if (!this.prerelease.length && !other.prerelease.length)
    return 0;

  var i = 0;
  do {
    var a = this.prerelease[i];
    var b = other.prerelease[i];
    debug('prerelease compare', i, a, b);
    if (a === undefined && b === undefined)
      return 0;
    else if (b === undefined)
      return 1;
    else if (a === undefined)
      return -1;
    else if (a === b)
      continue;
    else
      return compareIdentifiers(a, b);
  } while (++i);
};

// preminor will bump the version up to the next minor release, and immediately
// down to pre-release. premajor and prepatch work the same way.
SemVer.prototype.inc = function(release, identifier) {
  switch (release) {
    case 'premajor':
      this.prerelease.length = 0;
      this.patch = 0;
      this.minor = 0;
      this.major++;
      this.inc('pre', identifier);
      break;
    case 'preminor':
      this.prerelease.length = 0;
      this.patch = 0;
      this.minor++;
      this.inc('pre', identifier);
      break;
    case 'prepatch':
      // If this is already a prerelease, it will bump to the next version
      // drop any prereleases that might already exist, since they are not
      // relevant at this point.
      this.prerelease.length = 0;
      this.inc('patch', identifier);
      this.inc('pre', identifier);
      break;
    // If the input is a non-prerelease version, this acts the same as
    // prepatch.
    case 'prerelease':
      if (this.prerelease.length === 0)
        this.inc('patch', identifier);
      this.inc('pre', identifier);
      break;

    case 'major':
      // If this is a pre-major version, bump up to the same major version.
      // Otherwise increment major.
      // 1.0.0-5 bumps to 1.0.0
      // 1.1.0 bumps to 2.0.0
      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0)
        this.major++;
      this.minor = 0;
      this.patch = 0;
      this.prerelease = [];
      break;
    case 'minor':
      // If this is a pre-minor version, bump up to the same minor version.
      // Otherwise increment minor.
      // 1.2.0-5 bumps to 1.2.0
      // 1.2.1 bumps to 1.3.0
      if (this.patch !== 0 || this.prerelease.length === 0)
        this.minor++;
      this.patch = 0;
      this.prerelease = [];
      break;
    case 'patch':
      // If this is not a pre-release version, it will increment the patch.
      // If it is a pre-release it will bump up to the same patch version.
      // 1.2.0-5 patches to 1.2.0
      // 1.2.0 patches to 1.2.1
      if (this.prerelease.length === 0)
        this.patch++;
      this.prerelease = [];
      break;
    // This probably shouldn't be used publicly.
    // 1.0.0 "pre" would become 1.0.0-0 which is the wrong direction.
    case 'pre':
      if (this.prerelease.length === 0)
        this.prerelease = [0];
      else {
        var i = this.prerelease.length;
        while (--i >= 0) {
          if (typeof this.prerelease[i] === 'number') {
            this.prerelease[i]++;
            i = -2;
          }
        }
        if (i === -1) // didn't increment anything
          this.prerelease.push(0);
      }
      if (identifier) {
        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,
        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0
        if (this.prerelease[0] === identifier) {
          if (isNaN(this.prerelease[1]))
            this.prerelease = [identifier, 0];
        } else
          this.prerelease = [identifier, 0];
      }
      break;

    default:
      throw new Error('invalid increment argument: ' + release);
  }
  this.format();
  this.raw = this.version;
  return this;
};

exports.inc = inc;
function inc(version, release, loose, identifier) {
  if (typeof(loose) === 'string') {
    identifier = loose;
    loose = undefined;
  }

  try {
    return new SemVer(version, loose).inc(release, identifier).version;
  } catch (er) {
    return null;
  }
}

exports.diff = diff;
function diff(version1, version2) {
  if (eq(version1, version2)) {
    return null;
  } else {
    var v1 = parse(version1);
    var v2 = parse(version2);
    if (v1.prerelease.length || v2.prerelease.length) {
      for (var key in v1) {
        if (key === 'major' || key === 'minor' || key === 'patch') {
          if (v1[key] !== v2[key]) {
            return 'pre'+key;
          }
        }
      }
      return 'prerelease';
    }
    for (var key in v1) {
      if (key === 'major' || key === 'minor' || key === 'patch') {
        if (v1[key] !== v2[key]) {
          return key;
        }
      }
    }
  }
}

exports.compareIdentifiers = compareIdentifiers;

var numeric = /^[0-9]+$/;
function compareIdentifiers(a, b) {
  var anum = numeric.test(a);
  var bnum = numeric.test(b);

  if (anum && bnum) {
    a = +a;
    b = +b;
  }

  return (anum && !bnum) ? -1 :
         (bnum && !anum) ? 1 :
         a < b ? -1 :
         a > b ? 1 :
         0;
}

exports.rcompareIdentifiers = rcompareIdentifiers;
function rcompareIdentifiers(a, b) {
  return compareIdentifiers(b, a);
}

exports.major = major;
function major(a, loose) {
  return new SemVer(a, loose).major;
}

exports.minor = minor;
function minor(a, loose) {
  return new SemVer(a, loose).minor;
}

exports.patch = patch;
function patch(a, loose) {
  return new SemVer(a, loose).patch;
}

exports.compare = compare;
function compare(a, b, loose) {
  return new SemVer(a, loose).compare(b);
}

exports.compareLoose = compareLoose;
function compareLoose(a, b) {
  return compare(a, b, true);
}

exports.rcompare = rcompare;
function rcompare(a, b, loose) {
  return compare(b, a, loose);
}

exports.sort = sort;
function sort(list, loose) {
  return list.sort(function(a, b) {
    return exports.compare(a, b, loose);
  });
}

exports.rsort = rsort;
function rsort(list, loose) {
  return list.sort(function(a, b) {
    return exports.rcompare(a, b, loose);
  });
}

exports.gt = gt;
function gt(a, b, loose) {
  return compare(a, b, loose) > 0;
}

exports.lt = lt;
function lt(a, b, loose) {
  return compare(a, b, loose) < 0;
}

exports.eq = eq;
function eq(a, b, loose) {
  return compare(a, b, loose) === 0;
}

exports.neq = neq;
function neq(a, b, loose) {
  return compare(a, b, loose) !== 0;
}

exports.gte = gte;
function gte(a, b, loose) {
  return compare(a, b, loose) >= 0;
}

exports.lte = lte;
function lte(a, b, loose) {
  return compare(a, b, loose) <= 0;
}

exports.cmp = cmp;
function cmp(a, op, b, loose) {
  var ret;
  switch (op) {
    case '===':
      if (typeof a === 'object') a = a.version;
      if (typeof b === 'object') b = b.version;
      ret = a === b;
      break;
    case '!==':
      if (typeof a === 'object') a = a.version;
      if (typeof b === 'object') b = b.version;
      ret = a !== b;
      break;
    case '': case '=': case '==': ret = eq(a, b, loose); break;
    case '!=': ret = neq(a, b, loose); break;
    case '>': ret = gt(a, b, loose); break;
    case '>=': ret = gte(a, b, loose); break;
    case '<': ret = lt(a, b, loose); break;
    case '<=': ret = lte(a, b, loose); break;
    default: throw new TypeError('Invalid operator: ' + op);
  }
  return ret;
}

exports.Comparator = Comparator;
function Comparator(comp, loose) {
  if (comp instanceof Comparator) {
    if (comp.loose === loose)
      return comp;
    else
      comp = comp.value;
  }

  if (!(this instanceof Comparator))
    return new Comparator(comp, loose);

  debug('comparator', comp, loose);
  this.loose = loose;
  this.parse(comp);

  if (this.semver === ANY)
    this.value = '';
  else
    this.value = this.operator + this.semver.version;

  debug('comp', this);
}

var ANY = {};
Comparator.prototype.parse = function(comp) {
  var r = this.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];
  var m = comp.match(r);

  if (!m)
    throw new TypeError('Invalid comparator: ' + comp);

  this.operator = m[1];
  if (this.operator === '=')
    this.operator = '';

  // if it literally is just '>' or '' then allow anything.
  if (!m[2])
    this.semver = ANY;
  else
    this.semver = new SemVer(m[2], this.loose);
};

Comparator.prototype.toString = function() {
  return this.value;
};

Comparator.prototype.test = function(version) {
  debug('Comparator.test', version, this.loose);

  if (this.semver === ANY)
    return true;

  if (typeof version === 'string')
    version = new SemVer(version, this.loose);

  return cmp(version, this.operator, this.semver, this.loose);
};


exports.Range = Range;
function Range(range, loose) {
  if ((range instanceof Range) && range.loose === loose)
    return range;

  if (!(this instanceof Range))
    return new Range(range, loose);

  this.loose = loose;

  // First, split based on boolean or ||
  this.raw = range;
  this.set = range.split(/\s*\|\|\s*/).map(function(range) {
    return this.parseRange(range.trim());
  }, this).filter(function(c) {
    // throw out any that are not relevant for whatever reason
    return c.length;
  });

  if (!this.set.length) {
    throw new TypeError('Invalid SemVer Range: ' + range);
  }

  this.format();
}

Range.prototype.format = function() {
  this.range = this.set.map(function(comps) {
    return comps.join(' ').trim();
  }).join('||').trim();
  return this.range;
};

Range.prototype.toString = function() {
  return this.range;
};

Range.prototype.parseRange = function(range) {
  var loose = this.loose;
  range = range.trim();
  debug('range', range, loose);
  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`
  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];
  range = range.replace(hr, hyphenReplace);
  debug('hyphen replace', range);
  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`
  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);
  debug('comparator trim', range, re[COMPARATORTRIM]);

  // `~ 1.2.3` => `~1.2.3`
  range = range.replace(re[TILDETRIM], tildeTrimReplace);

  // `^ 1.2.3` => `^1.2.3`
  range = range.replace(re[CARETTRIM], caretTrimReplace);

  // normalize spaces
  range = range.split(/\s+/).join(' ');

  // At this point, the range is completely trimmed and
  // ready to be split into comparators.

  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];
  var set = range.split(' ').map(function(comp) {
    return parseComparator(comp, loose);
  }).join(' ').split(/\s+/);
  if (this.loose) {
    // in loose mode, throw out any that are not valid comparators
    set = set.filter(function(comp) {
      return !!comp.match(compRe);
    });
  }
  set = set.map(function(comp) {
    return new Comparator(comp, loose);
  });

  return set;
};

// Mostly just for testing and legacy API reasons
exports.toComparators = toComparators;
function toComparators(range, loose) {
  return new Range(range, loose).set.map(function(comp) {
    return comp.map(function(c) {
      return c.value;
    }).join(' ').trim().split(' ');
  });
}

// comprised of xranges, tildes, stars, and gtlt's at this point.
// already replaced the hyphen ranges
// turn into a set of JUST comparators.
function parseComparator(comp, loose) {
  debug('comp', comp);
  comp = replaceCarets(comp, loose);
  debug('caret', comp);
  comp = replaceTildes(comp, loose);
  debug('tildes', comp);
  comp = replaceXRanges(comp, loose);
  debug('xrange', comp);
  comp = replaceStars(comp, loose);
  debug('stars', comp);
  return comp;
}

function isX(id) {
  return !id || id.toLowerCase() === 'x' || id === '*';
}

// ~, ~> --> * (any, kinda silly)
// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0
// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0
// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0
// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0
// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0
function replaceTildes(comp, loose) {
  return comp.trim().split(/\s+/).map(function(comp) {
    return replaceTilde(comp, loose);
  }).join(' ');
}

function replaceTilde(comp, loose) {
  var r = loose ? re[TILDELOOSE] : re[TILDE];
  return comp.replace(r, function(_, M, m, p, pr) {
    debug('tilde', comp, _, M, m, p, pr);
    var ret;

    if (isX(M))
      ret = '';
    else if (isX(m))
      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';
    else if (isX(p))
      // ~1.2 == >=1.2.0- <1.3.0-
      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';
    else if (pr) {
      debug('replaceTilde pr', pr);
      if (pr.charAt(0) !== '-')
        pr = '-' + pr;
      ret = '>=' + M + '.' + m + '.' + p + pr +
            ' <' + M + '.' + (+m + 1) + '.0';
    } else
      // ~1.2.3 == >=1.2.3 <1.3.0
      ret = '>=' + M + '.' + m + '.' + p +
            ' <' + M + '.' + (+m + 1) + '.0';

    debug('tilde return', ret);
    return ret;
  });
}

// ^ --> * (any, kinda silly)
// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0
// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0
// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0
// ^1.2.3 --> >=1.2.3 <2.0.0
// ^1.2.0 --> >=1.2.0 <2.0.0
function replaceCarets(comp, loose) {
  return comp.trim().split(/\s+/).map(function(comp) {
    return replaceCaret(comp, loose);
  }).join(' ');
}

function replaceCaret(comp, loose) {
  debug('caret', comp, loose);
  var r = loose ? re[CARETLOOSE] : re[CARET];
  return comp.replace(r, function(_, M, m, p, pr) {
    debug('caret', comp, _, M, m, p, pr);
    var ret;

    if (isX(M))
      ret = '';
    else if (isX(m))
      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';
    else if (isX(p)) {
      if (M === '0')
        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';
      else
        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';
    } else if (pr) {
      debug('replaceCaret pr', pr);
      if (pr.charAt(0) !== '-')
        pr = '-' + pr;
      if (M === '0') {
        if (m === '0')
          ret = '>=' + M + '.' + m + '.' + p + pr +
                ' <' + M + '.' + m + '.' + (+p + 1);
        else
          ret = '>=' + M + '.' + m + '.' + p + pr +
                ' <' + M + '.' + (+m + 1) + '.0';
      } else
        ret = '>=' + M + '.' + m + '.' + p + pr +
              ' <' + (+M + 1) + '.0.0';
    } else {
      debug('no pr');
      if (M === '0') {
        if (m === '0')
          ret = '>=' + M + '.' + m + '.' + p +
                ' <' + M + '.' + m + '.' + (+p + 1);
        else
          ret = '>=' + M + '.' + m + '.' + p +
                ' <' + M + '.' + (+m + 1) + '.0';
      } else
        ret = '>=' + M + '.' + m + '.' + p +
              ' <' + (+M + 1) + '.0.0';
    }

    debug('caret return', ret);
    return ret;
  });
}

function replaceXRanges(comp, loose) {
  debug('replaceXRanges', comp, loose);
  return comp.split(/\s+/).map(function(comp) {
    return replaceXRange(comp, loose);
  }).join(' ');
}

function replaceXRange(comp, loose) {
  comp = comp.trim();
  var r = loose ? re[XRANGELOOSE] : re[XRANGE];
  return comp.replace(r, function(ret, gtlt, M, m, p, pr) {
    debug('xRange', comp, ret, gtlt, M, m, p, pr);
    var xM = isX(M);
    var xm = xM || isX(m);
    var xp = xm || isX(p);
    var anyX = xp;

    if (gtlt === '=' && anyX)
      gtlt = '';

    if (xM) {
      if (gtlt === '>' || gtlt === '<') {
        // nothing is allowed
        ret = '<0.0.0';
      } else {
        // nothing is forbidden
        ret = '*';
      }
    } else if (gtlt && anyX) {
      // replace X with 0
      if (xm)
        m = 0;
      if (xp)
        p = 0;

      if (gtlt === '>') {
        // >1 => >=2.0.0
        // >1.2 => >=1.3.0
        // >1.2.3 => >= 1.2.4
        gtlt = '>=';
        if (xm) {
          M = +M + 1;
          m = 0;
          p = 0;
        } else if (xp) {
          m = +m + 1;
          p = 0;
        }
      } else if (gtlt === '<=') {
        // <=0.7.x is actually <0.8.0, since any 0.7.x should
        // pass.  Similarly, <=7.x is actually <8.0.0, etc.
        gtlt = '<'
        if (xm)
          M = +M + 1
        else
          m = +m + 1
      }

      ret = gtlt + M + '.' + m + '.' + p;
    } else if (xm) {
      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';
    } else if (xp) {
      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';
    }

    debug('xRange return', ret);

    return ret;
  });
}

// Because * is AND-ed with everything else in the comparator,
// and '' means "any version", just remove the *s entirely.
function replaceStars(comp, loose) {
  debug('replaceStars', comp, loose);
  // Looseness is ignored here.  star is always as loose as it gets!
  return comp.trim().replace(re[STAR], '');
}

// This function is passed to string.replace(re[HYPHENRANGE])
// M, m, patch, prerelease, build
// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5
// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do
// 1.2 - 3.4 => >=1.2.0 <3.5.0
function hyphenReplace($0,
                       from, fM, fm, fp, fpr, fb,
                       to, tM, tm, tp, tpr, tb) {

  if (isX(fM))
    from = '';
  else if (isX(fm))
    from = '>=' + fM + '.0.0';
  else if (isX(fp))
    from = '>=' + fM + '.' + fm + '.0';
  else
    from = '>=' + from;

  if (isX(tM))
    to = '';
  else if (isX(tm))
    to = '<' + (+tM + 1) + '.0.0';
  else if (isX(tp))
    to = '<' + tM + '.' + (+tm + 1) + '.0';
  else if (tpr)
    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;
  else
    to = '<=' + to;

  return (from + ' ' + to).trim();
}


// if ANY of the sets match ALL of its comparators, then pass
Range.prototype.test = function(version) {
  if (!version)
    return false;

  if (typeof version === 'string')
    version = new SemVer(version, this.loose);

  for (var i = 0; i < this.set.length; i++) {
    if (testSet(this.set[i], version))
      return true;
  }
  return false;
};

function testSet(set, version) {
  for (var i = 0; i < set.length; i++) {
    if (!set[i].test(version))
      return false;
  }

  if (version.prerelease.length) {
    // Find the set of versions that are allowed to have prereleases
    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0
    // That should allow `1.2.3-pr.2` to pass.
    // However, `1.2.4-alpha.notready` should NOT be allowed,
    // even though it's within the range set by the comparators.
    for (var i = 0; i < set.length; i++) {
      debug(set[i].semver);
      if (set[i].semver === ANY)
        continue;

      if (set[i].semver.prerelease.length > 0) {
        var allowed = set[i].semver;
        if (allowed.major === version.major &&
            allowed.minor === version.minor &&
            allowed.patch === version.patch)
          return true;
      }
    }

    // Version has a -pre, but it's not one of the ones we like.
    return false;
  }

  return true;
}

exports.satisfies = satisfies;
function satisfies(version, range, loose) {
  try {
    range = new Range(range, loose);
  } catch (er) {
    return false;
  }
  return range.test(version);
}

exports.maxSatisfying = maxSatisfying;
function maxSatisfying(versions, range, loose) {
  return versions.filter(function(version) {
    return satisfies(version, range, loose);
  }).sort(function(a, b) {
    return rcompare(a, b, loose);
  })[0] || null;
}

exports.validRange = validRange;
function validRange(range, loose) {
  try {
    // Return '*' instead of '' so that truthiness works.
    // This will throw if it's invalid anyway
    return new Range(range, loose).range || '*';
  } catch (er) {
    return null;
  }
}

// Determine if version is less than all the versions possible in the range
exports.ltr = ltr;
function ltr(version, range, loose) {
  return outside(version, range, '<', loose);
}

// Determine if version is greater than all the versions possible in the range.
exports.gtr = gtr;
function gtr(version, range, loose) {
  return outside(version, range, '>', loose);
}

exports.outside = outside;
function outside(version, range, hilo, loose) {
  version = new SemVer(version, loose);
  range = new Range(range, loose);

  var gtfn, ltefn, ltfn, comp, ecomp;
  switch (hilo) {
    case '>':
      gtfn = gt;
      ltefn = lte;
      ltfn = lt;
      comp = '>';
      ecomp = '>=';
      break;
    case '<':
      gtfn = lt;
      ltefn = gte;
      ltfn = gt;
      comp = '<';
      ecomp = '<=';
      break;
    default:
      throw new TypeError('Must provide a hilo val of "<" or ">"');
  }

  // If it satisifes the range it is not outside
  if (satisfies(version, range, loose)) {
    return false;
  }

  // From now on, variable terms are as if we're in "gtr" mode.
  // but note that everything is flipped for the "ltr" function.

  for (var i = 0; i < range.set.length; ++i) {
    var comparators = range.set[i];

    var high = null;
    var low = null;

    comparators.forEach(function(comparator) {
      if (comparator.semver === ANY) {
        comparator = new Comparator('>=0.0.0')
      }
      high = high || comparator;
      low = low || comparator;
      if (gtfn(comparator.semver, high.semver, loose)) {
        high = comparator;
      } else if (ltfn(comparator.semver, low.semver, loose)) {
        low = comparator;
      }
    });

    // If the edge version comparator has a operator then our version
    // isn't outside it
    if (high.operator === comp || high.operator === ecomp) {
      return false;
    }

    // If the lowest version comparator has an operator and our version
    // is less than it then it isn't higher than the range
    if ((!low.operator || low.operator === comp) &&
        ltefn(version, low.semver)) {
      return false;
    } else if (low.operator === ecomp && ltfn(version, low.semver)) {
      return false;
    }
  }
  return true;
}

}).call(this,require('_process'))
},{"_process":158}],180:[function(require,module,exports){
(function (Buffer){
// prototype class for hash functions
function Hash (blockSize, finalSize) {
  this._block = new Buffer(blockSize)
  this._finalSize = finalSize
  this._blockSize = blockSize
  this._len = 0
  this._s = 0
}

Hash.prototype.update = function (data, enc) {
  if (typeof data === 'string') {
    enc = enc || 'utf8'
    data = new Buffer(data, enc)
  }

  var l = this._len += data.length
  var s = this._s || 0
  var f = 0
  var buffer = this._block

  while (s < l) {
    var t = Math.min(data.length, f + this._blockSize - (s % this._blockSize))
    var ch = (t - f)

    for (var i = 0; i < ch; i++) {
      buffer[(s % this._blockSize) + i] = data[i + f]
    }

    s += ch
    f += ch

    if ((s % this._blockSize) === 0) {
      this._update(buffer)
    }
  }
  this._s = s

  return this
}

Hash.prototype.digest = function (enc) {
  // Suppose the length of the message M, in bits, is l
  var l = this._len * 8

  // Append the bit 1 to the end of the message
  this._block[this._len % this._blockSize] = 0x80

  // and then k zero bits, where k is the smallest non-negative solution to the equation (l + 1 + k) === finalSize mod blockSize
  this._block.fill(0, this._len % this._blockSize + 1)

  if (l % (this._blockSize * 8) >= this._finalSize * 8) {
    this._update(this._block)
    this._block.fill(0)
  }

  // to this append the block which is equal to the number l written in binary
  // TODO: handle case where l is > Math.pow(2, 29)
  this._block.writeInt32BE(l, this._blockSize - 4)

  var hash = this._update(this._block) || this._hash()

  return enc ? hash.toString(enc) : hash
}

Hash.prototype._update = function () {
  throw new Error('_update must be implemented by subclass')
}

module.exports = Hash

}).call(this,require("buffer").Buffer)
},{"buffer":45}],181:[function(require,module,exports){
var exports = module.exports = function SHA (algorithm) {
  algorithm = algorithm.toLowerCase()

  var Algorithm = exports[algorithm]
  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')

  return new Algorithm()
}

exports.sha = require('./sha')
exports.sha1 = require('./sha1')
exports.sha224 = require('./sha224')
exports.sha256 = require('./sha256')
exports.sha384 = require('./sha384')
exports.sha512 = require('./sha512')

},{"./sha":182,"./sha1":183,"./sha224":184,"./sha256":185,"./sha384":186,"./sha512":187}],182:[function(require,module,exports){
(function (Buffer){
/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
 * in FIPS PUB 180-1
 * This source code is derived from sha1.js of the same repository.
 * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
 * operation was added.
 */

var inherits = require('inherits')
var Hash = require('./hash')

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha, Hash)

Sha.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha.prototype._hash = function () {
  var H = new Buffer(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha

}).call(this,require("buffer").Buffer)
},{"./hash":180,"buffer":45,"inherits":95}],183:[function(require,module,exports){
(function (Buffer){
/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */

var inherits = require('inherits')
var Hash = require('./hash')

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha1 () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha1, Hash)

Sha1.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl1 (num) {
  return (num << 1) | (num >>> 31)
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha1.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha1.prototype._hash = function () {
  var H = new Buffer(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha1

}).call(this,require("buffer").Buffer)
},{"./hash":180,"buffer":45,"inherits":95}],184:[function(require,module,exports){
(function (Buffer){
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var Sha256 = require('./sha256')
var Hash = require('./hash')

var W = new Array(64)

function Sha224 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha224, Sha256)

Sha224.prototype.init = function () {
  this._a = 0xc1059ed8
  this._b = 0x367cd507
  this._c = 0x3070dd17
  this._d = 0xf70e5939
  this._e = 0xffc00b31
  this._f = 0x68581511
  this._g = 0x64f98fa7
  this._h = 0xbefa4fa4

  return this
}

Sha224.prototype._hash = function () {
  var H = new Buffer(28)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)

  return H
}

module.exports = Sha224

}).call(this,require("buffer").Buffer)
},{"./hash":180,"./sha256":185,"buffer":45,"inherits":95}],185:[function(require,module,exports){
(function (Buffer){
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var Hash = require('./hash')

var K = [
  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,
  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,
  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,
  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,
  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,
  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,
  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,
  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,
  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,
  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,
  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,
  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,
  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,
  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,
  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,
  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2
]

var W = new Array(64)

function Sha256 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha256, Hash)

Sha256.prototype.init = function () {
  this._a = 0x6a09e667
  this._b = 0xbb67ae85
  this._c = 0x3c6ef372
  this._d = 0xa54ff53a
  this._e = 0x510e527f
  this._f = 0x9b05688c
  this._g = 0x1f83d9ab
  this._h = 0x5be0cd19

  return this
}

function ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x) {
  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)
}

function sigma1 (x) {
  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)
}

function gamma0 (x) {
  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)
}

function gamma1 (x) {
  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)
}

Sha256.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0
  var f = this._f | 0
  var g = this._g | 0
  var h = this._h | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0

  for (var j = 0; j < 64; ++j) {
    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0
    var T2 = (sigma0(a) + maj(a, b, c)) | 0

    h = g
    g = f
    f = e
    e = (d + T1) | 0
    d = c
    c = b
    b = a
    a = (T1 + T2) | 0
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
  this._f = (f + this._f) | 0
  this._g = (g + this._g) | 0
  this._h = (h + this._h) | 0
}

Sha256.prototype._hash = function () {
  var H = new Buffer(32)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)
  H.writeInt32BE(this._h, 28)

  return H
}

module.exports = Sha256

}).call(this,require("buffer").Buffer)
},{"./hash":180,"buffer":45,"inherits":95}],186:[function(require,module,exports){
(function (Buffer){
var inherits = require('inherits')
var SHA512 = require('./sha512')
var Hash = require('./hash')

var W = new Array(160)

function Sha384 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha384, SHA512)

Sha384.prototype.init = function () {
  this._ah = 0xcbbb9d5d
  this._bh = 0x629a292a
  this._ch = 0x9159015a
  this._dh = 0x152fecd8
  this._eh = 0x67332667
  this._fh = 0x8eb44a87
  this._gh = 0xdb0c2e0d
  this._hh = 0x47b5481d

  this._al = 0xc1059ed8
  this._bl = 0x367cd507
  this._cl = 0x3070dd17
  this._dl = 0xf70e5939
  this._el = 0xffc00b31
  this._fl = 0x68581511
  this._gl = 0x64f98fa7
  this._hl = 0xbefa4fa4

  return this
}

Sha384.prototype._hash = function () {
  var H = new Buffer(48)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)

  return H
}

module.exports = Sha384

}).call(this,require("buffer").Buffer)
},{"./hash":180,"./sha512":187,"buffer":45,"inherits":95}],187:[function(require,module,exports){
(function (Buffer){
var inherits = require('inherits')
var Hash = require('./hash')

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
]

var W = new Array(160)

function Sha512 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha512, Hash)

Sha512.prototype.init = function () {
  this._ah = 0x6a09e667
  this._bh = 0xbb67ae85
  this._ch = 0x3c6ef372
  this._dh = 0xa54ff53a
  this._eh = 0x510e527f
  this._fh = 0x9b05688c
  this._gh = 0x1f83d9ab
  this._hh = 0x5be0cd19

  this._al = 0xf3bcc908
  this._bl = 0x84caa73b
  this._cl = 0xfe94f82b
  this._dl = 0x5f1d36f1
  this._el = 0xade682d1
  this._fl = 0x2b3e6c1f
  this._gl = 0xfb41bd6b
  this._hl = 0x137e2179

  return this
}

function Ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x, xl) {
  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)
}

function sigma1 (x, xl) {
  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)
}

function Gamma0 (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)
}

function Gamma0l (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)
}

function Gamma1 (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)
}

function Gamma1l (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)
}

function getCarry (a, b) {
  return (a >>> 0) < (b >>> 0) ? 1 : 0
}

Sha512.prototype._update = function (M) {
  var W = this._w

  var ah = this._ah | 0
  var bh = this._bh | 0
  var ch = this._ch | 0
  var dh = this._dh | 0
  var eh = this._eh | 0
  var fh = this._fh | 0
  var gh = this._gh | 0
  var hh = this._hh | 0

  var al = this._al | 0
  var bl = this._bl | 0
  var cl = this._cl | 0
  var dl = this._dl | 0
  var el = this._el | 0
  var fl = this._fl | 0
  var gl = this._gl | 0
  var hl = this._hl | 0

  for (var i = 0; i < 32; i += 2) {
    W[i] = M.readInt32BE(i * 4)
    W[i + 1] = M.readInt32BE(i * 4 + 4)
  }
  for (; i < 160; i += 2) {
    var xh = W[i - 15 * 2]
    var xl = W[i - 15 * 2 + 1]
    var gamma0 = Gamma0(xh, xl)
    var gamma0l = Gamma0l(xl, xh)

    xh = W[i - 2 * 2]
    xl = W[i - 2 * 2 + 1]
    var gamma1 = Gamma1(xh, xl)
    var gamma1l = Gamma1l(xl, xh)

    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
    var Wi7h = W[i - 7 * 2]
    var Wi7l = W[i - 7 * 2 + 1]

    var Wi16h = W[i - 16 * 2]
    var Wi16l = W[i - 16 * 2 + 1]

    var Wil = (gamma0l + Wi7l) | 0
    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0
    Wil = (Wil + gamma1l) | 0
    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0
    Wil = (Wil + Wi16l) | 0
    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0

    W[i] = Wih
    W[i + 1] = Wil
  }

  for (var j = 0; j < 160; j += 2) {
    Wih = W[j]
    Wil = W[j + 1]

    var majh = maj(ah, bh, ch)
    var majl = maj(al, bl, cl)

    var sigma0h = sigma0(ah, al)
    var sigma0l = sigma0(al, ah)
    var sigma1h = sigma1(eh, el)
    var sigma1l = sigma1(el, eh)

    // t1 = h + sigma1 + ch + K[j] + W[j]
    var Kih = K[j]
    var Kil = K[j + 1]

    var chh = Ch(eh, fh, gh)
    var chl = Ch(el, fl, gl)

    var t1l = (hl + sigma1l) | 0
    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0
    t1l = (t1l + chl) | 0
    t1h = (t1h + chh + getCarry(t1l, chl)) | 0
    t1l = (t1l + Kil) | 0
    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0
    t1l = (t1l + Wil) | 0
    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0

    // t2 = sigma0 + maj
    var t2l = (sigma0l + majl) | 0
    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0

    hh = gh
    hl = gl
    gh = fh
    gl = fl
    fh = eh
    fl = el
    el = (dl + t1l) | 0
    eh = (dh + t1h + getCarry(el, dl)) | 0
    dh = ch
    dl = cl
    ch = bh
    cl = bl
    bh = ah
    bl = al
    al = (t1l + t2l) | 0
    ah = (t1h + t2h + getCarry(al, t1l)) | 0
  }

  this._al = (this._al + al) | 0
  this._bl = (this._bl + bl) | 0
  this._cl = (this._cl + cl) | 0
  this._dl = (this._dl + dl) | 0
  this._el = (this._el + el) | 0
  this._fl = (this._fl + fl) | 0
  this._gl = (this._gl + gl) | 0
  this._hl = (this._hl + hl) | 0

  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0
  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0
  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0
  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0
  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0
  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0
  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0
  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0
}

Sha512.prototype._hash = function () {
  var H = new Buffer(64)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)
  writeInt64BE(this._gh, this._gl, 48)
  writeInt64BE(this._hh, this._hl, 56)

  return H
}

module.exports = Sha512

}).call(this,require("buffer").Buffer)
},{"./hash":180,"buffer":45,"inherits":95}],188:[function(require,module,exports){
(function (root) {
// lazy require symbols table
var _symbols, removelist;
function symbols(code) {
    if (_symbols) return _symbols[code];
    _symbols = require('unicode/category/So');
    removelist = ['sign','cross','of','symbol','staff','hand','black','white']
        .map(function (word) {return new RegExp(word, 'gi')});
    return _symbols[code];
}

function slug(string, opts) {
    string = string.toString();
    if ('string' === typeof opts)
        opts = {replacement:opts};
    opts = opts || {};
    opts.mode = opts.mode || slug.defaults.mode;
    var defaults = slug.defaults.modes[opts.mode];
    var keys = ['replacement','multicharmap','charmap','remove','lower'];
    for (var key, i = 0, l = keys.length; i < l; i++) { key = keys[i];
        opts[key] = (key in opts) ? opts[key] : defaults[key];
    }
    if ('undefined' === typeof opts.symbols)
        opts.symbols = defaults.symbols;

    var lengths = [];
    for (var key in opts.multicharmap) {
        if (!opts.multicharmap.hasOwnProperty(key))
            continue;

        var len = key.length;
        if (lengths.indexOf(len) === -1)
            lengths.push(len);
    }

    var code, unicode, result = "";
    for (var char, i = 0, l = string.length; i < l; i++) { char = string[i];
        if (!lengths.some(function (len) {
            var str = string.substr(i, len);
            if (opts.multicharmap[str]) {
                i += len - 1;
                char = opts.multicharmap[str];
                return true;
            } else return false;
        })) {
            if (opts.charmap[char]) {
                char = opts.charmap[char];
                code = char.charCodeAt(0);
            } else {
                code = string.charCodeAt(i);
            }
            if (opts.symbols && (unicode = symbols(code))) {
                char = unicode.name.toLowerCase();
                for(var j = 0, rl = removelist.length; j < rl; j++) {
                    char = char.replace(removelist[j], '');
                }
                char = char.replace(/^\s+|\s+$/g, '');
            }
        }
        char = char.replace(/[^\w\s\-\.\_~]/g, ''); // allowed
        if (opts.remove) char = char.replace(opts.remove, ''); // add flavour
        result += char;
    }
    result = result.replace(/^\s+|\s+$/g, ''); // trim leading/trailing spaces
    result = result.replace(/[-\s]+/g, opts.replacement); // convert spaces
    result = result.replace(opts.replacement+"$",''); // remove trailing separator
    if (opts.lower)
      result = result.toLowerCase();
    return result;
};

slug.defaults = {
    mode: 'pretty',
};

slug.multicharmap = slug.defaults.multicharmap = {
    '<3': 'love', '&&': 'and', '||': 'or', 'w/': 'with',
};

// https://code.djangoproject.com/browser/django/trunk/django/contrib/admin/media/js/urlify.js
slug.charmap  = slug.defaults.charmap = {
    // latin
    'À': 'A', 'Á': 'A', 'Â': 'A', 'Ã': 'A', 'Ä': 'A', 'Å': 'A', 'Æ': 'AE',
    'Ç': 'C', 'È': 'E', 'É': 'E', 'Ê': 'E', 'Ë': 'E', 'Ì': 'I', 'Í': 'I',
    'Î': 'I', 'Ï': 'I', 'Ð': 'D', 'Ñ': 'N', 'Ò': 'O', 'Ó': 'O', 'Ô': 'O',
    'Õ': 'O', 'Ö': 'O', 'Ő': 'O', 'Ø': 'O', 'Ù': 'U', 'Ú': 'U', 'Û': 'U',
    'Ü': 'U', 'Ű': 'U', 'Ý': 'Y', 'Þ': 'TH', 'ß': 'ss', 'à':'a', 'á':'a',
    'â': 'a', 'ã': 'a', 'ä': 'a', 'å': 'a', 'æ': 'ae', 'ç': 'c', 'è': 'e',
    'é': 'e', 'ê': 'e', 'ë': 'e', 'ì': 'i', 'í': 'i', 'î': 'i', 'ï': 'i',
    'ð': 'd', 'ñ': 'n', 'ò': 'o', 'ó': 'o', 'ô': 'o', 'õ': 'o', 'ö': 'o',
    'ő': 'o', 'ø': 'o', 'ù': 'u', 'ú': 'u', 'û': 'u', 'ü': 'u', 'ű': 'u',
    'ý': 'y', 'þ': 'th', 'ÿ': 'y', 'ẞ': 'SS',
    // greek
    'α':'a', 'β':'b', 'γ':'g', 'δ':'d', 'ε':'e', 'ζ':'z', 'η':'h', 'θ':'8',
    'ι':'i', 'κ':'k', 'λ':'l', 'μ':'m', 'ν':'n', 'ξ':'3', 'ο':'o', 'π':'p',
    'ρ':'r', 'σ':'s', 'τ':'t', 'υ':'y', 'φ':'f', 'χ':'x', 'ψ':'ps', 'ω':'w',
    'ά':'a', 'έ':'e', 'ί':'i', 'ό':'o', 'ύ':'y', 'ή':'h', 'ώ':'w', 'ς':'s',
    'ϊ':'i', 'ΰ':'y', 'ϋ':'y', 'ΐ':'i',
    'Α':'A', 'Β':'B', 'Γ':'G', 'Δ':'D', 'Ε':'E', 'Ζ':'Z', 'Η':'H', 'Θ':'8',
    'Ι':'I', 'Κ':'K', 'Λ':'L', 'Μ':'M', 'Ν':'N', 'Ξ':'3', 'Ο':'O', 'Π':'P',
    'Ρ':'R', 'Σ':'S', 'Τ':'T', 'Υ':'Y', 'Φ':'F', 'Χ':'X', 'Ψ':'PS', 'Ω':'W',
    'Ά':'A', 'Έ':'E', 'Ί':'I', 'Ό':'O', 'Ύ':'Y', 'Ή':'H', 'Ώ':'W', 'Ϊ':'I',
    'Ϋ':'Y',
    // turkish
    'ş':'s', 'Ş':'S', 'ı':'i', 'İ':'I',
    'ğ':'g', 'Ğ':'G',
    // russian
    'а':'a', 'б':'b', 'в':'v', 'г':'g', 'д':'d', 'е':'e', 'ё':'yo', 'ж':'zh',
    'з':'z', 'и':'i', 'й':'j', 'к':'k', 'л':'l', 'м':'m', 'н':'n', 'о':'o',
    'п':'p', 'р':'r', 'с':'s', 'т':'t', 'у':'u', 'ф':'f', 'х':'h', 'ц':'c',
    'ч':'ch', 'ш':'sh', 'щ':'sh', 'ъ':'u', 'ы':'y', 'ь':'', 'э':'e', 'ю':'yu',
    'я':'ya',
    'А':'A', 'Б':'B', 'В':'V', 'Г':'G', 'Д':'D', 'Е':'E', 'Ё':'Yo', 'Ж':'Zh',
    'З':'Z', 'И':'I', 'Й':'J', 'К':'K', 'Л':'L', 'М':'M', 'Н':'N', 'О':'O',
    'П':'P', 'Р':'R', 'С':'S', 'Т':'T', 'У':'U', 'Ф':'F', 'Х':'H', 'Ц':'C',
    'Ч':'Ch', 'Ш':'Sh', 'Щ':'Sh', 'Ъ':'U', 'Ы':'Y', 'Ь':'', 'Э':'E', 'Ю':'Yu',
    'Я':'Ya',
    // ukranian
    'Є':'Ye', 'І':'I', 'Ї':'Yi', 'Ґ':'G', 'є':'ye', 'і':'i', 'ї':'yi', 'ґ':'g',
    // czech
    'č':'c', 'ď':'d', 'ě':'e', 'ň': 'n', 'ř':'r', 'š':'s', 'ť':'t', 'ů':'u',
    'ž':'z', 'Č':'C', 'Ď':'D', 'Ě':'E', 'Ň': 'N', 'Ř':'R', 'Š':'S', 'Ť':'T',
    'Ů':'U', 'Ž':'Z',
    // polish
    'ą':'a', 'ć':'c', 'ę':'e', 'ł':'l', 'ń':'n', 'ś':'s', 'ź':'z',
    'ż':'z', 'Ą':'A', 'Ć':'C', 'Ę':'E', 'Ł':'L', 'Ń':'N', 'Ś':'S',
    'Ź':'Z', 'Ż':'Z',
    // latvian
    'ā':'a', 'ē':'e', 'ģ':'g', 'ī':'i', 'ķ':'k', 'ļ':'l', 'ņ':'n',
    'ū':'u', 'Ā':'A', 'Ē':'E', 'Ģ':'G', 'Ī':'I',
    'Ķ':'K', 'Ļ':'L', 'Ņ':'N', 'Ū':'U',
    // lithuanian
    'ė':'e', 'į':'i', 'ų':'u', 'Ė': 'E', 'Į': 'I', 'Ų':'U',
    // romanian
    'ț':'t', 'Ț':'T', 'ţ':'t', 'Ţ':'T', 'ș':'s', 'Ș':'S', 'ă':'a', 'Ă':'A',
    // vietnamese
    'Ạ': 'A', 'Ả': 'A', 'Ầ': 'A', 'Ấ': 'A', 'Ậ': 'A', 'Ẩ': 'A', 'Ẫ': 'A',
    'Ằ': 'A', 'Ắ': 'A', 'Ặ': 'A', 'Ẳ': 'A', 'Ẵ': 'A', 'Ẹ': 'E', 'Ẻ': 'E',
    'Ẽ': 'E', 'Ề': 'E', 'Ế': 'E', 'Ệ': 'E', 'Ể': 'E', 'Ễ': 'E', 'Ị': 'I',
    'Ỉ': 'I', 'Ĩ': 'I', 'Ọ': 'O', 'Ỏ': 'O', 'Ồ': 'O', 'Ố': 'O', 'Ộ': 'O',
    'Ổ': 'O', 'Ỗ': 'O', 'Ơ': 'O', 'Ờ': 'O', 'Ớ': 'O', 'Ợ': 'O', 'Ở': 'O',
    'Ỡ': 'O', 'Ụ': 'U', 'Ủ': 'U', 'Ũ': 'U', 'Ư': 'U', 'Ừ': 'U', 'Ứ': 'U',
    'Ự': 'U', 'Ử': 'U', 'Ữ': 'U', 'Ỳ': 'Y', 'Ỵ': 'Y', 'Ỷ': 'Y', 'Ỹ': 'Y',
    'Đ': 'D', 'ạ': 'a', 'ả': 'a', 'ầ': 'a', 'ấ': 'a', 'ậ': 'a', 'ẩ': 'a',
    'ẫ': 'a', 'ằ': 'a', 'ắ': 'a', 'ặ': 'a', 'ẳ': 'a', 'ẵ': 'a', 'ẹ': 'e',
    'ẻ': 'e', 'ẽ': 'e', 'ề': 'e', 'ế': 'e', 'ệ': 'e', 'ể': 'e', 'ễ': 'e',
    'ị': 'i', 'ỉ': 'i', 'ĩ': 'i', 'ọ': 'o', 'ỏ': 'o', 'ồ': 'o', 'ố': 'o',
    'ộ': 'o', 'ổ': 'o', 'ỗ': 'o', 'ơ': 'o', 'ờ': 'o', 'ớ': 'o', 'ợ': 'o',
    'ở': 'o', 'ỡ': 'o', 'ụ': 'u', 'ủ': 'u', 'ũ': 'u', 'ư': 'u', 'ừ': 'u',
    'ứ': 'u', 'ự': 'u', 'ử': 'u', 'ữ': 'u', 'ỳ': 'y', 'ỵ': 'y', 'ỷ': 'y',
    'ỹ': 'y', 'đ': 'd',
    // currency
    '€': 'euro', '₢': 'cruzeiro', '₣': 'french franc', '£': 'pound',
    '₤': 'lira', '₥': 'mill', '₦': 'naira', '₧': 'peseta', '₨': 'rupee',
    '₩': 'won', '₪': 'new shequel', '₫': 'dong', '₭': 'kip', '₮': 'tugrik',
    '₯': 'drachma', '₰': 'penny', '₱': 'peso', '₲': 'guarani', '₳': 'austral',
    '₴': 'hryvnia', '₵': 'cedi', '¢': 'cent', '¥': 'yen', '元': 'yuan',
    '円': 'yen', '﷼': 'rial', '₠': 'ecu', '¤': 'currency', '฿': 'baht',
    "$": 'dollar', '₹': 'indian rupee',
    // symbols
    '©':'(c)', 'œ': 'oe', 'Œ': 'OE', '∑': 'sum', '®': '(r)', '†': '+',
    '“': '"', '”': '"', '‘': "'", '’': "'", '∂': 'd', 'ƒ': 'f', '™': 'tm',
    '℠': 'sm', '…': '...', '˚': 'o', 'º': 'o', 'ª': 'a', '•': '*',
    '∆': 'delta', '∞': 'infinity', '♥': 'love', '&': 'and', '|': 'or',
    '<': 'less', '>': 'greater',
};

slug.defaults.modes = {
    rfc3986: {
        replacement: '-',
        symbols: true,
        remove: null,
        lower: true,
        charmap: slug.defaults.charmap,
        multicharmap: slug.defaults.multicharmap,
    },
    pretty: {
        replacement: '-',
        symbols: true,
        remove: /[.]/g,
        lower: false,
        charmap: slug.defaults.charmap,
        multicharmap: slug.defaults.multicharmap,
    },
};

// Be compatible with different module systems

if (typeof define !== 'undefined' && define.amd) { // AMD
    // dont load symbols table in the browser
    for (var key in slug.defaults.modes) {
        if (!slug.defaults.modes.hasOwnProperty(key))
            continue;

        slug.defaults.modes[key].symbols = false;
    }
    define([], function () {return slug});
} else if (typeof module !== 'undefined' && module.exports) { // CommonJS
    symbols(); // preload symbols table
    module.exports = slug;
} else { // Script tag
    // dont load symbols table in the browser
    for (var key in slug.defaults.modes) {
        if (!slug.defaults.modes.hasOwnProperty(key))
            continue;

        slug.defaults.modes[key].symbols = false;
    }
    root.slug = slug;
}

}(this));

},{"unicode/category/So":191}],189:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('readable-stream/readable.js');
Stream.Writable = require('readable-stream/writable.js');
Stream.Duplex = require('readable-stream/duplex.js');
Stream.Transform = require('readable-stream/transform.js');
Stream.PassThrough = require('readable-stream/passthrough.js');

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{"events":85,"inherits":95,"readable-stream/duplex.js":167,"readable-stream/passthrough.js":173,"readable-stream/readable.js":174,"readable-stream/transform.js":175,"readable-stream/writable.js":176}],190:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var Buffer = require('buffer').Buffer;

var isBufferEncoding = Buffer.isEncoding
  || function(encoding) {
       switch (encoding && encoding.toLowerCase()) {
         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;
         default: return false;
       }
     }


function assertEncoding(encoding) {
  if (encoding && !isBufferEncoding(encoding)) {
    throw new Error('Unknown encoding: ' + encoding);
  }
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters. CESU-8 is handled as part of the UTF-8 encoding.
//
// @TODO Handling all encodings inside a single object makes it very difficult
// to reason about this code, so it should be split up in the future.
// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code
// points as used by CESU-8.
var StringDecoder = exports.StringDecoder = function(encoding) {
  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');
  assertEncoding(encoding);
  switch (this.encoding) {
    case 'utf8':
      // CESU-8 represents each of Surrogate Pair by 3-bytes
      this.surrogateSize = 3;
      break;
    case 'ucs2':
    case 'utf16le':
      // UTF-16 represents each of Surrogate Pair by 2-bytes
      this.surrogateSize = 2;
      this.detectIncompleteChar = utf16DetectIncompleteChar;
      break;
    case 'base64':
      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.
      this.surrogateSize = 3;
      this.detectIncompleteChar = base64DetectIncompleteChar;
      break;
    default:
      this.write = passThroughWrite;
      return;
  }

  // Enough space to store all bytes of a single character. UTF-8 needs 4
  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).
  this.charBuffer = new Buffer(6);
  // Number of bytes received for the current incomplete multi-byte character.
  this.charReceived = 0;
  // Number of bytes expected for the current incomplete multi-byte character.
  this.charLength = 0;
};


// write decodes the given buffer and returns it as JS string that is
// guaranteed to not contain any partial multi-byte characters. Any partial
// character found at the end of the buffer is buffered up, and will be
// returned when calling write again with the remaining bytes.
//
// Note: Converting a Buffer containing an orphan surrogate to a String
// currently works, but converting a String to a Buffer (via `new Buffer`, or
// Buffer#write) will replace incomplete surrogates with the unicode
// replacement character. See https://codereview.chromium.org/121173009/ .
StringDecoder.prototype.write = function(buffer) {
  var charStr = '';
  // if our last write ended with an incomplete multibyte character
  while (this.charLength) {
    // determine how many remaining bytes this buffer has to offer for this char
    var available = (buffer.length >= this.charLength - this.charReceived) ?
        this.charLength - this.charReceived :
        buffer.length;

    // add the new bytes to the char buffer
    buffer.copy(this.charBuffer, this.charReceived, 0, available);
    this.charReceived += available;

    if (this.charReceived < this.charLength) {
      // still not enough chars in this buffer? wait for more ...
      return '';
    }

    // remove bytes belonging to the current character from the buffer
    buffer = buffer.slice(available, buffer.length);

    // get the character that was split
    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);

    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
    var charCode = charStr.charCodeAt(charStr.length - 1);
    if (charCode >= 0xD800 && charCode <= 0xDBFF) {
      this.charLength += this.surrogateSize;
      charStr = '';
      continue;
    }
    this.charReceived = this.charLength = 0;

    // if there are no more bytes in this buffer, just emit our char
    if (buffer.length === 0) {
      return charStr;
    }
    break;
  }

  // determine and set charLength / charReceived
  this.detectIncompleteChar(buffer);

  var end = buffer.length;
  if (this.charLength) {
    // buffer the incomplete character bytes we got
    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);
    end -= this.charReceived;
  }

  charStr += buffer.toString(this.encoding, 0, end);

  var end = charStr.length - 1;
  var charCode = charStr.charCodeAt(end);
  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
  if (charCode >= 0xD800 && charCode <= 0xDBFF) {
    var size = this.surrogateSize;
    this.charLength += size;
    this.charReceived += size;
    this.charBuffer.copy(this.charBuffer, size, 0, size);
    buffer.copy(this.charBuffer, 0, 0, size);
    return charStr.substring(0, end);
  }

  // or just emit the charStr
  return charStr;
};

// detectIncompleteChar determines if there is an incomplete UTF-8 character at
// the end of the given buffer. If so, it sets this.charLength to the byte
// length that character, and sets this.charReceived to the number of bytes
// that are available for this character.
StringDecoder.prototype.detectIncompleteChar = function(buffer) {
  // determine how many bytes we have to check at the end of this buffer
  var i = (buffer.length >= 3) ? 3 : buffer.length;

  // Figure out if one of the last i bytes of our buffer announces an
  // incomplete char.
  for (; i > 0; i--) {
    var c = buffer[buffer.length - i];

    // See http://en.wikipedia.org/wiki/UTF-8#Description

    // 110XXXXX
    if (i == 1 && c >> 5 == 0x06) {
      this.charLength = 2;
      break;
    }

    // 1110XXXX
    if (i <= 2 && c >> 4 == 0x0E) {
      this.charLength = 3;
      break;
    }

    // 11110XXX
    if (i <= 3 && c >> 3 == 0x1E) {
      this.charLength = 4;
      break;
    }
  }
  this.charReceived = i;
};

StringDecoder.prototype.end = function(buffer) {
  var res = '';
  if (buffer && buffer.length)
    res = this.write(buffer);

  if (this.charReceived) {
    var cr = this.charReceived;
    var buf = this.charBuffer;
    var enc = this.encoding;
    res += buf.slice(0, cr).toString(enc);
  }

  return res;
};

function passThroughWrite(buffer) {
  return buffer.toString(this.encoding);
}

function utf16DetectIncompleteChar(buffer) {
  this.charReceived = buffer.length % 2;
  this.charLength = this.charReceived ? 2 : 0;
}

function base64DetectIncompleteChar(buffer) {
  this.charReceived = buffer.length % 3;
  this.charLength = this.charReceived ? 3 : 0;
}

},{"buffer":45}],191:[function(require,module,exports){
module.exports={166:{"value":"00A6","name":"BROKEN BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"BROKEN VERTICAL BAR","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\xA6"},169:{"value":"00A9","name":"COPYRIGHT SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\xA9"},174:{"value":"00AE","name":"REGISTERED SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"REGISTERED TRADE MARK SIGN","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\xAE"},176:{"value":"00B0","name":"DEGREE SIGN","category":"So","class":"0","bidirectional_category":"ET","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\xB0"},1154:{"value":"0482","name":"CYRILLIC THOUSANDS SIGN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0482"},1421:{"value":"058D","name":"RIGHT-FACING ARMENIAN ETERNITY SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u058D"},1422:{"value":"058E","name":"LEFT-FACING ARMENIAN ETERNITY SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u058E"},1550:{"value":"060E","name":"ARABIC POETIC VERSE SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u060E"},1551:{"value":"060F","name":"ARABIC SIGN MISRA","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u060F"},1758:{"value":"06DE","name":"ARABIC START OF RUB EL HIZB","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u06DE"},1769:{"value":"06E9","name":"ARABIC PLACE OF SAJDAH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u06E9"},1789:{"value":"06FD","name":"ARABIC SIGN SINDHI AMPERSAND","category":"So","class":"0","bidirectional_category":"AL","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u06FD"},1790:{"value":"06FE","name":"ARABIC SIGN SINDHI POSTPOSITION MEN","category":"So","class":"0","bidirectional_category":"AL","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u06FE"},2038:{"value":"07F6","name":"NKO SYMBOL OO DENNEN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u07F6"},2554:{"value":"09FA","name":"BENGALI ISSHAR","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u09FA"},2928:{"value":"0B70","name":"ORIYA ISSHAR","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0B70"},3059:{"value":"0BF3","name":"TAMIL DAY SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0BF3"},3060:{"value":"0BF4","name":"TAMIL MONTH SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0BF4"},3061:{"value":"0BF5","name":"TAMIL YEAR SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0BF5"},3062:{"value":"0BF6","name":"TAMIL DEBIT SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0BF6"},3063:{"value":"0BF7","name":"TAMIL CREDIT SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0BF7"},3064:{"value":"0BF8","name":"TAMIL AS ABOVE SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0BF8"},3066:{"value":"0BFA","name":"TAMIL NUMBER SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0BFA"},3199:{"value":"0C7F","name":"TELUGU SIGN TUUMU","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0C7F"},3449:{"value":"0D79","name":"MALAYALAM DATE MARK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0D79"},3841:{"value":"0F01","name":"TIBETAN MARK GTER YIG MGO TRUNCATED A","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0F01"},3842:{"value":"0F02","name":"TIBETAN MARK GTER YIG MGO -UM RNAM BCAD MA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0F02"},3843:{"value":"0F03","name":"TIBETAN MARK GTER YIG MGO -UM GTER TSHEG MA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0F03"},3859:{"value":"0F13","name":"TIBETAN MARK CARET -DZUD RTAGS ME LONG CAN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0F13"},3861:{"value":"0F15","name":"TIBETAN LOGOTYPE SIGN CHAD RTAGS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0F15"},3862:{"value":"0F16","name":"TIBETAN LOGOTYPE SIGN LHAG RTAGS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0F16"},3863:{"value":"0F17","name":"TIBETAN ASTROLOGICAL SIGN SGRA GCAN -CHAR RTAGS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0F17"},3866:{"value":"0F1A","name":"TIBETAN SIGN RDEL DKAR GCIG","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0F1A"},3867:{"value":"0F1B","name":"TIBETAN SIGN RDEL DKAR GNYIS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0F1B"},3868:{"value":"0F1C","name":"TIBETAN SIGN RDEL DKAR GSUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0F1C"},3869:{"value":"0F1D","name":"TIBETAN SIGN RDEL NAG GCIG","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0F1D"},3870:{"value":"0F1E","name":"TIBETAN SIGN RDEL NAG GNYIS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0F1E"},3871:{"value":"0F1F","name":"TIBETAN SIGN RDEL DKAR RDEL NAG","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0F1F"},3892:{"value":"0F34","name":"TIBETAN MARK BSDUS RTAGS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0F34"},3894:{"value":"0F36","name":"TIBETAN MARK CARET -DZUD RTAGS BZHI MIG CAN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0F36"},3896:{"value":"0F38","name":"TIBETAN MARK CHE MGO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0F38"},4030:{"value":"0FBE","name":"TIBETAN KU RU KHA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0FBE"},4031:{"value":"0FBF","name":"TIBETAN KU RU KHA BZHI MIG CAN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0FBF"},4032:{"value":"0FC0","name":"TIBETAN CANTILLATION SIGN HEAVY BEAT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0FC0"},4033:{"value":"0FC1","name":"TIBETAN CANTILLATION SIGN LIGHT BEAT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0FC1"},4034:{"value":"0FC2","name":"TIBETAN CANTILLATION SIGN CANG TE-U","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0FC2"},4035:{"value":"0FC3","name":"TIBETAN CANTILLATION SIGN SBUB -CHAL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0FC3"},4036:{"value":"0FC4","name":"TIBETAN SYMBOL DRIL BU","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0FC4"},4037:{"value":"0FC5","name":"TIBETAN SYMBOL RDO RJE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0FC5"},4039:{"value":"0FC7","name":"TIBETAN SYMBOL RDO RJE RGYA GRAM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0FC7"},4040:{"value":"0FC8","name":"TIBETAN SYMBOL PHUR PA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0FC8"},4041:{"value":"0FC9","name":"TIBETAN SYMBOL NOR BU","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0FC9"},4042:{"value":"0FCA","name":"TIBETAN SYMBOL NOR BU NYIS -KHYIL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0FCA"},4043:{"value":"0FCB","name":"TIBETAN SYMBOL NOR BU GSUM -KHYIL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0FCB"},4044:{"value":"0FCC","name":"TIBETAN SYMBOL NOR BU BZHI -KHYIL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0FCC"},4046:{"value":"0FCE","name":"TIBETAN SIGN RDEL NAG RDEL DKAR","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0FCE"},4047:{"value":"0FCF","name":"TIBETAN SIGN RDEL NAG GSUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0FCF"},4053:{"value":"0FD5","name":"RIGHT-FACING SVASTI SIGN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0FD5"},4054:{"value":"0FD6","name":"LEFT-FACING SVASTI SIGN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0FD6"},4055:{"value":"0FD7","name":"RIGHT-FACING SVASTI SIGN WITH DOTS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0FD7"},4056:{"value":"0FD8","name":"LEFT-FACING SVASTI SIGN WITH DOTS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0FD8"},4254:{"value":"109E","name":"MYANMAR SYMBOL SHAN ONE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u109E"},4255:{"value":"109F","name":"MYANMAR SYMBOL SHAN EXCLAMATION","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u109F"},5008:{"value":"1390","name":"ETHIOPIC TONAL MARK YIZET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1390"},5009:{"value":"1391","name":"ETHIOPIC TONAL MARK DERET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1391"},5010:{"value":"1392","name":"ETHIOPIC TONAL MARK RIKRIK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1392"},5011:{"value":"1393","name":"ETHIOPIC TONAL MARK SHORT RIKRIK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1393"},5012:{"value":"1394","name":"ETHIOPIC TONAL MARK DIFAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1394"},5013:{"value":"1395","name":"ETHIOPIC TONAL MARK KENAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1395"},5014:{"value":"1396","name":"ETHIOPIC TONAL MARK CHIRET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1396"},5015:{"value":"1397","name":"ETHIOPIC TONAL MARK HIDET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1397"},5016:{"value":"1398","name":"ETHIOPIC TONAL MARK DERET-HIDET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1398"},5017:{"value":"1399","name":"ETHIOPIC TONAL MARK KURT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1399"},6464:{"value":"1940","name":"LIMBU SIGN LOO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1940"},6622:{"value":"19DE","name":"NEW TAI LUE SIGN LAE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19DE"},6623:{"value":"19DF","name":"NEW TAI LUE SIGN LAEV","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19DF"},6624:{"value":"19E0","name":"KHMER SYMBOL PATHAMASAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19E0"},6625:{"value":"19E1","name":"KHMER SYMBOL MUOY KOET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19E1"},6626:{"value":"19E2","name":"KHMER SYMBOL PII KOET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19E2"},6627:{"value":"19E3","name":"KHMER SYMBOL BEI KOET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19E3"},6628:{"value":"19E4","name":"KHMER SYMBOL BUON KOET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19E4"},6629:{"value":"19E5","name":"KHMER SYMBOL PRAM KOET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19E5"},6630:{"value":"19E6","name":"KHMER SYMBOL PRAM-MUOY KOET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19E6"},6631:{"value":"19E7","name":"KHMER SYMBOL PRAM-PII KOET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19E7"},6632:{"value":"19E8","name":"KHMER SYMBOL PRAM-BEI KOET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19E8"},6633:{"value":"19E9","name":"KHMER SYMBOL PRAM-BUON KOET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19E9"},6634:{"value":"19EA","name":"KHMER SYMBOL DAP KOET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19EA"},6635:{"value":"19EB","name":"KHMER SYMBOL DAP-MUOY KOET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19EB"},6636:{"value":"19EC","name":"KHMER SYMBOL DAP-PII KOET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19EC"},6637:{"value":"19ED","name":"KHMER SYMBOL DAP-BEI KOET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19ED"},6638:{"value":"19EE","name":"KHMER SYMBOL DAP-BUON KOET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19EE"},6639:{"value":"19EF","name":"KHMER SYMBOL DAP-PRAM KOET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19EF"},6640:{"value":"19F0","name":"KHMER SYMBOL TUTEYASAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19F0"},6641:{"value":"19F1","name":"KHMER SYMBOL MUOY ROC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19F1"},6642:{"value":"19F2","name":"KHMER SYMBOL PII ROC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19F2"},6643:{"value":"19F3","name":"KHMER SYMBOL BEI ROC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19F3"},6644:{"value":"19F4","name":"KHMER SYMBOL BUON ROC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19F4"},6645:{"value":"19F5","name":"KHMER SYMBOL PRAM ROC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19F5"},6646:{"value":"19F6","name":"KHMER SYMBOL PRAM-MUOY ROC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19F6"},6647:{"value":"19F7","name":"KHMER SYMBOL PRAM-PII ROC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19F7"},6648:{"value":"19F8","name":"KHMER SYMBOL PRAM-BEI ROC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19F8"},6649:{"value":"19F9","name":"KHMER SYMBOL PRAM-BUON ROC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19F9"},6650:{"value":"19FA","name":"KHMER SYMBOL DAP ROC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19FA"},6651:{"value":"19FB","name":"KHMER SYMBOL DAP-MUOY ROC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19FB"},6652:{"value":"19FC","name":"KHMER SYMBOL DAP-PII ROC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19FC"},6653:{"value":"19FD","name":"KHMER SYMBOL DAP-BEI ROC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19FD"},6654:{"value":"19FE","name":"KHMER SYMBOL DAP-BUON ROC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19FE"},6655:{"value":"19FF","name":"KHMER SYMBOL DAP-PRAM ROC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u19FF"},7009:{"value":"1B61","name":"BALINESE MUSICAL SYMBOL DONG","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1B61"},7010:{"value":"1B62","name":"BALINESE MUSICAL SYMBOL DENG","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1B62"},7011:{"value":"1B63","name":"BALINESE MUSICAL SYMBOL DUNG","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1B63"},7012:{"value":"1B64","name":"BALINESE MUSICAL SYMBOL DANG","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1B64"},7013:{"value":"1B65","name":"BALINESE MUSICAL SYMBOL DANG SURANG","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1B65"},7014:{"value":"1B66","name":"BALINESE MUSICAL SYMBOL DING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1B66"},7015:{"value":"1B67","name":"BALINESE MUSICAL SYMBOL DAENG","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1B67"},7016:{"value":"1B68","name":"BALINESE MUSICAL SYMBOL DEUNG","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1B68"},7017:{"value":"1B69","name":"BALINESE MUSICAL SYMBOL DAING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1B69"},7018:{"value":"1B6A","name":"BALINESE MUSICAL SYMBOL DANG GEDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1B6A"},7028:{"value":"1B74","name":"BALINESE MUSICAL SYMBOL RIGHT-HAND OPEN DUG","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1B74"},7029:{"value":"1B75","name":"BALINESE MUSICAL SYMBOL RIGHT-HAND OPEN DAG","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1B75"},7030:{"value":"1B76","name":"BALINESE MUSICAL SYMBOL RIGHT-HAND CLOSED TUK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1B76"},7031:{"value":"1B77","name":"BALINESE MUSICAL SYMBOL RIGHT-HAND CLOSED TAK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1B77"},7032:{"value":"1B78","name":"BALINESE MUSICAL SYMBOL LEFT-HAND OPEN PANG","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1B78"},7033:{"value":"1B79","name":"BALINESE MUSICAL SYMBOL LEFT-HAND OPEN PUNG","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1B79"},7034:{"value":"1B7A","name":"BALINESE MUSICAL SYMBOL LEFT-HAND CLOSED PLAK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1B7A"},7035:{"value":"1B7B","name":"BALINESE MUSICAL SYMBOL LEFT-HAND CLOSED PLUK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1B7B"},7036:{"value":"1B7C","name":"BALINESE MUSICAL SYMBOL LEFT-HAND OPEN PING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u1B7C"},8448:{"value":"2100","name":"ACCOUNT OF","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 0061 002F 0063","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2100"},8449:{"value":"2101","name":"ADDRESSED TO THE SUBJECT","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 0061 002F 0073","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2101"},8451:{"value":"2103","name":"DEGREE CELSIUS","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 00B0 0043","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"DEGREES CENTIGRADE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2103"},8452:{"value":"2104","name":"CENTRE LINE SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"C L SYMBOL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2104"},8453:{"value":"2105","name":"CARE OF","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 0063 002F 006F","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2105"},8454:{"value":"2106","name":"CADA UNA","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 0063 002F 0075","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2106"},8456:{"value":"2108","name":"SCRUPLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2108"},8457:{"value":"2109","name":"DEGREE FAHRENHEIT","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 00B0 0046","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"DEGREES FAHRENHEIT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2109"},8468:{"value":"2114","name":"L B BAR SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2114"},8470:{"value":"2116","name":"NUMERO SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 004E 006F","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"NUMERO","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2116"},8471:{"value":"2117","name":"SOUND RECORDING COPYRIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2117"},8478:{"value":"211E","name":"PRESCRIPTION TAKE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u211E"},8479:{"value":"211F","name":"RESPONSE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u211F"},8480:{"value":"2120","name":"SERVICE MARK","category":"So","class":"0","bidirectional_category":"ON","mapping":"<super> 0053 004D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2120"},8481:{"value":"2121","name":"TELEPHONE SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 0054 0045 004C","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"T E L SYMBOL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2121"},8482:{"value":"2122","name":"TRADE MARK SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"<super> 0054 004D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"TRADEMARK","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2122"},8483:{"value":"2123","name":"VERSICLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2123"},8485:{"value":"2125","name":"OUNCE SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"OUNCE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2125"},8487:{"value":"2127","name":"INVERTED OHM SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"MHO","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2127"},8489:{"value":"2129","name":"TURNED GREEK SMALL LETTER IOTA","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2129"},8494:{"value":"212E","name":"ESTIMATED SYMBOL","category":"So","class":"0","bidirectional_category":"ET","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u212E"},8506:{"value":"213A","name":"ROTATED CAPITAL Q","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u213A"},8507:{"value":"213B","name":"FACSIMILE SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 0046 0041 0058","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u213B"},8522:{"value":"214A","name":"PROPERTY LINE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u214A"},8524:{"value":"214C","name":"PER SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u214C"},8525:{"value":"214D","name":"AKTIESELSKAB","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u214D"},8527:{"value":"214F","name":"SYMBOL FOR SAMARITAN SOURCE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u214F"},8586:{"value":"218A","name":"TURNED DIGIT TWO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u218A"},8587:{"value":"218B","name":"TURNED DIGIT THREE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u218B"},8597:{"value":"2195","name":"UP DOWN ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2195"},8598:{"value":"2196","name":"NORTH WEST ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"UPPER LEFT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2196"},8599:{"value":"2197","name":"NORTH EAST ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"UPPER RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2197"},8600:{"value":"2198","name":"SOUTH EAST ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"LOWER RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2198"},8601:{"value":"2199","name":"SOUTH WEST ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"LOWER LEFT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2199"},8604:{"value":"219C","name":"LEFTWARDS WAVE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"LEFT WAVE ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u219C"},8605:{"value":"219D","name":"RIGHTWARDS WAVE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"RIGHT WAVE ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u219D"},8606:{"value":"219E","name":"LEFTWARDS TWO HEADED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"LEFT TWO HEADED ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u219E"},8607:{"value":"219F","name":"UPWARDS TWO HEADED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"UP TWO HEADED ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u219F"},8609:{"value":"21A1","name":"DOWNWARDS TWO HEADED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"DOWN TWO HEADED ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21A1"},8610:{"value":"21A2","name":"LEFTWARDS ARROW WITH TAIL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"LEFT ARROW WITH TAIL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21A2"},8612:{"value":"21A4","name":"LEFTWARDS ARROW FROM BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"LEFT ARROW FROM BAR","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21A4"},8613:{"value":"21A5","name":"UPWARDS ARROW FROM BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"UP ARROW FROM BAR","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21A5"},8615:{"value":"21A7","name":"DOWNWARDS ARROW FROM BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"DOWN ARROW FROM BAR","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21A7"},8616:{"value":"21A8","name":"UP DOWN ARROW WITH BASE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21A8"},8617:{"value":"21A9","name":"LEFTWARDS ARROW WITH HOOK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"LEFT ARROW WITH HOOK","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21A9"},8618:{"value":"21AA","name":"RIGHTWARDS ARROW WITH HOOK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"RIGHT ARROW WITH HOOK","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21AA"},8619:{"value":"21AB","name":"LEFTWARDS ARROW WITH LOOP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"LEFT ARROW WITH LOOP","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21AB"},8620:{"value":"21AC","name":"RIGHTWARDS ARROW WITH LOOP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"RIGHT ARROW WITH LOOP","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21AC"},8621:{"value":"21AD","name":"LEFT RIGHT WAVE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21AD"},8623:{"value":"21AF","name":"DOWNWARDS ZIGZAG ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"DOWN ZIGZAG ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21AF"},8624:{"value":"21B0","name":"UPWARDS ARROW WITH TIP LEFTWARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"UP ARROW WITH TIP LEFT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21B0"},8625:{"value":"21B1","name":"UPWARDS ARROW WITH TIP RIGHTWARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"UP ARROW WITH TIP RIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21B1"},8626:{"value":"21B2","name":"DOWNWARDS ARROW WITH TIP LEFTWARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"DOWN ARROW WITH TIP LEFT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21B2"},8627:{"value":"21B3","name":"DOWNWARDS ARROW WITH TIP RIGHTWARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"DOWN ARROW WITH TIP RIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21B3"},8628:{"value":"21B4","name":"RIGHTWARDS ARROW WITH CORNER DOWNWARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"RIGHT ARROW WITH CORNER DOWN","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21B4"},8629:{"value":"21B5","name":"DOWNWARDS ARROW WITH CORNER LEFTWARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"DOWN ARROW WITH CORNER LEFT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21B5"},8630:{"value":"21B6","name":"ANTICLOCKWISE TOP SEMICIRCLE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21B6"},8631:{"value":"21B7","name":"CLOCKWISE TOP SEMICIRCLE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21B7"},8632:{"value":"21B8","name":"NORTH WEST ARROW TO LONG BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"UPPER LEFT ARROW TO LONG BAR","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21B8"},8633:{"value":"21B9","name":"LEFTWARDS ARROW TO BAR OVER RIGHTWARDS ARROW TO BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"LEFT ARROW TO BAR OVER RIGHT ARROW TO BAR","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21B9"},8634:{"value":"21BA","name":"ANTICLOCKWISE OPEN CIRCLE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21BA"},8635:{"value":"21BB","name":"CLOCKWISE OPEN CIRCLE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21BB"},8636:{"value":"21BC","name":"LEFTWARDS HARPOON WITH BARB UPWARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"LEFT HARPOON WITH BARB UP","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21BC"},8637:{"value":"21BD","name":"LEFTWARDS HARPOON WITH BARB DOWNWARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"LEFT HARPOON WITH BARB DOWN","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21BD"},8638:{"value":"21BE","name":"UPWARDS HARPOON WITH BARB RIGHTWARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"UP HARPOON WITH BARB RIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21BE"},8639:{"value":"21BF","name":"UPWARDS HARPOON WITH BARB LEFTWARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"UP HARPOON WITH BARB LEFT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21BF"},8640:{"value":"21C0","name":"RIGHTWARDS HARPOON WITH BARB UPWARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"RIGHT HARPOON WITH BARB UP","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21C0"},8641:{"value":"21C1","name":"RIGHTWARDS HARPOON WITH BARB DOWNWARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"RIGHT HARPOON WITH BARB DOWN","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21C1"},8642:{"value":"21C2","name":"DOWNWARDS HARPOON WITH BARB RIGHTWARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"DOWN HARPOON WITH BARB RIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21C2"},8643:{"value":"21C3","name":"DOWNWARDS HARPOON WITH BARB LEFTWARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"DOWN HARPOON WITH BARB LEFT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21C3"},8644:{"value":"21C4","name":"RIGHTWARDS ARROW OVER LEFTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"RIGHT ARROW OVER LEFT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21C4"},8645:{"value":"21C5","name":"UPWARDS ARROW LEFTWARDS OF DOWNWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"UP ARROW LEFT OF DOWN ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21C5"},8646:{"value":"21C6","name":"LEFTWARDS ARROW OVER RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"LEFT ARROW OVER RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21C6"},8647:{"value":"21C7","name":"LEFTWARDS PAIRED ARROWS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"LEFT PAIRED ARROWS","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21C7"},8648:{"value":"21C8","name":"UPWARDS PAIRED ARROWS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"UP PAIRED ARROWS","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21C8"},8649:{"value":"21C9","name":"RIGHTWARDS PAIRED ARROWS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"RIGHT PAIRED ARROWS","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21C9"},8650:{"value":"21CA","name":"DOWNWARDS PAIRED ARROWS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"DOWN PAIRED ARROWS","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21CA"},8651:{"value":"21CB","name":"LEFTWARDS HARPOON OVER RIGHTWARDS HARPOON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"LEFT HARPOON OVER RIGHT HARPOON","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21CB"},8652:{"value":"21CC","name":"RIGHTWARDS HARPOON OVER LEFTWARDS HARPOON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"RIGHT HARPOON OVER LEFT HARPOON","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21CC"},8653:{"value":"21CD","name":"LEFTWARDS DOUBLE ARROW WITH STROKE","category":"So","class":"0","bidirectional_category":"ON","mapping":"21D0 0338","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"LEFT DOUBLE ARROW WITH STROKE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21CD"},8656:{"value":"21D0","name":"LEFTWARDS DOUBLE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"LEFT DOUBLE ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21D0"},8657:{"value":"21D1","name":"UPWARDS DOUBLE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"UP DOUBLE ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21D1"},8659:{"value":"21D3","name":"DOWNWARDS DOUBLE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"DOWN DOUBLE ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21D3"},8661:{"value":"21D5","name":"UP DOWN DOUBLE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21D5"},8662:{"value":"21D6","name":"NORTH WEST DOUBLE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"UPPER LEFT DOUBLE ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21D6"},8663:{"value":"21D7","name":"NORTH EAST DOUBLE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"UPPER RIGHT DOUBLE ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21D7"},8664:{"value":"21D8","name":"SOUTH EAST DOUBLE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"LOWER RIGHT DOUBLE ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21D8"},8665:{"value":"21D9","name":"SOUTH WEST DOUBLE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"LOWER LEFT DOUBLE ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21D9"},8666:{"value":"21DA","name":"LEFTWARDS TRIPLE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"LEFT TRIPLE ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21DA"},8667:{"value":"21DB","name":"RIGHTWARDS TRIPLE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"RIGHT TRIPLE ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21DB"},8668:{"value":"21DC","name":"LEFTWARDS SQUIGGLE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"LEFT SQUIGGLE ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21DC"},8669:{"value":"21DD","name":"RIGHTWARDS SQUIGGLE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"RIGHT SQUIGGLE ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21DD"},8670:{"value":"21DE","name":"UPWARDS ARROW WITH DOUBLE STROKE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"UP ARROW WITH DOUBLE STROKE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21DE"},8671:{"value":"21DF","name":"DOWNWARDS ARROW WITH DOUBLE STROKE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"DOWN ARROW WITH DOUBLE STROKE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21DF"},8672:{"value":"21E0","name":"LEFTWARDS DASHED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"LEFT DASHED ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21E0"},8673:{"value":"21E1","name":"UPWARDS DASHED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"UP DASHED ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21E1"},8674:{"value":"21E2","name":"RIGHTWARDS DASHED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"RIGHT DASHED ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21E2"},8675:{"value":"21E3","name":"DOWNWARDS DASHED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"DOWN DASHED ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21E3"},8676:{"value":"21E4","name":"LEFTWARDS ARROW TO BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"LEFT ARROW TO BAR","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21E4"},8677:{"value":"21E5","name":"RIGHTWARDS ARROW TO BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"RIGHT ARROW TO BAR","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21E5"},8678:{"value":"21E6","name":"LEFTWARDS WHITE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"WHITE LEFT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21E6"},8679:{"value":"21E7","name":"UPWARDS WHITE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"WHITE UP ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21E7"},8680:{"value":"21E8","name":"RIGHTWARDS WHITE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"WHITE RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21E8"},8681:{"value":"21E9","name":"DOWNWARDS WHITE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"WHITE DOWN ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21E9"},8682:{"value":"21EA","name":"UPWARDS WHITE ARROW FROM BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"WHITE UP ARROW FROM BAR","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21EA"},8683:{"value":"21EB","name":"UPWARDS WHITE ARROW ON PEDESTAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21EB"},8684:{"value":"21EC","name":"UPWARDS WHITE ARROW ON PEDESTAL WITH HORIZONTAL BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21EC"},8685:{"value":"21ED","name":"UPWARDS WHITE ARROW ON PEDESTAL WITH VERTICAL BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21ED"},8686:{"value":"21EE","name":"UPWARDS WHITE DOUBLE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21EE"},8687:{"value":"21EF","name":"UPWARDS WHITE DOUBLE ARROW ON PEDESTAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21EF"},8688:{"value":"21F0","name":"RIGHTWARDS WHITE ARROW FROM WALL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21F0"},8689:{"value":"21F1","name":"NORTH WEST ARROW TO CORNER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21F1"},8690:{"value":"21F2","name":"SOUTH EAST ARROW TO CORNER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21F2"},8691:{"value":"21F3","name":"UP DOWN WHITE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u21F3"},8960:{"value":"2300","name":"DIAMETER SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2300"},8961:{"value":"2301","name":"ELECTRIC ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2301"},8962:{"value":"2302","name":"HOUSE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2302"},8963:{"value":"2303","name":"UP ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2303"},8964:{"value":"2304","name":"DOWN ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2304"},8965:{"value":"2305","name":"PROJECTIVE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2305"},8966:{"value":"2306","name":"PERSPECTIVE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2306"},8967:{"value":"2307","name":"WAVY LINE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2307"},8972:{"value":"230C","name":"BOTTOM RIGHT CROP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u230C"},8973:{"value":"230D","name":"BOTTOM LEFT CROP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u230D"},8974:{"value":"230E","name":"TOP RIGHT CROP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u230E"},8975:{"value":"230F","name":"TOP LEFT CROP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u230F"},8976:{"value":"2310","name":"REVERSED NOT SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2310"},8977:{"value":"2311","name":"SQUARE LOZENGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2311"},8978:{"value":"2312","name":"ARC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2312"},8979:{"value":"2313","name":"SEGMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2313"},8980:{"value":"2314","name":"SECTOR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2314"},8981:{"value":"2315","name":"TELEPHONE RECORDER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2315"},8982:{"value":"2316","name":"POSITION INDICATOR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2316"},8983:{"value":"2317","name":"VIEWDATA SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2317"},8984:{"value":"2318","name":"PLACE OF INTEREST SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"COMMAND KEY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2318"},8985:{"value":"2319","name":"TURNED NOT SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2319"},8986:{"value":"231A","name":"WATCH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u231A"},8987:{"value":"231B","name":"HOURGLASS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u231B"},8988:{"value":"231C","name":"TOP LEFT CORNER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u231C"},8989:{"value":"231D","name":"TOP RIGHT CORNER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u231D"},8990:{"value":"231E","name":"BOTTOM LEFT CORNER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u231E"},8991:{"value":"231F","name":"BOTTOM RIGHT CORNER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u231F"},8994:{"value":"2322","name":"FROWN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2322"},8995:{"value":"2323","name":"SMILE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2323"},8996:{"value":"2324","name":"UP ARROWHEAD BETWEEN TWO HORIZONTAL BARS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"ENTER KEY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2324"},8997:{"value":"2325","name":"OPTION KEY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2325"},8998:{"value":"2326","name":"ERASE TO THE RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"DELETE TO THE RIGHT KEY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2326"},8999:{"value":"2327","name":"X IN A RECTANGLE BOX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"CLEAR KEY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2327"},9000:{"value":"2328","name":"KEYBOARD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2328"},9003:{"value":"232B","name":"ERASE TO THE LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"DELETE TO THE LEFT KEY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u232B"},9004:{"value":"232C","name":"BENZENE RING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u232C"},9005:{"value":"232D","name":"CYLINDRICITY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u232D"},9006:{"value":"232E","name":"ALL AROUND-PROFILE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u232E"},9007:{"value":"232F","name":"SYMMETRY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u232F"},9008:{"value":"2330","name":"TOTAL RUNOUT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2330"},9009:{"value":"2331","name":"DIMENSION ORIGIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2331"},9010:{"value":"2332","name":"CONICAL TAPER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2332"},9011:{"value":"2333","name":"SLOPE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2333"},9012:{"value":"2334","name":"COUNTERBORE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2334"},9013:{"value":"2335","name":"COUNTERSINK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2335"},9014:{"value":"2336","name":"APL FUNCTIONAL SYMBOL I-BEAM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2336"},9015:{"value":"2337","name":"APL FUNCTIONAL SYMBOL SQUISH QUAD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2337"},9016:{"value":"2338","name":"APL FUNCTIONAL SYMBOL QUAD EQUAL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2338"},9017:{"value":"2339","name":"APL FUNCTIONAL SYMBOL QUAD DIVIDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2339"},9018:{"value":"233A","name":"APL FUNCTIONAL SYMBOL QUAD DIAMOND","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u233A"},9019:{"value":"233B","name":"APL FUNCTIONAL SYMBOL QUAD JOT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u233B"},9020:{"value":"233C","name":"APL FUNCTIONAL SYMBOL QUAD CIRCLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u233C"},9021:{"value":"233D","name":"APL FUNCTIONAL SYMBOL CIRCLE STILE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u233D"},9022:{"value":"233E","name":"APL FUNCTIONAL SYMBOL CIRCLE JOT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u233E"},9023:{"value":"233F","name":"APL FUNCTIONAL SYMBOL SLASH BAR","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u233F"},9024:{"value":"2340","name":"APL FUNCTIONAL SYMBOL BACKSLASH BAR","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2340"},9025:{"value":"2341","name":"APL FUNCTIONAL SYMBOL QUAD SLASH","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2341"},9026:{"value":"2342","name":"APL FUNCTIONAL SYMBOL QUAD BACKSLASH","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2342"},9027:{"value":"2343","name":"APL FUNCTIONAL SYMBOL QUAD LESS-THAN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2343"},9028:{"value":"2344","name":"APL FUNCTIONAL SYMBOL QUAD GREATER-THAN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2344"},9029:{"value":"2345","name":"APL FUNCTIONAL SYMBOL LEFTWARDS VANE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2345"},9030:{"value":"2346","name":"APL FUNCTIONAL SYMBOL RIGHTWARDS VANE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2346"},9031:{"value":"2347","name":"APL FUNCTIONAL SYMBOL QUAD LEFTWARDS ARROW","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2347"},9032:{"value":"2348","name":"APL FUNCTIONAL SYMBOL QUAD RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2348"},9033:{"value":"2349","name":"APL FUNCTIONAL SYMBOL CIRCLE BACKSLASH","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2349"},9034:{"value":"234A","name":"APL FUNCTIONAL SYMBOL DOWN TACK UNDERBAR","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u234A"},9035:{"value":"234B","name":"APL FUNCTIONAL SYMBOL DELTA STILE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u234B"},9036:{"value":"234C","name":"APL FUNCTIONAL SYMBOL QUAD DOWN CARET","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u234C"},9037:{"value":"234D","name":"APL FUNCTIONAL SYMBOL QUAD DELTA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u234D"},9038:{"value":"234E","name":"APL FUNCTIONAL SYMBOL DOWN TACK JOT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u234E"},9039:{"value":"234F","name":"APL FUNCTIONAL SYMBOL UPWARDS VANE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u234F"},9040:{"value":"2350","name":"APL FUNCTIONAL SYMBOL QUAD UPWARDS ARROW","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2350"},9041:{"value":"2351","name":"APL FUNCTIONAL SYMBOL UP TACK OVERBAR","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2351"},9042:{"value":"2352","name":"APL FUNCTIONAL SYMBOL DEL STILE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2352"},9043:{"value":"2353","name":"APL FUNCTIONAL SYMBOL QUAD UP CARET","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2353"},9044:{"value":"2354","name":"APL FUNCTIONAL SYMBOL QUAD DEL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2354"},9045:{"value":"2355","name":"APL FUNCTIONAL SYMBOL UP TACK JOT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2355"},9046:{"value":"2356","name":"APL FUNCTIONAL SYMBOL DOWNWARDS VANE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2356"},9047:{"value":"2357","name":"APL FUNCTIONAL SYMBOL QUAD DOWNWARDS ARROW","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2357"},9048:{"value":"2358","name":"APL FUNCTIONAL SYMBOL QUOTE UNDERBAR","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2358"},9049:{"value":"2359","name":"APL FUNCTIONAL SYMBOL DELTA UNDERBAR","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2359"},9050:{"value":"235A","name":"APL FUNCTIONAL SYMBOL DIAMOND UNDERBAR","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u235A"},9051:{"value":"235B","name":"APL FUNCTIONAL SYMBOL JOT UNDERBAR","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u235B"},9052:{"value":"235C","name":"APL FUNCTIONAL SYMBOL CIRCLE UNDERBAR","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u235C"},9053:{"value":"235D","name":"APL FUNCTIONAL SYMBOL UP SHOE JOT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u235D"},9054:{"value":"235E","name":"APL FUNCTIONAL SYMBOL QUOTE QUAD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u235E"},9055:{"value":"235F","name":"APL FUNCTIONAL SYMBOL CIRCLE STAR","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u235F"},9056:{"value":"2360","name":"APL FUNCTIONAL SYMBOL QUAD COLON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2360"},9057:{"value":"2361","name":"APL FUNCTIONAL SYMBOL UP TACK DIAERESIS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2361"},9058:{"value":"2362","name":"APL FUNCTIONAL SYMBOL DEL DIAERESIS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2362"},9059:{"value":"2363","name":"APL FUNCTIONAL SYMBOL STAR DIAERESIS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2363"},9060:{"value":"2364","name":"APL FUNCTIONAL SYMBOL JOT DIAERESIS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2364"},9061:{"value":"2365","name":"APL FUNCTIONAL SYMBOL CIRCLE DIAERESIS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2365"},9062:{"value":"2366","name":"APL FUNCTIONAL SYMBOL DOWN SHOE STILE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2366"},9063:{"value":"2367","name":"APL FUNCTIONAL SYMBOL LEFT SHOE STILE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2367"},9064:{"value":"2368","name":"APL FUNCTIONAL SYMBOL TILDE DIAERESIS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2368"},9065:{"value":"2369","name":"APL FUNCTIONAL SYMBOL GREATER-THAN DIAERESIS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2369"},9066:{"value":"236A","name":"APL FUNCTIONAL SYMBOL COMMA BAR","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u236A"},9067:{"value":"236B","name":"APL FUNCTIONAL SYMBOL DEL TILDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u236B"},9068:{"value":"236C","name":"APL FUNCTIONAL SYMBOL ZILDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u236C"},9069:{"value":"236D","name":"APL FUNCTIONAL SYMBOL STILE TILDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u236D"},9070:{"value":"236E","name":"APL FUNCTIONAL SYMBOL SEMICOLON UNDERBAR","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u236E"},9071:{"value":"236F","name":"APL FUNCTIONAL SYMBOL QUAD NOT EQUAL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u236F"},9072:{"value":"2370","name":"APL FUNCTIONAL SYMBOL QUAD QUESTION","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2370"},9073:{"value":"2371","name":"APL FUNCTIONAL SYMBOL DOWN CARET TILDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2371"},9074:{"value":"2372","name":"APL FUNCTIONAL SYMBOL UP CARET TILDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2372"},9075:{"value":"2373","name":"APL FUNCTIONAL SYMBOL IOTA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2373"},9076:{"value":"2374","name":"APL FUNCTIONAL SYMBOL RHO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2374"},9077:{"value":"2375","name":"APL FUNCTIONAL SYMBOL OMEGA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2375"},9078:{"value":"2376","name":"APL FUNCTIONAL SYMBOL ALPHA UNDERBAR","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2376"},9079:{"value":"2377","name":"APL FUNCTIONAL SYMBOL EPSILON UNDERBAR","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2377"},9080:{"value":"2378","name":"APL FUNCTIONAL SYMBOL IOTA UNDERBAR","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2378"},9081:{"value":"2379","name":"APL FUNCTIONAL SYMBOL OMEGA UNDERBAR","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2379"},9082:{"value":"237A","name":"APL FUNCTIONAL SYMBOL ALPHA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u237A"},9083:{"value":"237B","name":"NOT CHECK MARK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u237B"},9085:{"value":"237D","name":"SHOULDERED OPEN BOX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u237D"},9086:{"value":"237E","name":"BELL SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u237E"},9087:{"value":"237F","name":"VERTICAL LINE WITH MIDDLE DOT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u237F"},9088:{"value":"2380","name":"INSERTION SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2380"},9089:{"value":"2381","name":"CONTINUOUS UNDERLINE SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2381"},9090:{"value":"2382","name":"DISCONTINUOUS UNDERLINE SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2382"},9091:{"value":"2383","name":"EMPHASIS SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2383"},9092:{"value":"2384","name":"COMPOSITION SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2384"},9093:{"value":"2385","name":"WHITE SQUARE WITH CENTRE VERTICAL LINE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2385"},9094:{"value":"2386","name":"ENTER SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2386"},9095:{"value":"2387","name":"ALTERNATIVE KEY SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2387"},9096:{"value":"2388","name":"HELM SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2388"},9097:{"value":"2389","name":"CIRCLED HORIZONTAL BAR WITH NOTCH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2389"},9098:{"value":"238A","name":"CIRCLED TRIANGLE DOWN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u238A"},9099:{"value":"238B","name":"BROKEN CIRCLE WITH NORTHWEST ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u238B"},9100:{"value":"238C","name":"UNDO SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u238C"},9101:{"value":"238D","name":"MONOSTABLE SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u238D"},9102:{"value":"238E","name":"HYSTERESIS SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u238E"},9103:{"value":"238F","name":"OPEN-CIRCUIT-OUTPUT H-TYPE SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u238F"},9104:{"value":"2390","name":"OPEN-CIRCUIT-OUTPUT L-TYPE SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2390"},9105:{"value":"2391","name":"PASSIVE-PULL-DOWN-OUTPUT SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2391"},9106:{"value":"2392","name":"PASSIVE-PULL-UP-OUTPUT SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2392"},9107:{"value":"2393","name":"DIRECT CURRENT SYMBOL FORM TWO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2393"},9108:{"value":"2394","name":"SOFTWARE-FUNCTION SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2394"},9109:{"value":"2395","name":"APL FUNCTIONAL SYMBOL QUAD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2395"},9110:{"value":"2396","name":"DECIMAL SEPARATOR KEY SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2396"},9111:{"value":"2397","name":"PREVIOUS PAGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2397"},9112:{"value":"2398","name":"NEXT PAGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2398"},9113:{"value":"2399","name":"PRINT SCREEN SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2399"},9114:{"value":"239A","name":"CLEAR SCREEN SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u239A"},9140:{"value":"23B4","name":"TOP SQUARE BRACKET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23B4"},9141:{"value":"23B5","name":"BOTTOM SQUARE BRACKET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23B5"},9142:{"value":"23B6","name":"BOTTOM SQUARE BRACKET OVER TOP SQUARE BRACKET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23B6"},9143:{"value":"23B7","name":"RADICAL SYMBOL BOTTOM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23B7"},9144:{"value":"23B8","name":"LEFT VERTICAL BOX LINE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23B8"},9145:{"value":"23B9","name":"RIGHT VERTICAL BOX LINE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23B9"},9146:{"value":"23BA","name":"HORIZONTAL SCAN LINE-1","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23BA"},9147:{"value":"23BB","name":"HORIZONTAL SCAN LINE-3","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23BB"},9148:{"value":"23BC","name":"HORIZONTAL SCAN LINE-7","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23BC"},9149:{"value":"23BD","name":"HORIZONTAL SCAN LINE-9","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23BD"},9150:{"value":"23BE","name":"DENTISTRY SYMBOL LIGHT VERTICAL AND TOP RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23BE"},9151:{"value":"23BF","name":"DENTISTRY SYMBOL LIGHT VERTICAL AND BOTTOM RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23BF"},9152:{"value":"23C0","name":"DENTISTRY SYMBOL LIGHT VERTICAL WITH CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23C0"},9153:{"value":"23C1","name":"DENTISTRY SYMBOL LIGHT DOWN AND HORIZONTAL WITH CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23C1"},9154:{"value":"23C2","name":"DENTISTRY SYMBOL LIGHT UP AND HORIZONTAL WITH CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23C2"},9155:{"value":"23C3","name":"DENTISTRY SYMBOL LIGHT VERTICAL WITH TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23C3"},9156:{"value":"23C4","name":"DENTISTRY SYMBOL LIGHT DOWN AND HORIZONTAL WITH TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23C4"},9157:{"value":"23C5","name":"DENTISTRY SYMBOL LIGHT UP AND HORIZONTAL WITH TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23C5"},9158:{"value":"23C6","name":"DENTISTRY SYMBOL LIGHT VERTICAL AND WAVE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23C6"},9159:{"value":"23C7","name":"DENTISTRY SYMBOL LIGHT DOWN AND HORIZONTAL WITH WAVE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23C7"},9160:{"value":"23C8","name":"DENTISTRY SYMBOL LIGHT UP AND HORIZONTAL WITH WAVE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23C8"},9161:{"value":"23C9","name":"DENTISTRY SYMBOL LIGHT DOWN AND HORIZONTAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23C9"},9162:{"value":"23CA","name":"DENTISTRY SYMBOL LIGHT UP AND HORIZONTAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23CA"},9163:{"value":"23CB","name":"DENTISTRY SYMBOL LIGHT VERTICAL AND TOP LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23CB"},9164:{"value":"23CC","name":"DENTISTRY SYMBOL LIGHT VERTICAL AND BOTTOM LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23CC"},9165:{"value":"23CD","name":"SQUARE FOOT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23CD"},9166:{"value":"23CE","name":"RETURN SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23CE"},9167:{"value":"23CF","name":"EJECT SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23CF"},9168:{"value":"23D0","name":"VERTICAL LINE EXTENSION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23D0"},9169:{"value":"23D1","name":"METRICAL BREVE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23D1"},9170:{"value":"23D2","name":"METRICAL LONG OVER SHORT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23D2"},9171:{"value":"23D3","name":"METRICAL SHORT OVER LONG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23D3"},9172:{"value":"23D4","name":"METRICAL LONG OVER TWO SHORTS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23D4"},9173:{"value":"23D5","name":"METRICAL TWO SHORTS OVER LONG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23D5"},9174:{"value":"23D6","name":"METRICAL TWO SHORTS JOINED","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23D6"},9175:{"value":"23D7","name":"METRICAL TRISEME","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23D7"},9176:{"value":"23D8","name":"METRICAL TETRASEME","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23D8"},9177:{"value":"23D9","name":"METRICAL PENTASEME","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23D9"},9178:{"value":"23DA","name":"EARTH GROUND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23DA"},9179:{"value":"23DB","name":"FUSE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23DB"},9186:{"value":"23E2","name":"WHITE TRAPEZIUM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23E2"},9187:{"value":"23E3","name":"BENZENE RING WITH CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23E3"},9188:{"value":"23E4","name":"STRAIGHTNESS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23E4"},9189:{"value":"23E5","name":"FLATNESS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23E5"},9190:{"value":"23E6","name":"AC CURRENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23E6"},9191:{"value":"23E7","name":"ELECTRICAL INTERSECTION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23E7"},9192:{"value":"23E8","name":"DECIMAL EXPONENT SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23E8"},9193:{"value":"23E9","name":"BLACK RIGHT-POINTING DOUBLE TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23E9"},9194:{"value":"23EA","name":"BLACK LEFT-POINTING DOUBLE TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23EA"},9195:{"value":"23EB","name":"BLACK UP-POINTING DOUBLE TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23EB"},9196:{"value":"23EC","name":"BLACK DOWN-POINTING DOUBLE TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23EC"},9197:{"value":"23ED","name":"BLACK RIGHT-POINTING DOUBLE TRIANGLE WITH VERTICAL BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23ED"},9198:{"value":"23EE","name":"BLACK LEFT-POINTING DOUBLE TRIANGLE WITH VERTICAL BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23EE"},9199:{"value":"23EF","name":"BLACK RIGHT-POINTING TRIANGLE WITH DOUBLE VERTICAL BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23EF"},9200:{"value":"23F0","name":"ALARM CLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23F0"},9201:{"value":"23F1","name":"STOPWATCH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23F1"},9202:{"value":"23F2","name":"TIMER CLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23F2"},9203:{"value":"23F3","name":"HOURGLASS WITH FLOWING SAND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23F3"},9204:{"value":"23F4","name":"BLACK MEDIUM LEFT-POINTING TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23F4"},9205:{"value":"23F5","name":"BLACK MEDIUM RIGHT-POINTING TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23F5"},9206:{"value":"23F6","name":"BLACK MEDIUM UP-POINTING TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23F6"},9207:{"value":"23F7","name":"BLACK MEDIUM DOWN-POINTING TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23F7"},9208:{"value":"23F8","name":"DOUBLE VERTICAL BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23F8"},9209:{"value":"23F9","name":"BLACK SQUARE FOR STOP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23F9"},9210:{"value":"23FA","name":"BLACK CIRCLE FOR RECORD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u23FA"},9216:{"value":"2400","name":"SYMBOL FOR NULL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR NULL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2400"},9217:{"value":"2401","name":"SYMBOL FOR START OF HEADING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR START OF HEADING","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2401"},9218:{"value":"2402","name":"SYMBOL FOR START OF TEXT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR START OF TEXT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2402"},9219:{"value":"2403","name":"SYMBOL FOR END OF TEXT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR END OF TEXT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2403"},9220:{"value":"2404","name":"SYMBOL FOR END OF TRANSMISSION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR END OF TRANSMISSION","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2404"},9221:{"value":"2405","name":"SYMBOL FOR ENQUIRY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR ENQUIRY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2405"},9222:{"value":"2406","name":"SYMBOL FOR ACKNOWLEDGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR ACKNOWLEDGE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2406"},9223:{"value":"2407","name":"SYMBOL FOR BELL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR BELL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2407"},9224:{"value":"2408","name":"SYMBOL FOR BACKSPACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR BACKSPACE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2408"},9225:{"value":"2409","name":"SYMBOL FOR HORIZONTAL TABULATION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR HORIZONTAL TABULATION","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2409"},9226:{"value":"240A","name":"SYMBOL FOR LINE FEED","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR LINE FEED","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u240A"},9227:{"value":"240B","name":"SYMBOL FOR VERTICAL TABULATION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR VERTICAL TABULATION","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u240B"},9228:{"value":"240C","name":"SYMBOL FOR FORM FEED","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR FORM FEED","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u240C"},9229:{"value":"240D","name":"SYMBOL FOR CARRIAGE RETURN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR CARRIAGE RETURN","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u240D"},9230:{"value":"240E","name":"SYMBOL FOR SHIFT OUT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR SHIFT OUT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u240E"},9231:{"value":"240F","name":"SYMBOL FOR SHIFT IN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR SHIFT IN","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u240F"},9232:{"value":"2410","name":"SYMBOL FOR DATA LINK ESCAPE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR DATA LINK ESCAPE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2410"},9233:{"value":"2411","name":"SYMBOL FOR DEVICE CONTROL ONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR DEVICE CONTROL ONE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2411"},9234:{"value":"2412","name":"SYMBOL FOR DEVICE CONTROL TWO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR DEVICE CONTROL TWO","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2412"},9235:{"value":"2413","name":"SYMBOL FOR DEVICE CONTROL THREE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR DEVICE CONTROL THREE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2413"},9236:{"value":"2414","name":"SYMBOL FOR DEVICE CONTROL FOUR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR DEVICE CONTROL FOUR","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2414"},9237:{"value":"2415","name":"SYMBOL FOR NEGATIVE ACKNOWLEDGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR NEGATIVE ACKNOWLEDGE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2415"},9238:{"value":"2416","name":"SYMBOL FOR SYNCHRONOUS IDLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR SYNCHRONOUS IDLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2416"},9239:{"value":"2417","name":"SYMBOL FOR END OF TRANSMISSION BLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR END OF TRANSMISSION BLOCK","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2417"},9240:{"value":"2418","name":"SYMBOL FOR CANCEL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR CANCEL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2418"},9241:{"value":"2419","name":"SYMBOL FOR END OF MEDIUM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR END OF MEDIUM","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2419"},9242:{"value":"241A","name":"SYMBOL FOR SUBSTITUTE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR SUBSTITUTE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u241A"},9243:{"value":"241B","name":"SYMBOL FOR ESCAPE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR ESCAPE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u241B"},9244:{"value":"241C","name":"SYMBOL FOR FILE SEPARATOR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR FILE SEPARATOR","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u241C"},9245:{"value":"241D","name":"SYMBOL FOR GROUP SEPARATOR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR GROUP SEPARATOR","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u241D"},9246:{"value":"241E","name":"SYMBOL FOR RECORD SEPARATOR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR RECORD SEPARATOR","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u241E"},9247:{"value":"241F","name":"SYMBOL FOR UNIT SEPARATOR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR UNIT SEPARATOR","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u241F"},9248:{"value":"2420","name":"SYMBOL FOR SPACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR SPACE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2420"},9249:{"value":"2421","name":"SYMBOL FOR DELETE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR DELETE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2421"},9250:{"value":"2422","name":"BLANK SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"BLANK","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2422"},9251:{"value":"2423","name":"OPEN BOX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2423"},9252:{"value":"2424","name":"SYMBOL FOR NEWLINE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"GRAPHIC FOR NEWLINE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2424"},9253:{"value":"2425","name":"SYMBOL FOR DELETE FORM TWO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2425"},9254:{"value":"2426","name":"SYMBOL FOR SUBSTITUTE FORM TWO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2426"},9280:{"value":"2440","name":"OCR HOOK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2440"},9281:{"value":"2441","name":"OCR CHAIR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2441"},9282:{"value":"2442","name":"OCR FORK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2442"},9283:{"value":"2443","name":"OCR INVERTED FORK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2443"},9284:{"value":"2444","name":"OCR BELT BUCKLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2444"},9285:{"value":"2445","name":"OCR BOW TIE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2445"},9286:{"value":"2446","name":"OCR BRANCH BANK IDENTIFICATION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2446"},9287:{"value":"2447","name":"OCR AMOUNT OF CHECK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2447"},9288:{"value":"2448","name":"OCR DASH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2448"},9289:{"value":"2449","name":"OCR CUSTOMER ACCOUNT NUMBER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2449"},9290:{"value":"244A","name":"OCR DOUBLE BACKSLASH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u244A"},9372:{"value":"249C","name":"PARENTHESIZED LATIN SMALL LETTER A","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0061 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u249C"},9373:{"value":"249D","name":"PARENTHESIZED LATIN SMALL LETTER B","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0062 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u249D"},9374:{"value":"249E","name":"PARENTHESIZED LATIN SMALL LETTER C","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0063 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u249E"},9375:{"value":"249F","name":"PARENTHESIZED LATIN SMALL LETTER D","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0064 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u249F"},9376:{"value":"24A0","name":"PARENTHESIZED LATIN SMALL LETTER E","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0065 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u24A0"},9377:{"value":"24A1","name":"PARENTHESIZED LATIN SMALL LETTER F","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0066 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u24A1"},9378:{"value":"24A2","name":"PARENTHESIZED LATIN SMALL LETTER G","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0067 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u24A2"},9379:{"value":"24A3","name":"PARENTHESIZED LATIN SMALL LETTER H","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0068 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u24A3"},9380:{"value":"24A4","name":"PARENTHESIZED LATIN SMALL LETTER I","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0069 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u24A4"},9381:{"value":"24A5","name":"PARENTHESIZED LATIN SMALL LETTER J","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 006A 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u24A5"},9382:{"value":"24A6","name":"PARENTHESIZED LATIN SMALL LETTER K","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 006B 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u24A6"},9383:{"value":"24A7","name":"PARENTHESIZED LATIN SMALL LETTER L","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 006C 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u24A7"},9384:{"value":"24A8","name":"PARENTHESIZED LATIN SMALL LETTER M","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 006D 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u24A8"},9385:{"value":"24A9","name":"PARENTHESIZED LATIN SMALL LETTER N","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 006E 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u24A9"},9386:{"value":"24AA","name":"PARENTHESIZED LATIN SMALL LETTER O","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 006F 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u24AA"},9387:{"value":"24AB","name":"PARENTHESIZED LATIN SMALL LETTER P","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0070 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u24AB"},9388:{"value":"24AC","name":"PARENTHESIZED LATIN SMALL LETTER Q","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0071 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u24AC"},9389:{"value":"24AD","name":"PARENTHESIZED LATIN SMALL LETTER R","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0072 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u24AD"},9390:{"value":"24AE","name":"PARENTHESIZED LATIN SMALL LETTER S","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0073 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u24AE"},9391:{"value":"24AF","name":"PARENTHESIZED LATIN SMALL LETTER T","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0074 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u24AF"},9392:{"value":"24B0","name":"PARENTHESIZED LATIN SMALL LETTER U","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0075 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u24B0"},9393:{"value":"24B1","name":"PARENTHESIZED LATIN SMALL LETTER V","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0076 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u24B1"},9394:{"value":"24B2","name":"PARENTHESIZED LATIN SMALL LETTER W","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0077 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u24B2"},9395:{"value":"24B3","name":"PARENTHESIZED LATIN SMALL LETTER X","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0078 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u24B3"},9396:{"value":"24B4","name":"PARENTHESIZED LATIN SMALL LETTER Y","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0079 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u24B4"},9397:{"value":"24B5","name":"PARENTHESIZED LATIN SMALL LETTER Z","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 007A 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u24B5"},9398:{"value":"24B6","name":"CIRCLED LATIN CAPITAL LETTER A","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0041","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"24D0","titlecase_mapping":"","symbol":"\u24B6"},9399:{"value":"24B7","name":"CIRCLED LATIN CAPITAL LETTER B","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0042","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"24D1","titlecase_mapping":"","symbol":"\u24B7"},9400:{"value":"24B8","name":"CIRCLED LATIN CAPITAL LETTER C","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0043","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"24D2","titlecase_mapping":"","symbol":"\u24B8"},9401:{"value":"24B9","name":"CIRCLED LATIN CAPITAL LETTER D","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0044","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"24D3","titlecase_mapping":"","symbol":"\u24B9"},9402:{"value":"24BA","name":"CIRCLED LATIN CAPITAL LETTER E","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0045","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"24D4","titlecase_mapping":"","symbol":"\u24BA"},9403:{"value":"24BB","name":"CIRCLED LATIN CAPITAL LETTER F","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0046","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"24D5","titlecase_mapping":"","symbol":"\u24BB"},9404:{"value":"24BC","name":"CIRCLED LATIN CAPITAL LETTER G","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0047","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"24D6","titlecase_mapping":"","symbol":"\u24BC"},9405:{"value":"24BD","name":"CIRCLED LATIN CAPITAL LETTER H","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0048","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"24D7","titlecase_mapping":"","symbol":"\u24BD"},9406:{"value":"24BE","name":"CIRCLED LATIN CAPITAL LETTER I","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0049","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"24D8","titlecase_mapping":"","symbol":"\u24BE"},9407:{"value":"24BF","name":"CIRCLED LATIN CAPITAL LETTER J","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 004A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"24D9","titlecase_mapping":"","symbol":"\u24BF"},9408:{"value":"24C0","name":"CIRCLED LATIN CAPITAL LETTER K","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 004B","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"24DA","titlecase_mapping":"","symbol":"\u24C0"},9409:{"value":"24C1","name":"CIRCLED LATIN CAPITAL LETTER L","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 004C","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"24DB","titlecase_mapping":"","symbol":"\u24C1"},9410:{"value":"24C2","name":"CIRCLED LATIN CAPITAL LETTER M","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 004D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"24DC","titlecase_mapping":"","symbol":"\u24C2"},9411:{"value":"24C3","name":"CIRCLED LATIN CAPITAL LETTER N","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 004E","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"24DD","titlecase_mapping":"","symbol":"\u24C3"},9412:{"value":"24C4","name":"CIRCLED LATIN CAPITAL LETTER O","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 004F","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"24DE","titlecase_mapping":"","symbol":"\u24C4"},9413:{"value":"24C5","name":"CIRCLED LATIN CAPITAL LETTER P","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0050","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"24DF","titlecase_mapping":"","symbol":"\u24C5"},9414:{"value":"24C6","name":"CIRCLED LATIN CAPITAL LETTER Q","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0051","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"24E0","titlecase_mapping":"","symbol":"\u24C6"},9415:{"value":"24C7","name":"CIRCLED LATIN CAPITAL LETTER R","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0052","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"24E1","titlecase_mapping":"","symbol":"\u24C7"},9416:{"value":"24C8","name":"CIRCLED LATIN CAPITAL LETTER S","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0053","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"24E2","titlecase_mapping":"","symbol":"\u24C8"},9417:{"value":"24C9","name":"CIRCLED LATIN CAPITAL LETTER T","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0054","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"24E3","titlecase_mapping":"","symbol":"\u24C9"},9418:{"value":"24CA","name":"CIRCLED LATIN CAPITAL LETTER U","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0055","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"24E4","titlecase_mapping":"","symbol":"\u24CA"},9419:{"value":"24CB","name":"CIRCLED LATIN CAPITAL LETTER V","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0056","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"24E5","titlecase_mapping":"","symbol":"\u24CB"},9420:{"value":"24CC","name":"CIRCLED LATIN CAPITAL LETTER W","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0057","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"24E6","titlecase_mapping":"","symbol":"\u24CC"},9421:{"value":"24CD","name":"CIRCLED LATIN CAPITAL LETTER X","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0058","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"24E7","titlecase_mapping":"","symbol":"\u24CD"},9422:{"value":"24CE","name":"CIRCLED LATIN CAPITAL LETTER Y","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0059","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"24E8","titlecase_mapping":"","symbol":"\u24CE"},9423:{"value":"24CF","name":"CIRCLED LATIN CAPITAL LETTER Z","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 005A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"24E9","titlecase_mapping":"","symbol":"\u24CF"},9424:{"value":"24D0","name":"CIRCLED LATIN SMALL LETTER A","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0061","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"24B6","lowercase_mapping":"","titlecase_mapping":"24B6","symbol":"\u24D0"},9425:{"value":"24D1","name":"CIRCLED LATIN SMALL LETTER B","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0062","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"24B7","lowercase_mapping":"","titlecase_mapping":"24B7","symbol":"\u24D1"},9426:{"value":"24D2","name":"CIRCLED LATIN SMALL LETTER C","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0063","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"24B8","lowercase_mapping":"","titlecase_mapping":"24B8","symbol":"\u24D2"},9427:{"value":"24D3","name":"CIRCLED LATIN SMALL LETTER D","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0064","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"24B9","lowercase_mapping":"","titlecase_mapping":"24B9","symbol":"\u24D3"},9428:{"value":"24D4","name":"CIRCLED LATIN SMALL LETTER E","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0065","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"24BA","lowercase_mapping":"","titlecase_mapping":"24BA","symbol":"\u24D4"},9429:{"value":"24D5","name":"CIRCLED LATIN SMALL LETTER F","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0066","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"24BB","lowercase_mapping":"","titlecase_mapping":"24BB","symbol":"\u24D5"},9430:{"value":"24D6","name":"CIRCLED LATIN SMALL LETTER G","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0067","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"24BC","lowercase_mapping":"","titlecase_mapping":"24BC","symbol":"\u24D6"},9431:{"value":"24D7","name":"CIRCLED LATIN SMALL LETTER H","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0068","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"24BD","lowercase_mapping":"","titlecase_mapping":"24BD","symbol":"\u24D7"},9432:{"value":"24D8","name":"CIRCLED LATIN SMALL LETTER I","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0069","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"24BE","lowercase_mapping":"","titlecase_mapping":"24BE","symbol":"\u24D8"},9433:{"value":"24D9","name":"CIRCLED LATIN SMALL LETTER J","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 006A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"24BF","lowercase_mapping":"","titlecase_mapping":"24BF","symbol":"\u24D9"},9434:{"value":"24DA","name":"CIRCLED LATIN SMALL LETTER K","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 006B","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"24C0","lowercase_mapping":"","titlecase_mapping":"24C0","symbol":"\u24DA"},9435:{"value":"24DB","name":"CIRCLED LATIN SMALL LETTER L","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 006C","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"24C1","lowercase_mapping":"","titlecase_mapping":"24C1","symbol":"\u24DB"},9436:{"value":"24DC","name":"CIRCLED LATIN SMALL LETTER M","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 006D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"24C2","lowercase_mapping":"","titlecase_mapping":"24C2","symbol":"\u24DC"},9437:{"value":"24DD","name":"CIRCLED LATIN SMALL LETTER N","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 006E","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"24C3","lowercase_mapping":"","titlecase_mapping":"24C3","symbol":"\u24DD"},9438:{"value":"24DE","name":"CIRCLED LATIN SMALL LETTER O","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 006F","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"24C4","lowercase_mapping":"","titlecase_mapping":"24C4","symbol":"\u24DE"},9439:{"value":"24DF","name":"CIRCLED LATIN SMALL LETTER P","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0070","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"24C5","lowercase_mapping":"","titlecase_mapping":"24C5","symbol":"\u24DF"},9440:{"value":"24E0","name":"CIRCLED LATIN SMALL LETTER Q","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0071","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"24C6","lowercase_mapping":"","titlecase_mapping":"24C6","symbol":"\u24E0"},9441:{"value":"24E1","name":"CIRCLED LATIN SMALL LETTER R","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0072","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"24C7","lowercase_mapping":"","titlecase_mapping":"24C7","symbol":"\u24E1"},9442:{"value":"24E2","name":"CIRCLED LATIN SMALL LETTER S","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0073","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"24C8","lowercase_mapping":"","titlecase_mapping":"24C8","symbol":"\u24E2"},9443:{"value":"24E3","name":"CIRCLED LATIN SMALL LETTER T","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0074","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"24C9","lowercase_mapping":"","titlecase_mapping":"24C9","symbol":"\u24E3"},9444:{"value":"24E4","name":"CIRCLED LATIN SMALL LETTER U","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0075","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"24CA","lowercase_mapping":"","titlecase_mapping":"24CA","symbol":"\u24E4"},9445:{"value":"24E5","name":"CIRCLED LATIN SMALL LETTER V","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0076","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"24CB","lowercase_mapping":"","titlecase_mapping":"24CB","symbol":"\u24E5"},9446:{"value":"24E6","name":"CIRCLED LATIN SMALL LETTER W","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0077","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"24CC","lowercase_mapping":"","titlecase_mapping":"24CC","symbol":"\u24E6"},9447:{"value":"24E7","name":"CIRCLED LATIN SMALL LETTER X","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0078","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"24CD","lowercase_mapping":"","titlecase_mapping":"24CD","symbol":"\u24E7"},9448:{"value":"24E8","name":"CIRCLED LATIN SMALL LETTER Y","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0079","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"24CE","lowercase_mapping":"","titlecase_mapping":"24CE","symbol":"\u24E8"},9449:{"value":"24E9","name":"CIRCLED LATIN SMALL LETTER Z","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 007A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"24CF","lowercase_mapping":"","titlecase_mapping":"24CF","symbol":"\u24E9"},9472:{"value":"2500","name":"BOX DRAWINGS LIGHT HORIZONTAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT HORIZONTAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2500"},9473:{"value":"2501","name":"BOX DRAWINGS HEAVY HORIZONTAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS HEAVY HORIZONTAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2501"},9474:{"value":"2502","name":"BOX DRAWINGS LIGHT VERTICAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT VERTICAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2502"},9475:{"value":"2503","name":"BOX DRAWINGS HEAVY VERTICAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS HEAVY VERTICAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2503"},9476:{"value":"2504","name":"BOX DRAWINGS LIGHT TRIPLE DASH HORIZONTAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT TRIPLE DASH HORIZONTAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2504"},9477:{"value":"2505","name":"BOX DRAWINGS HEAVY TRIPLE DASH HORIZONTAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS HEAVY TRIPLE DASH HORIZONTAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2505"},9478:{"value":"2506","name":"BOX DRAWINGS LIGHT TRIPLE DASH VERTICAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT TRIPLE DASH VERTICAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2506"},9479:{"value":"2507","name":"BOX DRAWINGS HEAVY TRIPLE DASH VERTICAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS HEAVY TRIPLE DASH VERTICAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2507"},9480:{"value":"2508","name":"BOX DRAWINGS LIGHT QUADRUPLE DASH HORIZONTAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT QUADRUPLE DASH HORIZONTAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2508"},9481:{"value":"2509","name":"BOX DRAWINGS HEAVY QUADRUPLE DASH HORIZONTAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS HEAVY QUADRUPLE DASH HORIZONTAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2509"},9482:{"value":"250A","name":"BOX DRAWINGS LIGHT QUADRUPLE DASH VERTICAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT QUADRUPLE DASH VERTICAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u250A"},9483:{"value":"250B","name":"BOX DRAWINGS HEAVY QUADRUPLE DASH VERTICAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS HEAVY QUADRUPLE DASH VERTICAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u250B"},9484:{"value":"250C","name":"BOX DRAWINGS LIGHT DOWN AND RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT DOWN AND RIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u250C"},9485:{"value":"250D","name":"BOX DRAWINGS DOWN LIGHT AND RIGHT HEAVY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOWN LIGHT AND RIGHT HEAVY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u250D"},9486:{"value":"250E","name":"BOX DRAWINGS DOWN HEAVY AND RIGHT LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOWN HEAVY AND RIGHT LIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u250E"},9487:{"value":"250F","name":"BOX DRAWINGS HEAVY DOWN AND RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS HEAVY DOWN AND RIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u250F"},9488:{"value":"2510","name":"BOX DRAWINGS LIGHT DOWN AND LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT DOWN AND LEFT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2510"},9489:{"value":"2511","name":"BOX DRAWINGS DOWN LIGHT AND LEFT HEAVY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOWN LIGHT AND LEFT HEAVY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2511"},9490:{"value":"2512","name":"BOX DRAWINGS DOWN HEAVY AND LEFT LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOWN HEAVY AND LEFT LIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2512"},9491:{"value":"2513","name":"BOX DRAWINGS HEAVY DOWN AND LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS HEAVY DOWN AND LEFT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2513"},9492:{"value":"2514","name":"BOX DRAWINGS LIGHT UP AND RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT UP AND RIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2514"},9493:{"value":"2515","name":"BOX DRAWINGS UP LIGHT AND RIGHT HEAVY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS UP LIGHT AND RIGHT HEAVY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2515"},9494:{"value":"2516","name":"BOX DRAWINGS UP HEAVY AND RIGHT LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS UP HEAVY AND RIGHT LIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2516"},9495:{"value":"2517","name":"BOX DRAWINGS HEAVY UP AND RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS HEAVY UP AND RIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2517"},9496:{"value":"2518","name":"BOX DRAWINGS LIGHT UP AND LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT UP AND LEFT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2518"},9497:{"value":"2519","name":"BOX DRAWINGS UP LIGHT AND LEFT HEAVY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS UP LIGHT AND LEFT HEAVY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2519"},9498:{"value":"251A","name":"BOX DRAWINGS UP HEAVY AND LEFT LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS UP HEAVY AND LEFT LIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u251A"},9499:{"value":"251B","name":"BOX DRAWINGS HEAVY UP AND LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS HEAVY UP AND LEFT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u251B"},9500:{"value":"251C","name":"BOX DRAWINGS LIGHT VERTICAL AND RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT VERTICAL AND RIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u251C"},9501:{"value":"251D","name":"BOX DRAWINGS VERTICAL LIGHT AND RIGHT HEAVY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS VERTICAL LIGHT AND RIGHT HEAVY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u251D"},9502:{"value":"251E","name":"BOX DRAWINGS UP HEAVY AND RIGHT DOWN LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS UP HEAVY AND RIGHT DOWN LIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u251E"},9503:{"value":"251F","name":"BOX DRAWINGS DOWN HEAVY AND RIGHT UP LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOWN HEAVY AND RIGHT UP LIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u251F"},9504:{"value":"2520","name":"BOX DRAWINGS VERTICAL HEAVY AND RIGHT LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS VERTICAL HEAVY AND RIGHT LIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2520"},9505:{"value":"2521","name":"BOX DRAWINGS DOWN LIGHT AND RIGHT UP HEAVY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOWN LIGHT AND RIGHT UP HEAVY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2521"},9506:{"value":"2522","name":"BOX DRAWINGS UP LIGHT AND RIGHT DOWN HEAVY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS UP LIGHT AND RIGHT DOWN HEAVY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2522"},9507:{"value":"2523","name":"BOX DRAWINGS HEAVY VERTICAL AND RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS HEAVY VERTICAL AND RIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2523"},9508:{"value":"2524","name":"BOX DRAWINGS LIGHT VERTICAL AND LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT VERTICAL AND LEFT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2524"},9509:{"value":"2525","name":"BOX DRAWINGS VERTICAL LIGHT AND LEFT HEAVY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS VERTICAL LIGHT AND LEFT HEAVY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2525"},9510:{"value":"2526","name":"BOX DRAWINGS UP HEAVY AND LEFT DOWN LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS UP HEAVY AND LEFT DOWN LIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2526"},9511:{"value":"2527","name":"BOX DRAWINGS DOWN HEAVY AND LEFT UP LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOWN HEAVY AND LEFT UP LIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2527"},9512:{"value":"2528","name":"BOX DRAWINGS VERTICAL HEAVY AND LEFT LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS VERTICAL HEAVY AND LEFT LIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2528"},9513:{"value":"2529","name":"BOX DRAWINGS DOWN LIGHT AND LEFT UP HEAVY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOWN LIGHT AND LEFT UP HEAVY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2529"},9514:{"value":"252A","name":"BOX DRAWINGS UP LIGHT AND LEFT DOWN HEAVY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS UP LIGHT AND LEFT DOWN HEAVY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u252A"},9515:{"value":"252B","name":"BOX DRAWINGS HEAVY VERTICAL AND LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS HEAVY VERTICAL AND LEFT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u252B"},9516:{"value":"252C","name":"BOX DRAWINGS LIGHT DOWN AND HORIZONTAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT DOWN AND HORIZONTAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u252C"},9517:{"value":"252D","name":"BOX DRAWINGS LEFT HEAVY AND RIGHT DOWN LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LEFT HEAVY AND RIGHT DOWN LIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u252D"},9518:{"value":"252E","name":"BOX DRAWINGS RIGHT HEAVY AND LEFT DOWN LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS RIGHT HEAVY AND LEFT DOWN LIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u252E"},9519:{"value":"252F","name":"BOX DRAWINGS DOWN LIGHT AND HORIZONTAL HEAVY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOWN LIGHT AND HORIZONTAL HEAVY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u252F"},9520:{"value":"2530","name":"BOX DRAWINGS DOWN HEAVY AND HORIZONTAL LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOWN HEAVY AND HORIZONTAL LIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2530"},9521:{"value":"2531","name":"BOX DRAWINGS RIGHT LIGHT AND LEFT DOWN HEAVY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS RIGHT LIGHT AND LEFT DOWN HEAVY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2531"},9522:{"value":"2532","name":"BOX DRAWINGS LEFT LIGHT AND RIGHT DOWN HEAVY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LEFT LIGHT AND RIGHT DOWN HEAVY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2532"},9523:{"value":"2533","name":"BOX DRAWINGS HEAVY DOWN AND HORIZONTAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS HEAVY DOWN AND HORIZONTAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2533"},9524:{"value":"2534","name":"BOX DRAWINGS LIGHT UP AND HORIZONTAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT UP AND HORIZONTAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2534"},9525:{"value":"2535","name":"BOX DRAWINGS LEFT HEAVY AND RIGHT UP LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LEFT HEAVY AND RIGHT UP LIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2535"},9526:{"value":"2536","name":"BOX DRAWINGS RIGHT HEAVY AND LEFT UP LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS RIGHT HEAVY AND LEFT UP LIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2536"},9527:{"value":"2537","name":"BOX DRAWINGS UP LIGHT AND HORIZONTAL HEAVY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS UP LIGHT AND HORIZONTAL HEAVY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2537"},9528:{"value":"2538","name":"BOX DRAWINGS UP HEAVY AND HORIZONTAL LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS UP HEAVY AND HORIZONTAL LIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2538"},9529:{"value":"2539","name":"BOX DRAWINGS RIGHT LIGHT AND LEFT UP HEAVY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS RIGHT LIGHT AND LEFT UP HEAVY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2539"},9530:{"value":"253A","name":"BOX DRAWINGS LEFT LIGHT AND RIGHT UP HEAVY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LEFT LIGHT AND RIGHT UP HEAVY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u253A"},9531:{"value":"253B","name":"BOX DRAWINGS HEAVY UP AND HORIZONTAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS HEAVY UP AND HORIZONTAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u253B"},9532:{"value":"253C","name":"BOX DRAWINGS LIGHT VERTICAL AND HORIZONTAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT VERTICAL AND HORIZONTAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u253C"},9533:{"value":"253D","name":"BOX DRAWINGS LEFT HEAVY AND RIGHT VERTICAL LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LEFT HEAVY AND RIGHT VERTICAL LIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u253D"},9534:{"value":"253E","name":"BOX DRAWINGS RIGHT HEAVY AND LEFT VERTICAL LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS RIGHT HEAVY AND LEFT VERTICAL LIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u253E"},9535:{"value":"253F","name":"BOX DRAWINGS VERTICAL LIGHT AND HORIZONTAL HEAVY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS VERTICAL LIGHT AND HORIZONTAL HEAVY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u253F"},9536:{"value":"2540","name":"BOX DRAWINGS UP HEAVY AND DOWN HORIZONTAL LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS UP HEAVY AND DOWN HORIZONTAL LIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2540"},9537:{"value":"2541","name":"BOX DRAWINGS DOWN HEAVY AND UP HORIZONTAL LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOWN HEAVY AND UP HORIZONTAL LIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2541"},9538:{"value":"2542","name":"BOX DRAWINGS VERTICAL HEAVY AND HORIZONTAL LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS VERTICAL HEAVY AND HORIZONTAL LIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2542"},9539:{"value":"2543","name":"BOX DRAWINGS LEFT UP HEAVY AND RIGHT DOWN LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LEFT UP HEAVY AND RIGHT DOWN LIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2543"},9540:{"value":"2544","name":"BOX DRAWINGS RIGHT UP HEAVY AND LEFT DOWN LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS RIGHT UP HEAVY AND LEFT DOWN LIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2544"},9541:{"value":"2545","name":"BOX DRAWINGS LEFT DOWN HEAVY AND RIGHT UP LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LEFT DOWN HEAVY AND RIGHT UP LIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2545"},9542:{"value":"2546","name":"BOX DRAWINGS RIGHT DOWN HEAVY AND LEFT UP LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS RIGHT DOWN HEAVY AND LEFT UP LIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2546"},9543:{"value":"2547","name":"BOX DRAWINGS DOWN LIGHT AND UP HORIZONTAL HEAVY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOWN LIGHT AND UP HORIZONTAL HEAVY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2547"},9544:{"value":"2548","name":"BOX DRAWINGS UP LIGHT AND DOWN HORIZONTAL HEAVY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS UP LIGHT AND DOWN HORIZONTAL HEAVY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2548"},9545:{"value":"2549","name":"BOX DRAWINGS RIGHT LIGHT AND LEFT VERTICAL HEAVY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS RIGHT LIGHT AND LEFT VERTICAL HEAVY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2549"},9546:{"value":"254A","name":"BOX DRAWINGS LEFT LIGHT AND RIGHT VERTICAL HEAVY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LEFT LIGHT AND RIGHT VERTICAL HEAVY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u254A"},9547:{"value":"254B","name":"BOX DRAWINGS HEAVY VERTICAL AND HORIZONTAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS HEAVY VERTICAL AND HORIZONTAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u254B"},9548:{"value":"254C","name":"BOX DRAWINGS LIGHT DOUBLE DASH HORIZONTAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT DOUBLE DASH HORIZONTAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u254C"},9549:{"value":"254D","name":"BOX DRAWINGS HEAVY DOUBLE DASH HORIZONTAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS HEAVY DOUBLE DASH HORIZONTAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u254D"},9550:{"value":"254E","name":"BOX DRAWINGS LIGHT DOUBLE DASH VERTICAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT DOUBLE DASH VERTICAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u254E"},9551:{"value":"254F","name":"BOX DRAWINGS HEAVY DOUBLE DASH VERTICAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS HEAVY DOUBLE DASH VERTICAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u254F"},9552:{"value":"2550","name":"BOX DRAWINGS DOUBLE HORIZONTAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOUBLE HORIZONTAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2550"},9553:{"value":"2551","name":"BOX DRAWINGS DOUBLE VERTICAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOUBLE VERTICAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2551"},9554:{"value":"2552","name":"BOX DRAWINGS DOWN SINGLE AND RIGHT DOUBLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOWN SINGLE AND RIGHT DOUBLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2552"},9555:{"value":"2553","name":"BOX DRAWINGS DOWN DOUBLE AND RIGHT SINGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOWN DOUBLE AND RIGHT SINGLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2553"},9556:{"value":"2554","name":"BOX DRAWINGS DOUBLE DOWN AND RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOUBLE DOWN AND RIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2554"},9557:{"value":"2555","name":"BOX DRAWINGS DOWN SINGLE AND LEFT DOUBLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOWN SINGLE AND LEFT DOUBLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2555"},9558:{"value":"2556","name":"BOX DRAWINGS DOWN DOUBLE AND LEFT SINGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOWN DOUBLE AND LEFT SINGLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2556"},9559:{"value":"2557","name":"BOX DRAWINGS DOUBLE DOWN AND LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOUBLE DOWN AND LEFT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2557"},9560:{"value":"2558","name":"BOX DRAWINGS UP SINGLE AND RIGHT DOUBLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS UP SINGLE AND RIGHT DOUBLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2558"},9561:{"value":"2559","name":"BOX DRAWINGS UP DOUBLE AND RIGHT SINGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS UP DOUBLE AND RIGHT SINGLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2559"},9562:{"value":"255A","name":"BOX DRAWINGS DOUBLE UP AND RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOUBLE UP AND RIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u255A"},9563:{"value":"255B","name":"BOX DRAWINGS UP SINGLE AND LEFT DOUBLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS UP SINGLE AND LEFT DOUBLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u255B"},9564:{"value":"255C","name":"BOX DRAWINGS UP DOUBLE AND LEFT SINGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS UP DOUBLE AND LEFT SINGLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u255C"},9565:{"value":"255D","name":"BOX DRAWINGS DOUBLE UP AND LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOUBLE UP AND LEFT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u255D"},9566:{"value":"255E","name":"BOX DRAWINGS VERTICAL SINGLE AND RIGHT DOUBLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS VERTICAL SINGLE AND RIGHT DOUBLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u255E"},9567:{"value":"255F","name":"BOX DRAWINGS VERTICAL DOUBLE AND RIGHT SINGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS VERTICAL DOUBLE AND RIGHT SINGLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u255F"},9568:{"value":"2560","name":"BOX DRAWINGS DOUBLE VERTICAL AND RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOUBLE VERTICAL AND RIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2560"},9569:{"value":"2561","name":"BOX DRAWINGS VERTICAL SINGLE AND LEFT DOUBLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS VERTICAL SINGLE AND LEFT DOUBLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2561"},9570:{"value":"2562","name":"BOX DRAWINGS VERTICAL DOUBLE AND LEFT SINGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS VERTICAL DOUBLE AND LEFT SINGLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2562"},9571:{"value":"2563","name":"BOX DRAWINGS DOUBLE VERTICAL AND LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOUBLE VERTICAL AND LEFT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2563"},9572:{"value":"2564","name":"BOX DRAWINGS DOWN SINGLE AND HORIZONTAL DOUBLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOWN SINGLE AND HORIZONTAL DOUBLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2564"},9573:{"value":"2565","name":"BOX DRAWINGS DOWN DOUBLE AND HORIZONTAL SINGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOWN DOUBLE AND HORIZONTAL SINGLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2565"},9574:{"value":"2566","name":"BOX DRAWINGS DOUBLE DOWN AND HORIZONTAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOUBLE DOWN AND HORIZONTAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2566"},9575:{"value":"2567","name":"BOX DRAWINGS UP SINGLE AND HORIZONTAL DOUBLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS UP SINGLE AND HORIZONTAL DOUBLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2567"},9576:{"value":"2568","name":"BOX DRAWINGS UP DOUBLE AND HORIZONTAL SINGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS UP DOUBLE AND HORIZONTAL SINGLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2568"},9577:{"value":"2569","name":"BOX DRAWINGS DOUBLE UP AND HORIZONTAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOUBLE UP AND HORIZONTAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2569"},9578:{"value":"256A","name":"BOX DRAWINGS VERTICAL SINGLE AND HORIZONTAL DOUBLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS VERTICAL SINGLE AND HORIZONTAL DOUBLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u256A"},9579:{"value":"256B","name":"BOX DRAWINGS VERTICAL DOUBLE AND HORIZONTAL SINGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS VERTICAL DOUBLE AND HORIZONTAL SINGLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u256B"},9580:{"value":"256C","name":"BOX DRAWINGS DOUBLE VERTICAL AND HORIZONTAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS DOUBLE VERTICAL AND HORIZONTAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u256C"},9581:{"value":"256D","name":"BOX DRAWINGS LIGHT ARC DOWN AND RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT ARC DOWN AND RIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u256D"},9582:{"value":"256E","name":"BOX DRAWINGS LIGHT ARC DOWN AND LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT ARC DOWN AND LEFT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u256E"},9583:{"value":"256F","name":"BOX DRAWINGS LIGHT ARC UP AND LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT ARC UP AND LEFT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u256F"},9584:{"value":"2570","name":"BOX DRAWINGS LIGHT ARC UP AND RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT ARC UP AND RIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2570"},9585:{"value":"2571","name":"BOX DRAWINGS LIGHT DIAGONAL UPPER RIGHT TO LOWER LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT DIAGONAL UPPER RIGHT TO LOWER LEFT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2571"},9586:{"value":"2572","name":"BOX DRAWINGS LIGHT DIAGONAL UPPER LEFT TO LOWER RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT DIAGONAL UPPER LEFT TO LOWER RIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2572"},9587:{"value":"2573","name":"BOX DRAWINGS LIGHT DIAGONAL CROSS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT DIAGONAL CROSS","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2573"},9588:{"value":"2574","name":"BOX DRAWINGS LIGHT LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT LEFT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2574"},9589:{"value":"2575","name":"BOX DRAWINGS LIGHT UP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT UP","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2575"},9590:{"value":"2576","name":"BOX DRAWINGS LIGHT RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT RIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2576"},9591:{"value":"2577","name":"BOX DRAWINGS LIGHT DOWN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT DOWN","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2577"},9592:{"value":"2578","name":"BOX DRAWINGS HEAVY LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS HEAVY LEFT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2578"},9593:{"value":"2579","name":"BOX DRAWINGS HEAVY UP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS HEAVY UP","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2579"},9594:{"value":"257A","name":"BOX DRAWINGS HEAVY RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS HEAVY RIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u257A"},9595:{"value":"257B","name":"BOX DRAWINGS HEAVY DOWN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS HEAVY DOWN","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u257B"},9596:{"value":"257C","name":"BOX DRAWINGS LIGHT LEFT AND HEAVY RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT LEFT AND HEAVY RIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u257C"},9597:{"value":"257D","name":"BOX DRAWINGS LIGHT UP AND HEAVY DOWN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS LIGHT UP AND HEAVY DOWN","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u257D"},9598:{"value":"257E","name":"BOX DRAWINGS HEAVY LEFT AND LIGHT RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS HEAVY LEFT AND LIGHT RIGHT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u257E"},9599:{"value":"257F","name":"BOX DRAWINGS HEAVY UP AND LIGHT DOWN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FORMS HEAVY UP AND LIGHT DOWN","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u257F"},9600:{"value":"2580","name":"UPPER HALF BLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2580"},9601:{"value":"2581","name":"LOWER ONE EIGHTH BLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2581"},9602:{"value":"2582","name":"LOWER ONE QUARTER BLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2582"},9603:{"value":"2583","name":"LOWER THREE EIGHTHS BLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2583"},9604:{"value":"2584","name":"LOWER HALF BLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2584"},9605:{"value":"2585","name":"LOWER FIVE EIGHTHS BLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2585"},9606:{"value":"2586","name":"LOWER THREE QUARTERS BLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"LOWER THREE QUARTER BLOCK","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2586"},9607:{"value":"2587","name":"LOWER SEVEN EIGHTHS BLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2587"},9608:{"value":"2588","name":"FULL BLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2588"},9609:{"value":"2589","name":"LEFT SEVEN EIGHTHS BLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2589"},9610:{"value":"258A","name":"LEFT THREE QUARTERS BLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"LEFT THREE QUARTER BLOCK","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u258A"},9611:{"value":"258B","name":"LEFT FIVE EIGHTHS BLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u258B"},9612:{"value":"258C","name":"LEFT HALF BLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u258C"},9613:{"value":"258D","name":"LEFT THREE EIGHTHS BLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u258D"},9614:{"value":"258E","name":"LEFT ONE QUARTER BLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u258E"},9615:{"value":"258F","name":"LEFT ONE EIGHTH BLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u258F"},9616:{"value":"2590","name":"RIGHT HALF BLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2590"},9617:{"value":"2591","name":"LIGHT SHADE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2591"},9618:{"value":"2592","name":"MEDIUM SHADE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2592"},9619:{"value":"2593","name":"DARK SHADE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2593"},9620:{"value":"2594","name":"UPPER ONE EIGHTH BLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2594"},9621:{"value":"2595","name":"RIGHT ONE EIGHTH BLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2595"},9622:{"value":"2596","name":"QUADRANT LOWER LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2596"},9623:{"value":"2597","name":"QUADRANT LOWER RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2597"},9624:{"value":"2598","name":"QUADRANT UPPER LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2598"},9625:{"value":"2599","name":"QUADRANT UPPER LEFT AND LOWER LEFT AND LOWER RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2599"},9626:{"value":"259A","name":"QUADRANT UPPER LEFT AND LOWER RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u259A"},9627:{"value":"259B","name":"QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u259B"},9628:{"value":"259C","name":"QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u259C"},9629:{"value":"259D","name":"QUADRANT UPPER RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u259D"},9630:{"value":"259E","name":"QUADRANT UPPER RIGHT AND LOWER LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u259E"},9631:{"value":"259F","name":"QUADRANT UPPER RIGHT AND LOWER LEFT AND LOWER RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u259F"},9632:{"value":"25A0","name":"BLACK SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25A0"},9633:{"value":"25A1","name":"WHITE SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25A1"},9634:{"value":"25A2","name":"WHITE SQUARE WITH ROUNDED CORNERS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25A2"},9635:{"value":"25A3","name":"WHITE SQUARE CONTAINING BLACK SMALL SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25A3"},9636:{"value":"25A4","name":"SQUARE WITH HORIZONTAL FILL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25A4"},9637:{"value":"25A5","name":"SQUARE WITH VERTICAL FILL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25A5"},9638:{"value":"25A6","name":"SQUARE WITH ORTHOGONAL CROSSHATCH FILL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25A6"},9639:{"value":"25A7","name":"SQUARE WITH UPPER LEFT TO LOWER RIGHT FILL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25A7"},9640:{"value":"25A8","name":"SQUARE WITH UPPER RIGHT TO LOWER LEFT FILL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25A8"},9641:{"value":"25A9","name":"SQUARE WITH DIAGONAL CROSSHATCH FILL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25A9"},9642:{"value":"25AA","name":"BLACK SMALL SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25AA"},9643:{"value":"25AB","name":"WHITE SMALL SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25AB"},9644:{"value":"25AC","name":"BLACK RECTANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25AC"},9645:{"value":"25AD","name":"WHITE RECTANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25AD"},9646:{"value":"25AE","name":"BLACK VERTICAL RECTANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25AE"},9647:{"value":"25AF","name":"WHITE VERTICAL RECTANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25AF"},9648:{"value":"25B0","name":"BLACK PARALLELOGRAM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25B0"},9649:{"value":"25B1","name":"WHITE PARALLELOGRAM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25B1"},9650:{"value":"25B2","name":"BLACK UP-POINTING TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"BLACK UP POINTING TRIANGLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25B2"},9651:{"value":"25B3","name":"WHITE UP-POINTING TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"WHITE UP POINTING TRIANGLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25B3"},9652:{"value":"25B4","name":"BLACK UP-POINTING SMALL TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"BLACK UP POINTING SMALL TRIANGLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25B4"},9653:{"value":"25B5","name":"WHITE UP-POINTING SMALL TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"WHITE UP POINTING SMALL TRIANGLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25B5"},9654:{"value":"25B6","name":"BLACK RIGHT-POINTING TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"BLACK RIGHT POINTING TRIANGLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25B6"},9656:{"value":"25B8","name":"BLACK RIGHT-POINTING SMALL TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"BLACK RIGHT POINTING SMALL TRIANGLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25B8"},9657:{"value":"25B9","name":"WHITE RIGHT-POINTING SMALL TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"WHITE RIGHT POINTING SMALL TRIANGLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25B9"},9658:{"value":"25BA","name":"BLACK RIGHT-POINTING POINTER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"BLACK RIGHT POINTING POINTER","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25BA"},9659:{"value":"25BB","name":"WHITE RIGHT-POINTING POINTER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"WHITE RIGHT POINTING POINTER","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25BB"},9660:{"value":"25BC","name":"BLACK DOWN-POINTING TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"BLACK DOWN POINTING TRIANGLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25BC"},9661:{"value":"25BD","name":"WHITE DOWN-POINTING TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"WHITE DOWN POINTING TRIANGLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25BD"},9662:{"value":"25BE","name":"BLACK DOWN-POINTING SMALL TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"BLACK DOWN POINTING SMALL TRIANGLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25BE"},9663:{"value":"25BF","name":"WHITE DOWN-POINTING SMALL TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"WHITE DOWN POINTING SMALL TRIANGLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25BF"},9664:{"value":"25C0","name":"BLACK LEFT-POINTING TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"BLACK LEFT POINTING TRIANGLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25C0"},9666:{"value":"25C2","name":"BLACK LEFT-POINTING SMALL TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"BLACK LEFT POINTING SMALL TRIANGLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25C2"},9667:{"value":"25C3","name":"WHITE LEFT-POINTING SMALL TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"WHITE LEFT POINTING SMALL TRIANGLE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25C3"},9668:{"value":"25C4","name":"BLACK LEFT-POINTING POINTER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"BLACK LEFT POINTING POINTER","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25C4"},9669:{"value":"25C5","name":"WHITE LEFT-POINTING POINTER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"WHITE LEFT POINTING POINTER","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25C5"},9670:{"value":"25C6","name":"BLACK DIAMOND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25C6"},9671:{"value":"25C7","name":"WHITE DIAMOND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25C7"},9672:{"value":"25C8","name":"WHITE DIAMOND CONTAINING BLACK SMALL DIAMOND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25C8"},9673:{"value":"25C9","name":"FISHEYE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25C9"},9674:{"value":"25CA","name":"LOZENGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25CA"},9675:{"value":"25CB","name":"WHITE CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25CB"},9676:{"value":"25CC","name":"DOTTED CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25CC"},9677:{"value":"25CD","name":"CIRCLE WITH VERTICAL FILL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25CD"},9678:{"value":"25CE","name":"BULLSEYE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25CE"},9679:{"value":"25CF","name":"BLACK CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25CF"},9680:{"value":"25D0","name":"CIRCLE WITH LEFT HALF BLACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25D0"},9681:{"value":"25D1","name":"CIRCLE WITH RIGHT HALF BLACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25D1"},9682:{"value":"25D2","name":"CIRCLE WITH LOWER HALF BLACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25D2"},9683:{"value":"25D3","name":"CIRCLE WITH UPPER HALF BLACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25D3"},9684:{"value":"25D4","name":"CIRCLE WITH UPPER RIGHT QUADRANT BLACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25D4"},9685:{"value":"25D5","name":"CIRCLE WITH ALL BUT UPPER LEFT QUADRANT BLACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25D5"},9686:{"value":"25D6","name":"LEFT HALF BLACK CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25D6"},9687:{"value":"25D7","name":"RIGHT HALF BLACK CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25D7"},9688:{"value":"25D8","name":"INVERSE BULLET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25D8"},9689:{"value":"25D9","name":"INVERSE WHITE CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25D9"},9690:{"value":"25DA","name":"UPPER HALF INVERSE WHITE CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25DA"},9691:{"value":"25DB","name":"LOWER HALF INVERSE WHITE CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25DB"},9692:{"value":"25DC","name":"UPPER LEFT QUADRANT CIRCULAR ARC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25DC"},9693:{"value":"25DD","name":"UPPER RIGHT QUADRANT CIRCULAR ARC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25DD"},9694:{"value":"25DE","name":"LOWER RIGHT QUADRANT CIRCULAR ARC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25DE"},9695:{"value":"25DF","name":"LOWER LEFT QUADRANT CIRCULAR ARC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25DF"},9696:{"value":"25E0","name":"UPPER HALF CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25E0"},9697:{"value":"25E1","name":"LOWER HALF CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25E1"},9698:{"value":"25E2","name":"BLACK LOWER RIGHT TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25E2"},9699:{"value":"25E3","name":"BLACK LOWER LEFT TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25E3"},9700:{"value":"25E4","name":"BLACK UPPER LEFT TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25E4"},9701:{"value":"25E5","name":"BLACK UPPER RIGHT TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25E5"},9702:{"value":"25E6","name":"WHITE BULLET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25E6"},9703:{"value":"25E7","name":"SQUARE WITH LEFT HALF BLACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25E7"},9704:{"value":"25E8","name":"SQUARE WITH RIGHT HALF BLACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25E8"},9705:{"value":"25E9","name":"SQUARE WITH UPPER LEFT DIAGONAL HALF BLACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25E9"},9706:{"value":"25EA","name":"SQUARE WITH LOWER RIGHT DIAGONAL HALF BLACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25EA"},9707:{"value":"25EB","name":"WHITE SQUARE WITH VERTICAL BISECTING LINE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25EB"},9708:{"value":"25EC","name":"WHITE UP-POINTING TRIANGLE WITH DOT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"WHITE UP POINTING TRIANGLE WITH DOT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25EC"},9709:{"value":"25ED","name":"UP-POINTING TRIANGLE WITH LEFT HALF BLACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"UP POINTING TRIANGLE WITH LEFT HALF BLACK","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25ED"},9710:{"value":"25EE","name":"UP-POINTING TRIANGLE WITH RIGHT HALF BLACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"UP POINTING TRIANGLE WITH RIGHT HALF BLACK","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25EE"},9711:{"value":"25EF","name":"LARGE CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25EF"},9712:{"value":"25F0","name":"WHITE SQUARE WITH UPPER LEFT QUADRANT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25F0"},9713:{"value":"25F1","name":"WHITE SQUARE WITH LOWER LEFT QUADRANT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25F1"},9714:{"value":"25F2","name":"WHITE SQUARE WITH LOWER RIGHT QUADRANT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25F2"},9715:{"value":"25F3","name":"WHITE SQUARE WITH UPPER RIGHT QUADRANT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25F3"},9716:{"value":"25F4","name":"WHITE CIRCLE WITH UPPER LEFT QUADRANT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25F4"},9717:{"value":"25F5","name":"WHITE CIRCLE WITH LOWER LEFT QUADRANT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25F5"},9718:{"value":"25F6","name":"WHITE CIRCLE WITH LOWER RIGHT QUADRANT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25F6"},9719:{"value":"25F7","name":"WHITE CIRCLE WITH UPPER RIGHT QUADRANT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u25F7"},9728:{"value":"2600","name":"BLACK SUN WITH RAYS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2600"},9729:{"value":"2601","name":"CLOUD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2601"},9730:{"value":"2602","name":"UMBRELLA","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2602"},9731:{"value":"2603","name":"SNOWMAN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2603"},9732:{"value":"2604","name":"COMET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2604"},9733:{"value":"2605","name":"BLACK STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2605"},9734:{"value":"2606","name":"WHITE STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2606"},9735:{"value":"2607","name":"LIGHTNING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2607"},9736:{"value":"2608","name":"THUNDERSTORM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2608"},9737:{"value":"2609","name":"SUN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2609"},9738:{"value":"260A","name":"ASCENDING NODE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u260A"},9739:{"value":"260B","name":"DESCENDING NODE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u260B"},9740:{"value":"260C","name":"CONJUNCTION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u260C"},9741:{"value":"260D","name":"OPPOSITION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u260D"},9742:{"value":"260E","name":"BLACK TELEPHONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u260E"},9743:{"value":"260F","name":"WHITE TELEPHONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u260F"},9744:{"value":"2610","name":"BALLOT BOX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2610"},9745:{"value":"2611","name":"BALLOT BOX WITH CHECK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2611"},9746:{"value":"2612","name":"BALLOT BOX WITH X","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2612"},9747:{"value":"2613","name":"SALTIRE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2613"},9748:{"value":"2614","name":"UMBRELLA WITH RAIN DROPS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2614"},9749:{"value":"2615","name":"HOT BEVERAGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2615"},9750:{"value":"2616","name":"WHITE SHOGI PIECE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2616"},9751:{"value":"2617","name":"BLACK SHOGI PIECE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2617"},9752:{"value":"2618","name":"SHAMROCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2618"},9753:{"value":"2619","name":"REVERSED ROTATED FLORAL HEART BULLET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2619"},9754:{"value":"261A","name":"BLACK LEFT POINTING INDEX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u261A"},9755:{"value":"261B","name":"BLACK RIGHT POINTING INDEX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u261B"},9756:{"value":"261C","name":"WHITE LEFT POINTING INDEX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u261C"},9757:{"value":"261D","name":"WHITE UP POINTING INDEX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u261D"},9758:{"value":"261E","name":"WHITE RIGHT POINTING INDEX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u261E"},9759:{"value":"261F","name":"WHITE DOWN POINTING INDEX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u261F"},9760:{"value":"2620","name":"SKULL AND CROSSBONES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2620"},9761:{"value":"2621","name":"CAUTION SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2621"},9762:{"value":"2622","name":"RADIOACTIVE SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2622"},9763:{"value":"2623","name":"BIOHAZARD SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2623"},9764:{"value":"2624","name":"CADUCEUS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2624"},9765:{"value":"2625","name":"ANKH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2625"},9766:{"value":"2626","name":"ORTHODOX CROSS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2626"},9767:{"value":"2627","name":"CHI RHO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2627"},9768:{"value":"2628","name":"CROSS OF LORRAINE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2628"},9769:{"value":"2629","name":"CROSS OF JERUSALEM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2629"},9770:{"value":"262A","name":"STAR AND CRESCENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u262A"},9771:{"value":"262B","name":"FARSI SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SYMBOL OF IRAN","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u262B"},9772:{"value":"262C","name":"ADI SHAKTI","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u262C"},9773:{"value":"262D","name":"HAMMER AND SICKLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u262D"},9774:{"value":"262E","name":"PEACE SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u262E"},9775:{"value":"262F","name":"YIN YANG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u262F"},9776:{"value":"2630","name":"TRIGRAM FOR HEAVEN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2630"},9777:{"value":"2631","name":"TRIGRAM FOR LAKE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2631"},9778:{"value":"2632","name":"TRIGRAM FOR FIRE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2632"},9779:{"value":"2633","name":"TRIGRAM FOR THUNDER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2633"},9780:{"value":"2634","name":"TRIGRAM FOR WIND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2634"},9781:{"value":"2635","name":"TRIGRAM FOR WATER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2635"},9782:{"value":"2636","name":"TRIGRAM FOR MOUNTAIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2636"},9783:{"value":"2637","name":"TRIGRAM FOR EARTH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2637"},9784:{"value":"2638","name":"WHEEL OF DHARMA","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2638"},9785:{"value":"2639","name":"WHITE FROWNING FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2639"},9786:{"value":"263A","name":"WHITE SMILING FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u263A"},9787:{"value":"263B","name":"BLACK SMILING FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u263B"},9788:{"value":"263C","name":"WHITE SUN WITH RAYS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u263C"},9789:{"value":"263D","name":"FIRST QUARTER MOON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u263D"},9790:{"value":"263E","name":"LAST QUARTER MOON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u263E"},9791:{"value":"263F","name":"MERCURY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u263F"},9792:{"value":"2640","name":"FEMALE SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2640"},9793:{"value":"2641","name":"EARTH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2641"},9794:{"value":"2642","name":"MALE SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2642"},9795:{"value":"2643","name":"JUPITER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2643"},9796:{"value":"2644","name":"SATURN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2644"},9797:{"value":"2645","name":"URANUS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2645"},9798:{"value":"2646","name":"NEPTUNE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2646"},9799:{"value":"2647","name":"PLUTO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2647"},9800:{"value":"2648","name":"ARIES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2648"},9801:{"value":"2649","name":"TAURUS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2649"},9802:{"value":"264A","name":"GEMINI","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u264A"},9803:{"value":"264B","name":"CANCER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u264B"},9804:{"value":"264C","name":"LEO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u264C"},9805:{"value":"264D","name":"VIRGO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u264D"},9806:{"value":"264E","name":"LIBRA","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u264E"},9807:{"value":"264F","name":"SCORPIUS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u264F"},9808:{"value":"2650","name":"SAGITTARIUS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2650"},9809:{"value":"2651","name":"CAPRICORN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2651"},9810:{"value":"2652","name":"AQUARIUS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2652"},9811:{"value":"2653","name":"PISCES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2653"},9812:{"value":"2654","name":"WHITE CHESS KING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2654"},9813:{"value":"2655","name":"WHITE CHESS QUEEN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2655"},9814:{"value":"2656","name":"WHITE CHESS ROOK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2656"},9815:{"value":"2657","name":"WHITE CHESS BISHOP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2657"},9816:{"value":"2658","name":"WHITE CHESS KNIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2658"},9817:{"value":"2659","name":"WHITE CHESS PAWN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2659"},9818:{"value":"265A","name":"BLACK CHESS KING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u265A"},9819:{"value":"265B","name":"BLACK CHESS QUEEN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u265B"},9820:{"value":"265C","name":"BLACK CHESS ROOK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u265C"},9821:{"value":"265D","name":"BLACK CHESS BISHOP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u265D"},9822:{"value":"265E","name":"BLACK CHESS KNIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u265E"},9823:{"value":"265F","name":"BLACK CHESS PAWN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u265F"},9824:{"value":"2660","name":"BLACK SPADE SUIT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2660"},9825:{"value":"2661","name":"WHITE HEART SUIT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2661"},9826:{"value":"2662","name":"WHITE DIAMOND SUIT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2662"},9827:{"value":"2663","name":"BLACK CLUB SUIT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2663"},9828:{"value":"2664","name":"WHITE SPADE SUIT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2664"},9829:{"value":"2665","name":"BLACK HEART SUIT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2665"},9830:{"value":"2666","name":"BLACK DIAMOND SUIT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2666"},9831:{"value":"2667","name":"WHITE CLUB SUIT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2667"},9832:{"value":"2668","name":"HOT SPRINGS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2668"},9833:{"value":"2669","name":"QUARTER NOTE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2669"},9834:{"value":"266A","name":"EIGHTH NOTE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u266A"},9835:{"value":"266B","name":"BEAMED EIGHTH NOTES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"BARRED EIGHTH NOTES","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u266B"},9836:{"value":"266C","name":"BEAMED SIXTEENTH NOTES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"BARRED SIXTEENTH NOTES","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u266C"},9837:{"value":"266D","name":"MUSIC FLAT SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FLAT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u266D"},9838:{"value":"266E","name":"MUSIC NATURAL SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"NATURAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u266E"},9840:{"value":"2670","name":"WEST SYRIAC CROSS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2670"},9841:{"value":"2671","name":"EAST SYRIAC CROSS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2671"},9842:{"value":"2672","name":"UNIVERSAL RECYCLING SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2672"},9843:{"value":"2673","name":"RECYCLING SYMBOL FOR TYPE-1 PLASTICS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2673"},9844:{"value":"2674","name":"RECYCLING SYMBOL FOR TYPE-2 PLASTICS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2674"},9845:{"value":"2675","name":"RECYCLING SYMBOL FOR TYPE-3 PLASTICS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2675"},9846:{"value":"2676","name":"RECYCLING SYMBOL FOR TYPE-4 PLASTICS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2676"},9847:{"value":"2677","name":"RECYCLING SYMBOL FOR TYPE-5 PLASTICS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2677"},9848:{"value":"2678","name":"RECYCLING SYMBOL FOR TYPE-6 PLASTICS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2678"},9849:{"value":"2679","name":"RECYCLING SYMBOL FOR TYPE-7 PLASTICS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2679"},9850:{"value":"267A","name":"RECYCLING SYMBOL FOR GENERIC MATERIALS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u267A"},9851:{"value":"267B","name":"BLACK UNIVERSAL RECYCLING SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u267B"},9852:{"value":"267C","name":"RECYCLED PAPER SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u267C"},9853:{"value":"267D","name":"PARTIALLY-RECYCLED PAPER SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u267D"},9854:{"value":"267E","name":"PERMANENT PAPER SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u267E"},9855:{"value":"267F","name":"WHEELCHAIR SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u267F"},9856:{"value":"2680","name":"DIE FACE-1","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2680"},9857:{"value":"2681","name":"DIE FACE-2","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2681"},9858:{"value":"2682","name":"DIE FACE-3","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2682"},9859:{"value":"2683","name":"DIE FACE-4","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2683"},9860:{"value":"2684","name":"DIE FACE-5","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2684"},9861:{"value":"2685","name":"DIE FACE-6","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2685"},9862:{"value":"2686","name":"WHITE CIRCLE WITH DOT RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2686"},9863:{"value":"2687","name":"WHITE CIRCLE WITH TWO DOTS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2687"},9864:{"value":"2688","name":"BLACK CIRCLE WITH WHITE DOT RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2688"},9865:{"value":"2689","name":"BLACK CIRCLE WITH TWO WHITE DOTS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2689"},9866:{"value":"268A","name":"MONOGRAM FOR YANG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u268A"},9867:{"value":"268B","name":"MONOGRAM FOR YIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u268B"},9868:{"value":"268C","name":"DIGRAM FOR GREATER YANG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u268C"},9869:{"value":"268D","name":"DIGRAM FOR LESSER YIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u268D"},9870:{"value":"268E","name":"DIGRAM FOR LESSER YANG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u268E"},9871:{"value":"268F","name":"DIGRAM FOR GREATER YIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u268F"},9872:{"value":"2690","name":"WHITE FLAG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2690"},9873:{"value":"2691","name":"BLACK FLAG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2691"},9874:{"value":"2692","name":"HAMMER AND PICK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2692"},9875:{"value":"2693","name":"ANCHOR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2693"},9876:{"value":"2694","name":"CROSSED SWORDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2694"},9877:{"value":"2695","name":"STAFF OF AESCULAPIUS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2695"},9878:{"value":"2696","name":"SCALES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2696"},9879:{"value":"2697","name":"ALEMBIC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2697"},9880:{"value":"2698","name":"FLOWER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2698"},9881:{"value":"2699","name":"GEAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2699"},9882:{"value":"269A","name":"STAFF OF HERMES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u269A"},9883:{"value":"269B","name":"ATOM SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u269B"},9884:{"value":"269C","name":"FLEUR-DE-LIS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u269C"},9885:{"value":"269D","name":"OUTLINED WHITE STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u269D"},9886:{"value":"269E","name":"THREE LINES CONVERGING RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u269E"},9887:{"value":"269F","name":"THREE LINES CONVERGING LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u269F"},9888:{"value":"26A0","name":"WARNING SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26A0"},9889:{"value":"26A1","name":"HIGH VOLTAGE SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26A1"},9890:{"value":"26A2","name":"DOUBLED FEMALE SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26A2"},9891:{"value":"26A3","name":"DOUBLED MALE SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26A3"},9892:{"value":"26A4","name":"INTERLOCKED FEMALE AND MALE SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26A4"},9893:{"value":"26A5","name":"MALE AND FEMALE SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26A5"},9894:{"value":"26A6","name":"MALE WITH STROKE SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26A6"},9895:{"value":"26A7","name":"MALE WITH STROKE AND MALE AND FEMALE SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26A7"},9896:{"value":"26A8","name":"VERTICAL MALE WITH STROKE SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26A8"},9897:{"value":"26A9","name":"HORIZONTAL MALE WITH STROKE SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26A9"},9898:{"value":"26AA","name":"MEDIUM WHITE CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26AA"},9899:{"value":"26AB","name":"MEDIUM BLACK CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26AB"},9900:{"value":"26AC","name":"MEDIUM SMALL WHITE CIRCLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26AC"},9901:{"value":"26AD","name":"MARRIAGE SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26AD"},9902:{"value":"26AE","name":"DIVORCE SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26AE"},9903:{"value":"26AF","name":"UNMARRIED PARTNERSHIP SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26AF"},9904:{"value":"26B0","name":"COFFIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26B0"},9905:{"value":"26B1","name":"FUNERAL URN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26B1"},9906:{"value":"26B2","name":"NEUTER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26B2"},9907:{"value":"26B3","name":"CERES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26B3"},9908:{"value":"26B4","name":"PALLAS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26B4"},9909:{"value":"26B5","name":"JUNO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26B5"},9910:{"value":"26B6","name":"VESTA","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26B6"},9911:{"value":"26B7","name":"CHIRON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26B7"},9912:{"value":"26B8","name":"BLACK MOON LILITH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26B8"},9913:{"value":"26B9","name":"SEXTILE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26B9"},9914:{"value":"26BA","name":"SEMISEXTILE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26BA"},9915:{"value":"26BB","name":"QUINCUNX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26BB"},9916:{"value":"26BC","name":"SESQUIQUADRATE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26BC"},9917:{"value":"26BD","name":"SOCCER BALL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26BD"},9918:{"value":"26BE","name":"BASEBALL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26BE"},9919:{"value":"26BF","name":"SQUARED KEY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26BF"},9920:{"value":"26C0","name":"WHITE DRAUGHTS MAN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26C0"},9921:{"value":"26C1","name":"WHITE DRAUGHTS KING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26C1"},9922:{"value":"26C2","name":"BLACK DRAUGHTS MAN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26C2"},9923:{"value":"26C3","name":"BLACK DRAUGHTS KING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26C3"},9924:{"value":"26C4","name":"SNOWMAN WITHOUT SNOW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26C4"},9925:{"value":"26C5","name":"SUN BEHIND CLOUD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26C5"},9926:{"value":"26C6","name":"RAIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26C6"},9927:{"value":"26C7","name":"BLACK SNOWMAN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26C7"},9928:{"value":"26C8","name":"THUNDER CLOUD AND RAIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26C8"},9929:{"value":"26C9","name":"TURNED WHITE SHOGI PIECE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26C9"},9930:{"value":"26CA","name":"TURNED BLACK SHOGI PIECE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26CA"},9931:{"value":"26CB","name":"WHITE DIAMOND IN SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26CB"},9932:{"value":"26CC","name":"CROSSING LANES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26CC"},9933:{"value":"26CD","name":"DISABLED CAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26CD"},9934:{"value":"26CE","name":"OPHIUCHUS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26CE"},9935:{"value":"26CF","name":"PICK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26CF"},9936:{"value":"26D0","name":"CAR SLIDING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26D0"},9937:{"value":"26D1","name":"HELMET WITH WHITE CROSS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26D1"},9938:{"value":"26D2","name":"CIRCLED CROSSING LANES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26D2"},9939:{"value":"26D3","name":"CHAINS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26D3"},9940:{"value":"26D4","name":"NO ENTRY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26D4"},9941:{"value":"26D5","name":"ALTERNATE ONE-WAY LEFT WAY TRAFFIC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26D5"},9942:{"value":"26D6","name":"BLACK TWO-WAY LEFT WAY TRAFFIC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26D6"},9943:{"value":"26D7","name":"WHITE TWO-WAY LEFT WAY TRAFFIC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26D7"},9944:{"value":"26D8","name":"BLACK LEFT LANE MERGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26D8"},9945:{"value":"26D9","name":"WHITE LEFT LANE MERGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26D9"},9946:{"value":"26DA","name":"DRIVE SLOW SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26DA"},9947:{"value":"26DB","name":"HEAVY WHITE DOWN-POINTING TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26DB"},9948:{"value":"26DC","name":"LEFT CLOSED ENTRY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26DC"},9949:{"value":"26DD","name":"SQUARED SALTIRE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26DD"},9950:{"value":"26DE","name":"FALLING DIAGONAL IN WHITE CIRCLE IN BLACK SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26DE"},9951:{"value":"26DF","name":"BLACK TRUCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26DF"},9952:{"value":"26E0","name":"RESTRICTED LEFT ENTRY-1","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26E0"},9953:{"value":"26E1","name":"RESTRICTED LEFT ENTRY-2","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26E1"},9954:{"value":"26E2","name":"ASTRONOMICAL SYMBOL FOR URANUS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26E2"},9955:{"value":"26E3","name":"HEAVY CIRCLE WITH STROKE AND TWO DOTS ABOVE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26E3"},9956:{"value":"26E4","name":"PENTAGRAM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26E4"},9957:{"value":"26E5","name":"RIGHT-HANDED INTERLACED PENTAGRAM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26E5"},9958:{"value":"26E6","name":"LEFT-HANDED INTERLACED PENTAGRAM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26E6"},9959:{"value":"26E7","name":"INVERTED PENTAGRAM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26E7"},9960:{"value":"26E8","name":"BLACK CROSS ON SHIELD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26E8"},9961:{"value":"26E9","name":"SHINTO SHRINE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26E9"},9962:{"value":"26EA","name":"CHURCH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26EA"},9963:{"value":"26EB","name":"CASTLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26EB"},9964:{"value":"26EC","name":"HISTORIC SITE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26EC"},9965:{"value":"26ED","name":"GEAR WITHOUT HUB","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26ED"},9966:{"value":"26EE","name":"GEAR WITH HANDLES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26EE"},9967:{"value":"26EF","name":"MAP SYMBOL FOR LIGHTHOUSE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26EF"},9968:{"value":"26F0","name":"MOUNTAIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26F0"},9969:{"value":"26F1","name":"UMBRELLA ON GROUND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26F1"},9970:{"value":"26F2","name":"FOUNTAIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26F2"},9971:{"value":"26F3","name":"FLAG IN HOLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26F3"},9972:{"value":"26F4","name":"FERRY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26F4"},9973:{"value":"26F5","name":"SAILBOAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26F5"},9974:{"value":"26F6","name":"SQUARE FOUR CORNERS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26F6"},9975:{"value":"26F7","name":"SKIER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26F7"},9976:{"value":"26F8","name":"ICE SKATE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26F8"},9977:{"value":"26F9","name":"PERSON WITH BALL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26F9"},9978:{"value":"26FA","name":"TENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26FA"},9979:{"value":"26FB","name":"JAPANESE BANK SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26FB"},9980:{"value":"26FC","name":"HEADSTONE GRAVEYARD SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26FC"},9981:{"value":"26FD","name":"FUEL PUMP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26FD"},9982:{"value":"26FE","name":"CUP ON BLACK SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26FE"},9983:{"value":"26FF","name":"WHITE FLAG WITH HORIZONTAL MIDDLE BLACK STRIPE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u26FF"},9984:{"value":"2700","name":"BLACK SAFETY SCISSORS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2700"},9985:{"value":"2701","name":"UPPER BLADE SCISSORS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2701"},9986:{"value":"2702","name":"BLACK SCISSORS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2702"},9987:{"value":"2703","name":"LOWER BLADE SCISSORS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2703"},9988:{"value":"2704","name":"WHITE SCISSORS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2704"},9989:{"value":"2705","name":"WHITE HEAVY CHECK MARK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2705"},9990:{"value":"2706","name":"TELEPHONE LOCATION SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2706"},9991:{"value":"2707","name":"TAPE DRIVE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2707"},9992:{"value":"2708","name":"AIRPLANE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2708"},9993:{"value":"2709","name":"ENVELOPE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2709"},9994:{"value":"270A","name":"RAISED FIST","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u270A"},9995:{"value":"270B","name":"RAISED HAND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u270B"},9996:{"value":"270C","name":"VICTORY HAND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u270C"},9997:{"value":"270D","name":"WRITING HAND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u270D"},9998:{"value":"270E","name":"LOWER RIGHT PENCIL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u270E"},9999:{"value":"270F","name":"PENCIL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u270F"},10000:{"value":"2710","name":"UPPER RIGHT PENCIL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2710"},10001:{"value":"2711","name":"WHITE NIB","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2711"},10002:{"value":"2712","name":"BLACK NIB","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2712"},10003:{"value":"2713","name":"CHECK MARK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2713"},10004:{"value":"2714","name":"HEAVY CHECK MARK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2714"},10005:{"value":"2715","name":"MULTIPLICATION X","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2715"},10006:{"value":"2716","name":"HEAVY MULTIPLICATION X","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2716"},10007:{"value":"2717","name":"BALLOT X","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2717"},10008:{"value":"2718","name":"HEAVY BALLOT X","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2718"},10009:{"value":"2719","name":"OUTLINED GREEK CROSS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2719"},10010:{"value":"271A","name":"HEAVY GREEK CROSS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u271A"},10011:{"value":"271B","name":"OPEN CENTRE CROSS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"OPEN CENTER CROSS","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u271B"},10012:{"value":"271C","name":"HEAVY OPEN CENTRE CROSS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"HEAVY OPEN CENTER CROSS","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u271C"},10013:{"value":"271D","name":"LATIN CROSS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u271D"},10014:{"value":"271E","name":"SHADOWED WHITE LATIN CROSS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u271E"},10015:{"value":"271F","name":"OUTLINED LATIN CROSS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u271F"},10016:{"value":"2720","name":"MALTESE CROSS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2720"},10017:{"value":"2721","name":"STAR OF DAVID","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2721"},10018:{"value":"2722","name":"FOUR TEARDROP-SPOKED ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2722"},10019:{"value":"2723","name":"FOUR BALLOON-SPOKED ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2723"},10020:{"value":"2724","name":"HEAVY FOUR BALLOON-SPOKED ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2724"},10021:{"value":"2725","name":"FOUR CLUB-SPOKED ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2725"},10022:{"value":"2726","name":"BLACK FOUR POINTED STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2726"},10023:{"value":"2727","name":"WHITE FOUR POINTED STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2727"},10024:{"value":"2728","name":"SPARKLES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2728"},10025:{"value":"2729","name":"STRESS OUTLINED WHITE STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2729"},10026:{"value":"272A","name":"CIRCLED WHITE STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u272A"},10027:{"value":"272B","name":"OPEN CENTRE BLACK STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"OPEN CENTER BLACK STAR","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u272B"},10028:{"value":"272C","name":"BLACK CENTRE WHITE STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"BLACK CENTER WHITE STAR","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u272C"},10029:{"value":"272D","name":"OUTLINED BLACK STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u272D"},10030:{"value":"272E","name":"HEAVY OUTLINED BLACK STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u272E"},10031:{"value":"272F","name":"PINWHEEL STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u272F"},10032:{"value":"2730","name":"SHADOWED WHITE STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2730"},10033:{"value":"2731","name":"HEAVY ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2731"},10034:{"value":"2732","name":"OPEN CENTRE ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"OPEN CENTER ASTERISK","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2732"},10035:{"value":"2733","name":"EIGHT SPOKED ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2733"},10036:{"value":"2734","name":"EIGHT POINTED BLACK STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2734"},10037:{"value":"2735","name":"EIGHT POINTED PINWHEEL STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2735"},10038:{"value":"2736","name":"SIX POINTED BLACK STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2736"},10039:{"value":"2737","name":"EIGHT POINTED RECTILINEAR BLACK STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2737"},10040:{"value":"2738","name":"HEAVY EIGHT POINTED RECTILINEAR BLACK STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2738"},10041:{"value":"2739","name":"TWELVE POINTED BLACK STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2739"},10042:{"value":"273A","name":"SIXTEEN POINTED ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u273A"},10043:{"value":"273B","name":"TEARDROP-SPOKED ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u273B"},10044:{"value":"273C","name":"OPEN CENTRE TEARDROP-SPOKED ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"OPEN CENTER TEARDROP-SPOKED ASTERISK","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u273C"},10045:{"value":"273D","name":"HEAVY TEARDROP-SPOKED ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u273D"},10046:{"value":"273E","name":"SIX PETALLED BLACK AND WHITE FLORETTE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u273E"},10047:{"value":"273F","name":"BLACK FLORETTE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u273F"},10048:{"value":"2740","name":"WHITE FLORETTE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2740"},10049:{"value":"2741","name":"EIGHT PETALLED OUTLINED BLACK FLORETTE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2741"},10050:{"value":"2742","name":"CIRCLED OPEN CENTRE EIGHT POINTED STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"CIRCLED OPEN CENTER EIGHT POINTED STAR","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2742"},10051:{"value":"2743","name":"HEAVY TEARDROP-SPOKED PINWHEEL ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2743"},10052:{"value":"2744","name":"SNOWFLAKE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2744"},10053:{"value":"2745","name":"TIGHT TRIFOLIATE SNOWFLAKE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2745"},10054:{"value":"2746","name":"HEAVY CHEVRON SNOWFLAKE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2746"},10055:{"value":"2747","name":"SPARKLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2747"},10056:{"value":"2748","name":"HEAVY SPARKLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2748"},10057:{"value":"2749","name":"BALLOON-SPOKED ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2749"},10058:{"value":"274A","name":"EIGHT TEARDROP-SPOKED PROPELLER ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u274A"},10059:{"value":"274B","name":"HEAVY EIGHT TEARDROP-SPOKED PROPELLER ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u274B"},10060:{"value":"274C","name":"CROSS MARK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u274C"},10061:{"value":"274D","name":"SHADOWED WHITE CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u274D"},10062:{"value":"274E","name":"NEGATIVE SQUARED CROSS MARK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u274E"},10063:{"value":"274F","name":"LOWER RIGHT DROP-SHADOWED WHITE SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u274F"},10064:{"value":"2750","name":"UPPER RIGHT DROP-SHADOWED WHITE SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2750"},10065:{"value":"2751","name":"LOWER RIGHT SHADOWED WHITE SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2751"},10066:{"value":"2752","name":"UPPER RIGHT SHADOWED WHITE SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2752"},10067:{"value":"2753","name":"BLACK QUESTION MARK ORNAMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2753"},10068:{"value":"2754","name":"WHITE QUESTION MARK ORNAMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2754"},10069:{"value":"2755","name":"WHITE EXCLAMATION MARK ORNAMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2755"},10070:{"value":"2756","name":"BLACK DIAMOND MINUS WHITE X","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2756"},10071:{"value":"2757","name":"HEAVY EXCLAMATION MARK SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2757"},10072:{"value":"2758","name":"LIGHT VERTICAL BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2758"},10073:{"value":"2759","name":"MEDIUM VERTICAL BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2759"},10074:{"value":"275A","name":"HEAVY VERTICAL BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u275A"},10075:{"value":"275B","name":"HEAVY SINGLE TURNED COMMA QUOTATION MARK ORNAMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u275B"},10076:{"value":"275C","name":"HEAVY SINGLE COMMA QUOTATION MARK ORNAMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u275C"},10077:{"value":"275D","name":"HEAVY DOUBLE TURNED COMMA QUOTATION MARK ORNAMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u275D"},10078:{"value":"275E","name":"HEAVY DOUBLE COMMA QUOTATION MARK ORNAMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u275E"},10079:{"value":"275F","name":"HEAVY LOW SINGLE COMMA QUOTATION MARK ORNAMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u275F"},10080:{"value":"2760","name":"HEAVY LOW DOUBLE COMMA QUOTATION MARK ORNAMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2760"},10081:{"value":"2761","name":"CURVED STEM PARAGRAPH SIGN ORNAMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2761"},10082:{"value":"2762","name":"HEAVY EXCLAMATION MARK ORNAMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2762"},10083:{"value":"2763","name":"HEAVY HEART EXCLAMATION MARK ORNAMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2763"},10084:{"value":"2764","name":"HEAVY BLACK HEART","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2764"},10085:{"value":"2765","name":"ROTATED HEAVY BLACK HEART BULLET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2765"},10086:{"value":"2766","name":"FLORAL HEART","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2766"},10087:{"value":"2767","name":"ROTATED FLORAL HEART BULLET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2767"},10132:{"value":"2794","name":"HEAVY WIDE-HEADED RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"HEAVY WIDE-HEADED RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2794"},10133:{"value":"2795","name":"HEAVY PLUS SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2795"},10134:{"value":"2796","name":"HEAVY MINUS SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2796"},10135:{"value":"2797","name":"HEAVY DIVISION SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2797"},10136:{"value":"2798","name":"HEAVY SOUTH EAST ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"HEAVY LOWER RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2798"},10137:{"value":"2799","name":"HEAVY RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"HEAVY RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2799"},10138:{"value":"279A","name":"HEAVY NORTH EAST ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"HEAVY UPPER RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u279A"},10139:{"value":"279B","name":"DRAFTING POINT RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"DRAFTING POINT RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u279B"},10140:{"value":"279C","name":"HEAVY ROUND-TIPPED RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"HEAVY ROUND-TIPPED RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u279C"},10141:{"value":"279D","name":"TRIANGLE-HEADED RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"TRIANGLE-HEADED RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u279D"},10142:{"value":"279E","name":"HEAVY TRIANGLE-HEADED RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"HEAVY TRIANGLE-HEADED RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u279E"},10143:{"value":"279F","name":"DASHED TRIANGLE-HEADED RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"DASHED TRIANGLE-HEADED RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u279F"},10144:{"value":"27A0","name":"HEAVY DASHED TRIANGLE-HEADED RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"HEAVY DASHED TRIANGLE-HEADED RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27A0"},10145:{"value":"27A1","name":"BLACK RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"BLACK RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27A1"},10146:{"value":"27A2","name":"THREE-D TOP-LIGHTED RIGHTWARDS ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"THREE-D TOP-LIGHTED RIGHT ARROWHEAD","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27A2"},10147:{"value":"27A3","name":"THREE-D BOTTOM-LIGHTED RIGHTWARDS ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"THREE-D BOTTOM-LIGHTED RIGHT ARROWHEAD","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27A3"},10148:{"value":"27A4","name":"BLACK RIGHTWARDS ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"BLACK RIGHT ARROWHEAD","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27A4"},10149:{"value":"27A5","name":"HEAVY BLACK CURVED DOWNWARDS AND RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"HEAVY BLACK CURVED DOWN AND RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27A5"},10150:{"value":"27A6","name":"HEAVY BLACK CURVED UPWARDS AND RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"HEAVY BLACK CURVED UP AND RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27A6"},10151:{"value":"27A7","name":"SQUAT BLACK RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUAT BLACK RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27A7"},10152:{"value":"27A8","name":"HEAVY CONCAVE-POINTED BLACK RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"HEAVY CONCAVE-POINTED BLACK RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27A8"},10153:{"value":"27A9","name":"RIGHT-SHADED WHITE RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"RIGHT-SHADED WHITE RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27A9"},10154:{"value":"27AA","name":"LEFT-SHADED WHITE RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"LEFT-SHADED WHITE RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27AA"},10155:{"value":"27AB","name":"BACK-TILTED SHADOWED WHITE RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"BACK-TILTED SHADOWED WHITE RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27AB"},10156:{"value":"27AC","name":"FRONT-TILTED SHADOWED WHITE RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FRONT-TILTED SHADOWED WHITE RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27AC"},10157:{"value":"27AD","name":"HEAVY LOWER RIGHT-SHADOWED WHITE RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"HEAVY LOWER RIGHT-SHADOWED WHITE RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27AD"},10158:{"value":"27AE","name":"HEAVY UPPER RIGHT-SHADOWED WHITE RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"HEAVY UPPER RIGHT-SHADOWED WHITE RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27AE"},10159:{"value":"27AF","name":"NOTCHED LOWER RIGHT-SHADOWED WHITE RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"NOTCHED LOWER RIGHT-SHADOWED WHITE RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27AF"},10160:{"value":"27B0","name":"CURLY LOOP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27B0"},10161:{"value":"27B1","name":"NOTCHED UPPER RIGHT-SHADOWED WHITE RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"NOTCHED UPPER RIGHT-SHADOWED WHITE RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27B1"},10162:{"value":"27B2","name":"CIRCLED HEAVY WHITE RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"CIRCLED HEAVY WHITE RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27B2"},10163:{"value":"27B3","name":"WHITE-FEATHERED RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"WHITE-FEATHERED RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27B3"},10164:{"value":"27B4","name":"BLACK-FEATHERED SOUTH EAST ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"BLACK-FEATHERED LOWER RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27B4"},10165:{"value":"27B5","name":"BLACK-FEATHERED RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"BLACK-FEATHERED RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27B5"},10166:{"value":"27B6","name":"BLACK-FEATHERED NORTH EAST ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"BLACK-FEATHERED UPPER RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27B6"},10167:{"value":"27B7","name":"HEAVY BLACK-FEATHERED SOUTH EAST ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"HEAVY BLACK-FEATHERED LOWER RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27B7"},10168:{"value":"27B8","name":"HEAVY BLACK-FEATHERED RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"HEAVY BLACK-FEATHERED RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27B8"},10169:{"value":"27B9","name":"HEAVY BLACK-FEATHERED NORTH EAST ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"HEAVY BLACK-FEATHERED UPPER RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27B9"},10170:{"value":"27BA","name":"TEARDROP-BARBED RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"TEARDROP-BARBED RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27BA"},10171:{"value":"27BB","name":"HEAVY TEARDROP-SHANKED RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"HEAVY TEARDROP-SHANKED RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27BB"},10172:{"value":"27BC","name":"WEDGE-TAILED RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"WEDGE-TAILED RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27BC"},10173:{"value":"27BD","name":"HEAVY WEDGE-TAILED RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"HEAVY WEDGE-TAILED RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27BD"},10174:{"value":"27BE","name":"OPEN-OUTLINED RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"OPEN-OUTLINED RIGHT ARROW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27BE"},10175:{"value":"27BF","name":"DOUBLE CURLY LOOP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u27BF"},10240:{"value":"2800","name":"BRAILLE PATTERN BLANK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2800"},10241:{"value":"2801","name":"BRAILLE PATTERN DOTS-1","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2801"},10242:{"value":"2802","name":"BRAILLE PATTERN DOTS-2","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2802"},10243:{"value":"2803","name":"BRAILLE PATTERN DOTS-12","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2803"},10244:{"value":"2804","name":"BRAILLE PATTERN DOTS-3","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2804"},10245:{"value":"2805","name":"BRAILLE PATTERN DOTS-13","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2805"},10246:{"value":"2806","name":"BRAILLE PATTERN DOTS-23","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2806"},10247:{"value":"2807","name":"BRAILLE PATTERN DOTS-123","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2807"},10248:{"value":"2808","name":"BRAILLE PATTERN DOTS-4","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2808"},10249:{"value":"2809","name":"BRAILLE PATTERN DOTS-14","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2809"},10250:{"value":"280A","name":"BRAILLE PATTERN DOTS-24","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u280A"},10251:{"value":"280B","name":"BRAILLE PATTERN DOTS-124","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u280B"},10252:{"value":"280C","name":"BRAILLE PATTERN DOTS-34","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u280C"},10253:{"value":"280D","name":"BRAILLE PATTERN DOTS-134","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u280D"},10254:{"value":"280E","name":"BRAILLE PATTERN DOTS-234","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u280E"},10255:{"value":"280F","name":"BRAILLE PATTERN DOTS-1234","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u280F"},10256:{"value":"2810","name":"BRAILLE PATTERN DOTS-5","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2810"},10257:{"value":"2811","name":"BRAILLE PATTERN DOTS-15","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2811"},10258:{"value":"2812","name":"BRAILLE PATTERN DOTS-25","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2812"},10259:{"value":"2813","name":"BRAILLE PATTERN DOTS-125","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2813"},10260:{"value":"2814","name":"BRAILLE PATTERN DOTS-35","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2814"},10261:{"value":"2815","name":"BRAILLE PATTERN DOTS-135","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2815"},10262:{"value":"2816","name":"BRAILLE PATTERN DOTS-235","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2816"},10263:{"value":"2817","name":"BRAILLE PATTERN DOTS-1235","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2817"},10264:{"value":"2818","name":"BRAILLE PATTERN DOTS-45","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2818"},10265:{"value":"2819","name":"BRAILLE PATTERN DOTS-145","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2819"},10266:{"value":"281A","name":"BRAILLE PATTERN DOTS-245","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u281A"},10267:{"value":"281B","name":"BRAILLE PATTERN DOTS-1245","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u281B"},10268:{"value":"281C","name":"BRAILLE PATTERN DOTS-345","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u281C"},10269:{"value":"281D","name":"BRAILLE PATTERN DOTS-1345","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u281D"},10270:{"value":"281E","name":"BRAILLE PATTERN DOTS-2345","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u281E"},10271:{"value":"281F","name":"BRAILLE PATTERN DOTS-12345","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u281F"},10272:{"value":"2820","name":"BRAILLE PATTERN DOTS-6","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2820"},10273:{"value":"2821","name":"BRAILLE PATTERN DOTS-16","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2821"},10274:{"value":"2822","name":"BRAILLE PATTERN DOTS-26","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2822"},10275:{"value":"2823","name":"BRAILLE PATTERN DOTS-126","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2823"},10276:{"value":"2824","name":"BRAILLE PATTERN DOTS-36","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2824"},10277:{"value":"2825","name":"BRAILLE PATTERN DOTS-136","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2825"},10278:{"value":"2826","name":"BRAILLE PATTERN DOTS-236","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2826"},10279:{"value":"2827","name":"BRAILLE PATTERN DOTS-1236","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2827"},10280:{"value":"2828","name":"BRAILLE PATTERN DOTS-46","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2828"},10281:{"value":"2829","name":"BRAILLE PATTERN DOTS-146","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2829"},10282:{"value":"282A","name":"BRAILLE PATTERN DOTS-246","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u282A"},10283:{"value":"282B","name":"BRAILLE PATTERN DOTS-1246","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u282B"},10284:{"value":"282C","name":"BRAILLE PATTERN DOTS-346","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u282C"},10285:{"value":"282D","name":"BRAILLE PATTERN DOTS-1346","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u282D"},10286:{"value":"282E","name":"BRAILLE PATTERN DOTS-2346","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u282E"},10287:{"value":"282F","name":"BRAILLE PATTERN DOTS-12346","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u282F"},10288:{"value":"2830","name":"BRAILLE PATTERN DOTS-56","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2830"},10289:{"value":"2831","name":"BRAILLE PATTERN DOTS-156","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2831"},10290:{"value":"2832","name":"BRAILLE PATTERN DOTS-256","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2832"},10291:{"value":"2833","name":"BRAILLE PATTERN DOTS-1256","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2833"},10292:{"value":"2834","name":"BRAILLE PATTERN DOTS-356","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2834"},10293:{"value":"2835","name":"BRAILLE PATTERN DOTS-1356","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2835"},10294:{"value":"2836","name":"BRAILLE PATTERN DOTS-2356","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2836"},10295:{"value":"2837","name":"BRAILLE PATTERN DOTS-12356","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2837"},10296:{"value":"2838","name":"BRAILLE PATTERN DOTS-456","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2838"},10297:{"value":"2839","name":"BRAILLE PATTERN DOTS-1456","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2839"},10298:{"value":"283A","name":"BRAILLE PATTERN DOTS-2456","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u283A"},10299:{"value":"283B","name":"BRAILLE PATTERN DOTS-12456","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u283B"},10300:{"value":"283C","name":"BRAILLE PATTERN DOTS-3456","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u283C"},10301:{"value":"283D","name":"BRAILLE PATTERN DOTS-13456","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u283D"},10302:{"value":"283E","name":"BRAILLE PATTERN DOTS-23456","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u283E"},10303:{"value":"283F","name":"BRAILLE PATTERN DOTS-123456","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u283F"},10304:{"value":"2840","name":"BRAILLE PATTERN DOTS-7","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2840"},10305:{"value":"2841","name":"BRAILLE PATTERN DOTS-17","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2841"},10306:{"value":"2842","name":"BRAILLE PATTERN DOTS-27","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2842"},10307:{"value":"2843","name":"BRAILLE PATTERN DOTS-127","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2843"},10308:{"value":"2844","name":"BRAILLE PATTERN DOTS-37","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2844"},10309:{"value":"2845","name":"BRAILLE PATTERN DOTS-137","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2845"},10310:{"value":"2846","name":"BRAILLE PATTERN DOTS-237","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2846"},10311:{"value":"2847","name":"BRAILLE PATTERN DOTS-1237","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2847"},10312:{"value":"2848","name":"BRAILLE PATTERN DOTS-47","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2848"},10313:{"value":"2849","name":"BRAILLE PATTERN DOTS-147","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2849"},10314:{"value":"284A","name":"BRAILLE PATTERN DOTS-247","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u284A"},10315:{"value":"284B","name":"BRAILLE PATTERN DOTS-1247","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u284B"},10316:{"value":"284C","name":"BRAILLE PATTERN DOTS-347","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u284C"},10317:{"value":"284D","name":"BRAILLE PATTERN DOTS-1347","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u284D"},10318:{"value":"284E","name":"BRAILLE PATTERN DOTS-2347","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u284E"},10319:{"value":"284F","name":"BRAILLE PATTERN DOTS-12347","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u284F"},10320:{"value":"2850","name":"BRAILLE PATTERN DOTS-57","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2850"},10321:{"value":"2851","name":"BRAILLE PATTERN DOTS-157","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2851"},10322:{"value":"2852","name":"BRAILLE PATTERN DOTS-257","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2852"},10323:{"value":"2853","name":"BRAILLE PATTERN DOTS-1257","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2853"},10324:{"value":"2854","name":"BRAILLE PATTERN DOTS-357","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2854"},10325:{"value":"2855","name":"BRAILLE PATTERN DOTS-1357","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2855"},10326:{"value":"2856","name":"BRAILLE PATTERN DOTS-2357","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2856"},10327:{"value":"2857","name":"BRAILLE PATTERN DOTS-12357","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2857"},10328:{"value":"2858","name":"BRAILLE PATTERN DOTS-457","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2858"},10329:{"value":"2859","name":"BRAILLE PATTERN DOTS-1457","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2859"},10330:{"value":"285A","name":"BRAILLE PATTERN DOTS-2457","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u285A"},10331:{"value":"285B","name":"BRAILLE PATTERN DOTS-12457","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u285B"},10332:{"value":"285C","name":"BRAILLE PATTERN DOTS-3457","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u285C"},10333:{"value":"285D","name":"BRAILLE PATTERN DOTS-13457","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u285D"},10334:{"value":"285E","name":"BRAILLE PATTERN DOTS-23457","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u285E"},10335:{"value":"285F","name":"BRAILLE PATTERN DOTS-123457","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u285F"},10336:{"value":"2860","name":"BRAILLE PATTERN DOTS-67","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2860"},10337:{"value":"2861","name":"BRAILLE PATTERN DOTS-167","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2861"},10338:{"value":"2862","name":"BRAILLE PATTERN DOTS-267","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2862"},10339:{"value":"2863","name":"BRAILLE PATTERN DOTS-1267","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2863"},10340:{"value":"2864","name":"BRAILLE PATTERN DOTS-367","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2864"},10341:{"value":"2865","name":"BRAILLE PATTERN DOTS-1367","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2865"},10342:{"value":"2866","name":"BRAILLE PATTERN DOTS-2367","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2866"},10343:{"value":"2867","name":"BRAILLE PATTERN DOTS-12367","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2867"},10344:{"value":"2868","name":"BRAILLE PATTERN DOTS-467","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2868"},10345:{"value":"2869","name":"BRAILLE PATTERN DOTS-1467","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2869"},10346:{"value":"286A","name":"BRAILLE PATTERN DOTS-2467","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u286A"},10347:{"value":"286B","name":"BRAILLE PATTERN DOTS-12467","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u286B"},10348:{"value":"286C","name":"BRAILLE PATTERN DOTS-3467","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u286C"},10349:{"value":"286D","name":"BRAILLE PATTERN DOTS-13467","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u286D"},10350:{"value":"286E","name":"BRAILLE PATTERN DOTS-23467","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u286E"},10351:{"value":"286F","name":"BRAILLE PATTERN DOTS-123467","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u286F"},10352:{"value":"2870","name":"BRAILLE PATTERN DOTS-567","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2870"},10353:{"value":"2871","name":"BRAILLE PATTERN DOTS-1567","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2871"},10354:{"value":"2872","name":"BRAILLE PATTERN DOTS-2567","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2872"},10355:{"value":"2873","name":"BRAILLE PATTERN DOTS-12567","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2873"},10356:{"value":"2874","name":"BRAILLE PATTERN DOTS-3567","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2874"},10357:{"value":"2875","name":"BRAILLE PATTERN DOTS-13567","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2875"},10358:{"value":"2876","name":"BRAILLE PATTERN DOTS-23567","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2876"},10359:{"value":"2877","name":"BRAILLE PATTERN DOTS-123567","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2877"},10360:{"value":"2878","name":"BRAILLE PATTERN DOTS-4567","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2878"},10361:{"value":"2879","name":"BRAILLE PATTERN DOTS-14567","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2879"},10362:{"value":"287A","name":"BRAILLE PATTERN DOTS-24567","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u287A"},10363:{"value":"287B","name":"BRAILLE PATTERN DOTS-124567","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u287B"},10364:{"value":"287C","name":"BRAILLE PATTERN DOTS-34567","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u287C"},10365:{"value":"287D","name":"BRAILLE PATTERN DOTS-134567","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u287D"},10366:{"value":"287E","name":"BRAILLE PATTERN DOTS-234567","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u287E"},10367:{"value":"287F","name":"BRAILLE PATTERN DOTS-1234567","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u287F"},10368:{"value":"2880","name":"BRAILLE PATTERN DOTS-8","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2880"},10369:{"value":"2881","name":"BRAILLE PATTERN DOTS-18","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2881"},10370:{"value":"2882","name":"BRAILLE PATTERN DOTS-28","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2882"},10371:{"value":"2883","name":"BRAILLE PATTERN DOTS-128","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2883"},10372:{"value":"2884","name":"BRAILLE PATTERN DOTS-38","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2884"},10373:{"value":"2885","name":"BRAILLE PATTERN DOTS-138","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2885"},10374:{"value":"2886","name":"BRAILLE PATTERN DOTS-238","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2886"},10375:{"value":"2887","name":"BRAILLE PATTERN DOTS-1238","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2887"},10376:{"value":"2888","name":"BRAILLE PATTERN DOTS-48","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2888"},10377:{"value":"2889","name":"BRAILLE PATTERN DOTS-148","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2889"},10378:{"value":"288A","name":"BRAILLE PATTERN DOTS-248","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u288A"},10379:{"value":"288B","name":"BRAILLE PATTERN DOTS-1248","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u288B"},10380:{"value":"288C","name":"BRAILLE PATTERN DOTS-348","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u288C"},10381:{"value":"288D","name":"BRAILLE PATTERN DOTS-1348","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u288D"},10382:{"value":"288E","name":"BRAILLE PATTERN DOTS-2348","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u288E"},10383:{"value":"288F","name":"BRAILLE PATTERN DOTS-12348","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u288F"},10384:{"value":"2890","name":"BRAILLE PATTERN DOTS-58","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2890"},10385:{"value":"2891","name":"BRAILLE PATTERN DOTS-158","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2891"},10386:{"value":"2892","name":"BRAILLE PATTERN DOTS-258","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2892"},10387:{"value":"2893","name":"BRAILLE PATTERN DOTS-1258","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2893"},10388:{"value":"2894","name":"BRAILLE PATTERN DOTS-358","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2894"},10389:{"value":"2895","name":"BRAILLE PATTERN DOTS-1358","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2895"},10390:{"value":"2896","name":"BRAILLE PATTERN DOTS-2358","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2896"},10391:{"value":"2897","name":"BRAILLE PATTERN DOTS-12358","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2897"},10392:{"value":"2898","name":"BRAILLE PATTERN DOTS-458","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2898"},10393:{"value":"2899","name":"BRAILLE PATTERN DOTS-1458","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2899"},10394:{"value":"289A","name":"BRAILLE PATTERN DOTS-2458","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u289A"},10395:{"value":"289B","name":"BRAILLE PATTERN DOTS-12458","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u289B"},10396:{"value":"289C","name":"BRAILLE PATTERN DOTS-3458","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u289C"},10397:{"value":"289D","name":"BRAILLE PATTERN DOTS-13458","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u289D"},10398:{"value":"289E","name":"BRAILLE PATTERN DOTS-23458","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u289E"},10399:{"value":"289F","name":"BRAILLE PATTERN DOTS-123458","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u289F"},10400:{"value":"28A0","name":"BRAILLE PATTERN DOTS-68","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28A0"},10401:{"value":"28A1","name":"BRAILLE PATTERN DOTS-168","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28A1"},10402:{"value":"28A2","name":"BRAILLE PATTERN DOTS-268","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28A2"},10403:{"value":"28A3","name":"BRAILLE PATTERN DOTS-1268","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28A3"},10404:{"value":"28A4","name":"BRAILLE PATTERN DOTS-368","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28A4"},10405:{"value":"28A5","name":"BRAILLE PATTERN DOTS-1368","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28A5"},10406:{"value":"28A6","name":"BRAILLE PATTERN DOTS-2368","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28A6"},10407:{"value":"28A7","name":"BRAILLE PATTERN DOTS-12368","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28A7"},10408:{"value":"28A8","name":"BRAILLE PATTERN DOTS-468","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28A8"},10409:{"value":"28A9","name":"BRAILLE PATTERN DOTS-1468","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28A9"},10410:{"value":"28AA","name":"BRAILLE PATTERN DOTS-2468","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28AA"},10411:{"value":"28AB","name":"BRAILLE PATTERN DOTS-12468","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28AB"},10412:{"value":"28AC","name":"BRAILLE PATTERN DOTS-3468","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28AC"},10413:{"value":"28AD","name":"BRAILLE PATTERN DOTS-13468","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28AD"},10414:{"value":"28AE","name":"BRAILLE PATTERN DOTS-23468","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28AE"},10415:{"value":"28AF","name":"BRAILLE PATTERN DOTS-123468","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28AF"},10416:{"value":"28B0","name":"BRAILLE PATTERN DOTS-568","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28B0"},10417:{"value":"28B1","name":"BRAILLE PATTERN DOTS-1568","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28B1"},10418:{"value":"28B2","name":"BRAILLE PATTERN DOTS-2568","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28B2"},10419:{"value":"28B3","name":"BRAILLE PATTERN DOTS-12568","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28B3"},10420:{"value":"28B4","name":"BRAILLE PATTERN DOTS-3568","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28B4"},10421:{"value":"28B5","name":"BRAILLE PATTERN DOTS-13568","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28B5"},10422:{"value":"28B6","name":"BRAILLE PATTERN DOTS-23568","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28B6"},10423:{"value":"28B7","name":"BRAILLE PATTERN DOTS-123568","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28B7"},10424:{"value":"28B8","name":"BRAILLE PATTERN DOTS-4568","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28B8"},10425:{"value":"28B9","name":"BRAILLE PATTERN DOTS-14568","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28B9"},10426:{"value":"28BA","name":"BRAILLE PATTERN DOTS-24568","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28BA"},10427:{"value":"28BB","name":"BRAILLE PATTERN DOTS-124568","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28BB"},10428:{"value":"28BC","name":"BRAILLE PATTERN DOTS-34568","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28BC"},10429:{"value":"28BD","name":"BRAILLE PATTERN DOTS-134568","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28BD"},10430:{"value":"28BE","name":"BRAILLE PATTERN DOTS-234568","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28BE"},10431:{"value":"28BF","name":"BRAILLE PATTERN DOTS-1234568","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28BF"},10432:{"value":"28C0","name":"BRAILLE PATTERN DOTS-78","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28C0"},10433:{"value":"28C1","name":"BRAILLE PATTERN DOTS-178","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28C1"},10434:{"value":"28C2","name":"BRAILLE PATTERN DOTS-278","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28C2"},10435:{"value":"28C3","name":"BRAILLE PATTERN DOTS-1278","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28C3"},10436:{"value":"28C4","name":"BRAILLE PATTERN DOTS-378","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28C4"},10437:{"value":"28C5","name":"BRAILLE PATTERN DOTS-1378","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28C5"},10438:{"value":"28C6","name":"BRAILLE PATTERN DOTS-2378","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28C6"},10439:{"value":"28C7","name":"BRAILLE PATTERN DOTS-12378","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28C7"},10440:{"value":"28C8","name":"BRAILLE PATTERN DOTS-478","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28C8"},10441:{"value":"28C9","name":"BRAILLE PATTERN DOTS-1478","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28C9"},10442:{"value":"28CA","name":"BRAILLE PATTERN DOTS-2478","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28CA"},10443:{"value":"28CB","name":"BRAILLE PATTERN DOTS-12478","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28CB"},10444:{"value":"28CC","name":"BRAILLE PATTERN DOTS-3478","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28CC"},10445:{"value":"28CD","name":"BRAILLE PATTERN DOTS-13478","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28CD"},10446:{"value":"28CE","name":"BRAILLE PATTERN DOTS-23478","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28CE"},10447:{"value":"28CF","name":"BRAILLE PATTERN DOTS-123478","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28CF"},10448:{"value":"28D0","name":"BRAILLE PATTERN DOTS-578","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28D0"},10449:{"value":"28D1","name":"BRAILLE PATTERN DOTS-1578","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28D1"},10450:{"value":"28D2","name":"BRAILLE PATTERN DOTS-2578","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28D2"},10451:{"value":"28D3","name":"BRAILLE PATTERN DOTS-12578","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28D3"},10452:{"value":"28D4","name":"BRAILLE PATTERN DOTS-3578","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28D4"},10453:{"value":"28D5","name":"BRAILLE PATTERN DOTS-13578","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28D5"},10454:{"value":"28D6","name":"BRAILLE PATTERN DOTS-23578","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28D6"},10455:{"value":"28D7","name":"BRAILLE PATTERN DOTS-123578","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28D7"},10456:{"value":"28D8","name":"BRAILLE PATTERN DOTS-4578","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28D8"},10457:{"value":"28D9","name":"BRAILLE PATTERN DOTS-14578","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28D9"},10458:{"value":"28DA","name":"BRAILLE PATTERN DOTS-24578","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28DA"},10459:{"value":"28DB","name":"BRAILLE PATTERN DOTS-124578","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28DB"},10460:{"value":"28DC","name":"BRAILLE PATTERN DOTS-34578","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28DC"},10461:{"value":"28DD","name":"BRAILLE PATTERN DOTS-134578","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28DD"},10462:{"value":"28DE","name":"BRAILLE PATTERN DOTS-234578","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28DE"},10463:{"value":"28DF","name":"BRAILLE PATTERN DOTS-1234578","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28DF"},10464:{"value":"28E0","name":"BRAILLE PATTERN DOTS-678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28E0"},10465:{"value":"28E1","name":"BRAILLE PATTERN DOTS-1678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28E1"},10466:{"value":"28E2","name":"BRAILLE PATTERN DOTS-2678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28E2"},10467:{"value":"28E3","name":"BRAILLE PATTERN DOTS-12678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28E3"},10468:{"value":"28E4","name":"BRAILLE PATTERN DOTS-3678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28E4"},10469:{"value":"28E5","name":"BRAILLE PATTERN DOTS-13678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28E5"},10470:{"value":"28E6","name":"BRAILLE PATTERN DOTS-23678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28E6"},10471:{"value":"28E7","name":"BRAILLE PATTERN DOTS-123678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28E7"},10472:{"value":"28E8","name":"BRAILLE PATTERN DOTS-4678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28E8"},10473:{"value":"28E9","name":"BRAILLE PATTERN DOTS-14678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28E9"},10474:{"value":"28EA","name":"BRAILLE PATTERN DOTS-24678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28EA"},10475:{"value":"28EB","name":"BRAILLE PATTERN DOTS-124678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28EB"},10476:{"value":"28EC","name":"BRAILLE PATTERN DOTS-34678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28EC"},10477:{"value":"28ED","name":"BRAILLE PATTERN DOTS-134678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28ED"},10478:{"value":"28EE","name":"BRAILLE PATTERN DOTS-234678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28EE"},10479:{"value":"28EF","name":"BRAILLE PATTERN DOTS-1234678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28EF"},10480:{"value":"28F0","name":"BRAILLE PATTERN DOTS-5678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28F0"},10481:{"value":"28F1","name":"BRAILLE PATTERN DOTS-15678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28F1"},10482:{"value":"28F2","name":"BRAILLE PATTERN DOTS-25678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28F2"},10483:{"value":"28F3","name":"BRAILLE PATTERN DOTS-125678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28F3"},10484:{"value":"28F4","name":"BRAILLE PATTERN DOTS-35678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28F4"},10485:{"value":"28F5","name":"BRAILLE PATTERN DOTS-135678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28F5"},10486:{"value":"28F6","name":"BRAILLE PATTERN DOTS-235678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28F6"},10487:{"value":"28F7","name":"BRAILLE PATTERN DOTS-1235678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28F7"},10488:{"value":"28F8","name":"BRAILLE PATTERN DOTS-45678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28F8"},10489:{"value":"28F9","name":"BRAILLE PATTERN DOTS-145678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28F9"},10490:{"value":"28FA","name":"BRAILLE PATTERN DOTS-245678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28FA"},10491:{"value":"28FB","name":"BRAILLE PATTERN DOTS-1245678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28FB"},10492:{"value":"28FC","name":"BRAILLE PATTERN DOTS-345678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28FC"},10493:{"value":"28FD","name":"BRAILLE PATTERN DOTS-1345678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28FD"},10494:{"value":"28FE","name":"BRAILLE PATTERN DOTS-2345678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28FE"},10495:{"value":"28FF","name":"BRAILLE PATTERN DOTS-12345678","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u28FF"},11008:{"value":"2B00","name":"NORTH EAST WHITE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B00"},11009:{"value":"2B01","name":"NORTH WEST WHITE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B01"},11010:{"value":"2B02","name":"SOUTH EAST WHITE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B02"},11011:{"value":"2B03","name":"SOUTH WEST WHITE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B03"},11012:{"value":"2B04","name":"LEFT RIGHT WHITE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B04"},11013:{"value":"2B05","name":"LEFTWARDS BLACK ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B05"},11014:{"value":"2B06","name":"UPWARDS BLACK ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B06"},11015:{"value":"2B07","name":"DOWNWARDS BLACK ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B07"},11016:{"value":"2B08","name":"NORTH EAST BLACK ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B08"},11017:{"value":"2B09","name":"NORTH WEST BLACK ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B09"},11018:{"value":"2B0A","name":"SOUTH EAST BLACK ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B0A"},11019:{"value":"2B0B","name":"SOUTH WEST BLACK ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B0B"},11020:{"value":"2B0C","name":"LEFT RIGHT BLACK ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B0C"},11021:{"value":"2B0D","name":"UP DOWN BLACK ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B0D"},11022:{"value":"2B0E","name":"RIGHTWARDS ARROW WITH TIP DOWNWARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B0E"},11023:{"value":"2B0F","name":"RIGHTWARDS ARROW WITH TIP UPWARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B0F"},11024:{"value":"2B10","name":"LEFTWARDS ARROW WITH TIP DOWNWARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B10"},11025:{"value":"2B11","name":"LEFTWARDS ARROW WITH TIP UPWARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B11"},11026:{"value":"2B12","name":"SQUARE WITH TOP HALF BLACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B12"},11027:{"value":"2B13","name":"SQUARE WITH BOTTOM HALF BLACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B13"},11028:{"value":"2B14","name":"SQUARE WITH UPPER RIGHT DIAGONAL HALF BLACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B14"},11029:{"value":"2B15","name":"SQUARE WITH LOWER LEFT DIAGONAL HALF BLACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B15"},11030:{"value":"2B16","name":"DIAMOND WITH LEFT HALF BLACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B16"},11031:{"value":"2B17","name":"DIAMOND WITH RIGHT HALF BLACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B17"},11032:{"value":"2B18","name":"DIAMOND WITH TOP HALF BLACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B18"},11033:{"value":"2B19","name":"DIAMOND WITH BOTTOM HALF BLACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B19"},11034:{"value":"2B1A","name":"DOTTED SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B1A"},11035:{"value":"2B1B","name":"BLACK LARGE SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B1B"},11036:{"value":"2B1C","name":"WHITE LARGE SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B1C"},11037:{"value":"2B1D","name":"BLACK VERY SMALL SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B1D"},11038:{"value":"2B1E","name":"WHITE VERY SMALL SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B1E"},11039:{"value":"2B1F","name":"BLACK PENTAGON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B1F"},11040:{"value":"2B20","name":"WHITE PENTAGON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B20"},11041:{"value":"2B21","name":"WHITE HEXAGON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B21"},11042:{"value":"2B22","name":"BLACK HEXAGON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B22"},11043:{"value":"2B23","name":"HORIZONTAL BLACK HEXAGON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B23"},11044:{"value":"2B24","name":"BLACK LARGE CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B24"},11045:{"value":"2B25","name":"BLACK MEDIUM DIAMOND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B25"},11046:{"value":"2B26","name":"WHITE MEDIUM DIAMOND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B26"},11047:{"value":"2B27","name":"BLACK MEDIUM LOZENGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B27"},11048:{"value":"2B28","name":"WHITE MEDIUM LOZENGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B28"},11049:{"value":"2B29","name":"BLACK SMALL DIAMOND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B29"},11050:{"value":"2B2A","name":"BLACK SMALL LOZENGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B2A"},11051:{"value":"2B2B","name":"WHITE SMALL LOZENGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B2B"},11052:{"value":"2B2C","name":"BLACK HORIZONTAL ELLIPSE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B2C"},11053:{"value":"2B2D","name":"WHITE HORIZONTAL ELLIPSE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B2D"},11054:{"value":"2B2E","name":"BLACK VERTICAL ELLIPSE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B2E"},11055:{"value":"2B2F","name":"WHITE VERTICAL ELLIPSE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B2F"},11077:{"value":"2B45","name":"LEFTWARDS QUADRUPLE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B45"},11078:{"value":"2B46","name":"RIGHTWARDS QUADRUPLE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B46"},11085:{"value":"2B4D","name":"DOWNWARDS TRIANGLE-HEADED ZIGZAG ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B4D"},11086:{"value":"2B4E","name":"SHORT SLANTED NORTH ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B4E"},11087:{"value":"2B4F","name":"SHORT BACKSLANTED SOUTH ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B4F"},11088:{"value":"2B50","name":"WHITE MEDIUM STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B50"},11089:{"value":"2B51","name":"BLACK SMALL STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B51"},11090:{"value":"2B52","name":"WHITE SMALL STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B52"},11091:{"value":"2B53","name":"BLACK RIGHT-POINTING PENTAGON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B53"},11092:{"value":"2B54","name":"WHITE RIGHT-POINTING PENTAGON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B54"},11093:{"value":"2B55","name":"HEAVY LARGE CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B55"},11094:{"value":"2B56","name":"HEAVY OVAL WITH OVAL INSIDE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B56"},11095:{"value":"2B57","name":"HEAVY CIRCLE WITH CIRCLE INSIDE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B57"},11096:{"value":"2B58","name":"HEAVY CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B58"},11097:{"value":"2B59","name":"HEAVY CIRCLED SALTIRE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B59"},11098:{"value":"2B5A","name":"SLANTED NORTH ARROW WITH HOOKED HEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B5A"},11099:{"value":"2B5B","name":"BACKSLANTED SOUTH ARROW WITH HOOKED TAIL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B5B"},11100:{"value":"2B5C","name":"SLANTED NORTH ARROW WITH HORIZONTAL TAIL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B5C"},11101:{"value":"2B5D","name":"BACKSLANTED SOUTH ARROW WITH HORIZONTAL TAIL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B5D"},11102:{"value":"2B5E","name":"BENT ARROW POINTING DOWNWARDS THEN NORTH EAST","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B5E"},11103:{"value":"2B5F","name":"SHORT BENT ARROW POINTING DOWNWARDS THEN NORTH EAST","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B5F"},11104:{"value":"2B60","name":"LEFTWARDS TRIANGLE-HEADED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B60"},11105:{"value":"2B61","name":"UPWARDS TRIANGLE-HEADED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B61"},11106:{"value":"2B62","name":"RIGHTWARDS TRIANGLE-HEADED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B62"},11107:{"value":"2B63","name":"DOWNWARDS TRIANGLE-HEADED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B63"},11108:{"value":"2B64","name":"LEFT RIGHT TRIANGLE-HEADED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B64"},11109:{"value":"2B65","name":"UP DOWN TRIANGLE-HEADED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B65"},11110:{"value":"2B66","name":"NORTH WEST TRIANGLE-HEADED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B66"},11111:{"value":"2B67","name":"NORTH EAST TRIANGLE-HEADED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B67"},11112:{"value":"2B68","name":"SOUTH EAST TRIANGLE-HEADED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B68"},11113:{"value":"2B69","name":"SOUTH WEST TRIANGLE-HEADED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B69"},11114:{"value":"2B6A","name":"LEFTWARDS TRIANGLE-HEADED DASHED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B6A"},11115:{"value":"2B6B","name":"UPWARDS TRIANGLE-HEADED DASHED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B6B"},11116:{"value":"2B6C","name":"RIGHTWARDS TRIANGLE-HEADED DASHED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B6C"},11117:{"value":"2B6D","name":"DOWNWARDS TRIANGLE-HEADED DASHED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B6D"},11118:{"value":"2B6E","name":"CLOCKWISE TRIANGLE-HEADED OPEN CIRCLE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B6E"},11119:{"value":"2B6F","name":"ANTICLOCKWISE TRIANGLE-HEADED OPEN CIRCLE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B6F"},11120:{"value":"2B70","name":"LEFTWARDS TRIANGLE-HEADED ARROW TO BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B70"},11121:{"value":"2B71","name":"UPWARDS TRIANGLE-HEADED ARROW TO BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B71"},11122:{"value":"2B72","name":"RIGHTWARDS TRIANGLE-HEADED ARROW TO BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B72"},11123:{"value":"2B73","name":"DOWNWARDS TRIANGLE-HEADED ARROW TO BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B73"},11126:{"value":"2B76","name":"NORTH WEST TRIANGLE-HEADED ARROW TO BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B76"},11127:{"value":"2B77","name":"NORTH EAST TRIANGLE-HEADED ARROW TO BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B77"},11128:{"value":"2B78","name":"SOUTH EAST TRIANGLE-HEADED ARROW TO BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B78"},11129:{"value":"2B79","name":"SOUTH WEST TRIANGLE-HEADED ARROW TO BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B79"},11130:{"value":"2B7A","name":"LEFTWARDS TRIANGLE-HEADED ARROW WITH DOUBLE HORIZONTAL STROKE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B7A"},11131:{"value":"2B7B","name":"UPWARDS TRIANGLE-HEADED ARROW WITH DOUBLE HORIZONTAL STROKE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B7B"},11132:{"value":"2B7C","name":"RIGHTWARDS TRIANGLE-HEADED ARROW WITH DOUBLE HORIZONTAL STROKE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B7C"},11133:{"value":"2B7D","name":"DOWNWARDS TRIANGLE-HEADED ARROW WITH DOUBLE HORIZONTAL STROKE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B7D"},11134:{"value":"2B7E","name":"HORIZONTAL TAB KEY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B7E"},11135:{"value":"2B7F","name":"VERTICAL TAB KEY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B7F"},11136:{"value":"2B80","name":"LEFTWARDS TRIANGLE-HEADED ARROW OVER RIGHTWARDS TRIANGLE-HEADED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B80"},11137:{"value":"2B81","name":"UPWARDS TRIANGLE-HEADED ARROW LEFTWARDS OF DOWNWARDS TRIANGLE-HEADED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B81"},11138:{"value":"2B82","name":"RIGHTWARDS TRIANGLE-HEADED ARROW OVER LEFTWARDS TRIANGLE-HEADED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B82"},11139:{"value":"2B83","name":"DOWNWARDS TRIANGLE-HEADED ARROW LEFTWARDS OF UPWARDS TRIANGLE-HEADED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B83"},11140:{"value":"2B84","name":"LEFTWARDS TRIANGLE-HEADED PAIRED ARROWS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B84"},11141:{"value":"2B85","name":"UPWARDS TRIANGLE-HEADED PAIRED ARROWS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B85"},11142:{"value":"2B86","name":"RIGHTWARDS TRIANGLE-HEADED PAIRED ARROWS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B86"},11143:{"value":"2B87","name":"DOWNWARDS TRIANGLE-HEADED PAIRED ARROWS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B87"},11144:{"value":"2B88","name":"LEFTWARDS BLACK CIRCLED WHITE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B88"},11145:{"value":"2B89","name":"UPWARDS BLACK CIRCLED WHITE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B89"},11146:{"value":"2B8A","name":"RIGHTWARDS BLACK CIRCLED WHITE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B8A"},11147:{"value":"2B8B","name":"DOWNWARDS BLACK CIRCLED WHITE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B8B"},11148:{"value":"2B8C","name":"ANTICLOCKWISE TRIANGLE-HEADED RIGHT U-SHAPED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B8C"},11149:{"value":"2B8D","name":"ANTICLOCKWISE TRIANGLE-HEADED BOTTOM U-SHAPED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B8D"},11150:{"value":"2B8E","name":"ANTICLOCKWISE TRIANGLE-HEADED LEFT U-SHAPED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B8E"},11151:{"value":"2B8F","name":"ANTICLOCKWISE TRIANGLE-HEADED TOP U-SHAPED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B8F"},11152:{"value":"2B90","name":"RETURN LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B90"},11153:{"value":"2B91","name":"RETURN RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B91"},11154:{"value":"2B92","name":"NEWLINE LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B92"},11155:{"value":"2B93","name":"NEWLINE RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B93"},11156:{"value":"2B94","name":"FOUR CORNER ARROWS CIRCLING ANTICLOCKWISE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B94"},11157:{"value":"2B95","name":"RIGHTWARDS BLACK ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B95"},11160:{"value":"2B98","name":"THREE-D TOP-LIGHTED LEFTWARDS EQUILATERAL ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B98"},11161:{"value":"2B99","name":"THREE-D RIGHT-LIGHTED UPWARDS EQUILATERAL ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B99"},11162:{"value":"2B9A","name":"THREE-D TOP-LIGHTED RIGHTWARDS EQUILATERAL ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B9A"},11163:{"value":"2B9B","name":"THREE-D LEFT-LIGHTED DOWNWARDS EQUILATERAL ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B9B"},11164:{"value":"2B9C","name":"BLACK LEFTWARDS EQUILATERAL ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B9C"},11165:{"value":"2B9D","name":"BLACK UPWARDS EQUILATERAL ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B9D"},11166:{"value":"2B9E","name":"BLACK RIGHTWARDS EQUILATERAL ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B9E"},11167:{"value":"2B9F","name":"BLACK DOWNWARDS EQUILATERAL ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2B9F"},11168:{"value":"2BA0","name":"DOWNWARDS TRIANGLE-HEADED ARROW WITH LONG TIP LEFTWARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BA0"},11169:{"value":"2BA1","name":"DOWNWARDS TRIANGLE-HEADED ARROW WITH LONG TIP RIGHTWARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BA1"},11170:{"value":"2BA2","name":"UPWARDS TRIANGLE-HEADED ARROW WITH LONG TIP LEFTWARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BA2"},11171:{"value":"2BA3","name":"UPWARDS TRIANGLE-HEADED ARROW WITH LONG TIP RIGHTWARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BA3"},11172:{"value":"2BA4","name":"LEFTWARDS TRIANGLE-HEADED ARROW WITH LONG TIP UPWARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BA4"},11173:{"value":"2BA5","name":"RIGHTWARDS TRIANGLE-HEADED ARROW WITH LONG TIP UPWARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BA5"},11174:{"value":"2BA6","name":"LEFTWARDS TRIANGLE-HEADED ARROW WITH LONG TIP DOWNWARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BA6"},11175:{"value":"2BA7","name":"RIGHTWARDS TRIANGLE-HEADED ARROW WITH LONG TIP DOWNWARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BA7"},11176:{"value":"2BA8","name":"BLACK CURVED DOWNWARDS AND LEFTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BA8"},11177:{"value":"2BA9","name":"BLACK CURVED DOWNWARDS AND RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BA9"},11178:{"value":"2BAA","name":"BLACK CURVED UPWARDS AND LEFTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BAA"},11179:{"value":"2BAB","name":"BLACK CURVED UPWARDS AND RIGHTWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BAB"},11180:{"value":"2BAC","name":"BLACK CURVED LEFTWARDS AND UPWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BAC"},11181:{"value":"2BAD","name":"BLACK CURVED RIGHTWARDS AND UPWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BAD"},11182:{"value":"2BAE","name":"BLACK CURVED LEFTWARDS AND DOWNWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BAE"},11183:{"value":"2BAF","name":"BLACK CURVED RIGHTWARDS AND DOWNWARDS ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BAF"},11184:{"value":"2BB0","name":"RIBBON ARROW DOWN LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BB0"},11185:{"value":"2BB1","name":"RIBBON ARROW DOWN RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BB1"},11186:{"value":"2BB2","name":"RIBBON ARROW UP LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BB2"},11187:{"value":"2BB3","name":"RIBBON ARROW UP RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BB3"},11188:{"value":"2BB4","name":"RIBBON ARROW LEFT UP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BB4"},11189:{"value":"2BB5","name":"RIBBON ARROW RIGHT UP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BB5"},11190:{"value":"2BB6","name":"RIBBON ARROW LEFT DOWN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BB6"},11191:{"value":"2BB7","name":"RIBBON ARROW RIGHT DOWN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BB7"},11192:{"value":"2BB8","name":"UPWARDS WHITE ARROW FROM BAR WITH HORIZONTAL BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BB8"},11193:{"value":"2BB9","name":"UP ARROWHEAD IN A RECTANGLE BOX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BB9"},11197:{"value":"2BBD","name":"BALLOT BOX WITH LIGHT X","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BBD"},11198:{"value":"2BBE","name":"CIRCLED X","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BBE"},11199:{"value":"2BBF","name":"CIRCLED BOLD X","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BBF"},11200:{"value":"2BC0","name":"BLACK SQUARE CENTRED","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BC0"},11201:{"value":"2BC1","name":"BLACK DIAMOND CENTRED","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BC1"},11202:{"value":"2BC2","name":"TURNED BLACK PENTAGON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BC2"},11203:{"value":"2BC3","name":"HORIZONTAL BLACK OCTAGON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BC3"},11204:{"value":"2BC4","name":"BLACK OCTAGON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BC4"},11205:{"value":"2BC5","name":"BLACK MEDIUM UP-POINTING TRIANGLE CENTRED","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BC5"},11206:{"value":"2BC6","name":"BLACK MEDIUM DOWN-POINTING TRIANGLE CENTRED","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BC6"},11207:{"value":"2BC7","name":"BLACK MEDIUM LEFT-POINTING TRIANGLE CENTRED","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BC7"},11208:{"value":"2BC8","name":"BLACK MEDIUM RIGHT-POINTING TRIANGLE CENTRED","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BC8"},11210:{"value":"2BCA","name":"TOP HALF BLACK CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BCA"},11211:{"value":"2BCB","name":"BOTTOM HALF BLACK CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BCB"},11212:{"value":"2BCC","name":"LIGHT FOUR POINTED BLACK CUSP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BCC"},11213:{"value":"2BCD","name":"ROTATED LIGHT FOUR POINTED BLACK CUSP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BCD"},11214:{"value":"2BCE","name":"WHITE FOUR POINTED CUSP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BCE"},11215:{"value":"2BCF","name":"ROTATED WHITE FOUR POINTED CUSP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BCF"},11216:{"value":"2BD0","name":"SQUARE POSITION INDICATOR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BD0"},11217:{"value":"2BD1","name":"UNCERTAINTY SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BD1"},11244:{"value":"2BEC","name":"LEFTWARDS TWO-HEADED ARROW WITH TRIANGLE ARROWHEADS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BEC"},11245:{"value":"2BED","name":"UPWARDS TWO-HEADED ARROW WITH TRIANGLE ARROWHEADS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BED"},11246:{"value":"2BEE","name":"RIGHTWARDS TWO-HEADED ARROW WITH TRIANGLE ARROWHEADS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BEE"},11247:{"value":"2BEF","name":"DOWNWARDS TWO-HEADED ARROW WITH TRIANGLE ARROWHEADS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2BEF"},11493:{"value":"2CE5","name":"COPTIC SYMBOL MI RO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2CE5"},11494:{"value":"2CE6","name":"COPTIC SYMBOL PI RO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2CE6"},11495:{"value":"2CE7","name":"COPTIC SYMBOL STAUROS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2CE7"},11496:{"value":"2CE8","name":"COPTIC SYMBOL TAU RO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2CE8"},11497:{"value":"2CE9","name":"COPTIC SYMBOL KHI RO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2CE9"},11498:{"value":"2CEA","name":"COPTIC SYMBOL SHIMA SIMA","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2CEA"},11904:{"value":"2E80","name":"CJK RADICAL REPEAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E80"},11905:{"value":"2E81","name":"CJK RADICAL CLIFF","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E81"},11906:{"value":"2E82","name":"CJK RADICAL SECOND ONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E82"},11907:{"value":"2E83","name":"CJK RADICAL SECOND TWO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E83"},11908:{"value":"2E84","name":"CJK RADICAL SECOND THREE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E84"},11909:{"value":"2E85","name":"CJK RADICAL PERSON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E85"},11910:{"value":"2E86","name":"CJK RADICAL BOX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E86"},11911:{"value":"2E87","name":"CJK RADICAL TABLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E87"},11912:{"value":"2E88","name":"CJK RADICAL KNIFE ONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E88"},11913:{"value":"2E89","name":"CJK RADICAL KNIFE TWO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E89"},11914:{"value":"2E8A","name":"CJK RADICAL DIVINATION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E8A"},11915:{"value":"2E8B","name":"CJK RADICAL SEAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E8B"},11916:{"value":"2E8C","name":"CJK RADICAL SMALL ONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E8C"},11917:{"value":"2E8D","name":"CJK RADICAL SMALL TWO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E8D"},11918:{"value":"2E8E","name":"CJK RADICAL LAME ONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E8E"},11919:{"value":"2E8F","name":"CJK RADICAL LAME TWO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E8F"},11920:{"value":"2E90","name":"CJK RADICAL LAME THREE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E90"},11921:{"value":"2E91","name":"CJK RADICAL LAME FOUR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E91"},11922:{"value":"2E92","name":"CJK RADICAL SNAKE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E92"},11923:{"value":"2E93","name":"CJK RADICAL THREAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E93"},11924:{"value":"2E94","name":"CJK RADICAL SNOUT ONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E94"},11925:{"value":"2E95","name":"CJK RADICAL SNOUT TWO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E95"},11926:{"value":"2E96","name":"CJK RADICAL HEART ONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E96"},11927:{"value":"2E97","name":"CJK RADICAL HEART TWO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E97"},11928:{"value":"2E98","name":"CJK RADICAL HAND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E98"},11929:{"value":"2E99","name":"CJK RADICAL RAP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E99"},11931:{"value":"2E9B","name":"CJK RADICAL CHOKE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E9B"},11932:{"value":"2E9C","name":"CJK RADICAL SUN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E9C"},11933:{"value":"2E9D","name":"CJK RADICAL MOON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E9D"},11934:{"value":"2E9E","name":"CJK RADICAL DEATH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E9E"},11935:{"value":"2E9F","name":"CJK RADICAL MOTHER","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 6BCD","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2E9F"},11936:{"value":"2EA0","name":"CJK RADICAL CIVILIAN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EA0"},11937:{"value":"2EA1","name":"CJK RADICAL WATER ONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EA1"},11938:{"value":"2EA2","name":"CJK RADICAL WATER TWO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EA2"},11939:{"value":"2EA3","name":"CJK RADICAL FIRE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EA3"},11940:{"value":"2EA4","name":"CJK RADICAL PAW ONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EA4"},11941:{"value":"2EA5","name":"CJK RADICAL PAW TWO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EA5"},11942:{"value":"2EA6","name":"CJK RADICAL SIMPLIFIED HALF TREE TRUNK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EA6"},11943:{"value":"2EA7","name":"CJK RADICAL COW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EA7"},11944:{"value":"2EA8","name":"CJK RADICAL DOG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EA8"},11945:{"value":"2EA9","name":"CJK RADICAL JADE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EA9"},11946:{"value":"2EAA","name":"CJK RADICAL BOLT OF CLOTH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EAA"},11947:{"value":"2EAB","name":"CJK RADICAL EYE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EAB"},11948:{"value":"2EAC","name":"CJK RADICAL SPIRIT ONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EAC"},11949:{"value":"2EAD","name":"CJK RADICAL SPIRIT TWO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EAD"},11950:{"value":"2EAE","name":"CJK RADICAL BAMBOO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EAE"},11951:{"value":"2EAF","name":"CJK RADICAL SILK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EAF"},11952:{"value":"2EB0","name":"CJK RADICAL C-SIMPLIFIED SILK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EB0"},11953:{"value":"2EB1","name":"CJK RADICAL NET ONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EB1"},11954:{"value":"2EB2","name":"CJK RADICAL NET TWO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EB2"},11955:{"value":"2EB3","name":"CJK RADICAL NET THREE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EB3"},11956:{"value":"2EB4","name":"CJK RADICAL NET FOUR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EB4"},11957:{"value":"2EB5","name":"CJK RADICAL MESH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EB5"},11958:{"value":"2EB6","name":"CJK RADICAL SHEEP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EB6"},11959:{"value":"2EB7","name":"CJK RADICAL RAM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EB7"},11960:{"value":"2EB8","name":"CJK RADICAL EWE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EB8"},11961:{"value":"2EB9","name":"CJK RADICAL OLD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EB9"},11962:{"value":"2EBA","name":"CJK RADICAL BRUSH ONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EBA"},11963:{"value":"2EBB","name":"CJK RADICAL BRUSH TWO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EBB"},11964:{"value":"2EBC","name":"CJK RADICAL MEAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EBC"},11965:{"value":"2EBD","name":"CJK RADICAL MORTAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EBD"},11966:{"value":"2EBE","name":"CJK RADICAL GRASS ONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EBE"},11967:{"value":"2EBF","name":"CJK RADICAL GRASS TWO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EBF"},11968:{"value":"2EC0","name":"CJK RADICAL GRASS THREE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EC0"},11969:{"value":"2EC1","name":"CJK RADICAL TIGER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EC1"},11970:{"value":"2EC2","name":"CJK RADICAL CLOTHES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EC2"},11971:{"value":"2EC3","name":"CJK RADICAL WEST ONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EC3"},11972:{"value":"2EC4","name":"CJK RADICAL WEST TWO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EC4"},11973:{"value":"2EC5","name":"CJK RADICAL C-SIMPLIFIED SEE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EC5"},11974:{"value":"2EC6","name":"CJK RADICAL SIMPLIFIED HORN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EC6"},11975:{"value":"2EC7","name":"CJK RADICAL HORN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EC7"},11976:{"value":"2EC8","name":"CJK RADICAL C-SIMPLIFIED SPEECH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EC8"},11977:{"value":"2EC9","name":"CJK RADICAL C-SIMPLIFIED SHELL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EC9"},11978:{"value":"2ECA","name":"CJK RADICAL FOOT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2ECA"},11979:{"value":"2ECB","name":"CJK RADICAL C-SIMPLIFIED CART","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2ECB"},11980:{"value":"2ECC","name":"CJK RADICAL SIMPLIFIED WALK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2ECC"},11981:{"value":"2ECD","name":"CJK RADICAL WALK ONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2ECD"},11982:{"value":"2ECE","name":"CJK RADICAL WALK TWO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2ECE"},11983:{"value":"2ECF","name":"CJK RADICAL CITY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2ECF"},11984:{"value":"2ED0","name":"CJK RADICAL C-SIMPLIFIED GOLD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2ED0"},11985:{"value":"2ED1","name":"CJK RADICAL LONG ONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2ED1"},11986:{"value":"2ED2","name":"CJK RADICAL LONG TWO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2ED2"},11987:{"value":"2ED3","name":"CJK RADICAL C-SIMPLIFIED LONG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2ED3"},11988:{"value":"2ED4","name":"CJK RADICAL C-SIMPLIFIED GATE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2ED4"},11989:{"value":"2ED5","name":"CJK RADICAL MOUND ONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2ED5"},11990:{"value":"2ED6","name":"CJK RADICAL MOUND TWO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2ED6"},11991:{"value":"2ED7","name":"CJK RADICAL RAIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2ED7"},11992:{"value":"2ED8","name":"CJK RADICAL BLUE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2ED8"},11993:{"value":"2ED9","name":"CJK RADICAL C-SIMPLIFIED TANNED LEATHER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2ED9"},11994:{"value":"2EDA","name":"CJK RADICAL C-SIMPLIFIED LEAF","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EDA"},11995:{"value":"2EDB","name":"CJK RADICAL C-SIMPLIFIED WIND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EDB"},11996:{"value":"2EDC","name":"CJK RADICAL C-SIMPLIFIED FLY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EDC"},11997:{"value":"2EDD","name":"CJK RADICAL EAT ONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EDD"},11998:{"value":"2EDE","name":"CJK RADICAL EAT TWO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EDE"},11999:{"value":"2EDF","name":"CJK RADICAL EAT THREE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EDF"},12000:{"value":"2EE0","name":"CJK RADICAL C-SIMPLIFIED EAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EE0"},12001:{"value":"2EE1","name":"CJK RADICAL HEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EE1"},12002:{"value":"2EE2","name":"CJK RADICAL C-SIMPLIFIED HORSE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EE2"},12003:{"value":"2EE3","name":"CJK RADICAL BONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EE3"},12004:{"value":"2EE4","name":"CJK RADICAL GHOST","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EE4"},12005:{"value":"2EE5","name":"CJK RADICAL C-SIMPLIFIED FISH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EE5"},12006:{"value":"2EE6","name":"CJK RADICAL C-SIMPLIFIED BIRD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EE6"},12007:{"value":"2EE7","name":"CJK RADICAL C-SIMPLIFIED SALT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EE7"},12008:{"value":"2EE8","name":"CJK RADICAL SIMPLIFIED WHEAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EE8"},12009:{"value":"2EE9","name":"CJK RADICAL SIMPLIFIED YELLOW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EE9"},12010:{"value":"2EEA","name":"CJK RADICAL C-SIMPLIFIED FROG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EEA"},12011:{"value":"2EEB","name":"CJK RADICAL J-SIMPLIFIED EVEN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EEB"},12012:{"value":"2EEC","name":"CJK RADICAL C-SIMPLIFIED EVEN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EEC"},12013:{"value":"2EED","name":"CJK RADICAL J-SIMPLIFIED TOOTH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EED"},12014:{"value":"2EEE","name":"CJK RADICAL C-SIMPLIFIED TOOTH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EEE"},12015:{"value":"2EEF","name":"CJK RADICAL J-SIMPLIFIED DRAGON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EEF"},12016:{"value":"2EF0","name":"CJK RADICAL C-SIMPLIFIED DRAGON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EF0"},12017:{"value":"2EF1","name":"CJK RADICAL TURTLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EF1"},12018:{"value":"2EF2","name":"CJK RADICAL J-SIMPLIFIED TURTLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EF2"},12019:{"value":"2EF3","name":"CJK RADICAL C-SIMPLIFIED TURTLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9F9F","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2EF3"},12032:{"value":"2F00","name":"KANGXI RADICAL ONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 4E00","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F00"},12033:{"value":"2F01","name":"KANGXI RADICAL LINE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 4E28","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F01"},12034:{"value":"2F02","name":"KANGXI RADICAL DOT","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 4E36","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F02"},12035:{"value":"2F03","name":"KANGXI RADICAL SLASH","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 4E3F","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F03"},12036:{"value":"2F04","name":"KANGXI RADICAL SECOND","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 4E59","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F04"},12037:{"value":"2F05","name":"KANGXI RADICAL HOOK","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 4E85","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F05"},12038:{"value":"2F06","name":"KANGXI RADICAL TWO","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 4E8C","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F06"},12039:{"value":"2F07","name":"KANGXI RADICAL LID","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 4EA0","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F07"},12040:{"value":"2F08","name":"KANGXI RADICAL MAN","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 4EBA","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F08"},12041:{"value":"2F09","name":"KANGXI RADICAL LEGS","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 513F","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F09"},12042:{"value":"2F0A","name":"KANGXI RADICAL ENTER","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5165","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F0A"},12043:{"value":"2F0B","name":"KANGXI RADICAL EIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 516B","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F0B"},12044:{"value":"2F0C","name":"KANGXI RADICAL DOWN BOX","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5182","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F0C"},12045:{"value":"2F0D","name":"KANGXI RADICAL COVER","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5196","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F0D"},12046:{"value":"2F0E","name":"KANGXI RADICAL ICE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 51AB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F0E"},12047:{"value":"2F0F","name":"KANGXI RADICAL TABLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 51E0","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F0F"},12048:{"value":"2F10","name":"KANGXI RADICAL OPEN BOX","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 51F5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F10"},12049:{"value":"2F11","name":"KANGXI RADICAL KNIFE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5200","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F11"},12050:{"value":"2F12","name":"KANGXI RADICAL POWER","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 529B","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F12"},12051:{"value":"2F13","name":"KANGXI RADICAL WRAP","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 52F9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F13"},12052:{"value":"2F14","name":"KANGXI RADICAL SPOON","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5315","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F14"},12053:{"value":"2F15","name":"KANGXI RADICAL RIGHT OPEN BOX","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 531A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F15"},12054:{"value":"2F16","name":"KANGXI RADICAL HIDING ENCLOSURE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5338","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F16"},12055:{"value":"2F17","name":"KANGXI RADICAL TEN","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5341","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F17"},12056:{"value":"2F18","name":"KANGXI RADICAL DIVINATION","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 535C","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F18"},12057:{"value":"2F19","name":"KANGXI RADICAL SEAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5369","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F19"},12058:{"value":"2F1A","name":"KANGXI RADICAL CLIFF","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5382","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F1A"},12059:{"value":"2F1B","name":"KANGXI RADICAL PRIVATE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 53B6","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F1B"},12060:{"value":"2F1C","name":"KANGXI RADICAL AGAIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 53C8","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F1C"},12061:{"value":"2F1D","name":"KANGXI RADICAL MOUTH","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 53E3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F1D"},12062:{"value":"2F1E","name":"KANGXI RADICAL ENCLOSURE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 56D7","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F1E"},12063:{"value":"2F1F","name":"KANGXI RADICAL EARTH","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 571F","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F1F"},12064:{"value":"2F20","name":"KANGXI RADICAL SCHOLAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 58EB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F20"},12065:{"value":"2F21","name":"KANGXI RADICAL GO","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5902","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F21"},12066:{"value":"2F22","name":"KANGXI RADICAL GO SLOWLY","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 590A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F22"},12067:{"value":"2F23","name":"KANGXI RADICAL EVENING","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5915","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F23"},12068:{"value":"2F24","name":"KANGXI RADICAL BIG","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5927","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F24"},12069:{"value":"2F25","name":"KANGXI RADICAL WOMAN","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5973","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F25"},12070:{"value":"2F26","name":"KANGXI RADICAL CHILD","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5B50","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F26"},12071:{"value":"2F27","name":"KANGXI RADICAL ROOF","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5B80","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F27"},12072:{"value":"2F28","name":"KANGXI RADICAL INCH","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5BF8","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F28"},12073:{"value":"2F29","name":"KANGXI RADICAL SMALL","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5C0F","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F29"},12074:{"value":"2F2A","name":"KANGXI RADICAL LAME","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5C22","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F2A"},12075:{"value":"2F2B","name":"KANGXI RADICAL CORPSE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5C38","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F2B"},12076:{"value":"2F2C","name":"KANGXI RADICAL SPROUT","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5C6E","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F2C"},12077:{"value":"2F2D","name":"KANGXI RADICAL MOUNTAIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5C71","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F2D"},12078:{"value":"2F2E","name":"KANGXI RADICAL RIVER","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5DDB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F2E"},12079:{"value":"2F2F","name":"KANGXI RADICAL WORK","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5DE5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F2F"},12080:{"value":"2F30","name":"KANGXI RADICAL ONESELF","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5DF1","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F30"},12081:{"value":"2F31","name":"KANGXI RADICAL TURBAN","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5DFE","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F31"},12082:{"value":"2F32","name":"KANGXI RADICAL DRY","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5E72","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F32"},12083:{"value":"2F33","name":"KANGXI RADICAL SHORT THREAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5E7A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F33"},12084:{"value":"2F34","name":"KANGXI RADICAL DOTTED CLIFF","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5E7F","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F34"},12085:{"value":"2F35","name":"KANGXI RADICAL LONG STRIDE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5EF4","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F35"},12086:{"value":"2F36","name":"KANGXI RADICAL TWO HANDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5EFE","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F36"},12087:{"value":"2F37","name":"KANGXI RADICAL SHOOT","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5F0B","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F37"},12088:{"value":"2F38","name":"KANGXI RADICAL BOW","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5F13","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F38"},12089:{"value":"2F39","name":"KANGXI RADICAL SNOUT","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5F50","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F39"},12090:{"value":"2F3A","name":"KANGXI RADICAL BRISTLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5F61","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F3A"},12091:{"value":"2F3B","name":"KANGXI RADICAL STEP","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5F73","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F3B"},12092:{"value":"2F3C","name":"KANGXI RADICAL HEART","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 5FC3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F3C"},12093:{"value":"2F3D","name":"KANGXI RADICAL HALBERD","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 6208","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F3D"},12094:{"value":"2F3E","name":"KANGXI RADICAL DOOR","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 6236","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F3E"},12095:{"value":"2F3F","name":"KANGXI RADICAL HAND","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 624B","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F3F"},12096:{"value":"2F40","name":"KANGXI RADICAL BRANCH","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 652F","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F40"},12097:{"value":"2F41","name":"KANGXI RADICAL RAP","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 6534","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F41"},12098:{"value":"2F42","name":"KANGXI RADICAL SCRIPT","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 6587","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F42"},12099:{"value":"2F43","name":"KANGXI RADICAL DIPPER","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 6597","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F43"},12100:{"value":"2F44","name":"KANGXI RADICAL AXE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 65A4","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F44"},12101:{"value":"2F45","name":"KANGXI RADICAL SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 65B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F45"},12102:{"value":"2F46","name":"KANGXI RADICAL NOT","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 65E0","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F46"},12103:{"value":"2F47","name":"KANGXI RADICAL SUN","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F47"},12104:{"value":"2F48","name":"KANGXI RADICAL SAY","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 66F0","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F48"},12105:{"value":"2F49","name":"KANGXI RADICAL MOON","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 6708","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F49"},12106:{"value":"2F4A","name":"KANGXI RADICAL TREE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 6728","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F4A"},12107:{"value":"2F4B","name":"KANGXI RADICAL LACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 6B20","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F4B"},12108:{"value":"2F4C","name":"KANGXI RADICAL STOP","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 6B62","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F4C"},12109:{"value":"2F4D","name":"KANGXI RADICAL DEATH","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 6B79","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F4D"},12110:{"value":"2F4E","name":"KANGXI RADICAL WEAPON","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 6BB3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F4E"},12111:{"value":"2F4F","name":"KANGXI RADICAL DO NOT","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 6BCB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F4F"},12112:{"value":"2F50","name":"KANGXI RADICAL COMPARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 6BD4","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F50"},12113:{"value":"2F51","name":"KANGXI RADICAL FUR","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 6BDB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F51"},12114:{"value":"2F52","name":"KANGXI RADICAL CLAN","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 6C0F","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F52"},12115:{"value":"2F53","name":"KANGXI RADICAL STEAM","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 6C14","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F53"},12116:{"value":"2F54","name":"KANGXI RADICAL WATER","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 6C34","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F54"},12117:{"value":"2F55","name":"KANGXI RADICAL FIRE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 706B","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F55"},12118:{"value":"2F56","name":"KANGXI RADICAL CLAW","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 722A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F56"},12119:{"value":"2F57","name":"KANGXI RADICAL FATHER","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 7236","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F57"},12120:{"value":"2F58","name":"KANGXI RADICAL DOUBLE X","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 723B","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F58"},12121:{"value":"2F59","name":"KANGXI RADICAL HALF TREE TRUNK","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 723F","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F59"},12122:{"value":"2F5A","name":"KANGXI RADICAL SLICE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 7247","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F5A"},12123:{"value":"2F5B","name":"KANGXI RADICAL FANG","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 7259","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F5B"},12124:{"value":"2F5C","name":"KANGXI RADICAL COW","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 725B","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F5C"},12125:{"value":"2F5D","name":"KANGXI RADICAL DOG","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 72AC","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F5D"},12126:{"value":"2F5E","name":"KANGXI RADICAL PROFOUND","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 7384","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F5E"},12127:{"value":"2F5F","name":"KANGXI RADICAL JADE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 7389","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F5F"},12128:{"value":"2F60","name":"KANGXI RADICAL MELON","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 74DC","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F60"},12129:{"value":"2F61","name":"KANGXI RADICAL TILE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 74E6","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F61"},12130:{"value":"2F62","name":"KANGXI RADICAL SWEET","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 7518","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F62"},12131:{"value":"2F63","name":"KANGXI RADICAL LIFE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 751F","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F63"},12132:{"value":"2F64","name":"KANGXI RADICAL USE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 7528","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F64"},12133:{"value":"2F65","name":"KANGXI RADICAL FIELD","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 7530","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F65"},12134:{"value":"2F66","name":"KANGXI RADICAL BOLT OF CLOTH","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 758B","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F66"},12135:{"value":"2F67","name":"KANGXI RADICAL SICKNESS","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 7592","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F67"},12136:{"value":"2F68","name":"KANGXI RADICAL DOTTED TENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 7676","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F68"},12137:{"value":"2F69","name":"KANGXI RADICAL WHITE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 767D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F69"},12138:{"value":"2F6A","name":"KANGXI RADICAL SKIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 76AE","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F6A"},12139:{"value":"2F6B","name":"KANGXI RADICAL DISH","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 76BF","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F6B"},12140:{"value":"2F6C","name":"KANGXI RADICAL EYE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 76EE","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F6C"},12141:{"value":"2F6D","name":"KANGXI RADICAL SPEAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 77DB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F6D"},12142:{"value":"2F6E","name":"KANGXI RADICAL ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 77E2","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F6E"},12143:{"value":"2F6F","name":"KANGXI RADICAL STONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 77F3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F6F"},12144:{"value":"2F70","name":"KANGXI RADICAL SPIRIT","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 793A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F70"},12145:{"value":"2F71","name":"KANGXI RADICAL TRACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 79B8","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F71"},12146:{"value":"2F72","name":"KANGXI RADICAL GRAIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 79BE","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F72"},12147:{"value":"2F73","name":"KANGXI RADICAL CAVE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 7A74","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F73"},12148:{"value":"2F74","name":"KANGXI RADICAL STAND","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 7ACB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F74"},12149:{"value":"2F75","name":"KANGXI RADICAL BAMBOO","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 7AF9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F75"},12150:{"value":"2F76","name":"KANGXI RADICAL RICE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 7C73","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F76"},12151:{"value":"2F77","name":"KANGXI RADICAL SILK","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 7CF8","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F77"},12152:{"value":"2F78","name":"KANGXI RADICAL JAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 7F36","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F78"},12153:{"value":"2F79","name":"KANGXI RADICAL NET","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 7F51","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F79"},12154:{"value":"2F7A","name":"KANGXI RADICAL SHEEP","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 7F8A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F7A"},12155:{"value":"2F7B","name":"KANGXI RADICAL FEATHER","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 7FBD","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F7B"},12156:{"value":"2F7C","name":"KANGXI RADICAL OLD","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 8001","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F7C"},12157:{"value":"2F7D","name":"KANGXI RADICAL AND","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 800C","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F7D"},12158:{"value":"2F7E","name":"KANGXI RADICAL PLOW","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 8012","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F7E"},12159:{"value":"2F7F","name":"KANGXI RADICAL EAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 8033","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F7F"},12160:{"value":"2F80","name":"KANGXI RADICAL BRUSH","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 807F","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F80"},12161:{"value":"2F81","name":"KANGXI RADICAL MEAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 8089","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F81"},12162:{"value":"2F82","name":"KANGXI RADICAL MINISTER","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 81E3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F82"},12163:{"value":"2F83","name":"KANGXI RADICAL SELF","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 81EA","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F83"},12164:{"value":"2F84","name":"KANGXI RADICAL ARRIVE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 81F3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F84"},12165:{"value":"2F85","name":"KANGXI RADICAL MORTAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 81FC","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F85"},12166:{"value":"2F86","name":"KANGXI RADICAL TONGUE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 820C","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F86"},12167:{"value":"2F87","name":"KANGXI RADICAL OPPOSE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 821B","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F87"},12168:{"value":"2F88","name":"KANGXI RADICAL BOAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 821F","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F88"},12169:{"value":"2F89","name":"KANGXI RADICAL STOPPING","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 826E","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F89"},12170:{"value":"2F8A","name":"KANGXI RADICAL COLOR","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 8272","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F8A"},12171:{"value":"2F8B","name":"KANGXI RADICAL GRASS","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 8278","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F8B"},12172:{"value":"2F8C","name":"KANGXI RADICAL TIGER","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 864D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F8C"},12173:{"value":"2F8D","name":"KANGXI RADICAL INSECT","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 866B","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F8D"},12174:{"value":"2F8E","name":"KANGXI RADICAL BLOOD","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 8840","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F8E"},12175:{"value":"2F8F","name":"KANGXI RADICAL WALK ENCLOSURE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 884C","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F8F"},12176:{"value":"2F90","name":"KANGXI RADICAL CLOTHES","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 8863","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F90"},12177:{"value":"2F91","name":"KANGXI RADICAL WEST","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 897E","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F91"},12178:{"value":"2F92","name":"KANGXI RADICAL SEE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 898B","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F92"},12179:{"value":"2F93","name":"KANGXI RADICAL HORN","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 89D2","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F93"},12180:{"value":"2F94","name":"KANGXI RADICAL SPEECH","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 8A00","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F94"},12181:{"value":"2F95","name":"KANGXI RADICAL VALLEY","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 8C37","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F95"},12182:{"value":"2F96","name":"KANGXI RADICAL BEAN","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 8C46","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F96"},12183:{"value":"2F97","name":"KANGXI RADICAL PIG","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 8C55","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F97"},12184:{"value":"2F98","name":"KANGXI RADICAL BADGER","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 8C78","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F98"},12185:{"value":"2F99","name":"KANGXI RADICAL SHELL","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 8C9D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F99"},12186:{"value":"2F9A","name":"KANGXI RADICAL RED","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 8D64","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F9A"},12187:{"value":"2F9B","name":"KANGXI RADICAL RUN","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 8D70","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F9B"},12188:{"value":"2F9C","name":"KANGXI RADICAL FOOT","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 8DB3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F9C"},12189:{"value":"2F9D","name":"KANGXI RADICAL BODY","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 8EAB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F9D"},12190:{"value":"2F9E","name":"KANGXI RADICAL CART","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 8ECA","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F9E"},12191:{"value":"2F9F","name":"KANGXI RADICAL BITTER","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 8F9B","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2F9F"},12192:{"value":"2FA0","name":"KANGXI RADICAL MORNING","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 8FB0","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FA0"},12193:{"value":"2FA1","name":"KANGXI RADICAL WALK","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 8FB5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FA1"},12194:{"value":"2FA2","name":"KANGXI RADICAL CITY","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9091","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FA2"},12195:{"value":"2FA3","name":"KANGXI RADICAL WINE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9149","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FA3"},12196:{"value":"2FA4","name":"KANGXI RADICAL DISTINGUISH","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 91C6","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FA4"},12197:{"value":"2FA5","name":"KANGXI RADICAL VILLAGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 91CC","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FA5"},12198:{"value":"2FA6","name":"KANGXI RADICAL GOLD","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 91D1","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FA6"},12199:{"value":"2FA7","name":"KANGXI RADICAL LONG","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9577","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FA7"},12200:{"value":"2FA8","name":"KANGXI RADICAL GATE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9580","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FA8"},12201:{"value":"2FA9","name":"KANGXI RADICAL MOUND","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 961C","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FA9"},12202:{"value":"2FAA","name":"KANGXI RADICAL SLAVE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 96B6","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FAA"},12203:{"value":"2FAB","name":"KANGXI RADICAL SHORT TAILED BIRD","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 96B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FAB"},12204:{"value":"2FAC","name":"KANGXI RADICAL RAIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 96E8","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FAC"},12205:{"value":"2FAD","name":"KANGXI RADICAL BLUE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9751","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FAD"},12206:{"value":"2FAE","name":"KANGXI RADICAL WRONG","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 975E","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FAE"},12207:{"value":"2FAF","name":"KANGXI RADICAL FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9762","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FAF"},12208:{"value":"2FB0","name":"KANGXI RADICAL LEATHER","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9769","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FB0"},12209:{"value":"2FB1","name":"KANGXI RADICAL TANNED LEATHER","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 97CB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FB1"},12210:{"value":"2FB2","name":"KANGXI RADICAL LEEK","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 97ED","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FB2"},12211:{"value":"2FB3","name":"KANGXI RADICAL SOUND","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 97F3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FB3"},12212:{"value":"2FB4","name":"KANGXI RADICAL LEAF","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9801","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FB4"},12213:{"value":"2FB5","name":"KANGXI RADICAL WIND","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 98A8","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FB5"},12214:{"value":"2FB6","name":"KANGXI RADICAL FLY","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 98DB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FB6"},12215:{"value":"2FB7","name":"KANGXI RADICAL EAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 98DF","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FB7"},12216:{"value":"2FB8","name":"KANGXI RADICAL HEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9996","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FB8"},12217:{"value":"2FB9","name":"KANGXI RADICAL FRAGRANT","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9999","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FB9"},12218:{"value":"2FBA","name":"KANGXI RADICAL HORSE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 99AC","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FBA"},12219:{"value":"2FBB","name":"KANGXI RADICAL BONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9AA8","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FBB"},12220:{"value":"2FBC","name":"KANGXI RADICAL TALL","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9AD8","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FBC"},12221:{"value":"2FBD","name":"KANGXI RADICAL HAIR","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9ADF","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FBD"},12222:{"value":"2FBE","name":"KANGXI RADICAL FIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9B25","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FBE"},12223:{"value":"2FBF","name":"KANGXI RADICAL SACRIFICIAL WINE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9B2F","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FBF"},12224:{"value":"2FC0","name":"KANGXI RADICAL CAULDRON","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9B32","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FC0"},12225:{"value":"2FC1","name":"KANGXI RADICAL GHOST","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9B3C","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FC1"},12226:{"value":"2FC2","name":"KANGXI RADICAL FISH","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9B5A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FC2"},12227:{"value":"2FC3","name":"KANGXI RADICAL BIRD","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9CE5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FC3"},12228:{"value":"2FC4","name":"KANGXI RADICAL SALT","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9E75","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FC4"},12229:{"value":"2FC5","name":"KANGXI RADICAL DEER","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9E7F","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FC5"},12230:{"value":"2FC6","name":"KANGXI RADICAL WHEAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9EA5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FC6"},12231:{"value":"2FC7","name":"KANGXI RADICAL HEMP","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9EBB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FC7"},12232:{"value":"2FC8","name":"KANGXI RADICAL YELLOW","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9EC3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FC8"},12233:{"value":"2FC9","name":"KANGXI RADICAL MILLET","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9ECD","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FC9"},12234:{"value":"2FCA","name":"KANGXI RADICAL BLACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9ED1","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FCA"},12235:{"value":"2FCB","name":"KANGXI RADICAL EMBROIDERY","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9EF9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FCB"},12236:{"value":"2FCC","name":"KANGXI RADICAL FROG","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9EFD","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FCC"},12237:{"value":"2FCD","name":"KANGXI RADICAL TRIPOD","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9F0E","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FCD"},12238:{"value":"2FCE","name":"KANGXI RADICAL DRUM","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9F13","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FCE"},12239:{"value":"2FCF","name":"KANGXI RADICAL RAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9F20","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FCF"},12240:{"value":"2FD0","name":"KANGXI RADICAL NOSE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9F3B","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FD0"},12241:{"value":"2FD1","name":"KANGXI RADICAL EVEN","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9F4A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FD1"},12242:{"value":"2FD2","name":"KANGXI RADICAL TOOTH","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9F52","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FD2"},12243:{"value":"2FD3","name":"KANGXI RADICAL DRAGON","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9F8D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FD3"},12244:{"value":"2FD4","name":"KANGXI RADICAL TURTLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9F9C","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FD4"},12245:{"value":"2FD5","name":"KANGXI RADICAL FLUTE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 9FA0","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FD5"},12272:{"value":"2FF0","name":"IDEOGRAPHIC DESCRIPTION CHARACTER LEFT TO RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FF0"},12273:{"value":"2FF1","name":"IDEOGRAPHIC DESCRIPTION CHARACTER ABOVE TO BELOW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FF1"},12274:{"value":"2FF2","name":"IDEOGRAPHIC DESCRIPTION CHARACTER LEFT TO MIDDLE AND RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FF2"},12275:{"value":"2FF3","name":"IDEOGRAPHIC DESCRIPTION CHARACTER ABOVE TO MIDDLE AND BELOW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FF3"},12276:{"value":"2FF4","name":"IDEOGRAPHIC DESCRIPTION CHARACTER FULL SURROUND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FF4"},12277:{"value":"2FF5","name":"IDEOGRAPHIC DESCRIPTION CHARACTER SURROUND FROM ABOVE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FF5"},12278:{"value":"2FF6","name":"IDEOGRAPHIC DESCRIPTION CHARACTER SURROUND FROM BELOW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FF6"},12279:{"value":"2FF7","name":"IDEOGRAPHIC DESCRIPTION CHARACTER SURROUND FROM LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FF7"},12280:{"value":"2FF8","name":"IDEOGRAPHIC DESCRIPTION CHARACTER SURROUND FROM UPPER LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FF8"},12281:{"value":"2FF9","name":"IDEOGRAPHIC DESCRIPTION CHARACTER SURROUND FROM UPPER RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FF9"},12282:{"value":"2FFA","name":"IDEOGRAPHIC DESCRIPTION CHARACTER SURROUND FROM LOWER LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FFA"},12283:{"value":"2FFB","name":"IDEOGRAPHIC DESCRIPTION CHARACTER OVERLAID","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u2FFB"},12292:{"value":"3004","name":"JAPANESE INDUSTRIAL STANDARD SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3004"},12306:{"value":"3012","name":"POSTAL MARK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3012"},12307:{"value":"3013","name":"GETA MARK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3013"},12320:{"value":"3020","name":"POSTAL MARK FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3020"},12342:{"value":"3036","name":"CIRCLED POSTAL MARK","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 3012","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3036"},12343:{"value":"3037","name":"IDEOGRAPHIC TELEGRAPH LINE FEED SEPARATOR SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3037"},12350:{"value":"303E","name":"IDEOGRAPHIC VARIATION INDICATOR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u303E"},12351:{"value":"303F","name":"IDEOGRAPHIC HALF FILL SPACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u303F"},12688:{"value":"3190","name":"IDEOGRAPHIC ANNOTATION LINKING MARK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"KANBUN TATETEN","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3190"},12689:{"value":"3191","name":"IDEOGRAPHIC ANNOTATION REVERSE MARK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"KAERITEN RE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3191"},12694:{"value":"3196","name":"IDEOGRAPHIC ANNOTATION TOP MARK","category":"So","class":"0","bidirectional_category":"L","mapping":"<super> 4E0A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"KAERITEN ZYOU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3196"},12695:{"value":"3197","name":"IDEOGRAPHIC ANNOTATION MIDDLE MARK","category":"So","class":"0","bidirectional_category":"L","mapping":"<super> 4E2D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"KAERITEN TYUU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3197"},12696:{"value":"3198","name":"IDEOGRAPHIC ANNOTATION BOTTOM MARK","category":"So","class":"0","bidirectional_category":"L","mapping":"<super> 4E0B","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"KAERITEN GE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3198"},12697:{"value":"3199","name":"IDEOGRAPHIC ANNOTATION FIRST MARK","category":"So","class":"0","bidirectional_category":"L","mapping":"<super> 7532","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"KAERITEN KOU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3199"},12698:{"value":"319A","name":"IDEOGRAPHIC ANNOTATION SECOND MARK","category":"So","class":"0","bidirectional_category":"L","mapping":"<super> 4E59","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"KAERITEN OTU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u319A"},12699:{"value":"319B","name":"IDEOGRAPHIC ANNOTATION THIRD MARK","category":"So","class":"0","bidirectional_category":"L","mapping":"<super> 4E19","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"KAERITEN HEI","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u319B"},12700:{"value":"319C","name":"IDEOGRAPHIC ANNOTATION FOURTH MARK","category":"So","class":"0","bidirectional_category":"L","mapping":"<super> 4E01","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"KAERITEN TEI","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u319C"},12701:{"value":"319D","name":"IDEOGRAPHIC ANNOTATION HEAVEN MARK","category":"So","class":"0","bidirectional_category":"L","mapping":"<super> 5929","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"KAERITEN TEN","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u319D"},12702:{"value":"319E","name":"IDEOGRAPHIC ANNOTATION EARTH MARK","category":"So","class":"0","bidirectional_category":"L","mapping":"<super> 5730","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"KAERITEN TI","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u319E"},12703:{"value":"319F","name":"IDEOGRAPHIC ANNOTATION MAN MARK","category":"So","class":"0","bidirectional_category":"L","mapping":"<super> 4EBA","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"KAERITEN ZIN","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u319F"},12736:{"value":"31C0","name":"CJK STROKE T","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31C0"},12737:{"value":"31C1","name":"CJK STROKE WG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31C1"},12738:{"value":"31C2","name":"CJK STROKE XG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31C2"},12739:{"value":"31C3","name":"CJK STROKE BXG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31C3"},12740:{"value":"31C4","name":"CJK STROKE SW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31C4"},12741:{"value":"31C5","name":"CJK STROKE HZZ","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31C5"},12742:{"value":"31C6","name":"CJK STROKE HZG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31C6"},12743:{"value":"31C7","name":"CJK STROKE HP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31C7"},12744:{"value":"31C8","name":"CJK STROKE HZWG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31C8"},12745:{"value":"31C9","name":"CJK STROKE SZWG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31C9"},12746:{"value":"31CA","name":"CJK STROKE HZT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31CA"},12747:{"value":"31CB","name":"CJK STROKE HZZP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31CB"},12748:{"value":"31CC","name":"CJK STROKE HPWG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31CC"},12749:{"value":"31CD","name":"CJK STROKE HZW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31CD"},12750:{"value":"31CE","name":"CJK STROKE HZZZ","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31CE"},12751:{"value":"31CF","name":"CJK STROKE N","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31CF"},12752:{"value":"31D0","name":"CJK STROKE H","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31D0"},12753:{"value":"31D1","name":"CJK STROKE S","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31D1"},12754:{"value":"31D2","name":"CJK STROKE P","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31D2"},12755:{"value":"31D3","name":"CJK STROKE SP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31D3"},12756:{"value":"31D4","name":"CJK STROKE D","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31D4"},12757:{"value":"31D5","name":"CJK STROKE HZ","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31D5"},12758:{"value":"31D6","name":"CJK STROKE HG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31D6"},12759:{"value":"31D7","name":"CJK STROKE SZ","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31D7"},12760:{"value":"31D8","name":"CJK STROKE SWZ","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31D8"},12761:{"value":"31D9","name":"CJK STROKE ST","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31D9"},12762:{"value":"31DA","name":"CJK STROKE SG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31DA"},12763:{"value":"31DB","name":"CJK STROKE PD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31DB"},12764:{"value":"31DC","name":"CJK STROKE PZ","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31DC"},12765:{"value":"31DD","name":"CJK STROKE TN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31DD"},12766:{"value":"31DE","name":"CJK STROKE SZZ","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31DE"},12767:{"value":"31DF","name":"CJK STROKE SWG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31DF"},12768:{"value":"31E0","name":"CJK STROKE HXWG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31E0"},12769:{"value":"31E1","name":"CJK STROKE HZZZG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31E1"},12770:{"value":"31E2","name":"CJK STROKE PG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31E2"},12771:{"value":"31E3","name":"CJK STROKE Q","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u31E3"},12800:{"value":"3200","name":"PARENTHESIZED HANGUL KIYEOK","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 1100 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"PARENTHESIZED HANGUL GIYEOG","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3200"},12801:{"value":"3201","name":"PARENTHESIZED HANGUL NIEUN","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 1102 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3201"},12802:{"value":"3202","name":"PARENTHESIZED HANGUL TIKEUT","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 1103 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"PARENTHESIZED HANGUL DIGEUD","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3202"},12803:{"value":"3203","name":"PARENTHESIZED HANGUL RIEUL","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 1105 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"PARENTHESIZED HANGUL LIEUL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3203"},12804:{"value":"3204","name":"PARENTHESIZED HANGUL MIEUM","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 1106 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3204"},12805:{"value":"3205","name":"PARENTHESIZED HANGUL PIEUP","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 1107 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"PARENTHESIZED HANGUL BIEUB","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3205"},12806:{"value":"3206","name":"PARENTHESIZED HANGUL SIOS","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 1109 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3206"},12807:{"value":"3207","name":"PARENTHESIZED HANGUL IEUNG","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 110B 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3207"},12808:{"value":"3208","name":"PARENTHESIZED HANGUL CIEUC","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 110C 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"PARENTHESIZED HANGUL JIEUJ","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3208"},12809:{"value":"3209","name":"PARENTHESIZED HANGUL CHIEUCH","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 110E 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"PARENTHESIZED HANGUL CIEUC","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3209"},12810:{"value":"320A","name":"PARENTHESIZED HANGUL KHIEUKH","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 110F 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"PARENTHESIZED HANGUL KIYEOK","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u320A"},12811:{"value":"320B","name":"PARENTHESIZED HANGUL THIEUTH","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 1110 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"PARENTHESIZED HANGUL TIEUT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u320B"},12812:{"value":"320C","name":"PARENTHESIZED HANGUL PHIEUPH","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 1111 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"PARENTHESIZED HANGUL PIEUP","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u320C"},12813:{"value":"320D","name":"PARENTHESIZED HANGUL HIEUH","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 1112 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u320D"},12814:{"value":"320E","name":"PARENTHESIZED HANGUL KIYEOK A","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 1100 1161 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"PARENTHESIZED HANGUL GA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u320E"},12815:{"value":"320F","name":"PARENTHESIZED HANGUL NIEUN A","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 1102 1161 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"PARENTHESIZED HANGUL NA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u320F"},12816:{"value":"3210","name":"PARENTHESIZED HANGUL TIKEUT A","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 1103 1161 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"PARENTHESIZED HANGUL DA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3210"},12817:{"value":"3211","name":"PARENTHESIZED HANGUL RIEUL A","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 1105 1161 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"PARENTHESIZED HANGUL LA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3211"},12818:{"value":"3212","name":"PARENTHESIZED HANGUL MIEUM A","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 1106 1161 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"PARENTHESIZED HANGUL MA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3212"},12819:{"value":"3213","name":"PARENTHESIZED HANGUL PIEUP A","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 1107 1161 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"PARENTHESIZED HANGUL BA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3213"},12820:{"value":"3214","name":"PARENTHESIZED HANGUL SIOS A","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 1109 1161 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"PARENTHESIZED HANGUL SA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3214"},12821:{"value":"3215","name":"PARENTHESIZED HANGUL IEUNG A","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 110B 1161 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"PARENTHESIZED HANGUL A","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3215"},12822:{"value":"3216","name":"PARENTHESIZED HANGUL CIEUC A","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 110C 1161 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"PARENTHESIZED HANGUL JA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3216"},12823:{"value":"3217","name":"PARENTHESIZED HANGUL CHIEUCH A","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 110E 1161 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"PARENTHESIZED HANGUL CA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3217"},12824:{"value":"3218","name":"PARENTHESIZED HANGUL KHIEUKH A","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 110F 1161 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"PARENTHESIZED HANGUL KA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3218"},12825:{"value":"3219","name":"PARENTHESIZED HANGUL THIEUTH A","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 1110 1161 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"PARENTHESIZED HANGUL TA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3219"},12826:{"value":"321A","name":"PARENTHESIZED HANGUL PHIEUPH A","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 1111 1161 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"PARENTHESIZED HANGUL PA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u321A"},12827:{"value":"321B","name":"PARENTHESIZED HANGUL HIEUH A","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 1112 1161 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"PARENTHESIZED HANGUL HA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u321B"},12828:{"value":"321C","name":"PARENTHESIZED HANGUL CIEUC U","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 110C 116E 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"PARENTHESIZED HANGUL JU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u321C"},12829:{"value":"321D","name":"PARENTHESIZED KOREAN CHARACTER OJEON","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 0028 110B 1169 110C 1165 11AB 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u321D"},12830:{"value":"321E","name":"PARENTHESIZED KOREAN CHARACTER O HU","category":"So","class":"0","bidirectional_category":"ON","mapping":"<compat> 0028 110B 1169 1112 116E 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u321E"},12842:{"value":"322A","name":"PARENTHESIZED IDEOGRAPH MOON","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 6708 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u322A"},12843:{"value":"322B","name":"PARENTHESIZED IDEOGRAPH FIRE","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 706B 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u322B"},12844:{"value":"322C","name":"PARENTHESIZED IDEOGRAPH WATER","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 6C34 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u322C"},12845:{"value":"322D","name":"PARENTHESIZED IDEOGRAPH WOOD","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 6728 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u322D"},12846:{"value":"322E","name":"PARENTHESIZED IDEOGRAPH METAL","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 91D1 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u322E"},12847:{"value":"322F","name":"PARENTHESIZED IDEOGRAPH EARTH","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 571F 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u322F"},12848:{"value":"3230","name":"PARENTHESIZED IDEOGRAPH SUN","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 65E5 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3230"},12849:{"value":"3231","name":"PARENTHESIZED IDEOGRAPH STOCK","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 682A 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3231"},12850:{"value":"3232","name":"PARENTHESIZED IDEOGRAPH HAVE","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 6709 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3232"},12851:{"value":"3233","name":"PARENTHESIZED IDEOGRAPH SOCIETY","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 793E 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3233"},12852:{"value":"3234","name":"PARENTHESIZED IDEOGRAPH NAME","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 540D 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3234"},12853:{"value":"3235","name":"PARENTHESIZED IDEOGRAPH SPECIAL","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 7279 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3235"},12854:{"value":"3236","name":"PARENTHESIZED IDEOGRAPH FINANCIAL","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 8CA1 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3236"},12855:{"value":"3237","name":"PARENTHESIZED IDEOGRAPH CONGRATULATION","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 795D 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3237"},12856:{"value":"3238","name":"PARENTHESIZED IDEOGRAPH LABOR","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 52B4 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3238"},12857:{"value":"3239","name":"PARENTHESIZED IDEOGRAPH REPRESENT","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 4EE3 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3239"},12858:{"value":"323A","name":"PARENTHESIZED IDEOGRAPH CALL","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 547C 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u323A"},12859:{"value":"323B","name":"PARENTHESIZED IDEOGRAPH STUDY","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 5B66 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u323B"},12860:{"value":"323C","name":"PARENTHESIZED IDEOGRAPH SUPERVISE","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 76E3 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u323C"},12861:{"value":"323D","name":"PARENTHESIZED IDEOGRAPH ENTERPRISE","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 4F01 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u323D"},12862:{"value":"323E","name":"PARENTHESIZED IDEOGRAPH RESOURCE","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 8CC7 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u323E"},12863:{"value":"323F","name":"PARENTHESIZED IDEOGRAPH ALLIANCE","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 5354 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u323F"},12864:{"value":"3240","name":"PARENTHESIZED IDEOGRAPH FESTIVAL","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 796D 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3240"},12865:{"value":"3241","name":"PARENTHESIZED IDEOGRAPH REST","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 4F11 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3241"},12866:{"value":"3242","name":"PARENTHESIZED IDEOGRAPH SELF","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 81EA 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3242"},12867:{"value":"3243","name":"PARENTHESIZED IDEOGRAPH REACH","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 81F3 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3243"},12868:{"value":"3244","name":"CIRCLED IDEOGRAPH QUESTION","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 554F","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3244"},12869:{"value":"3245","name":"CIRCLED IDEOGRAPH KINDERGARTEN","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 5E7C","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3245"},12870:{"value":"3246","name":"CIRCLED IDEOGRAPH SCHOOL","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 6587","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3246"},12871:{"value":"3247","name":"CIRCLED IDEOGRAPH KOTO","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 7B8F","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3247"},12880:{"value":"3250","name":"PARTNERSHIP SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"<square> 0050 0054 0045","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3250"},12896:{"value":"3260","name":"CIRCLED HANGUL KIYEOK","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 1100","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"CIRCLED HANGUL GIYEOG","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3260"},12897:{"value":"3261","name":"CIRCLED HANGUL NIEUN","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 1102","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3261"},12898:{"value":"3262","name":"CIRCLED HANGUL TIKEUT","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 1103","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"CIRCLED HANGUL DIGEUD","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3262"},12899:{"value":"3263","name":"CIRCLED HANGUL RIEUL","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 1105","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"CIRCLED HANGUL LIEUL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3263"},12900:{"value":"3264","name":"CIRCLED HANGUL MIEUM","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 1106","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3264"},12901:{"value":"3265","name":"CIRCLED HANGUL PIEUP","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 1107","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"CIRCLED HANGUL BIEUB","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3265"},12902:{"value":"3266","name":"CIRCLED HANGUL SIOS","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 1109","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3266"},12903:{"value":"3267","name":"CIRCLED HANGUL IEUNG","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 110B","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3267"},12904:{"value":"3268","name":"CIRCLED HANGUL CIEUC","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 110C","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"CIRCLED HANGUL JIEUJ","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3268"},12905:{"value":"3269","name":"CIRCLED HANGUL CHIEUCH","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 110E","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"CIRCLED HANGUL CIEUC","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3269"},12906:{"value":"326A","name":"CIRCLED HANGUL KHIEUKH","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 110F","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"CIRCLED HANGUL KIYEOK","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u326A"},12907:{"value":"326B","name":"CIRCLED HANGUL THIEUTH","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 1110","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"CIRCLED HANGUL TIEUT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u326B"},12908:{"value":"326C","name":"CIRCLED HANGUL PHIEUPH","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 1111","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"CIRCLED HANGUL PIEUP","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u326C"},12909:{"value":"326D","name":"CIRCLED HANGUL HIEUH","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 1112","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u326D"},12910:{"value":"326E","name":"CIRCLED HANGUL KIYEOK A","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 1100 1161","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"CIRCLED HANGUL GA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u326E"},12911:{"value":"326F","name":"CIRCLED HANGUL NIEUN A","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 1102 1161","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"CIRCLED HANGUL NA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u326F"},12912:{"value":"3270","name":"CIRCLED HANGUL TIKEUT A","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 1103 1161","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"CIRCLED HANGUL DA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3270"},12913:{"value":"3271","name":"CIRCLED HANGUL RIEUL A","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 1105 1161","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"CIRCLED HANGUL LA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3271"},12914:{"value":"3272","name":"CIRCLED HANGUL MIEUM A","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 1106 1161","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"CIRCLED HANGUL MA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3272"},12915:{"value":"3273","name":"CIRCLED HANGUL PIEUP A","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 1107 1161","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"CIRCLED HANGUL BA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3273"},12916:{"value":"3274","name":"CIRCLED HANGUL SIOS A","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 1109 1161","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"CIRCLED HANGUL SA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3274"},12917:{"value":"3275","name":"CIRCLED HANGUL IEUNG A","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 110B 1161","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"CIRCLED HANGUL A","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3275"},12918:{"value":"3276","name":"CIRCLED HANGUL CIEUC A","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 110C 1161","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"CIRCLED HANGUL JA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3276"},12919:{"value":"3277","name":"CIRCLED HANGUL CHIEUCH A","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 110E 1161","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"CIRCLED HANGUL CA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3277"},12920:{"value":"3278","name":"CIRCLED HANGUL KHIEUKH A","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 110F 1161","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"CIRCLED HANGUL KA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3278"},12921:{"value":"3279","name":"CIRCLED HANGUL THIEUTH A","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 1110 1161","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"CIRCLED HANGUL TA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3279"},12922:{"value":"327A","name":"CIRCLED HANGUL PHIEUPH A","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 1111 1161","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"CIRCLED HANGUL PA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u327A"},12923:{"value":"327B","name":"CIRCLED HANGUL HIEUH A","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 1112 1161","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"CIRCLED HANGUL HA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u327B"},12924:{"value":"327C","name":"CIRCLED KOREAN CHARACTER CHAMKO","category":"So","class":"0","bidirectional_category":"ON","mapping":"<circle> 110E 1161 11B7 1100 1169","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u327C"},12925:{"value":"327D","name":"CIRCLED KOREAN CHARACTER JUEUI","category":"So","class":"0","bidirectional_category":"ON","mapping":"<circle> 110C 116E 110B 1174","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u327D"},12926:{"value":"327E","name":"CIRCLED HANGUL IEUNG U","category":"So","class":"0","bidirectional_category":"ON","mapping":"<circle> 110B 116E","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u327E"},12927:{"value":"327F","name":"KOREAN STANDARD SYMBOL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u327F"},12938:{"value":"328A","name":"CIRCLED IDEOGRAPH MOON","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 6708","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u328A"},12939:{"value":"328B","name":"CIRCLED IDEOGRAPH FIRE","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 706B","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u328B"},12940:{"value":"328C","name":"CIRCLED IDEOGRAPH WATER","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 6C34","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u328C"},12941:{"value":"328D","name":"CIRCLED IDEOGRAPH WOOD","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 6728","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u328D"},12942:{"value":"328E","name":"CIRCLED IDEOGRAPH METAL","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 91D1","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u328E"},12943:{"value":"328F","name":"CIRCLED IDEOGRAPH EARTH","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 571F","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u328F"},12944:{"value":"3290","name":"CIRCLED IDEOGRAPH SUN","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3290"},12945:{"value":"3291","name":"CIRCLED IDEOGRAPH STOCK","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 682A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3291"},12946:{"value":"3292","name":"CIRCLED IDEOGRAPH HAVE","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 6709","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3292"},12947:{"value":"3293","name":"CIRCLED IDEOGRAPH SOCIETY","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 793E","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3293"},12948:{"value":"3294","name":"CIRCLED IDEOGRAPH NAME","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 540D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3294"},12949:{"value":"3295","name":"CIRCLED IDEOGRAPH SPECIAL","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 7279","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3295"},12950:{"value":"3296","name":"CIRCLED IDEOGRAPH FINANCIAL","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 8CA1","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3296"},12951:{"value":"3297","name":"CIRCLED IDEOGRAPH CONGRATULATION","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 795D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3297"},12952:{"value":"3298","name":"CIRCLED IDEOGRAPH LABOR","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 52B4","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3298"},12953:{"value":"3299","name":"CIRCLED IDEOGRAPH SECRET","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 79D8","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3299"},12954:{"value":"329A","name":"CIRCLED IDEOGRAPH MALE","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 7537","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u329A"},12955:{"value":"329B","name":"CIRCLED IDEOGRAPH FEMALE","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 5973","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u329B"},12956:{"value":"329C","name":"CIRCLED IDEOGRAPH SUITABLE","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 9069","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u329C"},12957:{"value":"329D","name":"CIRCLED IDEOGRAPH EXCELLENT","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 512A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u329D"},12958:{"value":"329E","name":"CIRCLED IDEOGRAPH PRINT","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 5370","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u329E"},12959:{"value":"329F","name":"CIRCLED IDEOGRAPH ATTENTION","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 6CE8","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u329F"},12960:{"value":"32A0","name":"CIRCLED IDEOGRAPH ITEM","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 9805","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32A0"},12961:{"value":"32A1","name":"CIRCLED IDEOGRAPH REST","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 4F11","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32A1"},12962:{"value":"32A2","name":"CIRCLED IDEOGRAPH COPY","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 5199","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32A2"},12963:{"value":"32A3","name":"CIRCLED IDEOGRAPH CORRECT","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 6B63","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32A3"},12964:{"value":"32A4","name":"CIRCLED IDEOGRAPH HIGH","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 4E0A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32A4"},12965:{"value":"32A5","name":"CIRCLED IDEOGRAPH CENTRE","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 4E2D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"CIRCLED IDEOGRAPH CENTER","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32A5"},12966:{"value":"32A6","name":"CIRCLED IDEOGRAPH LOW","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 4E0B","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32A6"},12967:{"value":"32A7","name":"CIRCLED IDEOGRAPH LEFT","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 5DE6","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32A7"},12968:{"value":"32A8","name":"CIRCLED IDEOGRAPH RIGHT","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 53F3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32A8"},12969:{"value":"32A9","name":"CIRCLED IDEOGRAPH MEDICINE","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 533B","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32A9"},12970:{"value":"32AA","name":"CIRCLED IDEOGRAPH RELIGION","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 5B97","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32AA"},12971:{"value":"32AB","name":"CIRCLED IDEOGRAPH STUDY","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 5B66","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32AB"},12972:{"value":"32AC","name":"CIRCLED IDEOGRAPH SUPERVISE","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 76E3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32AC"},12973:{"value":"32AD","name":"CIRCLED IDEOGRAPH ENTERPRISE","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 4F01","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32AD"},12974:{"value":"32AE","name":"CIRCLED IDEOGRAPH RESOURCE","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 8CC7","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32AE"},12975:{"value":"32AF","name":"CIRCLED IDEOGRAPH ALLIANCE","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 5354","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32AF"},12976:{"value":"32B0","name":"CIRCLED IDEOGRAPH NIGHT","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 591C","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32B0"},12992:{"value":"32C0","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR JANUARY","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0031 6708","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32C0"},12993:{"value":"32C1","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR FEBRUARY","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0032 6708","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32C1"},12994:{"value":"32C2","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR MARCH","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0033 6708","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32C2"},12995:{"value":"32C3","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR APRIL","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0034 6708","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32C3"},12996:{"value":"32C4","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR MAY","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0035 6708","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32C4"},12997:{"value":"32C5","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR JUNE","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0036 6708","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32C5"},12998:{"value":"32C6","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR JULY","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0037 6708","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32C6"},12999:{"value":"32C7","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR AUGUST","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0038 6708","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32C7"},13000:{"value":"32C8","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR SEPTEMBER","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0039 6708","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32C8"},13001:{"value":"32C9","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR OCTOBER","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0031 0030 6708","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32C9"},13002:{"value":"32CA","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR NOVEMBER","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0031 0031 6708","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32CA"},13003:{"value":"32CB","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DECEMBER","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0031 0032 6708","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32CB"},13004:{"value":"32CC","name":"SQUARE HG","category":"So","class":"0","bidirectional_category":"ON","mapping":"<square> 0048 0067","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32CC"},13005:{"value":"32CD","name":"SQUARE ERG","category":"So","class":"0","bidirectional_category":"ON","mapping":"<square> 0065 0072 0067","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32CD"},13006:{"value":"32CE","name":"SQUARE EV","category":"So","class":"0","bidirectional_category":"ON","mapping":"<square> 0065 0056","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32CE"},13007:{"value":"32CF","name":"LIMITED LIABILITY SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"<square> 004C 0054 0044","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32CF"},13008:{"value":"32D0","name":"CIRCLED KATAKANA A","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30A2","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32D0"},13009:{"value":"32D1","name":"CIRCLED KATAKANA I","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30A4","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32D1"},13010:{"value":"32D2","name":"CIRCLED KATAKANA U","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30A6","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32D2"},13011:{"value":"32D3","name":"CIRCLED KATAKANA E","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30A8","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32D3"},13012:{"value":"32D4","name":"CIRCLED KATAKANA O","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30AA","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32D4"},13013:{"value":"32D5","name":"CIRCLED KATAKANA KA","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30AB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32D5"},13014:{"value":"32D6","name":"CIRCLED KATAKANA KI","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30AD","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32D6"},13015:{"value":"32D7","name":"CIRCLED KATAKANA KU","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30AF","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32D7"},13016:{"value":"32D8","name":"CIRCLED KATAKANA KE","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30B1","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32D8"},13017:{"value":"32D9","name":"CIRCLED KATAKANA KO","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30B3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32D9"},13018:{"value":"32DA","name":"CIRCLED KATAKANA SA","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30B5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32DA"},13019:{"value":"32DB","name":"CIRCLED KATAKANA SI","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30B7","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32DB"},13020:{"value":"32DC","name":"CIRCLED KATAKANA SU","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32DC"},13021:{"value":"32DD","name":"CIRCLED KATAKANA SE","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30BB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32DD"},13022:{"value":"32DE","name":"CIRCLED KATAKANA SO","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30BD","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32DE"},13023:{"value":"32DF","name":"CIRCLED KATAKANA TA","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30BF","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32DF"},13024:{"value":"32E0","name":"CIRCLED KATAKANA TI","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30C1","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32E0"},13025:{"value":"32E1","name":"CIRCLED KATAKANA TU","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30C4","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32E1"},13026:{"value":"32E2","name":"CIRCLED KATAKANA TE","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30C6","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32E2"},13027:{"value":"32E3","name":"CIRCLED KATAKANA TO","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30C8","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32E3"},13028:{"value":"32E4","name":"CIRCLED KATAKANA NA","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30CA","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32E4"},13029:{"value":"32E5","name":"CIRCLED KATAKANA NI","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30CB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32E5"},13030:{"value":"32E6","name":"CIRCLED KATAKANA NU","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30CC","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32E6"},13031:{"value":"32E7","name":"CIRCLED KATAKANA NE","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30CD","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32E7"},13032:{"value":"32E8","name":"CIRCLED KATAKANA NO","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30CE","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32E8"},13033:{"value":"32E9","name":"CIRCLED KATAKANA HA","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30CF","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32E9"},13034:{"value":"32EA","name":"CIRCLED KATAKANA HI","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30D2","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32EA"},13035:{"value":"32EB","name":"CIRCLED KATAKANA HU","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30D5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32EB"},13036:{"value":"32EC","name":"CIRCLED KATAKANA HE","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30D8","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32EC"},13037:{"value":"32ED","name":"CIRCLED KATAKANA HO","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30DB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32ED"},13038:{"value":"32EE","name":"CIRCLED KATAKANA MA","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30DE","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32EE"},13039:{"value":"32EF","name":"CIRCLED KATAKANA MI","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30DF","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32EF"},13040:{"value":"32F0","name":"CIRCLED KATAKANA MU","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30E0","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32F0"},13041:{"value":"32F1","name":"CIRCLED KATAKANA ME","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30E1","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32F1"},13042:{"value":"32F2","name":"CIRCLED KATAKANA MO","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30E2","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32F2"},13043:{"value":"32F3","name":"CIRCLED KATAKANA YA","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30E4","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32F3"},13044:{"value":"32F4","name":"CIRCLED KATAKANA YU","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30E6","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32F4"},13045:{"value":"32F5","name":"CIRCLED KATAKANA YO","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30E8","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32F5"},13046:{"value":"32F6","name":"CIRCLED KATAKANA RA","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30E9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32F6"},13047:{"value":"32F7","name":"CIRCLED KATAKANA RI","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30EA","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32F7"},13048:{"value":"32F8","name":"CIRCLED KATAKANA RU","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30EB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32F8"},13049:{"value":"32F9","name":"CIRCLED KATAKANA RE","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30EC","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32F9"},13050:{"value":"32FA","name":"CIRCLED KATAKANA RO","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30ED","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32FA"},13051:{"value":"32FB","name":"CIRCLED KATAKANA WA","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30EF","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32FB"},13052:{"value":"32FC","name":"CIRCLED KATAKANA WI","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30F0","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32FC"},13053:{"value":"32FD","name":"CIRCLED KATAKANA WE","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30F1","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32FD"},13054:{"value":"32FE","name":"CIRCLED KATAKANA WO","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 30F2","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u32FE"},13056:{"value":"3300","name":"SQUARE APAATO","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30A2 30D1 30FC 30C8","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED APAATO","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3300"},13057:{"value":"3301","name":"SQUARE ARUHUA","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30A2 30EB 30D5 30A1","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED ARUHUA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3301"},13058:{"value":"3302","name":"SQUARE ANPEA","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30A2 30F3 30DA 30A2","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED ANPEA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3302"},13059:{"value":"3303","name":"SQUARE AARU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30A2 30FC 30EB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED AARU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3303"},13060:{"value":"3304","name":"SQUARE ININGU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30A4 30CB 30F3 30B0","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED ININGU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3304"},13061:{"value":"3305","name":"SQUARE INTI","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30A4 30F3 30C1","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED INTI","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3305"},13062:{"value":"3306","name":"SQUARE UON","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30A6 30A9 30F3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED UON","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3306"},13063:{"value":"3307","name":"SQUARE ESUKUUDO","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30A8 30B9 30AF 30FC 30C9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED ESUKUUDO","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3307"},13064:{"value":"3308","name":"SQUARE EEKAA","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30A8 30FC 30AB 30FC","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED EEKAA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3308"},13065:{"value":"3309","name":"SQUARE ONSU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30AA 30F3 30B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED ONSU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3309"},13066:{"value":"330A","name":"SQUARE OOMU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30AA 30FC 30E0","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED OOMU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u330A"},13067:{"value":"330B","name":"SQUARE KAIRI","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30AB 30A4 30EA","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KAIRI","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u330B"},13068:{"value":"330C","name":"SQUARE KARATTO","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30AB 30E9 30C3 30C8","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KARATTO","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u330C"},13069:{"value":"330D","name":"SQUARE KARORII","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30AB 30ED 30EA 30FC","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KARORII","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u330D"},13070:{"value":"330E","name":"SQUARE GARON","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30AC 30ED 30F3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED GARON","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u330E"},13071:{"value":"330F","name":"SQUARE GANMA","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30AC 30F3 30DE","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED GANMA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u330F"},13072:{"value":"3310","name":"SQUARE GIGA","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30AE 30AC","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED GIGA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3310"},13073:{"value":"3311","name":"SQUARE GINII","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30AE 30CB 30FC","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED GINII","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3311"},13074:{"value":"3312","name":"SQUARE KYURII","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30AD 30E5 30EA 30FC","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KYURII","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3312"},13075:{"value":"3313","name":"SQUARE GIRUDAA","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30AE 30EB 30C0 30FC","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED GIRUDAA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3313"},13076:{"value":"3314","name":"SQUARE KIRO","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30AD 30ED","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KIRO","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3314"},13077:{"value":"3315","name":"SQUARE KIROGURAMU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30AD 30ED 30B0 30E9 30E0","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KIROGURAMU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3315"},13078:{"value":"3316","name":"SQUARE KIROMEETORU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30AD 30ED 30E1 30FC 30C8 30EB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KIROMEETORU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3316"},13079:{"value":"3317","name":"SQUARE KIROWATTO","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30AD 30ED 30EF 30C3 30C8","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KIROWATTO","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3317"},13080:{"value":"3318","name":"SQUARE GURAMU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30B0 30E9 30E0","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED GURAMU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3318"},13081:{"value":"3319","name":"SQUARE GURAMUTON","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30B0 30E9 30E0 30C8 30F3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED GURAMUTON","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3319"},13082:{"value":"331A","name":"SQUARE KURUZEIRO","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30AF 30EB 30BC 30A4 30ED","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KURUZEIRO","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u331A"},13083:{"value":"331B","name":"SQUARE KUROONE","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30AF 30ED 30FC 30CD","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KUROONE","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u331B"},13084:{"value":"331C","name":"SQUARE KEESU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30B1 30FC 30B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KEESU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u331C"},13085:{"value":"331D","name":"SQUARE KORUNA","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30B3 30EB 30CA","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KORUNA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u331D"},13086:{"value":"331E","name":"SQUARE KOOPO","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30B3 30FC 30DD","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KOOPO","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u331E"},13087:{"value":"331F","name":"SQUARE SAIKURU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30B5 30A4 30AF 30EB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED SAIKURU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u331F"},13088:{"value":"3320","name":"SQUARE SANTIIMU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30B5 30F3 30C1 30FC 30E0","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED SANTIIMU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3320"},13089:{"value":"3321","name":"SQUARE SIRINGU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30B7 30EA 30F3 30B0","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED SIRINGU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3321"},13090:{"value":"3322","name":"SQUARE SENTI","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30BB 30F3 30C1","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED SENTI","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3322"},13091:{"value":"3323","name":"SQUARE SENTO","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30BB 30F3 30C8","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED SENTO","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3323"},13092:{"value":"3324","name":"SQUARE DAASU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30C0 30FC 30B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED DAASU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3324"},13093:{"value":"3325","name":"SQUARE DESI","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30C7 30B7","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED DESI","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3325"},13094:{"value":"3326","name":"SQUARE DORU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30C9 30EB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED DORU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3326"},13095:{"value":"3327","name":"SQUARE TON","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30C8 30F3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED TON","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3327"},13096:{"value":"3328","name":"SQUARE NANO","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30CA 30CE","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED NANO","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3328"},13097:{"value":"3329","name":"SQUARE NOTTO","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30CE 30C3 30C8","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED NOTTO","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3329"},13098:{"value":"332A","name":"SQUARE HAITU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30CF 30A4 30C4","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED HAITU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u332A"},13099:{"value":"332B","name":"SQUARE PAASENTO","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30D1 30FC 30BB 30F3 30C8","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED PAASENTO","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u332B"},13100:{"value":"332C","name":"SQUARE PAATU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30D1 30FC 30C4","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED PAATU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u332C"},13101:{"value":"332D","name":"SQUARE BAARERU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30D0 30FC 30EC 30EB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED BAARERU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u332D"},13102:{"value":"332E","name":"SQUARE PIASUTORU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30D4 30A2 30B9 30C8 30EB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED PIASUTORU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u332E"},13103:{"value":"332F","name":"SQUARE PIKURU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30D4 30AF 30EB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED PIKURU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u332F"},13104:{"value":"3330","name":"SQUARE PIKO","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30D4 30B3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED PIKO","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3330"},13105:{"value":"3331","name":"SQUARE BIRU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30D3 30EB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED BIRU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3331"},13106:{"value":"3332","name":"SQUARE HUARADDO","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30D5 30A1 30E9 30C3 30C9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED HUARADDO","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3332"},13107:{"value":"3333","name":"SQUARE HUIITO","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30D5 30A3 30FC 30C8","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED HUIITO","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3333"},13108:{"value":"3334","name":"SQUARE BUSSYERU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30D6 30C3 30B7 30A7 30EB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED BUSSYERU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3334"},13109:{"value":"3335","name":"SQUARE HURAN","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30D5 30E9 30F3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED HURAN","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3335"},13110:{"value":"3336","name":"SQUARE HEKUTAARU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30D8 30AF 30BF 30FC 30EB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED HEKUTAARU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3336"},13111:{"value":"3337","name":"SQUARE PESO","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30DA 30BD","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED PESO","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3337"},13112:{"value":"3338","name":"SQUARE PENIHI","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30DA 30CB 30D2","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED PENIHI","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3338"},13113:{"value":"3339","name":"SQUARE HERUTU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30D8 30EB 30C4","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED HERUTU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3339"},13114:{"value":"333A","name":"SQUARE PENSU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30DA 30F3 30B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED PENSU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u333A"},13115:{"value":"333B","name":"SQUARE PEEZI","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30DA 30FC 30B8","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED PEEZI","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u333B"},13116:{"value":"333C","name":"SQUARE BEETA","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30D9 30FC 30BF","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED BEETA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u333C"},13117:{"value":"333D","name":"SQUARE POINTO","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30DD 30A4 30F3 30C8","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED POINTO","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u333D"},13118:{"value":"333E","name":"SQUARE BORUTO","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30DC 30EB 30C8","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED BORUTO","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u333E"},13119:{"value":"333F","name":"SQUARE HON","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30DB 30F3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED HON","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u333F"},13120:{"value":"3340","name":"SQUARE PONDO","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30DD 30F3 30C9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED PONDO","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3340"},13121:{"value":"3341","name":"SQUARE HOORU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30DB 30FC 30EB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED HOORU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3341"},13122:{"value":"3342","name":"SQUARE HOON","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30DB 30FC 30F3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED HOON","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3342"},13123:{"value":"3343","name":"SQUARE MAIKURO","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30DE 30A4 30AF 30ED","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MAIKURO","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3343"},13124:{"value":"3344","name":"SQUARE MAIRU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30DE 30A4 30EB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MAIRU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3344"},13125:{"value":"3345","name":"SQUARE MAHHA","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30DE 30C3 30CF","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MAHHA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3345"},13126:{"value":"3346","name":"SQUARE MARUKU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30DE 30EB 30AF","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MARUKU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3346"},13127:{"value":"3347","name":"SQUARE MANSYON","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30DE 30F3 30B7 30E7 30F3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MANSYON","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3347"},13128:{"value":"3348","name":"SQUARE MIKURON","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30DF 30AF 30ED 30F3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MIKURON","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3348"},13129:{"value":"3349","name":"SQUARE MIRI","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30DF 30EA","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MIRI","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3349"},13130:{"value":"334A","name":"SQUARE MIRIBAARU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30DF 30EA 30D0 30FC 30EB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MIRIBAARU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u334A"},13131:{"value":"334B","name":"SQUARE MEGA","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30E1 30AC","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MEGA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u334B"},13132:{"value":"334C","name":"SQUARE MEGATON","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30E1 30AC 30C8 30F3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MEGATON","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u334C"},13133:{"value":"334D","name":"SQUARE MEETORU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30E1 30FC 30C8 30EB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MEETORU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u334D"},13134:{"value":"334E","name":"SQUARE YAADO","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30E4 30FC 30C9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED YAADO","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u334E"},13135:{"value":"334F","name":"SQUARE YAARU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30E4 30FC 30EB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED YAARU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u334F"},13136:{"value":"3350","name":"SQUARE YUAN","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30E6 30A2 30F3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED YUAN","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3350"},13137:{"value":"3351","name":"SQUARE RITTORU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30EA 30C3 30C8 30EB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED RITTORU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3351"},13138:{"value":"3352","name":"SQUARE RIRA","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30EA 30E9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED RIRA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3352"},13139:{"value":"3353","name":"SQUARE RUPII","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30EB 30D4 30FC","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED RUPII","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3353"},13140:{"value":"3354","name":"SQUARE RUUBURU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30EB 30FC 30D6 30EB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED RUUBURU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3354"},13141:{"value":"3355","name":"SQUARE REMU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30EC 30E0","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED REMU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3355"},13142:{"value":"3356","name":"SQUARE RENTOGEN","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30EC 30F3 30C8 30B2 30F3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED RENTOGEN","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3356"},13143:{"value":"3357","name":"SQUARE WATTO","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30EF 30C3 30C8","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED WATTO","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3357"},13144:{"value":"3358","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR ZERO","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0030 70B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3358"},13145:{"value":"3359","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR ONE","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0031 70B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3359"},13146:{"value":"335A","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR TWO","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0032 70B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u335A"},13147:{"value":"335B","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR THREE","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0033 70B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u335B"},13148:{"value":"335C","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR FOUR","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0034 70B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u335C"},13149:{"value":"335D","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR FIVE","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0035 70B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u335D"},13150:{"value":"335E","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR SIX","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0036 70B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u335E"},13151:{"value":"335F","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR SEVEN","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0037 70B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u335F"},13152:{"value":"3360","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR EIGHT","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0038 70B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3360"},13153:{"value":"3361","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR NINE","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0039 70B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3361"},13154:{"value":"3362","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR TEN","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0031 0030 70B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3362"},13155:{"value":"3363","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR ELEVEN","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0031 0031 70B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3363"},13156:{"value":"3364","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR TWELVE","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0031 0032 70B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3364"},13157:{"value":"3365","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR THIRTEEN","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0031 0033 70B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3365"},13158:{"value":"3366","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR FOURTEEN","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0031 0034 70B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3366"},13159:{"value":"3367","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR FIFTEEN","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0031 0035 70B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3367"},13160:{"value":"3368","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR SIXTEEN","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0031 0036 70B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3368"},13161:{"value":"3369","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR SEVENTEEN","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0031 0037 70B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3369"},13162:{"value":"336A","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR EIGHTEEN","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0031 0038 70B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u336A"},13163:{"value":"336B","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR NINETEEN","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0031 0039 70B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u336B"},13164:{"value":"336C","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR TWENTY","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0032 0030 70B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u336C"},13165:{"value":"336D","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR TWENTY-ONE","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0032 0031 70B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u336D"},13166:{"value":"336E","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR TWENTY-TWO","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0032 0032 70B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u336E"},13167:{"value":"336F","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR TWENTY-THREE","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0032 0033 70B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u336F"},13168:{"value":"3370","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR HOUR TWENTY-FOUR","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0032 0034 70B9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3370"},13169:{"value":"3371","name":"SQUARE HPA","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0068 0050 0061","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3371"},13170:{"value":"3372","name":"SQUARE DA","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0064 0061","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3372"},13171:{"value":"3373","name":"SQUARE AU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0041 0055","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3373"},13172:{"value":"3374","name":"SQUARE BAR","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0062 0061 0072","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3374"},13173:{"value":"3375","name":"SQUARE OV","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006F 0056","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3375"},13174:{"value":"3376","name":"SQUARE PC","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0070 0063","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3376"},13175:{"value":"3377","name":"SQUARE DM","category":"So","class":"0","bidirectional_category":"ON","mapping":"<square> 0064 006D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3377"},13176:{"value":"3378","name":"SQUARE DM SQUARED","category":"So","class":"0","bidirectional_category":"ON","mapping":"<square> 0064 006D 00B2","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3378"},13177:{"value":"3379","name":"SQUARE DM CUBED","category":"So","class":"0","bidirectional_category":"ON","mapping":"<square> 0064 006D 00B3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3379"},13178:{"value":"337A","name":"SQUARE IU","category":"So","class":"0","bidirectional_category":"ON","mapping":"<square> 0049 0055","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u337A"},13179:{"value":"337B","name":"SQUARE ERA NAME HEISEI","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 5E73 6210","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED TWO IDEOGRAPHS ERA NAME HEISEI","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u337B"},13180:{"value":"337C","name":"SQUARE ERA NAME SYOUWA","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 662D 548C","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED TWO IDEOGRAPHS ERA NAME SYOUWA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u337C"},13181:{"value":"337D","name":"SQUARE ERA NAME TAISYOU","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 5927 6B63","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED TWO IDEOGRAPHS ERA NAME TAISYOU","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u337D"},13182:{"value":"337E","name":"SQUARE ERA NAME MEIZI","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 660E 6CBB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED TWO IDEOGRAPHS ERA NAME MEIZI","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u337E"},13183:{"value":"337F","name":"SQUARE CORPORATION","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 682A 5F0F 4F1A 793E","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED FOUR IDEOGRAPHS CORPORATION","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u337F"},13184:{"value":"3380","name":"SQUARE PA AMPS","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0070 0041","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED PA AMPS","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3380"},13185:{"value":"3381","name":"SQUARE NA","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006E 0041","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED NA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3381"},13186:{"value":"3382","name":"SQUARE MU A","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 03BC 0041","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MU A","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3382"},13187:{"value":"3383","name":"SQUARE MA","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006D 0041","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3383"},13188:{"value":"3384","name":"SQUARE KA","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006B 0041","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3384"},13189:{"value":"3385","name":"SQUARE KB","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 004B 0042","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KB","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3385"},13190:{"value":"3386","name":"SQUARE MB","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 004D 0042","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MB","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3386"},13191:{"value":"3387","name":"SQUARE GB","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0047 0042","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED GB","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3387"},13192:{"value":"3388","name":"SQUARE CAL","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0063 0061 006C","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED CAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3388"},13193:{"value":"3389","name":"SQUARE KCAL","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006B 0063 0061 006C","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KCAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3389"},13194:{"value":"338A","name":"SQUARE PF","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0070 0046","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED PF","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u338A"},13195:{"value":"338B","name":"SQUARE NF","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006E 0046","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED NF","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u338B"},13196:{"value":"338C","name":"SQUARE MU F","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 03BC 0046","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MU F","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u338C"},13197:{"value":"338D","name":"SQUARE MU G","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 03BC 0067","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MU G","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u338D"},13198:{"value":"338E","name":"SQUARE MG","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006D 0067","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MG","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u338E"},13199:{"value":"338F","name":"SQUARE KG","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006B 0067","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KG","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u338F"},13200:{"value":"3390","name":"SQUARE HZ","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0048 007A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED HZ","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3390"},13201:{"value":"3391","name":"SQUARE KHZ","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006B 0048 007A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KHZ","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3391"},13202:{"value":"3392","name":"SQUARE MHZ","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 004D 0048 007A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MHZ","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3392"},13203:{"value":"3393","name":"SQUARE GHZ","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0047 0048 007A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED GHZ","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3393"},13204:{"value":"3394","name":"SQUARE THZ","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0054 0048 007A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED THZ","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3394"},13205:{"value":"3395","name":"SQUARE MU L","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 03BC 2113","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MU L","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3395"},13206:{"value":"3396","name":"SQUARE ML","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006D 2113","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED ML","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3396"},13207:{"value":"3397","name":"SQUARE DL","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0064 2113","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED DL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3397"},13208:{"value":"3398","name":"SQUARE KL","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006B 2113","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3398"},13209:{"value":"3399","name":"SQUARE FM","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0066 006D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED FM","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u3399"},13210:{"value":"339A","name":"SQUARE NM","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006E 006D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED NM","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u339A"},13211:{"value":"339B","name":"SQUARE MU M","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 03BC 006D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MU M","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u339B"},13212:{"value":"339C","name":"SQUARE MM","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006D 006D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MM","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u339C"},13213:{"value":"339D","name":"SQUARE CM","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0063 006D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED CM","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u339D"},13214:{"value":"339E","name":"SQUARE KM","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006B 006D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KM","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u339E"},13215:{"value":"339F","name":"SQUARE MM SQUARED","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006D 006D 00B2","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MM SQUARED","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u339F"},13216:{"value":"33A0","name":"SQUARE CM SQUARED","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0063 006D 00B2","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED CM SQUARED","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33A0"},13217:{"value":"33A1","name":"SQUARE M SQUARED","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006D 00B2","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED M SQUARED","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33A1"},13218:{"value":"33A2","name":"SQUARE KM SQUARED","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006B 006D 00B2","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KM SQUARED","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33A2"},13219:{"value":"33A3","name":"SQUARE MM CUBED","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006D 006D 00B3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MM CUBED","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33A3"},13220:{"value":"33A4","name":"SQUARE CM CUBED","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0063 006D 00B3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED CM CUBED","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33A4"},13221:{"value":"33A5","name":"SQUARE M CUBED","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006D 00B3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED M CUBED","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33A5"},13222:{"value":"33A6","name":"SQUARE KM CUBED","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006B 006D 00B3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KM CUBED","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33A6"},13223:{"value":"33A7","name":"SQUARE M OVER S","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006D 2215 0073","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED M OVER S","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33A7"},13224:{"value":"33A8","name":"SQUARE M OVER S SQUARED","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006D 2215 0073 00B2","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED M OVER S SQUARED","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33A8"},13225:{"value":"33A9","name":"SQUARE PA","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0050 0061","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED PA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33A9"},13226:{"value":"33AA","name":"SQUARE KPA","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006B 0050 0061","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KPA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33AA"},13227:{"value":"33AB","name":"SQUARE MPA","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 004D 0050 0061","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MPA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33AB"},13228:{"value":"33AC","name":"SQUARE GPA","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0047 0050 0061","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED GPA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33AC"},13229:{"value":"33AD","name":"SQUARE RAD","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0072 0061 0064","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED RAD","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33AD"},13230:{"value":"33AE","name":"SQUARE RAD OVER S","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0072 0061 0064 2215 0073","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED RAD OVER S","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33AE"},13231:{"value":"33AF","name":"SQUARE RAD OVER S SQUARED","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0072 0061 0064 2215 0073 00B2","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED RAD OVER S SQUARED","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33AF"},13232:{"value":"33B0","name":"SQUARE PS","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0070 0073","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED PS","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33B0"},13233:{"value":"33B1","name":"SQUARE NS","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006E 0073","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED NS","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33B1"},13234:{"value":"33B2","name":"SQUARE MU S","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 03BC 0073","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MU S","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33B2"},13235:{"value":"33B3","name":"SQUARE MS","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006D 0073","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MS","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33B3"},13236:{"value":"33B4","name":"SQUARE PV","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0070 0056","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED PV","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33B4"},13237:{"value":"33B5","name":"SQUARE NV","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006E 0056","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED NV","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33B5"},13238:{"value":"33B6","name":"SQUARE MU V","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 03BC 0056","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MU V","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33B6"},13239:{"value":"33B7","name":"SQUARE MV","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006D 0056","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MV","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33B7"},13240:{"value":"33B8","name":"SQUARE KV","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006B 0056","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KV","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33B8"},13241:{"value":"33B9","name":"SQUARE MV MEGA","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 004D 0056","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MV MEGA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33B9"},13242:{"value":"33BA","name":"SQUARE PW","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0070 0057","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED PW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33BA"},13243:{"value":"33BB","name":"SQUARE NW","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006E 0057","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED NW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33BB"},13244:{"value":"33BC","name":"SQUARE MU W","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 03BC 0057","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MU W","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33BC"},13245:{"value":"33BD","name":"SQUARE MW","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006D 0057","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33BD"},13246:{"value":"33BE","name":"SQUARE KW","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006B 0057","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KW","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33BE"},13247:{"value":"33BF","name":"SQUARE MW MEGA","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 004D 0057","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MW MEGA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33BF"},13248:{"value":"33C0","name":"SQUARE K OHM","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006B 03A9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED K OHM","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33C0"},13249:{"value":"33C1","name":"SQUARE M OHM","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 004D 03A9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED M OHM","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33C1"},13250:{"value":"33C2","name":"SQUARE AM","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0061 002E 006D 002E","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED AM","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33C2"},13251:{"value":"33C3","name":"SQUARE BQ","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0042 0071","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED BQ","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33C3"},13252:{"value":"33C4","name":"SQUARE CC","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0063 0063","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED CC","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33C4"},13253:{"value":"33C5","name":"SQUARE CD","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0063 0064","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED CD","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33C5"},13254:{"value":"33C6","name":"SQUARE C OVER KG","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0043 2215 006B 0067","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED C OVER KG","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33C6"},13255:{"value":"33C7","name":"SQUARE CO","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0043 006F 002E","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED CO","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33C7"},13256:{"value":"33C8","name":"SQUARE DB","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0064 0042","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED DB","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33C8"},13257:{"value":"33C9","name":"SQUARE GY","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0047 0079","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED GY","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33C9"},13258:{"value":"33CA","name":"SQUARE HA","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0068 0061","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED HA","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33CA"},13259:{"value":"33CB","name":"SQUARE HP","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0048 0050","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED HP","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33CB"},13260:{"value":"33CC","name":"SQUARE IN","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0069 006E","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED IN","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33CC"},13261:{"value":"33CD","name":"SQUARE KK","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 004B 004B","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KK","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33CD"},13262:{"value":"33CE","name":"SQUARE KM CAPITAL","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 004B 004D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KM CAPITAL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33CE"},13263:{"value":"33CF","name":"SQUARE KT","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006B 0074","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED KT","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33CF"},13264:{"value":"33D0","name":"SQUARE LM","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006C 006D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED LM","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33D0"},13265:{"value":"33D1","name":"SQUARE LN","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006C 006E","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED LN","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33D1"},13266:{"value":"33D2","name":"SQUARE LOG","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006C 006F 0067","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED LOG","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33D2"},13267:{"value":"33D3","name":"SQUARE LX","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006C 0078","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED LX","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33D3"},13268:{"value":"33D4","name":"SQUARE MB SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006D 0062","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MB SMALL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33D4"},13269:{"value":"33D5","name":"SQUARE MIL","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006D 0069 006C","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MIL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33D5"},13270:{"value":"33D6","name":"SQUARE MOL","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 006D 006F 006C","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED MOL","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33D6"},13271:{"value":"33D7","name":"SQUARE PH","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0050 0048","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED PH","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33D7"},13272:{"value":"33D8","name":"SQUARE PM","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0070 002E 006D 002E","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED PM","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33D8"},13273:{"value":"33D9","name":"SQUARE PPM","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0050 0050 004D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED PPM","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33D9"},13274:{"value":"33DA","name":"SQUARE PR","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0050 0052","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED PR","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33DA"},13275:{"value":"33DB","name":"SQUARE SR","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0073 0072","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED SR","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33DB"},13276:{"value":"33DC","name":"SQUARE SV","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0053 0076","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED SV","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33DC"},13277:{"value":"33DD","name":"SQUARE WB","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0057 0062","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"SQUARED WB","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33DD"},13278:{"value":"33DE","name":"SQUARE V OVER M","category":"So","class":"0","bidirectional_category":"ON","mapping":"<square> 0056 2215 006D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33DE"},13279:{"value":"33DF","name":"SQUARE A OVER M","category":"So","class":"0","bidirectional_category":"ON","mapping":"<square> 0041 2215 006D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33DF"},13280:{"value":"33E0","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY ONE","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0031 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33E0"},13281:{"value":"33E1","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY TWO","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0032 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33E1"},13282:{"value":"33E2","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY THREE","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0033 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33E2"},13283:{"value":"33E3","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY FOUR","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0034 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33E3"},13284:{"value":"33E4","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY FIVE","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0035 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33E4"},13285:{"value":"33E5","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY SIX","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0036 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33E5"},13286:{"value":"33E6","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY SEVEN","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0037 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33E6"},13287:{"value":"33E7","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY EIGHT","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0038 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33E7"},13288:{"value":"33E8","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY NINE","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0039 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33E8"},13289:{"value":"33E9","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY TEN","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0031 0030 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33E9"},13290:{"value":"33EA","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY ELEVEN","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0031 0031 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33EA"},13291:{"value":"33EB","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY TWELVE","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0031 0032 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33EB"},13292:{"value":"33EC","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY THIRTEEN","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0031 0033 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33EC"},13293:{"value":"33ED","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY FOURTEEN","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0031 0034 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33ED"},13294:{"value":"33EE","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY FIFTEEN","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0031 0035 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33EE"},13295:{"value":"33EF","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY SIXTEEN","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0031 0036 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33EF"},13296:{"value":"33F0","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY SEVENTEEN","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0031 0037 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33F0"},13297:{"value":"33F1","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY EIGHTEEN","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0031 0038 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33F1"},13298:{"value":"33F2","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY NINETEEN","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0031 0039 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33F2"},13299:{"value":"33F3","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY TWENTY","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0032 0030 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33F3"},13300:{"value":"33F4","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY TWENTY-ONE","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0032 0031 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33F4"},13301:{"value":"33F5","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY TWENTY-TWO","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0032 0032 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33F5"},13302:{"value":"33F6","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY TWENTY-THREE","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0032 0033 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33F6"},13303:{"value":"33F7","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY TWENTY-FOUR","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0032 0034 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33F7"},13304:{"value":"33F8","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY TWENTY-FIVE","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0032 0035 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33F8"},13305:{"value":"33F9","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY TWENTY-SIX","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0032 0036 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33F9"},13306:{"value":"33FA","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY TWENTY-SEVEN","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0032 0037 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33FA"},13307:{"value":"33FB","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY TWENTY-EIGHT","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0032 0038 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33FB"},13308:{"value":"33FC","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY TWENTY-NINE","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0032 0039 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33FC"},13309:{"value":"33FD","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY THIRTY","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0033 0030 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33FD"},13310:{"value":"33FE","name":"IDEOGRAPHIC TELEGRAPH SYMBOL FOR DAY THIRTY-ONE","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0033 0031 65E5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33FE"},13311:{"value":"33FF","name":"SQUARE GAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"<square> 0067 0061 006C","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u33FF"},19904:{"value":"4DC0","name":"HEXAGRAM FOR THE CREATIVE HEAVEN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DC0"},19905:{"value":"4DC1","name":"HEXAGRAM FOR THE RECEPTIVE EARTH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DC1"},19906:{"value":"4DC2","name":"HEXAGRAM FOR DIFFICULTY AT THE BEGINNING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DC2"},19907:{"value":"4DC3","name":"HEXAGRAM FOR YOUTHFUL FOLLY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DC3"},19908:{"value":"4DC4","name":"HEXAGRAM FOR WAITING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DC4"},19909:{"value":"4DC5","name":"HEXAGRAM FOR CONFLICT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DC5"},19910:{"value":"4DC6","name":"HEXAGRAM FOR THE ARMY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DC6"},19911:{"value":"4DC7","name":"HEXAGRAM FOR HOLDING TOGETHER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DC7"},19912:{"value":"4DC8","name":"HEXAGRAM FOR SMALL TAMING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DC8"},19913:{"value":"4DC9","name":"HEXAGRAM FOR TREADING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DC9"},19914:{"value":"4DCA","name":"HEXAGRAM FOR PEACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DCA"},19915:{"value":"4DCB","name":"HEXAGRAM FOR STANDSTILL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DCB"},19916:{"value":"4DCC","name":"HEXAGRAM FOR FELLOWSHIP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DCC"},19917:{"value":"4DCD","name":"HEXAGRAM FOR GREAT POSSESSION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DCD"},19918:{"value":"4DCE","name":"HEXAGRAM FOR MODESTY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DCE"},19919:{"value":"4DCF","name":"HEXAGRAM FOR ENTHUSIASM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DCF"},19920:{"value":"4DD0","name":"HEXAGRAM FOR FOLLOWING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DD0"},19921:{"value":"4DD1","name":"HEXAGRAM FOR WORK ON THE DECAYED","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DD1"},19922:{"value":"4DD2","name":"HEXAGRAM FOR APPROACH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DD2"},19923:{"value":"4DD3","name":"HEXAGRAM FOR CONTEMPLATION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DD3"},19924:{"value":"4DD4","name":"HEXAGRAM FOR BITING THROUGH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DD4"},19925:{"value":"4DD5","name":"HEXAGRAM FOR GRACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DD5"},19926:{"value":"4DD6","name":"HEXAGRAM FOR SPLITTING APART","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DD6"},19927:{"value":"4DD7","name":"HEXAGRAM FOR RETURN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DD7"},19928:{"value":"4DD8","name":"HEXAGRAM FOR INNOCENCE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DD8"},19929:{"value":"4DD9","name":"HEXAGRAM FOR GREAT TAMING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DD9"},19930:{"value":"4DDA","name":"HEXAGRAM FOR MOUTH CORNERS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DDA"},19931:{"value":"4DDB","name":"HEXAGRAM FOR GREAT PREPONDERANCE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DDB"},19932:{"value":"4DDC","name":"HEXAGRAM FOR THE ABYSMAL WATER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DDC"},19933:{"value":"4DDD","name":"HEXAGRAM FOR THE CLINGING FIRE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DDD"},19934:{"value":"4DDE","name":"HEXAGRAM FOR INFLUENCE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DDE"},19935:{"value":"4DDF","name":"HEXAGRAM FOR DURATION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DDF"},19936:{"value":"4DE0","name":"HEXAGRAM FOR RETREAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DE0"},19937:{"value":"4DE1","name":"HEXAGRAM FOR GREAT POWER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DE1"},19938:{"value":"4DE2","name":"HEXAGRAM FOR PROGRESS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DE2"},19939:{"value":"4DE3","name":"HEXAGRAM FOR DARKENING OF THE LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DE3"},19940:{"value":"4DE4","name":"HEXAGRAM FOR THE FAMILY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DE4"},19941:{"value":"4DE5","name":"HEXAGRAM FOR OPPOSITION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DE5"},19942:{"value":"4DE6","name":"HEXAGRAM FOR OBSTRUCTION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DE6"},19943:{"value":"4DE7","name":"HEXAGRAM FOR DELIVERANCE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DE7"},19944:{"value":"4DE8","name":"HEXAGRAM FOR DECREASE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DE8"},19945:{"value":"4DE9","name":"HEXAGRAM FOR INCREASE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DE9"},19946:{"value":"4DEA","name":"HEXAGRAM FOR BREAKTHROUGH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DEA"},19947:{"value":"4DEB","name":"HEXAGRAM FOR COMING TO MEET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DEB"},19948:{"value":"4DEC","name":"HEXAGRAM FOR GATHERING TOGETHER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DEC"},19949:{"value":"4DED","name":"HEXAGRAM FOR PUSHING UPWARD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DED"},19950:{"value":"4DEE","name":"HEXAGRAM FOR OPPRESSION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DEE"},19951:{"value":"4DEF","name":"HEXAGRAM FOR THE WELL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DEF"},19952:{"value":"4DF0","name":"HEXAGRAM FOR REVOLUTION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DF0"},19953:{"value":"4DF1","name":"HEXAGRAM FOR THE CAULDRON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DF1"},19954:{"value":"4DF2","name":"HEXAGRAM FOR THE AROUSING THUNDER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DF2"},19955:{"value":"4DF3","name":"HEXAGRAM FOR THE KEEPING STILL MOUNTAIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DF3"},19956:{"value":"4DF4","name":"HEXAGRAM FOR DEVELOPMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DF4"},19957:{"value":"4DF5","name":"HEXAGRAM FOR THE MARRYING MAIDEN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DF5"},19958:{"value":"4DF6","name":"HEXAGRAM FOR ABUNDANCE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DF6"},19959:{"value":"4DF7","name":"HEXAGRAM FOR THE WANDERER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DF7"},19960:{"value":"4DF8","name":"HEXAGRAM FOR THE GENTLE WIND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DF8"},19961:{"value":"4DF9","name":"HEXAGRAM FOR THE JOYOUS LAKE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DF9"},19962:{"value":"4DFA","name":"HEXAGRAM FOR DISPERSION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DFA"},19963:{"value":"4DFB","name":"HEXAGRAM FOR LIMITATION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DFB"},19964:{"value":"4DFC","name":"HEXAGRAM FOR INNER TRUTH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DFC"},19965:{"value":"4DFD","name":"HEXAGRAM FOR SMALL PREPONDERANCE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DFD"},19966:{"value":"4DFE","name":"HEXAGRAM FOR AFTER COMPLETION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DFE"},19967:{"value":"4DFF","name":"HEXAGRAM FOR BEFORE COMPLETION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u4DFF"},42128:{"value":"A490","name":"YI RADICAL QOT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA490"},42129:{"value":"A491","name":"YI RADICAL LI","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA491"},42130:{"value":"A492","name":"YI RADICAL KIT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA492"},42131:{"value":"A493","name":"YI RADICAL NYIP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA493"},42132:{"value":"A494","name":"YI RADICAL CYP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA494"},42133:{"value":"A495","name":"YI RADICAL SSI","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA495"},42134:{"value":"A496","name":"YI RADICAL GGOP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA496"},42135:{"value":"A497","name":"YI RADICAL GEP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA497"},42136:{"value":"A498","name":"YI RADICAL MI","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA498"},42137:{"value":"A499","name":"YI RADICAL HXIT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA499"},42138:{"value":"A49A","name":"YI RADICAL LYR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA49A"},42139:{"value":"A49B","name":"YI RADICAL BBUT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA49B"},42140:{"value":"A49C","name":"YI RADICAL MOP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA49C"},42141:{"value":"A49D","name":"YI RADICAL YO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA49D"},42142:{"value":"A49E","name":"YI RADICAL PUT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA49E"},42143:{"value":"A49F","name":"YI RADICAL HXUO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA49F"},42144:{"value":"A4A0","name":"YI RADICAL TAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4A0"},42145:{"value":"A4A1","name":"YI RADICAL GA","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4A1"},42146:{"value":"A4A2","name":"YI RADICAL ZUP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4A2"},42147:{"value":"A4A3","name":"YI RADICAL CYT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4A3"},42148:{"value":"A4A4","name":"YI RADICAL DDUR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4A4"},42149:{"value":"A4A5","name":"YI RADICAL BUR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4A5"},42150:{"value":"A4A6","name":"YI RADICAL GGUO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4A6"},42151:{"value":"A4A7","name":"YI RADICAL NYOP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4A7"},42152:{"value":"A4A8","name":"YI RADICAL TU","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4A8"},42153:{"value":"A4A9","name":"YI RADICAL OP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4A9"},42154:{"value":"A4AA","name":"YI RADICAL JJUT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4AA"},42155:{"value":"A4AB","name":"YI RADICAL ZOT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4AB"},42156:{"value":"A4AC","name":"YI RADICAL PYT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4AC"},42157:{"value":"A4AD","name":"YI RADICAL HMO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4AD"},42158:{"value":"A4AE","name":"YI RADICAL YIT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4AE"},42159:{"value":"A4AF","name":"YI RADICAL VUR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4AF"},42160:{"value":"A4B0","name":"YI RADICAL SHY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4B0"},42161:{"value":"A4B1","name":"YI RADICAL VEP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4B1"},42162:{"value":"A4B2","name":"YI RADICAL ZA","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4B2"},42163:{"value":"A4B3","name":"YI RADICAL JO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4B3"},42164:{"value":"A4B4","name":"YI RADICAL NZUP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4B4"},42165:{"value":"A4B5","name":"YI RADICAL JJY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4B5"},42166:{"value":"A4B6","name":"YI RADICAL GOT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4B6"},42167:{"value":"A4B7","name":"YI RADICAL JJIE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4B7"},42168:{"value":"A4B8","name":"YI RADICAL WO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4B8"},42169:{"value":"A4B9","name":"YI RADICAL DU","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4B9"},42170:{"value":"A4BA","name":"YI RADICAL SHUR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4BA"},42171:{"value":"A4BB","name":"YI RADICAL LIE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4BB"},42172:{"value":"A4BC","name":"YI RADICAL CY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4BC"},42173:{"value":"A4BD","name":"YI RADICAL CUOP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4BD"},42174:{"value":"A4BE","name":"YI RADICAL CIP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4BE"},42175:{"value":"A4BF","name":"YI RADICAL HXOP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4BF"},42176:{"value":"A4C0","name":"YI RADICAL SHAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4C0"},42177:{"value":"A4C1","name":"YI RADICAL ZUR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4C1"},42178:{"value":"A4C2","name":"YI RADICAL SHOP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4C2"},42179:{"value":"A4C3","name":"YI RADICAL CHE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4C3"},42180:{"value":"A4C4","name":"YI RADICAL ZZIET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4C4"},42181:{"value":"A4C5","name":"YI RADICAL NBIE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4C5"},42182:{"value":"A4C6","name":"YI RADICAL KE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA4C6"},43048:{"value":"A828","name":"SYLOTI NAGRI POETRY MARK-1","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA828"},43049:{"value":"A829","name":"SYLOTI NAGRI POETRY MARK-2","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA829"},43050:{"value":"A82A","name":"SYLOTI NAGRI POETRY MARK-3","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA82A"},43051:{"value":"A82B","name":"SYLOTI NAGRI POETRY MARK-4","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA82B"},43062:{"value":"A836","name":"NORTH INDIC QUARTER MARK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA836"},43063:{"value":"A837","name":"NORTH INDIC PLACEHOLDER MARK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA837"},43065:{"value":"A839","name":"NORTH INDIC QUANTITY MARK","category":"So","class":"0","bidirectional_category":"ET","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uA839"},43639:{"value":"AA77","name":"MYANMAR SYMBOL AITON EXCLAMATION","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uAA77"},43640:{"value":"AA78","name":"MYANMAR SYMBOL AITON ONE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uAA78"},43641:{"value":"AA79","name":"MYANMAR SYMBOL AITON TWO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uAA79"},65021:{"value":"FDFD","name":"ARABIC LIGATURE BISMILLAH AR-RAHMAN AR-RAHEEM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uFDFD"},65508:{"value":"FFE4","name":"FULLWIDTH BROKEN BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"<wide> 00A6","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"FULLWIDTH BROKEN VERTICAL BAR","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uFFE4"},65512:{"value":"FFE8","name":"HALFWIDTH FORMS LIGHT VERTICAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"<narrow> 2502","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uFFE8"},65517:{"value":"FFED","name":"HALFWIDTH BLACK SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<narrow> 25A0","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uFFED"},65518:{"value":"FFEE","name":"HALFWIDTH WHITE CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"<narrow> 25CB","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uFFEE"},65532:{"value":"FFFC","name":"OBJECT REPLACEMENT CHARACTER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uFFFC"},65533:{"value":"FFFD","name":"REPLACEMENT CHARACTER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uFFFD"},65847:{"value":"10137","name":"AEGEAN WEIGHT BASE UNIT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0137"},65848:{"value":"10138","name":"AEGEAN WEIGHT FIRST SUBUNIT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0138"},65849:{"value":"10139","name":"AEGEAN WEIGHT SECOND SUBUNIT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0139"},65850:{"value":"1013A","name":"AEGEAN WEIGHT THIRD SUBUNIT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u013A"},65851:{"value":"1013B","name":"AEGEAN WEIGHT FOURTH SUBUNIT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u013B"},65852:{"value":"1013C","name":"AEGEAN DRY MEASURE FIRST SUBUNIT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u013C"},65853:{"value":"1013D","name":"AEGEAN LIQUID MEASURE FIRST SUBUNIT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u013D"},65854:{"value":"1013E","name":"AEGEAN MEASURE SECOND SUBUNIT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u013E"},65855:{"value":"1013F","name":"AEGEAN MEASURE THIRD SUBUNIT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u013F"},65913:{"value":"10179","name":"GREEK YEAR SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0179"},65914:{"value":"1017A","name":"GREEK TALENT SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u017A"},65915:{"value":"1017B","name":"GREEK DRACHMA SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u017B"},65916:{"value":"1017C","name":"GREEK OBOL SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u017C"},65917:{"value":"1017D","name":"GREEK TWO OBOLS SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u017D"},65918:{"value":"1017E","name":"GREEK THREE OBOLS SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u017E"},65919:{"value":"1017F","name":"GREEK FOUR OBOLS SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u017F"},65920:{"value":"10180","name":"GREEK FIVE OBOLS SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0180"},65921:{"value":"10181","name":"GREEK METRETES SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0181"},65922:{"value":"10182","name":"GREEK KYATHOS BASE SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0182"},65923:{"value":"10183","name":"GREEK LITRA SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0183"},65924:{"value":"10184","name":"GREEK OUNKIA SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0184"},65925:{"value":"10185","name":"GREEK XESTES SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0185"},65926:{"value":"10186","name":"GREEK ARTABE SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0186"},65927:{"value":"10187","name":"GREEK AROURA SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0187"},65928:{"value":"10188","name":"GREEK GRAMMA SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0188"},65929:{"value":"10189","name":"GREEK TRYBLION BASE SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0189"},65932:{"value":"1018C","name":"GREEK SINUSOID SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u018C"},65936:{"value":"10190","name":"ROMAN SEXTANS SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0190"},65937:{"value":"10191","name":"ROMAN UNCIA SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0191"},65938:{"value":"10192","name":"ROMAN SEMUNCIA SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0192"},65939:{"value":"10193","name":"ROMAN SEXTULA SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0193"},65940:{"value":"10194","name":"ROMAN DIMIDIA SEXTULA SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0194"},65941:{"value":"10195","name":"ROMAN SILIQUA SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0195"},65942:{"value":"10196","name":"ROMAN DENARIUS SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0196"},65943:{"value":"10197","name":"ROMAN QUINARIUS SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0197"},65944:{"value":"10198","name":"ROMAN SESTERTIUS SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0198"},65945:{"value":"10199","name":"ROMAN DUPONDIUS SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0199"},65946:{"value":"1019A","name":"ROMAN AS SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u019A"},65947:{"value":"1019B","name":"ROMAN CENTURIAL SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u019B"},65952:{"value":"101A0","name":"GREEK SYMBOL TAU RHO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01A0"},66000:{"value":"101D0","name":"PHAISTOS DISC SIGN PEDESTRIAN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01D0"},66001:{"value":"101D1","name":"PHAISTOS DISC SIGN PLUMED HEAD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01D1"},66002:{"value":"101D2","name":"PHAISTOS DISC SIGN TATTOOED HEAD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01D2"},66003:{"value":"101D3","name":"PHAISTOS DISC SIGN CAPTIVE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01D3"},66004:{"value":"101D4","name":"PHAISTOS DISC SIGN CHILD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01D4"},66005:{"value":"101D5","name":"PHAISTOS DISC SIGN WOMAN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01D5"},66006:{"value":"101D6","name":"PHAISTOS DISC SIGN HELMET","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01D6"},66007:{"value":"101D7","name":"PHAISTOS DISC SIGN GAUNTLET","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01D7"},66008:{"value":"101D8","name":"PHAISTOS DISC SIGN TIARA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01D8"},66009:{"value":"101D9","name":"PHAISTOS DISC SIGN ARROW","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01D9"},66010:{"value":"101DA","name":"PHAISTOS DISC SIGN BOW","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01DA"},66011:{"value":"101DB","name":"PHAISTOS DISC SIGN SHIELD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01DB"},66012:{"value":"101DC","name":"PHAISTOS DISC SIGN CLUB","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01DC"},66013:{"value":"101DD","name":"PHAISTOS DISC SIGN MANACLES","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01DD"},66014:{"value":"101DE","name":"PHAISTOS DISC SIGN MATTOCK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01DE"},66015:{"value":"101DF","name":"PHAISTOS DISC SIGN SAW","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01DF"},66016:{"value":"101E0","name":"PHAISTOS DISC SIGN LID","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01E0"},66017:{"value":"101E1","name":"PHAISTOS DISC SIGN BOOMERANG","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01E1"},66018:{"value":"101E2","name":"PHAISTOS DISC SIGN CARPENTRY PLANE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01E2"},66019:{"value":"101E3","name":"PHAISTOS DISC SIGN DOLIUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01E3"},66020:{"value":"101E4","name":"PHAISTOS DISC SIGN COMB","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01E4"},66021:{"value":"101E5","name":"PHAISTOS DISC SIGN SLING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01E5"},66022:{"value":"101E6","name":"PHAISTOS DISC SIGN COLUMN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01E6"},66023:{"value":"101E7","name":"PHAISTOS DISC SIGN BEEHIVE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01E7"},66024:{"value":"101E8","name":"PHAISTOS DISC SIGN SHIP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01E8"},66025:{"value":"101E9","name":"PHAISTOS DISC SIGN HORN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01E9"},66026:{"value":"101EA","name":"PHAISTOS DISC SIGN HIDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01EA"},66027:{"value":"101EB","name":"PHAISTOS DISC SIGN BULLS LEG","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01EB"},66028:{"value":"101EC","name":"PHAISTOS DISC SIGN CAT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01EC"},66029:{"value":"101ED","name":"PHAISTOS DISC SIGN RAM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01ED"},66030:{"value":"101EE","name":"PHAISTOS DISC SIGN EAGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01EE"},66031:{"value":"101EF","name":"PHAISTOS DISC SIGN DOVE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01EF"},66032:{"value":"101F0","name":"PHAISTOS DISC SIGN TUNNY","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01F0"},66033:{"value":"101F1","name":"PHAISTOS DISC SIGN BEE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01F1"},66034:{"value":"101F2","name":"PHAISTOS DISC SIGN PLANE TREE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01F2"},66035:{"value":"101F3","name":"PHAISTOS DISC SIGN VINE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01F3"},66036:{"value":"101F4","name":"PHAISTOS DISC SIGN PAPYRUS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01F4"},66037:{"value":"101F5","name":"PHAISTOS DISC SIGN ROSETTE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01F5"},66038:{"value":"101F6","name":"PHAISTOS DISC SIGN LILY","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01F6"},66039:{"value":"101F7","name":"PHAISTOS DISC SIGN OX BACK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01F7"},66040:{"value":"101F8","name":"PHAISTOS DISC SIGN FLUTE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01F8"},66041:{"value":"101F9","name":"PHAISTOS DISC SIGN GRATER","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01F9"},66042:{"value":"101FA","name":"PHAISTOS DISC SIGN STRAINER","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01FA"},66043:{"value":"101FB","name":"PHAISTOS DISC SIGN SMALL AXE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01FB"},66044:{"value":"101FC","name":"PHAISTOS DISC SIGN WAVY BAND","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u01FC"},67703:{"value":"10877","name":"PALMYRENE LEFT-POINTING FLEURON","category":"So","class":"0","bidirectional_category":"R","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0877"},67704:{"value":"10878","name":"PALMYRENE RIGHT-POINTING FLEURON","category":"So","class":"0","bidirectional_category":"R","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0878"},68296:{"value":"10AC8","name":"MANICHAEAN SIGN UD","category":"So","class":"0","bidirectional_category":"R","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u0AC8"},71487:{"value":"1173F","name":"AHOM SYMBOL VI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u173F"},92988:{"value":"16B3C","name":"PAHAWH HMONG SIGN XYEEM NTXIV","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u6B3C"},92989:{"value":"16B3D","name":"PAHAWH HMONG SIGN XYEEM RHO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u6B3D"},92990:{"value":"16B3E","name":"PAHAWH HMONG SIGN XYEEM TOV","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u6B3E"},92991:{"value":"16B3F","name":"PAHAWH HMONG SIGN XYEEM FAIB","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u6B3F"},92997:{"value":"16B45","name":"PAHAWH HMONG SIGN CIM TSOV ROG","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\u6B45"},113820:{"value":"1BC9C","name":"DUPLOYAN SIGN O WITH CROSS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uBC9C"},118784:{"value":"1D000","name":"BYZANTINE MUSICAL SYMBOL PSILI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD000"},118785:{"value":"1D001","name":"BYZANTINE MUSICAL SYMBOL DASEIA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD001"},118786:{"value":"1D002","name":"BYZANTINE MUSICAL SYMBOL PERISPOMENI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD002"},118787:{"value":"1D003","name":"BYZANTINE MUSICAL SYMBOL OXEIA EKFONITIKON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD003"},118788:{"value":"1D004","name":"BYZANTINE MUSICAL SYMBOL OXEIA DIPLI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD004"},118789:{"value":"1D005","name":"BYZANTINE MUSICAL SYMBOL VAREIA EKFONITIKON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD005"},118790:{"value":"1D006","name":"BYZANTINE MUSICAL SYMBOL VAREIA DIPLI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD006"},118791:{"value":"1D007","name":"BYZANTINE MUSICAL SYMBOL KATHISTI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD007"},118792:{"value":"1D008","name":"BYZANTINE MUSICAL SYMBOL SYRMATIKI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD008"},118793:{"value":"1D009","name":"BYZANTINE MUSICAL SYMBOL PARAKLITIKI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD009"},118794:{"value":"1D00A","name":"BYZANTINE MUSICAL SYMBOL YPOKRISIS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD00A"},118795:{"value":"1D00B","name":"BYZANTINE MUSICAL SYMBOL YPOKRISIS DIPLI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD00B"},118796:{"value":"1D00C","name":"BYZANTINE MUSICAL SYMBOL KREMASTI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD00C"},118797:{"value":"1D00D","name":"BYZANTINE MUSICAL SYMBOL APESO EKFONITIKON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD00D"},118798:{"value":"1D00E","name":"BYZANTINE MUSICAL SYMBOL EXO EKFONITIKON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD00E"},118799:{"value":"1D00F","name":"BYZANTINE MUSICAL SYMBOL TELEIA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD00F"},118800:{"value":"1D010","name":"BYZANTINE MUSICAL SYMBOL KENTIMATA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD010"},118801:{"value":"1D011","name":"BYZANTINE MUSICAL SYMBOL APOSTROFOS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD011"},118802:{"value":"1D012","name":"BYZANTINE MUSICAL SYMBOL APOSTROFOS DIPLI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD012"},118803:{"value":"1D013","name":"BYZANTINE MUSICAL SYMBOL SYNEVMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD013"},118804:{"value":"1D014","name":"BYZANTINE MUSICAL SYMBOL THITA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD014"},118805:{"value":"1D015","name":"BYZANTINE MUSICAL SYMBOL OLIGON ARCHAION","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD015"},118806:{"value":"1D016","name":"BYZANTINE MUSICAL SYMBOL GORGON ARCHAION","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD016"},118807:{"value":"1D017","name":"BYZANTINE MUSICAL SYMBOL PSILON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD017"},118808:{"value":"1D018","name":"BYZANTINE MUSICAL SYMBOL CHAMILON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD018"},118809:{"value":"1D019","name":"BYZANTINE MUSICAL SYMBOL VATHY","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD019"},118810:{"value":"1D01A","name":"BYZANTINE MUSICAL SYMBOL ISON ARCHAION","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD01A"},118811:{"value":"1D01B","name":"BYZANTINE MUSICAL SYMBOL KENTIMA ARCHAION","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD01B"},118812:{"value":"1D01C","name":"BYZANTINE MUSICAL SYMBOL KENTIMATA ARCHAION","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD01C"},118813:{"value":"1D01D","name":"BYZANTINE MUSICAL SYMBOL SAXIMATA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD01D"},118814:{"value":"1D01E","name":"BYZANTINE MUSICAL SYMBOL PARICHON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD01E"},118815:{"value":"1D01F","name":"BYZANTINE MUSICAL SYMBOL STAVROS APODEXIA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD01F"},118816:{"value":"1D020","name":"BYZANTINE MUSICAL SYMBOL OXEIAI ARCHAION","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD020"},118817:{"value":"1D021","name":"BYZANTINE MUSICAL SYMBOL VAREIAI ARCHAION","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD021"},118818:{"value":"1D022","name":"BYZANTINE MUSICAL SYMBOL APODERMA ARCHAION","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD022"},118819:{"value":"1D023","name":"BYZANTINE MUSICAL SYMBOL APOTHEMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD023"},118820:{"value":"1D024","name":"BYZANTINE MUSICAL SYMBOL KLASMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD024"},118821:{"value":"1D025","name":"BYZANTINE MUSICAL SYMBOL REVMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD025"},118822:{"value":"1D026","name":"BYZANTINE MUSICAL SYMBOL PIASMA ARCHAION","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD026"},118823:{"value":"1D027","name":"BYZANTINE MUSICAL SYMBOL TINAGMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD027"},118824:{"value":"1D028","name":"BYZANTINE MUSICAL SYMBOL ANATRICHISMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD028"},118825:{"value":"1D029","name":"BYZANTINE MUSICAL SYMBOL SEISMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD029"},118826:{"value":"1D02A","name":"BYZANTINE MUSICAL SYMBOL SYNAGMA ARCHAION","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD02A"},118827:{"value":"1D02B","name":"BYZANTINE MUSICAL SYMBOL SYNAGMA META STAVROU","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD02B"},118828:{"value":"1D02C","name":"BYZANTINE MUSICAL SYMBOL OYRANISMA ARCHAION","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD02C"},118829:{"value":"1D02D","name":"BYZANTINE MUSICAL SYMBOL THEMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD02D"},118830:{"value":"1D02E","name":"BYZANTINE MUSICAL SYMBOL LEMOI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD02E"},118831:{"value":"1D02F","name":"BYZANTINE MUSICAL SYMBOL DYO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD02F"},118832:{"value":"1D030","name":"BYZANTINE MUSICAL SYMBOL TRIA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD030"},118833:{"value":"1D031","name":"BYZANTINE MUSICAL SYMBOL TESSERA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD031"},118834:{"value":"1D032","name":"BYZANTINE MUSICAL SYMBOL KRATIMATA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD032"},118835:{"value":"1D033","name":"BYZANTINE MUSICAL SYMBOL APESO EXO NEO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD033"},118836:{"value":"1D034","name":"BYZANTINE MUSICAL SYMBOL FTHORA ARCHAION","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD034"},118837:{"value":"1D035","name":"BYZANTINE MUSICAL SYMBOL IMIFTHORA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD035"},118838:{"value":"1D036","name":"BYZANTINE MUSICAL SYMBOL TROMIKON ARCHAION","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD036"},118839:{"value":"1D037","name":"BYZANTINE MUSICAL SYMBOL KATAVA TROMIKON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD037"},118840:{"value":"1D038","name":"BYZANTINE MUSICAL SYMBOL PELASTON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD038"},118841:{"value":"1D039","name":"BYZANTINE MUSICAL SYMBOL PSIFISTON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD039"},118842:{"value":"1D03A","name":"BYZANTINE MUSICAL SYMBOL KONTEVMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD03A"},118843:{"value":"1D03B","name":"BYZANTINE MUSICAL SYMBOL CHOREVMA ARCHAION","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD03B"},118844:{"value":"1D03C","name":"BYZANTINE MUSICAL SYMBOL RAPISMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD03C"},118845:{"value":"1D03D","name":"BYZANTINE MUSICAL SYMBOL PARAKALESMA ARCHAION","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD03D"},118846:{"value":"1D03E","name":"BYZANTINE MUSICAL SYMBOL PARAKLITIKI ARCHAION","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD03E"},118847:{"value":"1D03F","name":"BYZANTINE MUSICAL SYMBOL ICHADIN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD03F"},118848:{"value":"1D040","name":"BYZANTINE MUSICAL SYMBOL NANA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD040"},118849:{"value":"1D041","name":"BYZANTINE MUSICAL SYMBOL PETASMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD041"},118850:{"value":"1D042","name":"BYZANTINE MUSICAL SYMBOL KONTEVMA ALLO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD042"},118851:{"value":"1D043","name":"BYZANTINE MUSICAL SYMBOL TROMIKON ALLO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD043"},118852:{"value":"1D044","name":"BYZANTINE MUSICAL SYMBOL STRAGGISMATA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD044"},118853:{"value":"1D045","name":"BYZANTINE MUSICAL SYMBOL GRONTHISMATA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD045"},118854:{"value":"1D046","name":"BYZANTINE MUSICAL SYMBOL ISON NEO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD046"},118855:{"value":"1D047","name":"BYZANTINE MUSICAL SYMBOL OLIGON NEO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD047"},118856:{"value":"1D048","name":"BYZANTINE MUSICAL SYMBOL OXEIA NEO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD048"},118857:{"value":"1D049","name":"BYZANTINE MUSICAL SYMBOL PETASTI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD049"},118858:{"value":"1D04A","name":"BYZANTINE MUSICAL SYMBOL KOUFISMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD04A"},118859:{"value":"1D04B","name":"BYZANTINE MUSICAL SYMBOL PETASTOKOUFISMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD04B"},118860:{"value":"1D04C","name":"BYZANTINE MUSICAL SYMBOL KRATIMOKOUFISMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD04C"},118861:{"value":"1D04D","name":"BYZANTINE MUSICAL SYMBOL PELASTON NEO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD04D"},118862:{"value":"1D04E","name":"BYZANTINE MUSICAL SYMBOL KENTIMATA NEO ANO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD04E"},118863:{"value":"1D04F","name":"BYZANTINE MUSICAL SYMBOL KENTIMA NEO ANO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD04F"},118864:{"value":"1D050","name":"BYZANTINE MUSICAL SYMBOL YPSILI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD050"},118865:{"value":"1D051","name":"BYZANTINE MUSICAL SYMBOL APOSTROFOS NEO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD051"},118866:{"value":"1D052","name":"BYZANTINE MUSICAL SYMBOL APOSTROFOI SYNDESMOS NEO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD052"},118867:{"value":"1D053","name":"BYZANTINE MUSICAL SYMBOL YPORROI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD053"},118868:{"value":"1D054","name":"BYZANTINE MUSICAL SYMBOL KRATIMOYPORROON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD054"},118869:{"value":"1D055","name":"BYZANTINE MUSICAL SYMBOL ELAFRON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD055"},118870:{"value":"1D056","name":"BYZANTINE MUSICAL SYMBOL CHAMILI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD056"},118871:{"value":"1D057","name":"BYZANTINE MUSICAL SYMBOL MIKRON ISON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD057"},118872:{"value":"1D058","name":"BYZANTINE MUSICAL SYMBOL VAREIA NEO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD058"},118873:{"value":"1D059","name":"BYZANTINE MUSICAL SYMBOL PIASMA NEO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD059"},118874:{"value":"1D05A","name":"BYZANTINE MUSICAL SYMBOL PSIFISTON NEO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD05A"},118875:{"value":"1D05B","name":"BYZANTINE MUSICAL SYMBOL OMALON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD05B"},118876:{"value":"1D05C","name":"BYZANTINE MUSICAL SYMBOL ANTIKENOMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD05C"},118877:{"value":"1D05D","name":"BYZANTINE MUSICAL SYMBOL LYGISMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD05D"},118878:{"value":"1D05E","name":"BYZANTINE MUSICAL SYMBOL PARAKLITIKI NEO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD05E"},118879:{"value":"1D05F","name":"BYZANTINE MUSICAL SYMBOL PARAKALESMA NEO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD05F"},118880:{"value":"1D060","name":"BYZANTINE MUSICAL SYMBOL ETERON PARAKALESMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD060"},118881:{"value":"1D061","name":"BYZANTINE MUSICAL SYMBOL KYLISMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD061"},118882:{"value":"1D062","name":"BYZANTINE MUSICAL SYMBOL ANTIKENOKYLISMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD062"},118883:{"value":"1D063","name":"BYZANTINE MUSICAL SYMBOL TROMIKON NEO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD063"},118884:{"value":"1D064","name":"BYZANTINE MUSICAL SYMBOL EKSTREPTON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD064"},118885:{"value":"1D065","name":"BYZANTINE MUSICAL SYMBOL SYNAGMA NEO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD065"},118886:{"value":"1D066","name":"BYZANTINE MUSICAL SYMBOL SYRMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD066"},118887:{"value":"1D067","name":"BYZANTINE MUSICAL SYMBOL CHOREVMA NEO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD067"},118888:{"value":"1D068","name":"BYZANTINE MUSICAL SYMBOL EPEGERMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD068"},118889:{"value":"1D069","name":"BYZANTINE MUSICAL SYMBOL SEISMA NEO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD069"},118890:{"value":"1D06A","name":"BYZANTINE MUSICAL SYMBOL XIRON KLASMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD06A"},118891:{"value":"1D06B","name":"BYZANTINE MUSICAL SYMBOL TROMIKOPSIFISTON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD06B"},118892:{"value":"1D06C","name":"BYZANTINE MUSICAL SYMBOL PSIFISTOLYGISMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD06C"},118893:{"value":"1D06D","name":"BYZANTINE MUSICAL SYMBOL TROMIKOLYGISMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD06D"},118894:{"value":"1D06E","name":"BYZANTINE MUSICAL SYMBOL TROMIKOPARAKALESMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD06E"},118895:{"value":"1D06F","name":"BYZANTINE MUSICAL SYMBOL PSIFISTOPARAKALESMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD06F"},118896:{"value":"1D070","name":"BYZANTINE MUSICAL SYMBOL TROMIKOSYNAGMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD070"},118897:{"value":"1D071","name":"BYZANTINE MUSICAL SYMBOL PSIFISTOSYNAGMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD071"},118898:{"value":"1D072","name":"BYZANTINE MUSICAL SYMBOL GORGOSYNTHETON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD072"},118899:{"value":"1D073","name":"BYZANTINE MUSICAL SYMBOL ARGOSYNTHETON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD073"},118900:{"value":"1D074","name":"BYZANTINE MUSICAL SYMBOL ETERON ARGOSYNTHETON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD074"},118901:{"value":"1D075","name":"BYZANTINE MUSICAL SYMBOL OYRANISMA NEO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD075"},118902:{"value":"1D076","name":"BYZANTINE MUSICAL SYMBOL THEMATISMOS ESO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD076"},118903:{"value":"1D077","name":"BYZANTINE MUSICAL SYMBOL THEMATISMOS EXO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD077"},118904:{"value":"1D078","name":"BYZANTINE MUSICAL SYMBOL THEMA APLOUN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD078"},118905:{"value":"1D079","name":"BYZANTINE MUSICAL SYMBOL THES KAI APOTHES","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD079"},118906:{"value":"1D07A","name":"BYZANTINE MUSICAL SYMBOL KATAVASMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD07A"},118907:{"value":"1D07B","name":"BYZANTINE MUSICAL SYMBOL ENDOFONON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD07B"},118908:{"value":"1D07C","name":"BYZANTINE MUSICAL SYMBOL YFEN KATO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD07C"},118909:{"value":"1D07D","name":"BYZANTINE MUSICAL SYMBOL YFEN ANO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD07D"},118910:{"value":"1D07E","name":"BYZANTINE MUSICAL SYMBOL STAVROS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD07E"},118911:{"value":"1D07F","name":"BYZANTINE MUSICAL SYMBOL KLASMA ANO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD07F"},118912:{"value":"1D080","name":"BYZANTINE MUSICAL SYMBOL DIPLI ARCHAION","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD080"},118913:{"value":"1D081","name":"BYZANTINE MUSICAL SYMBOL KRATIMA ARCHAION","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD081"},118914:{"value":"1D082","name":"BYZANTINE MUSICAL SYMBOL KRATIMA ALLO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD082"},118915:{"value":"1D083","name":"BYZANTINE MUSICAL SYMBOL KRATIMA NEO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD083"},118916:{"value":"1D084","name":"BYZANTINE MUSICAL SYMBOL APODERMA NEO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD084"},118917:{"value":"1D085","name":"BYZANTINE MUSICAL SYMBOL APLI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD085"},118918:{"value":"1D086","name":"BYZANTINE MUSICAL SYMBOL DIPLI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD086"},118919:{"value":"1D087","name":"BYZANTINE MUSICAL SYMBOL TRIPLI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD087"},118920:{"value":"1D088","name":"BYZANTINE MUSICAL SYMBOL TETRAPLI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD088"},118921:{"value":"1D089","name":"BYZANTINE MUSICAL SYMBOL KORONIS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD089"},118922:{"value":"1D08A","name":"BYZANTINE MUSICAL SYMBOL LEIMMA ENOS CHRONOU","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD08A"},118923:{"value":"1D08B","name":"BYZANTINE MUSICAL SYMBOL LEIMMA DYO CHRONON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD08B"},118924:{"value":"1D08C","name":"BYZANTINE MUSICAL SYMBOL LEIMMA TRION CHRONON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD08C"},118925:{"value":"1D08D","name":"BYZANTINE MUSICAL SYMBOL LEIMMA TESSARON CHRONON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD08D"},118926:{"value":"1D08E","name":"BYZANTINE MUSICAL SYMBOL LEIMMA IMISEOS CHRONOU","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD08E"},118927:{"value":"1D08F","name":"BYZANTINE MUSICAL SYMBOL GORGON NEO ANO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD08F"},118928:{"value":"1D090","name":"BYZANTINE MUSICAL SYMBOL GORGON PARESTIGMENON ARISTERA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD090"},118929:{"value":"1D091","name":"BYZANTINE MUSICAL SYMBOL GORGON PARESTIGMENON DEXIA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD091"},118930:{"value":"1D092","name":"BYZANTINE MUSICAL SYMBOL DIGORGON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD092"},118931:{"value":"1D093","name":"BYZANTINE MUSICAL SYMBOL DIGORGON PARESTIGMENON ARISTERA KATO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD093"},118932:{"value":"1D094","name":"BYZANTINE MUSICAL SYMBOL DIGORGON PARESTIGMENON ARISTERA ANO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD094"},118933:{"value":"1D095","name":"BYZANTINE MUSICAL SYMBOL DIGORGON PARESTIGMENON DEXIA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD095"},118934:{"value":"1D096","name":"BYZANTINE MUSICAL SYMBOL TRIGORGON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD096"},118935:{"value":"1D097","name":"BYZANTINE MUSICAL SYMBOL ARGON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD097"},118936:{"value":"1D098","name":"BYZANTINE MUSICAL SYMBOL IMIDIARGON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD098"},118937:{"value":"1D099","name":"BYZANTINE MUSICAL SYMBOL DIARGON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD099"},118938:{"value":"1D09A","name":"BYZANTINE MUSICAL SYMBOL AGOGI POLI ARGI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD09A"},118939:{"value":"1D09B","name":"BYZANTINE MUSICAL SYMBOL AGOGI ARGOTERI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD09B"},118940:{"value":"1D09C","name":"BYZANTINE MUSICAL SYMBOL AGOGI ARGI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD09C"},118941:{"value":"1D09D","name":"BYZANTINE MUSICAL SYMBOL AGOGI METRIA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD09D"},118942:{"value":"1D09E","name":"BYZANTINE MUSICAL SYMBOL AGOGI MESI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD09E"},118943:{"value":"1D09F","name":"BYZANTINE MUSICAL SYMBOL AGOGI GORGI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD09F"},118944:{"value":"1D0A0","name":"BYZANTINE MUSICAL SYMBOL AGOGI GORGOTERI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0A0"},118945:{"value":"1D0A1","name":"BYZANTINE MUSICAL SYMBOL AGOGI POLI GORGI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0A1"},118946:{"value":"1D0A2","name":"BYZANTINE MUSICAL SYMBOL MARTYRIA PROTOS ICHOS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0A2"},118947:{"value":"1D0A3","name":"BYZANTINE MUSICAL SYMBOL MARTYRIA ALLI PROTOS ICHOS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0A3"},118948:{"value":"1D0A4","name":"BYZANTINE MUSICAL SYMBOL MARTYRIA DEYTEROS ICHOS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0A4"},118949:{"value":"1D0A5","name":"BYZANTINE MUSICAL SYMBOL MARTYRIA ALLI DEYTEROS ICHOS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0A5"},118950:{"value":"1D0A6","name":"BYZANTINE MUSICAL SYMBOL MARTYRIA TRITOS ICHOS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0A6"},118951:{"value":"1D0A7","name":"BYZANTINE MUSICAL SYMBOL MARTYRIA TRIFONIAS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0A7"},118952:{"value":"1D0A8","name":"BYZANTINE MUSICAL SYMBOL MARTYRIA TETARTOS ICHOS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0A8"},118953:{"value":"1D0A9","name":"BYZANTINE MUSICAL SYMBOL MARTYRIA TETARTOS LEGETOS ICHOS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0A9"},118954:{"value":"1D0AA","name":"BYZANTINE MUSICAL SYMBOL MARTYRIA LEGETOS ICHOS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0AA"},118955:{"value":"1D0AB","name":"BYZANTINE MUSICAL SYMBOL MARTYRIA PLAGIOS ICHOS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0AB"},118956:{"value":"1D0AC","name":"BYZANTINE MUSICAL SYMBOL ISAKIA TELOUS ICHIMATOS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0AC"},118957:{"value":"1D0AD","name":"BYZANTINE MUSICAL SYMBOL APOSTROFOI TELOUS ICHIMATOS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0AD"},118958:{"value":"1D0AE","name":"BYZANTINE MUSICAL SYMBOL FANEROSIS TETRAFONIAS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0AE"},118959:{"value":"1D0AF","name":"BYZANTINE MUSICAL SYMBOL FANEROSIS MONOFONIAS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0AF"},118960:{"value":"1D0B0","name":"BYZANTINE MUSICAL SYMBOL FANEROSIS DIFONIAS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0B0"},118961:{"value":"1D0B1","name":"BYZANTINE MUSICAL SYMBOL MARTYRIA VARYS ICHOS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0B1"},118962:{"value":"1D0B2","name":"BYZANTINE MUSICAL SYMBOL MARTYRIA PROTOVARYS ICHOS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0B2"},118963:{"value":"1D0B3","name":"BYZANTINE MUSICAL SYMBOL MARTYRIA PLAGIOS TETARTOS ICHOS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0B3"},118964:{"value":"1D0B4","name":"BYZANTINE MUSICAL SYMBOL GORTHMIKON N APLOUN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0B4"},118965:{"value":"1D0B5","name":"BYZANTINE MUSICAL SYMBOL GORTHMIKON N DIPLOUN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0B5"},118966:{"value":"1D0B6","name":"BYZANTINE MUSICAL SYMBOL ENARXIS KAI FTHORA VOU","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0B6"},118967:{"value":"1D0B7","name":"BYZANTINE MUSICAL SYMBOL IMIFONON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0B7"},118968:{"value":"1D0B8","name":"BYZANTINE MUSICAL SYMBOL IMIFTHORON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0B8"},118969:{"value":"1D0B9","name":"BYZANTINE MUSICAL SYMBOL FTHORA ARCHAION DEYTEROU ICHOU","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0B9"},118970:{"value":"1D0BA","name":"BYZANTINE MUSICAL SYMBOL FTHORA DIATONIKI PA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0BA"},118971:{"value":"1D0BB","name":"BYZANTINE MUSICAL SYMBOL FTHORA DIATONIKI NANA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0BB"},118972:{"value":"1D0BC","name":"BYZANTINE MUSICAL SYMBOL FTHORA NAOS ICHOS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0BC"},118973:{"value":"1D0BD","name":"BYZANTINE MUSICAL SYMBOL FTHORA DIATONIKI DI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0BD"},118974:{"value":"1D0BE","name":"BYZANTINE MUSICAL SYMBOL FTHORA SKLIRON DIATONON DI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0BE"},118975:{"value":"1D0BF","name":"BYZANTINE MUSICAL SYMBOL FTHORA DIATONIKI KE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0BF"},118976:{"value":"1D0C0","name":"BYZANTINE MUSICAL SYMBOL FTHORA DIATONIKI ZO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0C0"},118977:{"value":"1D0C1","name":"BYZANTINE MUSICAL SYMBOL FTHORA DIATONIKI NI KATO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0C1"},118978:{"value":"1D0C2","name":"BYZANTINE MUSICAL SYMBOL FTHORA DIATONIKI NI ANO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0C2"},118979:{"value":"1D0C3","name":"BYZANTINE MUSICAL SYMBOL FTHORA MALAKON CHROMA DIFONIAS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0C3"},118980:{"value":"1D0C4","name":"BYZANTINE MUSICAL SYMBOL FTHORA MALAKON CHROMA MONOFONIAS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0C4"},118981:{"value":"1D0C5","name":"BYZANTINE MUSICAL SYMBOL FHTORA SKLIRON CHROMA VASIS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0C5"},118982:{"value":"1D0C6","name":"BYZANTINE MUSICAL SYMBOL FTHORA SKLIRON CHROMA SYNAFI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0C6"},118983:{"value":"1D0C7","name":"BYZANTINE MUSICAL SYMBOL FTHORA NENANO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0C7"},118984:{"value":"1D0C8","name":"BYZANTINE MUSICAL SYMBOL CHROA ZYGOS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0C8"},118985:{"value":"1D0C9","name":"BYZANTINE MUSICAL SYMBOL CHROA KLITON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0C9"},118986:{"value":"1D0CA","name":"BYZANTINE MUSICAL SYMBOL CHROA SPATHI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0CA"},118987:{"value":"1D0CB","name":"BYZANTINE MUSICAL SYMBOL FTHORA I YFESIS TETARTIMORION","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0CB"},118988:{"value":"1D0CC","name":"BYZANTINE MUSICAL SYMBOL FTHORA ENARMONIOS ANTIFONIA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0CC"},118989:{"value":"1D0CD","name":"BYZANTINE MUSICAL SYMBOL YFESIS TRITIMORION","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0CD"},118990:{"value":"1D0CE","name":"BYZANTINE MUSICAL SYMBOL DIESIS TRITIMORION","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0CE"},118991:{"value":"1D0CF","name":"BYZANTINE MUSICAL SYMBOL DIESIS TETARTIMORION","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0CF"},118992:{"value":"1D0D0","name":"BYZANTINE MUSICAL SYMBOL DIESIS APLI DYO DODEKATA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0D0"},118993:{"value":"1D0D1","name":"BYZANTINE MUSICAL SYMBOL DIESIS MONOGRAMMOS TESSERA DODEKATA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0D1"},118994:{"value":"1D0D2","name":"BYZANTINE MUSICAL SYMBOL DIESIS DIGRAMMOS EX DODEKATA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0D2"},118995:{"value":"1D0D3","name":"BYZANTINE MUSICAL SYMBOL DIESIS TRIGRAMMOS OKTO DODEKATA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0D3"},118996:{"value":"1D0D4","name":"BYZANTINE MUSICAL SYMBOL YFESIS APLI DYO DODEKATA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0D4"},118997:{"value":"1D0D5","name":"BYZANTINE MUSICAL SYMBOL YFESIS MONOGRAMMOS TESSERA DODEKATA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0D5"},118998:{"value":"1D0D6","name":"BYZANTINE MUSICAL SYMBOL YFESIS DIGRAMMOS EX DODEKATA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0D6"},118999:{"value":"1D0D7","name":"BYZANTINE MUSICAL SYMBOL YFESIS TRIGRAMMOS OKTO DODEKATA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0D7"},119000:{"value":"1D0D8","name":"BYZANTINE MUSICAL SYMBOL GENIKI DIESIS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0D8"},119001:{"value":"1D0D9","name":"BYZANTINE MUSICAL SYMBOL GENIKI YFESIS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0D9"},119002:{"value":"1D0DA","name":"BYZANTINE MUSICAL SYMBOL DIASTOLI APLI MIKRI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0DA"},119003:{"value":"1D0DB","name":"BYZANTINE MUSICAL SYMBOL DIASTOLI APLI MEGALI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0DB"},119004:{"value":"1D0DC","name":"BYZANTINE MUSICAL SYMBOL DIASTOLI DIPLI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0DC"},119005:{"value":"1D0DD","name":"BYZANTINE MUSICAL SYMBOL DIASTOLI THESEOS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0DD"},119006:{"value":"1D0DE","name":"BYZANTINE MUSICAL SYMBOL SIMANSIS THESEOS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0DE"},119007:{"value":"1D0DF","name":"BYZANTINE MUSICAL SYMBOL SIMANSIS THESEOS DISIMOU","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0DF"},119008:{"value":"1D0E0","name":"BYZANTINE MUSICAL SYMBOL SIMANSIS THESEOS TRISIMOU","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0E0"},119009:{"value":"1D0E1","name":"BYZANTINE MUSICAL SYMBOL SIMANSIS THESEOS TETRASIMOU","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0E1"},119010:{"value":"1D0E2","name":"BYZANTINE MUSICAL SYMBOL SIMANSIS ARSEOS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0E2"},119011:{"value":"1D0E3","name":"BYZANTINE MUSICAL SYMBOL SIMANSIS ARSEOS DISIMOU","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0E3"},119012:{"value":"1D0E4","name":"BYZANTINE MUSICAL SYMBOL SIMANSIS ARSEOS TRISIMOU","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0E4"},119013:{"value":"1D0E5","name":"BYZANTINE MUSICAL SYMBOL SIMANSIS ARSEOS TETRASIMOU","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0E5"},119014:{"value":"1D0E6","name":"BYZANTINE MUSICAL SYMBOL DIGRAMMA GG","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0E6"},119015:{"value":"1D0E7","name":"BYZANTINE MUSICAL SYMBOL DIFTOGGOS OU","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0E7"},119016:{"value":"1D0E8","name":"BYZANTINE MUSICAL SYMBOL STIGMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0E8"},119017:{"value":"1D0E9","name":"BYZANTINE MUSICAL SYMBOL ARKTIKO PA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0E9"},119018:{"value":"1D0EA","name":"BYZANTINE MUSICAL SYMBOL ARKTIKO VOU","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0EA"},119019:{"value":"1D0EB","name":"BYZANTINE MUSICAL SYMBOL ARKTIKO GA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0EB"},119020:{"value":"1D0EC","name":"BYZANTINE MUSICAL SYMBOL ARKTIKO DI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0EC"},119021:{"value":"1D0ED","name":"BYZANTINE MUSICAL SYMBOL ARKTIKO KE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0ED"},119022:{"value":"1D0EE","name":"BYZANTINE MUSICAL SYMBOL ARKTIKO ZO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0EE"},119023:{"value":"1D0EF","name":"BYZANTINE MUSICAL SYMBOL ARKTIKO NI","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0EF"},119024:{"value":"1D0F0","name":"BYZANTINE MUSICAL SYMBOL KENTIMATA NEO MESO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0F0"},119025:{"value":"1D0F1","name":"BYZANTINE MUSICAL SYMBOL KENTIMA NEO MESO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0F1"},119026:{"value":"1D0F2","name":"BYZANTINE MUSICAL SYMBOL KENTIMATA NEO KATO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0F2"},119027:{"value":"1D0F3","name":"BYZANTINE MUSICAL SYMBOL KENTIMA NEO KATO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0F3"},119028:{"value":"1D0F4","name":"BYZANTINE MUSICAL SYMBOL KLASMA KATO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0F4"},119029:{"value":"1D0F5","name":"BYZANTINE MUSICAL SYMBOL GORGON NEO KATO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD0F5"},119040:{"value":"1D100","name":"MUSICAL SYMBOL SINGLE BARLINE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD100"},119041:{"value":"1D101","name":"MUSICAL SYMBOL DOUBLE BARLINE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD101"},119042:{"value":"1D102","name":"MUSICAL SYMBOL FINAL BARLINE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD102"},119043:{"value":"1D103","name":"MUSICAL SYMBOL REVERSE FINAL BARLINE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD103"},119044:{"value":"1D104","name":"MUSICAL SYMBOL DASHED BARLINE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD104"},119045:{"value":"1D105","name":"MUSICAL SYMBOL SHORT BARLINE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD105"},119046:{"value":"1D106","name":"MUSICAL SYMBOL LEFT REPEAT SIGN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD106"},119047:{"value":"1D107","name":"MUSICAL SYMBOL RIGHT REPEAT SIGN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD107"},119048:{"value":"1D108","name":"MUSICAL SYMBOL REPEAT DOTS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD108"},119049:{"value":"1D109","name":"MUSICAL SYMBOL DAL SEGNO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD109"},119050:{"value":"1D10A","name":"MUSICAL SYMBOL DA CAPO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD10A"},119051:{"value":"1D10B","name":"MUSICAL SYMBOL SEGNO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD10B"},119052:{"value":"1D10C","name":"MUSICAL SYMBOL CODA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD10C"},119053:{"value":"1D10D","name":"MUSICAL SYMBOL REPEATED FIGURE-1","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD10D"},119054:{"value":"1D10E","name":"MUSICAL SYMBOL REPEATED FIGURE-2","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD10E"},119055:{"value":"1D10F","name":"MUSICAL SYMBOL REPEATED FIGURE-3","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD10F"},119056:{"value":"1D110","name":"MUSICAL SYMBOL FERMATA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD110"},119057:{"value":"1D111","name":"MUSICAL SYMBOL FERMATA BELOW","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD111"},119058:{"value":"1D112","name":"MUSICAL SYMBOL BREATH MARK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD112"},119059:{"value":"1D113","name":"MUSICAL SYMBOL CAESURA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD113"},119060:{"value":"1D114","name":"MUSICAL SYMBOL BRACE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD114"},119061:{"value":"1D115","name":"MUSICAL SYMBOL BRACKET","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD115"},119062:{"value":"1D116","name":"MUSICAL SYMBOL ONE-LINE STAFF","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD116"},119063:{"value":"1D117","name":"MUSICAL SYMBOL TWO-LINE STAFF","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD117"},119064:{"value":"1D118","name":"MUSICAL SYMBOL THREE-LINE STAFF","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD118"},119065:{"value":"1D119","name":"MUSICAL SYMBOL FOUR-LINE STAFF","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD119"},119066:{"value":"1D11A","name":"MUSICAL SYMBOL FIVE-LINE STAFF","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD11A"},119067:{"value":"1D11B","name":"MUSICAL SYMBOL SIX-LINE STAFF","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD11B"},119068:{"value":"1D11C","name":"MUSICAL SYMBOL SIX-STRING FRETBOARD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD11C"},119069:{"value":"1D11D","name":"MUSICAL SYMBOL FOUR-STRING FRETBOARD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD11D"},119070:{"value":"1D11E","name":"MUSICAL SYMBOL G CLEF","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD11E"},119071:{"value":"1D11F","name":"MUSICAL SYMBOL G CLEF OTTAVA ALTA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD11F"},119072:{"value":"1D120","name":"MUSICAL SYMBOL G CLEF OTTAVA BASSA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD120"},119073:{"value":"1D121","name":"MUSICAL SYMBOL C CLEF","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD121"},119074:{"value":"1D122","name":"MUSICAL SYMBOL F CLEF","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD122"},119075:{"value":"1D123","name":"MUSICAL SYMBOL F CLEF OTTAVA ALTA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD123"},119076:{"value":"1D124","name":"MUSICAL SYMBOL F CLEF OTTAVA BASSA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD124"},119077:{"value":"1D125","name":"MUSICAL SYMBOL DRUM CLEF-1","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD125"},119078:{"value":"1D126","name":"MUSICAL SYMBOL DRUM CLEF-2","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD126"},119081:{"value":"1D129","name":"MUSICAL SYMBOL MULTIPLE MEASURE REST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD129"},119082:{"value":"1D12A","name":"MUSICAL SYMBOL DOUBLE SHARP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD12A"},119083:{"value":"1D12B","name":"MUSICAL SYMBOL DOUBLE FLAT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD12B"},119084:{"value":"1D12C","name":"MUSICAL SYMBOL FLAT UP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD12C"},119085:{"value":"1D12D","name":"MUSICAL SYMBOL FLAT DOWN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD12D"},119086:{"value":"1D12E","name":"MUSICAL SYMBOL NATURAL UP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD12E"},119087:{"value":"1D12F","name":"MUSICAL SYMBOL NATURAL DOWN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD12F"},119088:{"value":"1D130","name":"MUSICAL SYMBOL SHARP UP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD130"},119089:{"value":"1D131","name":"MUSICAL SYMBOL SHARP DOWN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD131"},119090:{"value":"1D132","name":"MUSICAL SYMBOL QUARTER TONE SHARP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD132"},119091:{"value":"1D133","name":"MUSICAL SYMBOL QUARTER TONE FLAT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD133"},119092:{"value":"1D134","name":"MUSICAL SYMBOL COMMON TIME","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD134"},119093:{"value":"1D135","name":"MUSICAL SYMBOL CUT TIME","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD135"},119094:{"value":"1D136","name":"MUSICAL SYMBOL OTTAVA ALTA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD136"},119095:{"value":"1D137","name":"MUSICAL SYMBOL OTTAVA BASSA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD137"},119096:{"value":"1D138","name":"MUSICAL SYMBOL QUINDICESIMA ALTA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD138"},119097:{"value":"1D139","name":"MUSICAL SYMBOL QUINDICESIMA BASSA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD139"},119098:{"value":"1D13A","name":"MUSICAL SYMBOL MULTI REST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD13A"},119099:{"value":"1D13B","name":"MUSICAL SYMBOL WHOLE REST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD13B"},119100:{"value":"1D13C","name":"MUSICAL SYMBOL HALF REST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD13C"},119101:{"value":"1D13D","name":"MUSICAL SYMBOL QUARTER REST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD13D"},119102:{"value":"1D13E","name":"MUSICAL SYMBOL EIGHTH REST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD13E"},119103:{"value":"1D13F","name":"MUSICAL SYMBOL SIXTEENTH REST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD13F"},119104:{"value":"1D140","name":"MUSICAL SYMBOL THIRTY-SECOND REST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD140"},119105:{"value":"1D141","name":"MUSICAL SYMBOL SIXTY-FOURTH REST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD141"},119106:{"value":"1D142","name":"MUSICAL SYMBOL ONE HUNDRED TWENTY-EIGHTH REST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD142"},119107:{"value":"1D143","name":"MUSICAL SYMBOL X NOTEHEAD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD143"},119108:{"value":"1D144","name":"MUSICAL SYMBOL PLUS NOTEHEAD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD144"},119109:{"value":"1D145","name":"MUSICAL SYMBOL CIRCLE X NOTEHEAD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD145"},119110:{"value":"1D146","name":"MUSICAL SYMBOL SQUARE NOTEHEAD WHITE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD146"},119111:{"value":"1D147","name":"MUSICAL SYMBOL SQUARE NOTEHEAD BLACK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD147"},119112:{"value":"1D148","name":"MUSICAL SYMBOL TRIANGLE NOTEHEAD UP WHITE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD148"},119113:{"value":"1D149","name":"MUSICAL SYMBOL TRIANGLE NOTEHEAD UP BLACK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD149"},119114:{"value":"1D14A","name":"MUSICAL SYMBOL TRIANGLE NOTEHEAD LEFT WHITE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD14A"},119115:{"value":"1D14B","name":"MUSICAL SYMBOL TRIANGLE NOTEHEAD LEFT BLACK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD14B"},119116:{"value":"1D14C","name":"MUSICAL SYMBOL TRIANGLE NOTEHEAD RIGHT WHITE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD14C"},119117:{"value":"1D14D","name":"MUSICAL SYMBOL TRIANGLE NOTEHEAD RIGHT BLACK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD14D"},119118:{"value":"1D14E","name":"MUSICAL SYMBOL TRIANGLE NOTEHEAD DOWN WHITE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD14E"},119119:{"value":"1D14F","name":"MUSICAL SYMBOL TRIANGLE NOTEHEAD DOWN BLACK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD14F"},119120:{"value":"1D150","name":"MUSICAL SYMBOL TRIANGLE NOTEHEAD UP RIGHT WHITE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD150"},119121:{"value":"1D151","name":"MUSICAL SYMBOL TRIANGLE NOTEHEAD UP RIGHT BLACK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD151"},119122:{"value":"1D152","name":"MUSICAL SYMBOL MOON NOTEHEAD WHITE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD152"},119123:{"value":"1D153","name":"MUSICAL SYMBOL MOON NOTEHEAD BLACK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD153"},119124:{"value":"1D154","name":"MUSICAL SYMBOL TRIANGLE-ROUND NOTEHEAD DOWN WHITE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD154"},119125:{"value":"1D155","name":"MUSICAL SYMBOL TRIANGLE-ROUND NOTEHEAD DOWN BLACK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD155"},119126:{"value":"1D156","name":"MUSICAL SYMBOL PARENTHESIS NOTEHEAD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD156"},119127:{"value":"1D157","name":"MUSICAL SYMBOL VOID NOTEHEAD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD157"},119128:{"value":"1D158","name":"MUSICAL SYMBOL NOTEHEAD BLACK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD158"},119129:{"value":"1D159","name":"MUSICAL SYMBOL NULL NOTEHEAD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD159"},119130:{"value":"1D15A","name":"MUSICAL SYMBOL CLUSTER NOTEHEAD WHITE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD15A"},119131:{"value":"1D15B","name":"MUSICAL SYMBOL CLUSTER NOTEHEAD BLACK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD15B"},119132:{"value":"1D15C","name":"MUSICAL SYMBOL BREVE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD15C"},119133:{"value":"1D15D","name":"MUSICAL SYMBOL WHOLE NOTE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD15D"},119134:{"value":"1D15E","name":"MUSICAL SYMBOL HALF NOTE","category":"So","class":"0","bidirectional_category":"L","mapping":"1D157 1D165","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD15E"},119135:{"value":"1D15F","name":"MUSICAL SYMBOL QUARTER NOTE","category":"So","class":"0","bidirectional_category":"L","mapping":"1D158 1D165","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD15F"},119136:{"value":"1D160","name":"MUSICAL SYMBOL EIGHTH NOTE","category":"So","class":"0","bidirectional_category":"L","mapping":"1D15F 1D16E","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD160"},119137:{"value":"1D161","name":"MUSICAL SYMBOL SIXTEENTH NOTE","category":"So","class":"0","bidirectional_category":"L","mapping":"1D15F 1D16F","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD161"},119138:{"value":"1D162","name":"MUSICAL SYMBOL THIRTY-SECOND NOTE","category":"So","class":"0","bidirectional_category":"L","mapping":"1D15F 1D170","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD162"},119139:{"value":"1D163","name":"MUSICAL SYMBOL SIXTY-FOURTH NOTE","category":"So","class":"0","bidirectional_category":"L","mapping":"1D15F 1D171","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD163"},119140:{"value":"1D164","name":"MUSICAL SYMBOL ONE HUNDRED TWENTY-EIGHTH NOTE","category":"So","class":"0","bidirectional_category":"L","mapping":"1D15F 1D172","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD164"},119146:{"value":"1D16A","name":"MUSICAL SYMBOL FINGERED TREMOLO-1","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD16A"},119147:{"value":"1D16B","name":"MUSICAL SYMBOL FINGERED TREMOLO-2","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD16B"},119148:{"value":"1D16C","name":"MUSICAL SYMBOL FINGERED TREMOLO-3","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD16C"},119171:{"value":"1D183","name":"MUSICAL SYMBOL ARPEGGIATO UP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD183"},119172:{"value":"1D184","name":"MUSICAL SYMBOL ARPEGGIATO DOWN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD184"},119180:{"value":"1D18C","name":"MUSICAL SYMBOL RINFORZANDO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD18C"},119181:{"value":"1D18D","name":"MUSICAL SYMBOL SUBITO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD18D"},119182:{"value":"1D18E","name":"MUSICAL SYMBOL Z","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD18E"},119183:{"value":"1D18F","name":"MUSICAL SYMBOL PIANO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD18F"},119184:{"value":"1D190","name":"MUSICAL SYMBOL MEZZO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD190"},119185:{"value":"1D191","name":"MUSICAL SYMBOL FORTE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD191"},119186:{"value":"1D192","name":"MUSICAL SYMBOL CRESCENDO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD192"},119187:{"value":"1D193","name":"MUSICAL SYMBOL DECRESCENDO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD193"},119188:{"value":"1D194","name":"MUSICAL SYMBOL GRACE NOTE SLASH","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD194"},119189:{"value":"1D195","name":"MUSICAL SYMBOL GRACE NOTE NO SLASH","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD195"},119190:{"value":"1D196","name":"MUSICAL SYMBOL TR","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD196"},119191:{"value":"1D197","name":"MUSICAL SYMBOL TURN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD197"},119192:{"value":"1D198","name":"MUSICAL SYMBOL INVERTED TURN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD198"},119193:{"value":"1D199","name":"MUSICAL SYMBOL TURN SLASH","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD199"},119194:{"value":"1D19A","name":"MUSICAL SYMBOL TURN UP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD19A"},119195:{"value":"1D19B","name":"MUSICAL SYMBOL ORNAMENT STROKE-1","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD19B"},119196:{"value":"1D19C","name":"MUSICAL SYMBOL ORNAMENT STROKE-2","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD19C"},119197:{"value":"1D19D","name":"MUSICAL SYMBOL ORNAMENT STROKE-3","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD19D"},119198:{"value":"1D19E","name":"MUSICAL SYMBOL ORNAMENT STROKE-4","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD19E"},119199:{"value":"1D19F","name":"MUSICAL SYMBOL ORNAMENT STROKE-5","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD19F"},119200:{"value":"1D1A0","name":"MUSICAL SYMBOL ORNAMENT STROKE-6","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1A0"},119201:{"value":"1D1A1","name":"MUSICAL SYMBOL ORNAMENT STROKE-7","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1A1"},119202:{"value":"1D1A2","name":"MUSICAL SYMBOL ORNAMENT STROKE-8","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1A2"},119203:{"value":"1D1A3","name":"MUSICAL SYMBOL ORNAMENT STROKE-9","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1A3"},119204:{"value":"1D1A4","name":"MUSICAL SYMBOL ORNAMENT STROKE-10","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1A4"},119205:{"value":"1D1A5","name":"MUSICAL SYMBOL ORNAMENT STROKE-11","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1A5"},119206:{"value":"1D1A6","name":"MUSICAL SYMBOL HAUPTSTIMME","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1A6"},119207:{"value":"1D1A7","name":"MUSICAL SYMBOL NEBENSTIMME","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1A7"},119208:{"value":"1D1A8","name":"MUSICAL SYMBOL END OF STIMME","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1A8"},119209:{"value":"1D1A9","name":"MUSICAL SYMBOL DEGREE SLASH","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1A9"},119214:{"value":"1D1AE","name":"MUSICAL SYMBOL PEDAL MARK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1AE"},119215:{"value":"1D1AF","name":"MUSICAL SYMBOL PEDAL UP MARK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1AF"},119216:{"value":"1D1B0","name":"MUSICAL SYMBOL HALF PEDAL MARK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1B0"},119217:{"value":"1D1B1","name":"MUSICAL SYMBOL GLISSANDO UP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1B1"},119218:{"value":"1D1B2","name":"MUSICAL SYMBOL GLISSANDO DOWN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1B2"},119219:{"value":"1D1B3","name":"MUSICAL SYMBOL WITH FINGERNAILS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1B3"},119220:{"value":"1D1B4","name":"MUSICAL SYMBOL DAMP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1B4"},119221:{"value":"1D1B5","name":"MUSICAL SYMBOL DAMP ALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1B5"},119222:{"value":"1D1B6","name":"MUSICAL SYMBOL MAXIMA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1B6"},119223:{"value":"1D1B7","name":"MUSICAL SYMBOL LONGA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1B7"},119224:{"value":"1D1B8","name":"MUSICAL SYMBOL BREVIS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1B8"},119225:{"value":"1D1B9","name":"MUSICAL SYMBOL SEMIBREVIS WHITE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1B9"},119226:{"value":"1D1BA","name":"MUSICAL SYMBOL SEMIBREVIS BLACK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1BA"},119227:{"value":"1D1BB","name":"MUSICAL SYMBOL MINIMA","category":"So","class":"0","bidirectional_category":"L","mapping":"1D1B9 1D165","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1BB"},119228:{"value":"1D1BC","name":"MUSICAL SYMBOL MINIMA BLACK","category":"So","class":"0","bidirectional_category":"L","mapping":"1D1BA 1D165","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1BC"},119229:{"value":"1D1BD","name":"MUSICAL SYMBOL SEMIMINIMA WHITE","category":"So","class":"0","bidirectional_category":"L","mapping":"1D1BB 1D16E","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1BD"},119230:{"value":"1D1BE","name":"MUSICAL SYMBOL SEMIMINIMA BLACK","category":"So","class":"0","bidirectional_category":"L","mapping":"1D1BC 1D16E","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1BE"},119231:{"value":"1D1BF","name":"MUSICAL SYMBOL FUSA WHITE","category":"So","class":"0","bidirectional_category":"L","mapping":"1D1BB 1D16F","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1BF"},119232:{"value":"1D1C0","name":"MUSICAL SYMBOL FUSA BLACK","category":"So","class":"0","bidirectional_category":"L","mapping":"1D1BC 1D16F","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1C0"},119233:{"value":"1D1C1","name":"MUSICAL SYMBOL LONGA PERFECTA REST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1C1"},119234:{"value":"1D1C2","name":"MUSICAL SYMBOL LONGA IMPERFECTA REST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1C2"},119235:{"value":"1D1C3","name":"MUSICAL SYMBOL BREVIS REST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1C3"},119236:{"value":"1D1C4","name":"MUSICAL SYMBOL SEMIBREVIS REST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1C4"},119237:{"value":"1D1C5","name":"MUSICAL SYMBOL MINIMA REST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1C5"},119238:{"value":"1D1C6","name":"MUSICAL SYMBOL SEMIMINIMA REST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1C6"},119239:{"value":"1D1C7","name":"MUSICAL SYMBOL TEMPUS PERFECTUM CUM PROLATIONE PERFECTA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1C7"},119240:{"value":"1D1C8","name":"MUSICAL SYMBOL TEMPUS PERFECTUM CUM PROLATIONE IMPERFECTA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1C8"},119241:{"value":"1D1C9","name":"MUSICAL SYMBOL TEMPUS PERFECTUM CUM PROLATIONE PERFECTA DIMINUTION-1","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1C9"},119242:{"value":"1D1CA","name":"MUSICAL SYMBOL TEMPUS IMPERFECTUM CUM PROLATIONE PERFECTA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1CA"},119243:{"value":"1D1CB","name":"MUSICAL SYMBOL TEMPUS IMPERFECTUM CUM PROLATIONE IMPERFECTA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1CB"},119244:{"value":"1D1CC","name":"MUSICAL SYMBOL TEMPUS IMPERFECTUM CUM PROLATIONE IMPERFECTA DIMINUTION-1","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1CC"},119245:{"value":"1D1CD","name":"MUSICAL SYMBOL TEMPUS IMPERFECTUM CUM PROLATIONE IMPERFECTA DIMINUTION-2","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1CD"},119246:{"value":"1D1CE","name":"MUSICAL SYMBOL TEMPUS IMPERFECTUM CUM PROLATIONE IMPERFECTA DIMINUTION-3","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1CE"},119247:{"value":"1D1CF","name":"MUSICAL SYMBOL CROIX","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1CF"},119248:{"value":"1D1D0","name":"MUSICAL SYMBOL GREGORIAN C CLEF","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1D0"},119249:{"value":"1D1D1","name":"MUSICAL SYMBOL GREGORIAN F CLEF","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1D1"},119250:{"value":"1D1D2","name":"MUSICAL SYMBOL SQUARE B","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1D2"},119251:{"value":"1D1D3","name":"MUSICAL SYMBOL VIRGA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1D3"},119252:{"value":"1D1D4","name":"MUSICAL SYMBOL PODATUS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1D4"},119253:{"value":"1D1D5","name":"MUSICAL SYMBOL CLIVIS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1D5"},119254:{"value":"1D1D6","name":"MUSICAL SYMBOL SCANDICUS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1D6"},119255:{"value":"1D1D7","name":"MUSICAL SYMBOL CLIMACUS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1D7"},119256:{"value":"1D1D8","name":"MUSICAL SYMBOL TORCULUS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1D8"},119257:{"value":"1D1D9","name":"MUSICAL SYMBOL PORRECTUS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1D9"},119258:{"value":"1D1DA","name":"MUSICAL SYMBOL PORRECTUS FLEXUS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1DA"},119259:{"value":"1D1DB","name":"MUSICAL SYMBOL SCANDICUS FLEXUS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1DB"},119260:{"value":"1D1DC","name":"MUSICAL SYMBOL TORCULUS RESUPINUS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1DC"},119261:{"value":"1D1DD","name":"MUSICAL SYMBOL PES SUBPUNCTIS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1DD"},119262:{"value":"1D1DE","name":"MUSICAL SYMBOL KIEVAN C CLEF","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1DE"},119263:{"value":"1D1DF","name":"MUSICAL SYMBOL KIEVAN END OF PIECE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1DF"},119264:{"value":"1D1E0","name":"MUSICAL SYMBOL KIEVAN FINAL NOTE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1E0"},119265:{"value":"1D1E1","name":"MUSICAL SYMBOL KIEVAN RECITATIVE MARK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1E1"},119266:{"value":"1D1E2","name":"MUSICAL SYMBOL KIEVAN WHOLE NOTE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1E2"},119267:{"value":"1D1E3","name":"MUSICAL SYMBOL KIEVAN HALF NOTE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1E3"},119268:{"value":"1D1E4","name":"MUSICAL SYMBOL KIEVAN QUARTER NOTE STEM DOWN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1E4"},119269:{"value":"1D1E5","name":"MUSICAL SYMBOL KIEVAN QUARTER NOTE STEM UP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1E5"},119270:{"value":"1D1E6","name":"MUSICAL SYMBOL KIEVAN EIGHTH NOTE STEM DOWN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1E6"},119271:{"value":"1D1E7","name":"MUSICAL SYMBOL KIEVAN EIGHTH NOTE STEM UP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1E7"},119272:{"value":"1D1E8","name":"MUSICAL SYMBOL KIEVAN FLAT SIGN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD1E8"},119296:{"value":"1D200","name":"GREEK VOCAL NOTATION SYMBOL-1","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD200"},119297:{"value":"1D201","name":"GREEK VOCAL NOTATION SYMBOL-2","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD201"},119298:{"value":"1D202","name":"GREEK VOCAL NOTATION SYMBOL-3","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD202"},119299:{"value":"1D203","name":"GREEK VOCAL NOTATION SYMBOL-4","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD203"},119300:{"value":"1D204","name":"GREEK VOCAL NOTATION SYMBOL-5","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD204"},119301:{"value":"1D205","name":"GREEK VOCAL NOTATION SYMBOL-6","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD205"},119302:{"value":"1D206","name":"GREEK VOCAL NOTATION SYMBOL-7","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD206"},119303:{"value":"1D207","name":"GREEK VOCAL NOTATION SYMBOL-8","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD207"},119304:{"value":"1D208","name":"GREEK VOCAL NOTATION SYMBOL-9","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD208"},119305:{"value":"1D209","name":"GREEK VOCAL NOTATION SYMBOL-10","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD209"},119306:{"value":"1D20A","name":"GREEK VOCAL NOTATION SYMBOL-11","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD20A"},119307:{"value":"1D20B","name":"GREEK VOCAL NOTATION SYMBOL-12","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD20B"},119308:{"value":"1D20C","name":"GREEK VOCAL NOTATION SYMBOL-13","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD20C"},119309:{"value":"1D20D","name":"GREEK VOCAL NOTATION SYMBOL-14","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD20D"},119310:{"value":"1D20E","name":"GREEK VOCAL NOTATION SYMBOL-15","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD20E"},119311:{"value":"1D20F","name":"GREEK VOCAL NOTATION SYMBOL-16","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD20F"},119312:{"value":"1D210","name":"GREEK VOCAL NOTATION SYMBOL-17","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD210"},119313:{"value":"1D211","name":"GREEK VOCAL NOTATION SYMBOL-18","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD211"},119314:{"value":"1D212","name":"GREEK VOCAL NOTATION SYMBOL-19","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD212"},119315:{"value":"1D213","name":"GREEK VOCAL NOTATION SYMBOL-20","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD213"},119316:{"value":"1D214","name":"GREEK VOCAL NOTATION SYMBOL-21","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD214"},119317:{"value":"1D215","name":"GREEK VOCAL NOTATION SYMBOL-22","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD215"},119318:{"value":"1D216","name":"GREEK VOCAL NOTATION SYMBOL-23","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD216"},119319:{"value":"1D217","name":"GREEK VOCAL NOTATION SYMBOL-24","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD217"},119320:{"value":"1D218","name":"GREEK VOCAL NOTATION SYMBOL-50","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD218"},119321:{"value":"1D219","name":"GREEK VOCAL NOTATION SYMBOL-51","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD219"},119322:{"value":"1D21A","name":"GREEK VOCAL NOTATION SYMBOL-52","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD21A"},119323:{"value":"1D21B","name":"GREEK VOCAL NOTATION SYMBOL-53","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD21B"},119324:{"value":"1D21C","name":"GREEK VOCAL NOTATION SYMBOL-54","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD21C"},119325:{"value":"1D21D","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-1","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD21D"},119326:{"value":"1D21E","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-2","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD21E"},119327:{"value":"1D21F","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-4","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD21F"},119328:{"value":"1D220","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-5","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD220"},119329:{"value":"1D221","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-7","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD221"},119330:{"value":"1D222","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-8","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD222"},119331:{"value":"1D223","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-11","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD223"},119332:{"value":"1D224","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-12","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD224"},119333:{"value":"1D225","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-13","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD225"},119334:{"value":"1D226","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-14","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD226"},119335:{"value":"1D227","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-17","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD227"},119336:{"value":"1D228","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-18","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD228"},119337:{"value":"1D229","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-19","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD229"},119338:{"value":"1D22A","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-23","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD22A"},119339:{"value":"1D22B","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-24","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD22B"},119340:{"value":"1D22C","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-25","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD22C"},119341:{"value":"1D22D","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-26","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD22D"},119342:{"value":"1D22E","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-27","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD22E"},119343:{"value":"1D22F","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-29","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD22F"},119344:{"value":"1D230","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-30","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD230"},119345:{"value":"1D231","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-32","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD231"},119346:{"value":"1D232","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-36","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD232"},119347:{"value":"1D233","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-37","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD233"},119348:{"value":"1D234","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-38","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD234"},119349:{"value":"1D235","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-39","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD235"},119350:{"value":"1D236","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-40","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD236"},119351:{"value":"1D237","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-42","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD237"},119352:{"value":"1D238","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-43","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD238"},119353:{"value":"1D239","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-45","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD239"},119354:{"value":"1D23A","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-47","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD23A"},119355:{"value":"1D23B","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-48","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD23B"},119356:{"value":"1D23C","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-49","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD23C"},119357:{"value":"1D23D","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-50","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD23D"},119358:{"value":"1D23E","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-51","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD23E"},119359:{"value":"1D23F","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-52","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD23F"},119360:{"value":"1D240","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-53","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD240"},119361:{"value":"1D241","name":"GREEK INSTRUMENTAL NOTATION SYMBOL-54","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD241"},119365:{"value":"1D245","name":"GREEK MUSICAL LEIMMA","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD245"},119552:{"value":"1D300","name":"MONOGRAM FOR EARTH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD300"},119553:{"value":"1D301","name":"DIGRAM FOR HEAVENLY EARTH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD301"},119554:{"value":"1D302","name":"DIGRAM FOR HUMAN EARTH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD302"},119555:{"value":"1D303","name":"DIGRAM FOR EARTHLY HEAVEN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD303"},119556:{"value":"1D304","name":"DIGRAM FOR EARTHLY HUMAN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD304"},119557:{"value":"1D305","name":"DIGRAM FOR EARTH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD305"},119558:{"value":"1D306","name":"TETRAGRAM FOR CENTRE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD306"},119559:{"value":"1D307","name":"TETRAGRAM FOR FULL CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD307"},119560:{"value":"1D308","name":"TETRAGRAM FOR MIRED","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD308"},119561:{"value":"1D309","name":"TETRAGRAM FOR BARRIER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD309"},119562:{"value":"1D30A","name":"TETRAGRAM FOR KEEPING SMALL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD30A"},119563:{"value":"1D30B","name":"TETRAGRAM FOR CONTRARIETY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD30B"},119564:{"value":"1D30C","name":"TETRAGRAM FOR ASCENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD30C"},119565:{"value":"1D30D","name":"TETRAGRAM FOR OPPOSITION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD30D"},119566:{"value":"1D30E","name":"TETRAGRAM FOR BRANCHING OUT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD30E"},119567:{"value":"1D30F","name":"TETRAGRAM FOR DEFECTIVENESS OR DISTORTION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD30F"},119568:{"value":"1D310","name":"TETRAGRAM FOR DIVERGENCE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD310"},119569:{"value":"1D311","name":"TETRAGRAM FOR YOUTHFULNESS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD311"},119570:{"value":"1D312","name":"TETRAGRAM FOR INCREASE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD312"},119571:{"value":"1D313","name":"TETRAGRAM FOR PENETRATION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD313"},119572:{"value":"1D314","name":"TETRAGRAM FOR REACH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD314"},119573:{"value":"1D315","name":"TETRAGRAM FOR CONTACT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD315"},119574:{"value":"1D316","name":"TETRAGRAM FOR HOLDING BACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD316"},119575:{"value":"1D317","name":"TETRAGRAM FOR WAITING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD317"},119576:{"value":"1D318","name":"TETRAGRAM FOR FOLLOWING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD318"},119577:{"value":"1D319","name":"TETRAGRAM FOR ADVANCE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD319"},119578:{"value":"1D31A","name":"TETRAGRAM FOR RELEASE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD31A"},119579:{"value":"1D31B","name":"TETRAGRAM FOR RESISTANCE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD31B"},119580:{"value":"1D31C","name":"TETRAGRAM FOR EASE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD31C"},119581:{"value":"1D31D","name":"TETRAGRAM FOR JOY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD31D"},119582:{"value":"1D31E","name":"TETRAGRAM FOR CONTENTION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD31E"},119583:{"value":"1D31F","name":"TETRAGRAM FOR ENDEAVOUR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD31F"},119584:{"value":"1D320","name":"TETRAGRAM FOR DUTIES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD320"},119585:{"value":"1D321","name":"TETRAGRAM FOR CHANGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD321"},119586:{"value":"1D322","name":"TETRAGRAM FOR DECISIVENESS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD322"},119587:{"value":"1D323","name":"TETRAGRAM FOR BOLD RESOLUTION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD323"},119588:{"value":"1D324","name":"TETRAGRAM FOR PACKING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD324"},119589:{"value":"1D325","name":"TETRAGRAM FOR LEGION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD325"},119590:{"value":"1D326","name":"TETRAGRAM FOR CLOSENESS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD326"},119591:{"value":"1D327","name":"TETRAGRAM FOR KINSHIP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD327"},119592:{"value":"1D328","name":"TETRAGRAM FOR GATHERING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD328"},119593:{"value":"1D329","name":"TETRAGRAM FOR STRENGTH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD329"},119594:{"value":"1D32A","name":"TETRAGRAM FOR PURITY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD32A"},119595:{"value":"1D32B","name":"TETRAGRAM FOR FULLNESS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD32B"},119596:{"value":"1D32C","name":"TETRAGRAM FOR RESIDENCE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD32C"},119597:{"value":"1D32D","name":"TETRAGRAM FOR LAW OR MODEL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD32D"},119598:{"value":"1D32E","name":"TETRAGRAM FOR RESPONSE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD32E"},119599:{"value":"1D32F","name":"TETRAGRAM FOR GOING TO MEET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD32F"},119600:{"value":"1D330","name":"TETRAGRAM FOR ENCOUNTERS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD330"},119601:{"value":"1D331","name":"TETRAGRAM FOR STOVE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD331"},119602:{"value":"1D332","name":"TETRAGRAM FOR GREATNESS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD332"},119603:{"value":"1D333","name":"TETRAGRAM FOR ENLARGEMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD333"},119604:{"value":"1D334","name":"TETRAGRAM FOR PATTERN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD334"},119605:{"value":"1D335","name":"TETRAGRAM FOR RITUAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD335"},119606:{"value":"1D336","name":"TETRAGRAM FOR FLIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD336"},119607:{"value":"1D337","name":"TETRAGRAM FOR VASTNESS OR WASTING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD337"},119608:{"value":"1D338","name":"TETRAGRAM FOR CONSTANCY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD338"},119609:{"value":"1D339","name":"TETRAGRAM FOR MEASURE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD339"},119610:{"value":"1D33A","name":"TETRAGRAM FOR ETERNITY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD33A"},119611:{"value":"1D33B","name":"TETRAGRAM FOR UNITY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD33B"},119612:{"value":"1D33C","name":"TETRAGRAM FOR DIMINISHMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD33C"},119613:{"value":"1D33D","name":"TETRAGRAM FOR CLOSED MOUTH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD33D"},119614:{"value":"1D33E","name":"TETRAGRAM FOR GUARDEDNESS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD33E"},119615:{"value":"1D33F","name":"TETRAGRAM FOR GATHERING IN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD33F"},119616:{"value":"1D340","name":"TETRAGRAM FOR MASSING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD340"},119617:{"value":"1D341","name":"TETRAGRAM FOR ACCUMULATION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD341"},119618:{"value":"1D342","name":"TETRAGRAM FOR EMBELLISHMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD342"},119619:{"value":"1D343","name":"TETRAGRAM FOR DOUBT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD343"},119620:{"value":"1D344","name":"TETRAGRAM FOR WATCH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD344"},119621:{"value":"1D345","name":"TETRAGRAM FOR SINKING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD345"},119622:{"value":"1D346","name":"TETRAGRAM FOR INNER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD346"},119623:{"value":"1D347","name":"TETRAGRAM FOR DEPARTURE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD347"},119624:{"value":"1D348","name":"TETRAGRAM FOR DARKENING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD348"},119625:{"value":"1D349","name":"TETRAGRAM FOR DIMMING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD349"},119626:{"value":"1D34A","name":"TETRAGRAM FOR EXHAUSTION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD34A"},119627:{"value":"1D34B","name":"TETRAGRAM FOR SEVERANCE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD34B"},119628:{"value":"1D34C","name":"TETRAGRAM FOR STOPPAGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD34C"},119629:{"value":"1D34D","name":"TETRAGRAM FOR HARDNESS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD34D"},119630:{"value":"1D34E","name":"TETRAGRAM FOR COMPLETION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD34E"},119631:{"value":"1D34F","name":"TETRAGRAM FOR CLOSURE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD34F"},119632:{"value":"1D350","name":"TETRAGRAM FOR FAILURE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD350"},119633:{"value":"1D351","name":"TETRAGRAM FOR AGGRAVATION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD351"},119634:{"value":"1D352","name":"TETRAGRAM FOR COMPLIANCE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD352"},119635:{"value":"1D353","name":"TETRAGRAM FOR ON THE VERGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD353"},119636:{"value":"1D354","name":"TETRAGRAM FOR DIFFICULTIES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD354"},119637:{"value":"1D355","name":"TETRAGRAM FOR LABOURING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD355"},119638:{"value":"1D356","name":"TETRAGRAM FOR FOSTERING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD356"},120832:{"value":"1D800","name":"SIGNWRITING HAND-FIST INDEX","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD800"},120833:{"value":"1D801","name":"SIGNWRITING HAND-CIRCLE INDEX","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD801"},120834:{"value":"1D802","name":"SIGNWRITING HAND-CUP INDEX","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD802"},120835:{"value":"1D803","name":"SIGNWRITING HAND-OVAL INDEX","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD803"},120836:{"value":"1D804","name":"SIGNWRITING HAND-HINGE INDEX","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD804"},120837:{"value":"1D805","name":"SIGNWRITING HAND-ANGLE INDEX","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD805"},120838:{"value":"1D806","name":"SIGNWRITING HAND-FIST INDEX BENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD806"},120839:{"value":"1D807","name":"SIGNWRITING HAND-CIRCLE INDEX BENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD807"},120840:{"value":"1D808","name":"SIGNWRITING HAND-FIST THUMB UNDER INDEX BENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD808"},120841:{"value":"1D809","name":"SIGNWRITING HAND-FIST INDEX RAISED KNUCKLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD809"},120842:{"value":"1D80A","name":"SIGNWRITING HAND-FIST INDEX CUPPED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD80A"},120843:{"value":"1D80B","name":"SIGNWRITING HAND-FIST INDEX HINGED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD80B"},120844:{"value":"1D80C","name":"SIGNWRITING HAND-FIST INDEX HINGED LOW","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD80C"},120845:{"value":"1D80D","name":"SIGNWRITING HAND-CIRCLE INDEX HINGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD80D"},120846:{"value":"1D80E","name":"SIGNWRITING HAND-FIST INDEX MIDDLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD80E"},120847:{"value":"1D80F","name":"SIGNWRITING HAND-CIRCLE INDEX MIDDLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD80F"},120848:{"value":"1D810","name":"SIGNWRITING HAND-FIST INDEX MIDDLE BENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD810"},120849:{"value":"1D811","name":"SIGNWRITING HAND-FIST INDEX MIDDLE RAISED KNUCKLES","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD811"},120850:{"value":"1D812","name":"SIGNWRITING HAND-FIST INDEX MIDDLE HINGED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD812"},120851:{"value":"1D813","name":"SIGNWRITING HAND-FIST INDEX UP MIDDLE HINGED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD813"},120852:{"value":"1D814","name":"SIGNWRITING HAND-FIST INDEX HINGED MIDDLE UP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD814"},120853:{"value":"1D815","name":"SIGNWRITING HAND-FIST INDEX MIDDLE CONJOINED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD815"},120854:{"value":"1D816","name":"SIGNWRITING HAND-FIST INDEX MIDDLE CONJOINED INDEX BENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD816"},120855:{"value":"1D817","name":"SIGNWRITING HAND-FIST INDEX MIDDLE CONJOINED MIDDLE BENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD817"},120856:{"value":"1D818","name":"SIGNWRITING HAND-FIST INDEX MIDDLE CONJOINED CUPPED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD818"},120857:{"value":"1D819","name":"SIGNWRITING HAND-FIST INDEX MIDDLE CONJOINED HINGED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD819"},120858:{"value":"1D81A","name":"SIGNWRITING HAND-FIST INDEX MIDDLE CROSSED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD81A"},120859:{"value":"1D81B","name":"SIGNWRITING HAND-CIRCLE INDEX MIDDLE CROSSED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD81B"},120860:{"value":"1D81C","name":"SIGNWRITING HAND-FIST MIDDLE BENT OVER INDEX","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD81C"},120861:{"value":"1D81D","name":"SIGNWRITING HAND-FIST INDEX BENT OVER MIDDLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD81D"},120862:{"value":"1D81E","name":"SIGNWRITING HAND-FIST INDEX MIDDLE THUMB","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD81E"},120863:{"value":"1D81F","name":"SIGNWRITING HAND-CIRCLE INDEX MIDDLE THUMB","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD81F"},120864:{"value":"1D820","name":"SIGNWRITING HAND-FIST INDEX MIDDLE STRAIGHT THUMB BENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD820"},120865:{"value":"1D821","name":"SIGNWRITING HAND-FIST INDEX MIDDLE BENT THUMB STRAIGHT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD821"},120866:{"value":"1D822","name":"SIGNWRITING HAND-FIST INDEX MIDDLE THUMB BENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD822"},120867:{"value":"1D823","name":"SIGNWRITING HAND-FIST INDEX MIDDLE HINGED SPREAD THUMB SIDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD823"},120868:{"value":"1D824","name":"SIGNWRITING HAND-FIST INDEX UP MIDDLE HINGED THUMB SIDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD824"},120869:{"value":"1D825","name":"SIGNWRITING HAND-FIST INDEX UP MIDDLE HINGED THUMB CONJOINED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD825"},120870:{"value":"1D826","name":"SIGNWRITING HAND-FIST INDEX HINGED MIDDLE UP THUMB SIDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD826"},120871:{"value":"1D827","name":"SIGNWRITING HAND-FIST INDEX MIDDLE UP SPREAD THUMB FORWARD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD827"},120872:{"value":"1D828","name":"SIGNWRITING HAND-FIST INDEX MIDDLE THUMB CUPPED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD828"},120873:{"value":"1D829","name":"SIGNWRITING HAND-FIST INDEX MIDDLE THUMB CIRCLED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD829"},120874:{"value":"1D82A","name":"SIGNWRITING HAND-FIST INDEX MIDDLE THUMB HOOKED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD82A"},120875:{"value":"1D82B","name":"SIGNWRITING HAND-FIST INDEX MIDDLE THUMB HINGED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD82B"},120876:{"value":"1D82C","name":"SIGNWRITING HAND-FIST THUMB BETWEEN INDEX MIDDLE STRAIGHT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD82C"},120877:{"value":"1D82D","name":"SIGNWRITING HAND-FIST INDEX MIDDLE CONJOINED THUMB SIDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD82D"},120878:{"value":"1D82E","name":"SIGNWRITING HAND-FIST INDEX MIDDLE CONJOINED THUMB SIDE CONJOINED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD82E"},120879:{"value":"1D82F","name":"SIGNWRITING HAND-FIST INDEX MIDDLE CONJOINED THUMB SIDE BENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD82F"},120880:{"value":"1D830","name":"SIGNWRITING HAND-FIST MIDDLE THUMB HOOKED INDEX UP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD830"},120881:{"value":"1D831","name":"SIGNWRITING HAND-FIST INDEX THUMB HOOKED MIDDLE UP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD831"},120882:{"value":"1D832","name":"SIGNWRITING HAND-FIST INDEX MIDDLE CONJOINED HINGED THUMB SIDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD832"},120883:{"value":"1D833","name":"SIGNWRITING HAND-FIST INDEX MIDDLE CROSSED THUMB SIDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD833"},120884:{"value":"1D834","name":"SIGNWRITING HAND-FIST INDEX MIDDLE CONJOINED THUMB FORWARD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD834"},120885:{"value":"1D835","name":"SIGNWRITING HAND-FIST INDEX MIDDLE CONJOINED CUPPED THUMB FORWARD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD835"},120886:{"value":"1D836","name":"SIGNWRITING HAND-FIST MIDDLE THUMB CUPPED INDEX UP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD836"},120887:{"value":"1D837","name":"SIGNWRITING HAND-FIST INDEX THUMB CUPPED MIDDLE UP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD837"},120888:{"value":"1D838","name":"SIGNWRITING HAND-FIST MIDDLE THUMB CIRCLED INDEX UP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD838"},120889:{"value":"1D839","name":"SIGNWRITING HAND-FIST MIDDLE THUMB CIRCLED INDEX HINGED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD839"},120890:{"value":"1D83A","name":"SIGNWRITING HAND-FIST INDEX THUMB ANGLED OUT MIDDLE UP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD83A"},120891:{"value":"1D83B","name":"SIGNWRITING HAND-FIST INDEX THUMB ANGLED IN MIDDLE UP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD83B"},120892:{"value":"1D83C","name":"SIGNWRITING HAND-FIST INDEX THUMB CIRCLED MIDDLE UP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD83C"},120893:{"value":"1D83D","name":"SIGNWRITING HAND-FIST INDEX MIDDLE THUMB CONJOINED HINGED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD83D"},120894:{"value":"1D83E","name":"SIGNWRITING HAND-FIST INDEX MIDDLE THUMB ANGLED OUT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD83E"},120895:{"value":"1D83F","name":"SIGNWRITING HAND-FIST INDEX MIDDLE THUMB ANGLED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD83F"},120896:{"value":"1D840","name":"SIGNWRITING HAND-FIST MIDDLE THUMB ANGLED OUT INDEX UP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD840"},120897:{"value":"1D841","name":"SIGNWRITING HAND-FIST MIDDLE THUMB ANGLED OUT INDEX CROSSED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD841"},120898:{"value":"1D842","name":"SIGNWRITING HAND-FIST MIDDLE THUMB ANGLED INDEX UP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD842"},120899:{"value":"1D843","name":"SIGNWRITING HAND-FIST INDEX THUMB HOOKED MIDDLE HINGED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD843"},120900:{"value":"1D844","name":"SIGNWRITING HAND-FLAT FOUR FINGERS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD844"},120901:{"value":"1D845","name":"SIGNWRITING HAND-FLAT FOUR FINGERS BENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD845"},120902:{"value":"1D846","name":"SIGNWRITING HAND-FLAT FOUR FINGERS HINGED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD846"},120903:{"value":"1D847","name":"SIGNWRITING HAND-FLAT FOUR FINGERS CONJOINED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD847"},120904:{"value":"1D848","name":"SIGNWRITING HAND-FLAT FOUR FINGERS CONJOINED SPLIT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD848"},120905:{"value":"1D849","name":"SIGNWRITING HAND-CLAW FOUR FINGERS CONJOINED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD849"},120906:{"value":"1D84A","name":"SIGNWRITING HAND-FIST FOUR FINGERS CONJOINED BENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD84A"},120907:{"value":"1D84B","name":"SIGNWRITING HAND-HINGE FOUR FINGERS CONJOINED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD84B"},120908:{"value":"1D84C","name":"SIGNWRITING HAND-FLAT FIVE FINGERS SPREAD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD84C"},120909:{"value":"1D84D","name":"SIGNWRITING HAND-FLAT HEEL FIVE FINGERS SPREAD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD84D"},120910:{"value":"1D84E","name":"SIGNWRITING HAND-FLAT FIVE FINGERS SPREAD FOUR BENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD84E"},120911:{"value":"1D84F","name":"SIGNWRITING HAND-FLAT HEEL FIVE FINGERS SPREAD FOUR BENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD84F"},120912:{"value":"1D850","name":"SIGNWRITING HAND-FLAT FIVE FINGERS SPREAD BENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD850"},120913:{"value":"1D851","name":"SIGNWRITING HAND-FLAT HEEL FIVE FINGERS SPREAD BENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD851"},120914:{"value":"1D852","name":"SIGNWRITING HAND-FLAT FIVE FINGERS SPREAD THUMB FORWARD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD852"},120915:{"value":"1D853","name":"SIGNWRITING HAND-CUP FIVE FINGERS SPREAD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD853"},120916:{"value":"1D854","name":"SIGNWRITING HAND-CUP FIVE FINGERS SPREAD OPEN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD854"},120917:{"value":"1D855","name":"SIGNWRITING HAND-HINGE FIVE FINGERS SPREAD OPEN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD855"},120918:{"value":"1D856","name":"SIGNWRITING HAND-OVAL FIVE FINGERS SPREAD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD856"},120919:{"value":"1D857","name":"SIGNWRITING HAND-FLAT FIVE FINGERS SPREAD HINGED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD857"},120920:{"value":"1D858","name":"SIGNWRITING HAND-FLAT FIVE FINGERS SPREAD HINGED THUMB SIDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD858"},120921:{"value":"1D859","name":"SIGNWRITING HAND-FLAT FIVE FINGERS SPREAD HINGED NO THUMB","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD859"},120922:{"value":"1D85A","name":"SIGNWRITING HAND-FLAT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD85A"},120923:{"value":"1D85B","name":"SIGNWRITING HAND-FLAT BETWEEN PALM FACINGS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD85B"},120924:{"value":"1D85C","name":"SIGNWRITING HAND-FLAT HEEL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD85C"},120925:{"value":"1D85D","name":"SIGNWRITING HAND-FLAT THUMB SIDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD85D"},120926:{"value":"1D85E","name":"SIGNWRITING HAND-FLAT HEEL THUMB SIDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD85E"},120927:{"value":"1D85F","name":"SIGNWRITING HAND-FLAT THUMB BENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD85F"},120928:{"value":"1D860","name":"SIGNWRITING HAND-FLAT THUMB FORWARD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD860"},120929:{"value":"1D861","name":"SIGNWRITING HAND-FLAT SPLIT INDEX THUMB SIDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD861"},120930:{"value":"1D862","name":"SIGNWRITING HAND-FLAT SPLIT CENTRE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD862"},120931:{"value":"1D863","name":"SIGNWRITING HAND-FLAT SPLIT CENTRE THUMB SIDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD863"},120932:{"value":"1D864","name":"SIGNWRITING HAND-FLAT SPLIT CENTRE THUMB SIDE BENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD864"},120933:{"value":"1D865","name":"SIGNWRITING HAND-FLAT SPLIT LITTLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD865"},120934:{"value":"1D866","name":"SIGNWRITING HAND-CLAW","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD866"},120935:{"value":"1D867","name":"SIGNWRITING HAND-CLAW THUMB SIDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD867"},120936:{"value":"1D868","name":"SIGNWRITING HAND-CLAW NO THUMB","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD868"},120937:{"value":"1D869","name":"SIGNWRITING HAND-CLAW THUMB FORWARD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD869"},120938:{"value":"1D86A","name":"SIGNWRITING HAND-HOOK CURLICUE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD86A"},120939:{"value":"1D86B","name":"SIGNWRITING HAND-HOOK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD86B"},120940:{"value":"1D86C","name":"SIGNWRITING HAND-CUP OPEN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD86C"},120941:{"value":"1D86D","name":"SIGNWRITING HAND-CUP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD86D"},120942:{"value":"1D86E","name":"SIGNWRITING HAND-CUP OPEN THUMB SIDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD86E"},120943:{"value":"1D86F","name":"SIGNWRITING HAND-CUP THUMB SIDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD86F"},120944:{"value":"1D870","name":"SIGNWRITING HAND-CUP OPEN NO THUMB","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD870"},120945:{"value":"1D871","name":"SIGNWRITING HAND-CUP NO THUMB","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD871"},120946:{"value":"1D872","name":"SIGNWRITING HAND-CUP OPEN THUMB FORWARD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD872"},120947:{"value":"1D873","name":"SIGNWRITING HAND-CUP THUMB FORWARD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD873"},120948:{"value":"1D874","name":"SIGNWRITING HAND-CURLICUE OPEN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD874"},120949:{"value":"1D875","name":"SIGNWRITING HAND-CURLICUE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD875"},120950:{"value":"1D876","name":"SIGNWRITING HAND-CIRCLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD876"},120951:{"value":"1D877","name":"SIGNWRITING HAND-OVAL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD877"},120952:{"value":"1D878","name":"SIGNWRITING HAND-OVAL THUMB SIDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD878"},120953:{"value":"1D879","name":"SIGNWRITING HAND-OVAL NO THUMB","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD879"},120954:{"value":"1D87A","name":"SIGNWRITING HAND-OVAL THUMB FORWARD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD87A"},120955:{"value":"1D87B","name":"SIGNWRITING HAND-HINGE OPEN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD87B"},120956:{"value":"1D87C","name":"SIGNWRITING HAND-HINGE OPEN THUMB FORWARD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD87C"},120957:{"value":"1D87D","name":"SIGNWRITING HAND-HINGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD87D"},120958:{"value":"1D87E","name":"SIGNWRITING HAND-HINGE SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD87E"},120959:{"value":"1D87F","name":"SIGNWRITING HAND-HINGE OPEN THUMB SIDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD87F"},120960:{"value":"1D880","name":"SIGNWRITING HAND-HINGE THUMB SIDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD880"},120961:{"value":"1D881","name":"SIGNWRITING HAND-HINGE OPEN NO THUMB","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD881"},120962:{"value":"1D882","name":"SIGNWRITING HAND-HINGE NO THUMB","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD882"},120963:{"value":"1D883","name":"SIGNWRITING HAND-HINGE THUMB SIDE TOUCHING INDEX","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD883"},120964:{"value":"1D884","name":"SIGNWRITING HAND-HINGE THUMB BETWEEN MIDDLE RING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD884"},120965:{"value":"1D885","name":"SIGNWRITING HAND-ANGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD885"},120966:{"value":"1D886","name":"SIGNWRITING HAND-FIST INDEX MIDDLE RING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD886"},120967:{"value":"1D887","name":"SIGNWRITING HAND-CIRCLE INDEX MIDDLE RING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD887"},120968:{"value":"1D888","name":"SIGNWRITING HAND-HINGE INDEX MIDDLE RING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD888"},120969:{"value":"1D889","name":"SIGNWRITING HAND-ANGLE INDEX MIDDLE RING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD889"},120970:{"value":"1D88A","name":"SIGNWRITING HAND-HINGE LITTLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD88A"},120971:{"value":"1D88B","name":"SIGNWRITING HAND-FIST INDEX MIDDLE RING BENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD88B"},120972:{"value":"1D88C","name":"SIGNWRITING HAND-FIST INDEX MIDDLE RING CONJOINED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD88C"},120973:{"value":"1D88D","name":"SIGNWRITING HAND-HINGE INDEX MIDDLE RING CONJOINED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD88D"},120974:{"value":"1D88E","name":"SIGNWRITING HAND-FIST LITTLE DOWN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD88E"},120975:{"value":"1D88F","name":"SIGNWRITING HAND-FIST LITTLE DOWN RIPPLE STRAIGHT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD88F"},120976:{"value":"1D890","name":"SIGNWRITING HAND-FIST LITTLE DOWN RIPPLE CURVED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD890"},120977:{"value":"1D891","name":"SIGNWRITING HAND-FIST LITTLE DOWN OTHERS CIRCLED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD891"},120978:{"value":"1D892","name":"SIGNWRITING HAND-FIST LITTLE UP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD892"},120979:{"value":"1D893","name":"SIGNWRITING HAND-FIST THUMB UNDER LITTLE UP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD893"},120980:{"value":"1D894","name":"SIGNWRITING HAND-CIRCLE LITTLE UP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD894"},120981:{"value":"1D895","name":"SIGNWRITING HAND-OVAL LITTLE UP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD895"},120982:{"value":"1D896","name":"SIGNWRITING HAND-ANGLE LITTLE UP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD896"},120983:{"value":"1D897","name":"SIGNWRITING HAND-FIST LITTLE RAISED KNUCKLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD897"},120984:{"value":"1D898","name":"SIGNWRITING HAND-FIST LITTLE BENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD898"},120985:{"value":"1D899","name":"SIGNWRITING HAND-FIST LITTLE TOUCHES THUMB","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD899"},120986:{"value":"1D89A","name":"SIGNWRITING HAND-FIST LITTLE THUMB","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD89A"},120987:{"value":"1D89B","name":"SIGNWRITING HAND-HINGE LITTLE THUMB","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD89B"},120988:{"value":"1D89C","name":"SIGNWRITING HAND-FIST LITTLE INDEX THUMB","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD89C"},120989:{"value":"1D89D","name":"SIGNWRITING HAND-HINGE LITTLE INDEX THUMB","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD89D"},120990:{"value":"1D89E","name":"SIGNWRITING HAND-ANGLE LITTLE INDEX THUMB INDEX THUMB OUT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD89E"},120991:{"value":"1D89F","name":"SIGNWRITING HAND-ANGLE LITTLE INDEX THUMB INDEX THUMB","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD89F"},120992:{"value":"1D8A0","name":"SIGNWRITING HAND-FIST LITTLE INDEX","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8A0"},120993:{"value":"1D8A1","name":"SIGNWRITING HAND-CIRCLE LITTLE INDEX","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8A1"},120994:{"value":"1D8A2","name":"SIGNWRITING HAND-HINGE LITTLE INDEX","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8A2"},120995:{"value":"1D8A3","name":"SIGNWRITING HAND-ANGLE LITTLE INDEX","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8A3"},120996:{"value":"1D8A4","name":"SIGNWRITING HAND-FIST INDEX MIDDLE LITTLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8A4"},120997:{"value":"1D8A5","name":"SIGNWRITING HAND-CIRCLE INDEX MIDDLE LITTLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8A5"},120998:{"value":"1D8A6","name":"SIGNWRITING HAND-HINGE INDEX MIDDLE LITTLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8A6"},120999:{"value":"1D8A7","name":"SIGNWRITING HAND-HINGE RING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8A7"},121000:{"value":"1D8A8","name":"SIGNWRITING HAND-ANGLE INDEX MIDDLE LITTLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8A8"},121001:{"value":"1D8A9","name":"SIGNWRITING HAND-FIST INDEX MIDDLE CROSS LITTLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8A9"},121002:{"value":"1D8AA","name":"SIGNWRITING HAND-CIRCLE INDEX MIDDLE CROSS LITTLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8AA"},121003:{"value":"1D8AB","name":"SIGNWRITING HAND-FIST RING DOWN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8AB"},121004:{"value":"1D8AC","name":"SIGNWRITING HAND-HINGE RING DOWN INDEX THUMB HOOK MIDDLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8AC"},121005:{"value":"1D8AD","name":"SIGNWRITING HAND-ANGLE RING DOWN MIDDLE THUMB INDEX CROSS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8AD"},121006:{"value":"1D8AE","name":"SIGNWRITING HAND-FIST RING UP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8AE"},121007:{"value":"1D8AF","name":"SIGNWRITING HAND-FIST RING RAISED KNUCKLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8AF"},121008:{"value":"1D8B0","name":"SIGNWRITING HAND-FIST RING LITTLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8B0"},121009:{"value":"1D8B1","name":"SIGNWRITING HAND-CIRCLE RING LITTLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8B1"},121010:{"value":"1D8B2","name":"SIGNWRITING HAND-OVAL RING LITTLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8B2"},121011:{"value":"1D8B3","name":"SIGNWRITING HAND-ANGLE RING LITTLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8B3"},121012:{"value":"1D8B4","name":"SIGNWRITING HAND-FIST RING MIDDLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8B4"},121013:{"value":"1D8B5","name":"SIGNWRITING HAND-FIST RING MIDDLE CONJOINED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8B5"},121014:{"value":"1D8B6","name":"SIGNWRITING HAND-FIST RING MIDDLE RAISED KNUCKLES","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8B6"},121015:{"value":"1D8B7","name":"SIGNWRITING HAND-FIST RING INDEX","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8B7"},121016:{"value":"1D8B8","name":"SIGNWRITING HAND-FIST RING THUMB","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8B8"},121017:{"value":"1D8B9","name":"SIGNWRITING HAND-HOOK RING THUMB","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8B9"},121018:{"value":"1D8BA","name":"SIGNWRITING HAND-FIST INDEX RING LITTLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8BA"},121019:{"value":"1D8BB","name":"SIGNWRITING HAND-CIRCLE INDEX RING LITTLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8BB"},121020:{"value":"1D8BC","name":"SIGNWRITING HAND-CURLICUE INDEX RING LITTLE ON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8BC"},121021:{"value":"1D8BD","name":"SIGNWRITING HAND-HOOK INDEX RING LITTLE OUT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8BD"},121022:{"value":"1D8BE","name":"SIGNWRITING HAND-HOOK INDEX RING LITTLE IN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8BE"},121023:{"value":"1D8BF","name":"SIGNWRITING HAND-HOOK INDEX RING LITTLE UNDER","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8BF"},121024:{"value":"1D8C0","name":"SIGNWRITING HAND-CUP INDEX RING LITTLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8C0"},121025:{"value":"1D8C1","name":"SIGNWRITING HAND-HINGE INDEX RING LITTLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8C1"},121026:{"value":"1D8C2","name":"SIGNWRITING HAND-ANGLE INDEX RING LITTLE OUT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8C2"},121027:{"value":"1D8C3","name":"SIGNWRITING HAND-ANGLE INDEX RING LITTLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8C3"},121028:{"value":"1D8C4","name":"SIGNWRITING HAND-FIST MIDDLE DOWN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8C4"},121029:{"value":"1D8C5","name":"SIGNWRITING HAND-HINGE MIDDLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8C5"},121030:{"value":"1D8C6","name":"SIGNWRITING HAND-FIST MIDDLE UP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8C6"},121031:{"value":"1D8C7","name":"SIGNWRITING HAND-CIRCLE MIDDLE UP","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8C7"},121032:{"value":"1D8C8","name":"SIGNWRITING HAND-FIST MIDDLE RAISED KNUCKLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8C8"},121033:{"value":"1D8C9","name":"SIGNWRITING HAND-FIST MIDDLE UP THUMB SIDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8C9"},121034:{"value":"1D8CA","name":"SIGNWRITING HAND-HOOK MIDDLE THUMB","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8CA"},121035:{"value":"1D8CB","name":"SIGNWRITING HAND-FIST MIDDLE THUMB LITTLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8CB"},121036:{"value":"1D8CC","name":"SIGNWRITING HAND-FIST MIDDLE LITTLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8CC"},121037:{"value":"1D8CD","name":"SIGNWRITING HAND-FIST MIDDLE RING LITTLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8CD"},121038:{"value":"1D8CE","name":"SIGNWRITING HAND-CIRCLE MIDDLE RING LITTLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8CE"},121039:{"value":"1D8CF","name":"SIGNWRITING HAND-CURLICUE MIDDLE RING LITTLE ON","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8CF"},121040:{"value":"1D8D0","name":"SIGNWRITING HAND-CUP MIDDLE RING LITTLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8D0"},121041:{"value":"1D8D1","name":"SIGNWRITING HAND-HINGE MIDDLE RING LITTLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8D1"},121042:{"value":"1D8D2","name":"SIGNWRITING HAND-ANGLE MIDDLE RING LITTLE OUT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8D2"},121043:{"value":"1D8D3","name":"SIGNWRITING HAND-ANGLE MIDDLE RING LITTLE IN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8D3"},121044:{"value":"1D8D4","name":"SIGNWRITING HAND-ANGLE MIDDLE RING LITTLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8D4"},121045:{"value":"1D8D5","name":"SIGNWRITING HAND-CIRCLE MIDDLE RING LITTLE BENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8D5"},121046:{"value":"1D8D6","name":"SIGNWRITING HAND-CLAW MIDDLE RING LITTLE CONJOINED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8D6"},121047:{"value":"1D8D7","name":"SIGNWRITING HAND-CLAW MIDDLE RING LITTLE CONJOINED SIDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8D7"},121048:{"value":"1D8D8","name":"SIGNWRITING HAND-HOOK MIDDLE RING LITTLE CONJOINED OUT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8D8"},121049:{"value":"1D8D9","name":"SIGNWRITING HAND-HOOK MIDDLE RING LITTLE CONJOINED IN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8D9"},121050:{"value":"1D8DA","name":"SIGNWRITING HAND-HOOK MIDDLE RING LITTLE CONJOINED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8DA"},121051:{"value":"1D8DB","name":"SIGNWRITING HAND-HINGE INDEX HINGED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8DB"},121052:{"value":"1D8DC","name":"SIGNWRITING HAND-FIST INDEX THUMB SIDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8DC"},121053:{"value":"1D8DD","name":"SIGNWRITING HAND-HINGE INDEX THUMB SIDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8DD"},121054:{"value":"1D8DE","name":"SIGNWRITING HAND-FIST INDEX THUMB SIDE THUMB DIAGONAL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8DE"},121055:{"value":"1D8DF","name":"SIGNWRITING HAND-FIST INDEX THUMB SIDE THUMB CONJOINED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8DF"},121056:{"value":"1D8E0","name":"SIGNWRITING HAND-FIST INDEX THUMB SIDE THUMB BENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8E0"},121057:{"value":"1D8E1","name":"SIGNWRITING HAND-FIST INDEX THUMB SIDE INDEX BENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8E1"},121058:{"value":"1D8E2","name":"SIGNWRITING HAND-FIST INDEX THUMB SIDE BOTH BENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8E2"},121059:{"value":"1D8E3","name":"SIGNWRITING HAND-FIST INDEX THUMB SIDE INDEX HINGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8E3"},121060:{"value":"1D8E4","name":"SIGNWRITING HAND-FIST INDEX THUMB FORWARD INDEX STRAIGHT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8E4"},121061:{"value":"1D8E5","name":"SIGNWRITING HAND-FIST INDEX THUMB FORWARD INDEX BENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8E5"},121062:{"value":"1D8E6","name":"SIGNWRITING HAND-FIST INDEX THUMB HOOK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8E6"},121063:{"value":"1D8E7","name":"SIGNWRITING HAND-FIST INDEX THUMB CURLICUE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8E7"},121064:{"value":"1D8E8","name":"SIGNWRITING HAND-FIST INDEX THUMB CURVE THUMB INSIDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8E8"},121065:{"value":"1D8E9","name":"SIGNWRITING HAND-CLAW INDEX THUMB CURVE THUMB INSIDE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8E9"},121066:{"value":"1D8EA","name":"SIGNWRITING HAND-FIST INDEX THUMB CURVE THUMB UNDER","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8EA"},121067:{"value":"1D8EB","name":"SIGNWRITING HAND-FIST INDEX THUMB CIRCLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8EB"},121068:{"value":"1D8EC","name":"SIGNWRITING HAND-CUP INDEX THUMB","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8EC"},121069:{"value":"1D8ED","name":"SIGNWRITING HAND-CUP INDEX THUMB OPEN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8ED"},121070:{"value":"1D8EE","name":"SIGNWRITING HAND-HINGE INDEX THUMB OPEN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8EE"},121071:{"value":"1D8EF","name":"SIGNWRITING HAND-HINGE INDEX THUMB LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8EF"},121072:{"value":"1D8F0","name":"SIGNWRITING HAND-HINGE INDEX THUMB","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8F0"},121073:{"value":"1D8F1","name":"SIGNWRITING HAND-HINGE INDEX THUMB SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8F1"},121074:{"value":"1D8F2","name":"SIGNWRITING HAND-ANGLE INDEX THUMB OUT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8F2"},121075:{"value":"1D8F3","name":"SIGNWRITING HAND-ANGLE INDEX THUMB IN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8F3"},121076:{"value":"1D8F4","name":"SIGNWRITING HAND-ANGLE INDEX THUMB","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8F4"},121077:{"value":"1D8F5","name":"SIGNWRITING HAND-FIST THUMB","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8F5"},121078:{"value":"1D8F6","name":"SIGNWRITING HAND-FIST THUMB HEEL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8F6"},121079:{"value":"1D8F7","name":"SIGNWRITING HAND-FIST THUMB SIDE DIAGONAL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8F7"},121080:{"value":"1D8F8","name":"SIGNWRITING HAND-FIST THUMB SIDE CONJOINED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8F8"},121081:{"value":"1D8F9","name":"SIGNWRITING HAND-FIST THUMB SIDE BENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8F9"},121082:{"value":"1D8FA","name":"SIGNWRITING HAND-FIST THUMB FORWARD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8FA"},121083:{"value":"1D8FB","name":"SIGNWRITING HAND-FIST THUMB BETWEEN INDEX MIDDLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8FB"},121084:{"value":"1D8FC","name":"SIGNWRITING HAND-FIST THUMB BETWEEN MIDDLE RING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8FC"},121085:{"value":"1D8FD","name":"SIGNWRITING HAND-FIST THUMB BETWEEN RING LITTLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8FD"},121086:{"value":"1D8FE","name":"SIGNWRITING HAND-FIST THUMB UNDER TWO FINGERS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8FE"},121087:{"value":"1D8FF","name":"SIGNWRITING HAND-FIST THUMB OVER TWO FINGERS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD8FF"},121088:{"value":"1D900","name":"SIGNWRITING HAND-FIST THUMB UNDER THREE FINGERS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD900"},121089:{"value":"1D901","name":"SIGNWRITING HAND-FIST THUMB UNDER FOUR FINGERS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD901"},121090:{"value":"1D902","name":"SIGNWRITING HAND-FIST THUMB OVER FOUR RAISED KNUCKLES","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD902"},121091:{"value":"1D903","name":"SIGNWRITING HAND-FIST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD903"},121092:{"value":"1D904","name":"SIGNWRITING HAND-FIST HEEL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD904"},121093:{"value":"1D905","name":"SIGNWRITING TOUCH SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD905"},121094:{"value":"1D906","name":"SIGNWRITING TOUCH MULTIPLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD906"},121095:{"value":"1D907","name":"SIGNWRITING TOUCH BETWEEN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD907"},121096:{"value":"1D908","name":"SIGNWRITING GRASP SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD908"},121097:{"value":"1D909","name":"SIGNWRITING GRASP MULTIPLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD909"},121098:{"value":"1D90A","name":"SIGNWRITING GRASP BETWEEN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD90A"},121099:{"value":"1D90B","name":"SIGNWRITING STRIKE SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD90B"},121100:{"value":"1D90C","name":"SIGNWRITING STRIKE MULTIPLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD90C"},121101:{"value":"1D90D","name":"SIGNWRITING STRIKE BETWEEN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD90D"},121102:{"value":"1D90E","name":"SIGNWRITING BRUSH SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD90E"},121103:{"value":"1D90F","name":"SIGNWRITING BRUSH MULTIPLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD90F"},121104:{"value":"1D910","name":"SIGNWRITING BRUSH BETWEEN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD910"},121105:{"value":"1D911","name":"SIGNWRITING RUB SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD911"},121106:{"value":"1D912","name":"SIGNWRITING RUB MULTIPLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD912"},121107:{"value":"1D913","name":"SIGNWRITING RUB BETWEEN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD913"},121108:{"value":"1D914","name":"SIGNWRITING SURFACE SYMBOLS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD914"},121109:{"value":"1D915","name":"SIGNWRITING SURFACE BETWEEN","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD915"},121110:{"value":"1D916","name":"SIGNWRITING SQUEEZE LARGE SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD916"},121111:{"value":"1D917","name":"SIGNWRITING SQUEEZE SMALL SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD917"},121112:{"value":"1D918","name":"SIGNWRITING SQUEEZE LARGE MULTIPLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD918"},121113:{"value":"1D919","name":"SIGNWRITING SQUEEZE SMALL MULTIPLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD919"},121114:{"value":"1D91A","name":"SIGNWRITING SQUEEZE SEQUENTIAL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD91A"},121115:{"value":"1D91B","name":"SIGNWRITING FLICK LARGE SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD91B"},121116:{"value":"1D91C","name":"SIGNWRITING FLICK SMALL SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD91C"},121117:{"value":"1D91D","name":"SIGNWRITING FLICK LARGE MULTIPLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD91D"},121118:{"value":"1D91E","name":"SIGNWRITING FLICK SMALL MULTIPLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD91E"},121119:{"value":"1D91F","name":"SIGNWRITING FLICK SEQUENTIAL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD91F"},121120:{"value":"1D920","name":"SIGNWRITING SQUEEZE FLICK ALTERNATING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD920"},121121:{"value":"1D921","name":"SIGNWRITING MOVEMENT-HINGE UP DOWN LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD921"},121122:{"value":"1D922","name":"SIGNWRITING MOVEMENT-HINGE UP DOWN SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD922"},121123:{"value":"1D923","name":"SIGNWRITING MOVEMENT-HINGE UP SEQUENTIAL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD923"},121124:{"value":"1D924","name":"SIGNWRITING MOVEMENT-HINGE DOWN SEQUENTIAL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD924"},121125:{"value":"1D925","name":"SIGNWRITING MOVEMENT-HINGE UP DOWN ALTERNATING LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD925"},121126:{"value":"1D926","name":"SIGNWRITING MOVEMENT-HINGE UP DOWN ALTERNATING SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD926"},121127:{"value":"1D927","name":"SIGNWRITING MOVEMENT-HINGE SIDE TO SIDE SCISSORS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD927"},121128:{"value":"1D928","name":"SIGNWRITING MOVEMENT-WALLPLANE FINGER CONTACT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD928"},121129:{"value":"1D929","name":"SIGNWRITING MOVEMENT-FLOORPLANE FINGER CONTACT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD929"},121130:{"value":"1D92A","name":"SIGNWRITING MOVEMENT-WALLPLANE SINGLE STRAIGHT SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD92A"},121131:{"value":"1D92B","name":"SIGNWRITING MOVEMENT-WALLPLANE SINGLE STRAIGHT MEDIUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD92B"},121132:{"value":"1D92C","name":"SIGNWRITING MOVEMENT-WALLPLANE SINGLE STRAIGHT LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD92C"},121133:{"value":"1D92D","name":"SIGNWRITING MOVEMENT-WALLPLANE SINGLE STRAIGHT LARGEST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD92D"},121134:{"value":"1D92E","name":"SIGNWRITING MOVEMENT-WALLPLANE SINGLE WRIST FLEX","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD92E"},121135:{"value":"1D92F","name":"SIGNWRITING MOVEMENT-WALLPLANE DOUBLE STRAIGHT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD92F"},121136:{"value":"1D930","name":"SIGNWRITING MOVEMENT-WALLPLANE DOUBLE WRIST FLEX","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD930"},121137:{"value":"1D931","name":"SIGNWRITING MOVEMENT-WALLPLANE DOUBLE ALTERNATING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD931"},121138:{"value":"1D932","name":"SIGNWRITING MOVEMENT-WALLPLANE DOUBLE ALTERNATING WRIST FLEX","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD932"},121139:{"value":"1D933","name":"SIGNWRITING MOVEMENT-WALLPLANE CROSS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD933"},121140:{"value":"1D934","name":"SIGNWRITING MOVEMENT-WALLPLANE TRIPLE STRAIGHT MOVEMENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD934"},121141:{"value":"1D935","name":"SIGNWRITING MOVEMENT-WALLPLANE TRIPLE WRIST FLEX","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD935"},121142:{"value":"1D936","name":"SIGNWRITING MOVEMENT-WALLPLANE TRIPLE ALTERNATING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD936"},121143:{"value":"1D937","name":"SIGNWRITING MOVEMENT-WALLPLANE TRIPLE ALTERNATING WRIST FLEX","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD937"},121144:{"value":"1D938","name":"SIGNWRITING MOVEMENT-WALLPLANE BEND SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD938"},121145:{"value":"1D939","name":"SIGNWRITING MOVEMENT-WALLPLANE BEND MEDIUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD939"},121146:{"value":"1D93A","name":"SIGNWRITING MOVEMENT-WALLPLANE BEND LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD93A"},121147:{"value":"1D93B","name":"SIGNWRITING MOVEMENT-WALLPLANE CORNER SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD93B"},121148:{"value":"1D93C","name":"SIGNWRITING MOVEMENT-WALLPLANE CORNER MEDIUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD93C"},121149:{"value":"1D93D","name":"SIGNWRITING MOVEMENT-WALLPLANE CORNER LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD93D"},121150:{"value":"1D93E","name":"SIGNWRITING MOVEMENT-WALLPLANE CORNER ROTATION","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD93E"},121151:{"value":"1D93F","name":"SIGNWRITING MOVEMENT-WALLPLANE CHECK SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD93F"},121152:{"value":"1D940","name":"SIGNWRITING MOVEMENT-WALLPLANE CHECK MEDIUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD940"},121153:{"value":"1D941","name":"SIGNWRITING MOVEMENT-WALLPLANE CHECK LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD941"},121154:{"value":"1D942","name":"SIGNWRITING MOVEMENT-WALLPLANE BOX SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD942"},121155:{"value":"1D943","name":"SIGNWRITING MOVEMENT-WALLPLANE BOX MEDIUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD943"},121156:{"value":"1D944","name":"SIGNWRITING MOVEMENT-WALLPLANE BOX LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD944"},121157:{"value":"1D945","name":"SIGNWRITING MOVEMENT-WALLPLANE ZIGZAG SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD945"},121158:{"value":"1D946","name":"SIGNWRITING MOVEMENT-WALLPLANE ZIGZAG MEDIUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD946"},121159:{"value":"1D947","name":"SIGNWRITING MOVEMENT-WALLPLANE ZIGZAG LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD947"},121160:{"value":"1D948","name":"SIGNWRITING MOVEMENT-WALLPLANE PEAKS SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD948"},121161:{"value":"1D949","name":"SIGNWRITING MOVEMENT-WALLPLANE PEAKS MEDIUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD949"},121162:{"value":"1D94A","name":"SIGNWRITING MOVEMENT-WALLPLANE PEAKS LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD94A"},121163:{"value":"1D94B","name":"SIGNWRITING TRAVEL-WALLPLANE ROTATION-WALLPLANE SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD94B"},121164:{"value":"1D94C","name":"SIGNWRITING TRAVEL-WALLPLANE ROTATION-WALLPLANE DOUBLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD94C"},121165:{"value":"1D94D","name":"SIGNWRITING TRAVEL-WALLPLANE ROTATION-WALLPLANE ALTERNATING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD94D"},121166:{"value":"1D94E","name":"SIGNWRITING TRAVEL-WALLPLANE ROTATION-FLOORPLANE SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD94E"},121167:{"value":"1D94F","name":"SIGNWRITING TRAVEL-WALLPLANE ROTATION-FLOORPLANE DOUBLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD94F"},121168:{"value":"1D950","name":"SIGNWRITING TRAVEL-WALLPLANE ROTATION-FLOORPLANE ALTERNATING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD950"},121169:{"value":"1D951","name":"SIGNWRITING TRAVEL-WALLPLANE SHAKING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD951"},121170:{"value":"1D952","name":"SIGNWRITING TRAVEL-WALLPLANE ARM SPIRAL SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD952"},121171:{"value":"1D953","name":"SIGNWRITING TRAVEL-WALLPLANE ARM SPIRAL DOUBLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD953"},121172:{"value":"1D954","name":"SIGNWRITING TRAVEL-WALLPLANE ARM SPIRAL TRIPLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD954"},121173:{"value":"1D955","name":"SIGNWRITING MOVEMENT-DIAGONAL AWAY SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD955"},121174:{"value":"1D956","name":"SIGNWRITING MOVEMENT-DIAGONAL AWAY MEDIUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD956"},121175:{"value":"1D957","name":"SIGNWRITING MOVEMENT-DIAGONAL AWAY LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD957"},121176:{"value":"1D958","name":"SIGNWRITING MOVEMENT-DIAGONAL AWAY LARGEST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD958"},121177:{"value":"1D959","name":"SIGNWRITING MOVEMENT-DIAGONAL TOWARDS SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD959"},121178:{"value":"1D95A","name":"SIGNWRITING MOVEMENT-DIAGONAL TOWARDS MEDIUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD95A"},121179:{"value":"1D95B","name":"SIGNWRITING MOVEMENT-DIAGONAL TOWARDS LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD95B"},121180:{"value":"1D95C","name":"SIGNWRITING MOVEMENT-DIAGONAL TOWARDS LARGEST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD95C"},121181:{"value":"1D95D","name":"SIGNWRITING MOVEMENT-DIAGONAL BETWEEN AWAY SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD95D"},121182:{"value":"1D95E","name":"SIGNWRITING MOVEMENT-DIAGONAL BETWEEN AWAY MEDIUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD95E"},121183:{"value":"1D95F","name":"SIGNWRITING MOVEMENT-DIAGONAL BETWEEN AWAY LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD95F"},121184:{"value":"1D960","name":"SIGNWRITING MOVEMENT-DIAGONAL BETWEEN AWAY LARGEST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD960"},121185:{"value":"1D961","name":"SIGNWRITING MOVEMENT-DIAGONAL BETWEEN TOWARDS SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD961"},121186:{"value":"1D962","name":"SIGNWRITING MOVEMENT-DIAGONAL BETWEEN TOWARDS MEDIUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD962"},121187:{"value":"1D963","name":"SIGNWRITING MOVEMENT-DIAGONAL BETWEEN TOWARDS LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD963"},121188:{"value":"1D964","name":"SIGNWRITING MOVEMENT-DIAGONAL BETWEEN TOWARDS LARGEST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD964"},121189:{"value":"1D965","name":"SIGNWRITING MOVEMENT-FLOORPLANE SINGLE STRAIGHT SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD965"},121190:{"value":"1D966","name":"SIGNWRITING MOVEMENT-FLOORPLANE SINGLE STRAIGHT MEDIUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD966"},121191:{"value":"1D967","name":"SIGNWRITING MOVEMENT-FLOORPLANE SINGLE STRAIGHT LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD967"},121192:{"value":"1D968","name":"SIGNWRITING MOVEMENT-FLOORPLANE SINGLE STRAIGHT LARGEST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD968"},121193:{"value":"1D969","name":"SIGNWRITING MOVEMENT-FLOORPLANE SINGLE WRIST FLEX","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD969"},121194:{"value":"1D96A","name":"SIGNWRITING MOVEMENT-FLOORPLANE DOUBLE STRAIGHT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD96A"},121195:{"value":"1D96B","name":"SIGNWRITING MOVEMENT-FLOORPLANE DOUBLE WRIST FLEX","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD96B"},121196:{"value":"1D96C","name":"SIGNWRITING MOVEMENT-FLOORPLANE DOUBLE ALTERNATING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD96C"},121197:{"value":"1D96D","name":"SIGNWRITING MOVEMENT-FLOORPLANE DOUBLE ALTERNATING WRIST FLEX","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD96D"},121198:{"value":"1D96E","name":"SIGNWRITING MOVEMENT-FLOORPLANE CROSS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD96E"},121199:{"value":"1D96F","name":"SIGNWRITING MOVEMENT-FLOORPLANE TRIPLE STRAIGHT MOVEMENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD96F"},121200:{"value":"1D970","name":"SIGNWRITING MOVEMENT-FLOORPLANE TRIPLE WRIST FLEX","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD970"},121201:{"value":"1D971","name":"SIGNWRITING MOVEMENT-FLOORPLANE TRIPLE ALTERNATING MOVEMENT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD971"},121202:{"value":"1D972","name":"SIGNWRITING MOVEMENT-FLOORPLANE TRIPLE ALTERNATING WRIST FLEX","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD972"},121203:{"value":"1D973","name":"SIGNWRITING MOVEMENT-FLOORPLANE BEND","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD973"},121204:{"value":"1D974","name":"SIGNWRITING MOVEMENT-FLOORPLANE CORNER SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD974"},121205:{"value":"1D975","name":"SIGNWRITING MOVEMENT-FLOORPLANE CORNER MEDIUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD975"},121206:{"value":"1D976","name":"SIGNWRITING MOVEMENT-FLOORPLANE CORNER LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD976"},121207:{"value":"1D977","name":"SIGNWRITING MOVEMENT-FLOORPLANE CHECK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD977"},121208:{"value":"1D978","name":"SIGNWRITING MOVEMENT-FLOORPLANE BOX SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD978"},121209:{"value":"1D979","name":"SIGNWRITING MOVEMENT-FLOORPLANE BOX MEDIUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD979"},121210:{"value":"1D97A","name":"SIGNWRITING MOVEMENT-FLOORPLANE BOX LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD97A"},121211:{"value":"1D97B","name":"SIGNWRITING MOVEMENT-FLOORPLANE ZIGZAG SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD97B"},121212:{"value":"1D97C","name":"SIGNWRITING MOVEMENT-FLOORPLANE ZIGZAG MEDIUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD97C"},121213:{"value":"1D97D","name":"SIGNWRITING MOVEMENT-FLOORPLANE ZIGZAG LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD97D"},121214:{"value":"1D97E","name":"SIGNWRITING MOVEMENT-FLOORPLANE PEAKS SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD97E"},121215:{"value":"1D97F","name":"SIGNWRITING MOVEMENT-FLOORPLANE PEAKS MEDIUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD97F"},121216:{"value":"1D980","name":"SIGNWRITING MOVEMENT-FLOORPLANE PEAKS LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD980"},121217:{"value":"1D981","name":"SIGNWRITING TRAVEL-FLOORPLANE ROTATION-FLOORPLANE SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD981"},121218:{"value":"1D982","name":"SIGNWRITING TRAVEL-FLOORPLANE ROTATION-FLOORPLANE DOUBLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD982"},121219:{"value":"1D983","name":"SIGNWRITING TRAVEL-FLOORPLANE ROTATION-FLOORPLANE ALTERNATING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD983"},121220:{"value":"1D984","name":"SIGNWRITING TRAVEL-FLOORPLANE ROTATION-WALLPLANE SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD984"},121221:{"value":"1D985","name":"SIGNWRITING TRAVEL-FLOORPLANE ROTATION-WALLPLANE DOUBLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD985"},121222:{"value":"1D986","name":"SIGNWRITING TRAVEL-FLOORPLANE ROTATION-WALLPLANE ALTERNATING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD986"},121223:{"value":"1D987","name":"SIGNWRITING TRAVEL-FLOORPLANE SHAKING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD987"},121224:{"value":"1D988","name":"SIGNWRITING MOVEMENT-WALLPLANE CURVE QUARTER SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD988"},121225:{"value":"1D989","name":"SIGNWRITING MOVEMENT-WALLPLANE CURVE QUARTER MEDIUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD989"},121226:{"value":"1D98A","name":"SIGNWRITING MOVEMENT-WALLPLANE CURVE QUARTER LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD98A"},121227:{"value":"1D98B","name":"SIGNWRITING MOVEMENT-WALLPLANE CURVE QUARTER LARGEST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD98B"},121228:{"value":"1D98C","name":"SIGNWRITING MOVEMENT-WALLPLANE CURVE HALF-CIRCLE SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD98C"},121229:{"value":"1D98D","name":"SIGNWRITING MOVEMENT-WALLPLANE CURVE HALF-CIRCLE MEDIUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD98D"},121230:{"value":"1D98E","name":"SIGNWRITING MOVEMENT-WALLPLANE CURVE HALF-CIRCLE LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD98E"},121231:{"value":"1D98F","name":"SIGNWRITING MOVEMENT-WALLPLANE CURVE HALF-CIRCLE LARGEST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD98F"},121232:{"value":"1D990","name":"SIGNWRITING MOVEMENT-WALLPLANE CURVE THREE-QUARTER CIRCLE SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD990"},121233:{"value":"1D991","name":"SIGNWRITING MOVEMENT-WALLPLANE CURVE THREE-QUARTER CIRCLE MEDIUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD991"},121234:{"value":"1D992","name":"SIGNWRITING MOVEMENT-WALLPLANE HUMP SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD992"},121235:{"value":"1D993","name":"SIGNWRITING MOVEMENT-WALLPLANE HUMP MEDIUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD993"},121236:{"value":"1D994","name":"SIGNWRITING MOVEMENT-WALLPLANE HUMP LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD994"},121237:{"value":"1D995","name":"SIGNWRITING MOVEMENT-WALLPLANE LOOP SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD995"},121238:{"value":"1D996","name":"SIGNWRITING MOVEMENT-WALLPLANE LOOP MEDIUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD996"},121239:{"value":"1D997","name":"SIGNWRITING MOVEMENT-WALLPLANE LOOP LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD997"},121240:{"value":"1D998","name":"SIGNWRITING MOVEMENT-WALLPLANE LOOP SMALL DOUBLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD998"},121241:{"value":"1D999","name":"SIGNWRITING MOVEMENT-WALLPLANE WAVE CURVE DOUBLE SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD999"},121242:{"value":"1D99A","name":"SIGNWRITING MOVEMENT-WALLPLANE WAVE CURVE DOUBLE MEDIUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD99A"},121243:{"value":"1D99B","name":"SIGNWRITING MOVEMENT-WALLPLANE WAVE CURVE DOUBLE LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD99B"},121244:{"value":"1D99C","name":"SIGNWRITING MOVEMENT-WALLPLANE WAVE CURVE TRIPLE SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD99C"},121245:{"value":"1D99D","name":"SIGNWRITING MOVEMENT-WALLPLANE WAVE CURVE TRIPLE MEDIUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD99D"},121246:{"value":"1D99E","name":"SIGNWRITING MOVEMENT-WALLPLANE WAVE CURVE TRIPLE LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD99E"},121247:{"value":"1D99F","name":"SIGNWRITING MOVEMENT-WALLPLANE CURVE THEN STRAIGHT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD99F"},121248:{"value":"1D9A0","name":"SIGNWRITING MOVEMENT-WALLPLANE CURVED CROSS SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9A0"},121249:{"value":"1D9A1","name":"SIGNWRITING MOVEMENT-WALLPLANE CURVED CROSS MEDIUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9A1"},121250:{"value":"1D9A2","name":"SIGNWRITING ROTATION-WALLPLANE SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9A2"},121251:{"value":"1D9A3","name":"SIGNWRITING ROTATION-WALLPLANE DOUBLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9A3"},121252:{"value":"1D9A4","name":"SIGNWRITING ROTATION-WALLPLANE ALTERNATE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9A4"},121253:{"value":"1D9A5","name":"SIGNWRITING MOVEMENT-WALLPLANE SHAKING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9A5"},121254:{"value":"1D9A6","name":"SIGNWRITING MOVEMENT-WALLPLANE CURVE HITTING FRONT WALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9A6"},121255:{"value":"1D9A7","name":"SIGNWRITING MOVEMENT-WALLPLANE HUMP HITTING FRONT WALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9A7"},121256:{"value":"1D9A8","name":"SIGNWRITING MOVEMENT-WALLPLANE LOOP HITTING FRONT WALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9A8"},121257:{"value":"1D9A9","name":"SIGNWRITING MOVEMENT-WALLPLANE WAVE HITTING FRONT WALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9A9"},121258:{"value":"1D9AA","name":"SIGNWRITING ROTATION-WALLPLANE SINGLE HITTING FRONT WALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9AA"},121259:{"value":"1D9AB","name":"SIGNWRITING ROTATION-WALLPLANE DOUBLE HITTING FRONT WALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9AB"},121260:{"value":"1D9AC","name":"SIGNWRITING ROTATION-WALLPLANE ALTERNATING HITTING FRONT WALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9AC"},121261:{"value":"1D9AD","name":"SIGNWRITING MOVEMENT-WALLPLANE CURVE HITTING CHEST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9AD"},121262:{"value":"1D9AE","name":"SIGNWRITING MOVEMENT-WALLPLANE HUMP HITTING CHEST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9AE"},121263:{"value":"1D9AF","name":"SIGNWRITING MOVEMENT-WALLPLANE LOOP HITTING CHEST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9AF"},121264:{"value":"1D9B0","name":"SIGNWRITING MOVEMENT-WALLPLANE WAVE HITTING CHEST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9B0"},121265:{"value":"1D9B1","name":"SIGNWRITING ROTATION-WALLPLANE SINGLE HITTING CHEST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9B1"},121266:{"value":"1D9B2","name":"SIGNWRITING ROTATION-WALLPLANE DOUBLE HITTING CHEST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9B2"},121267:{"value":"1D9B3","name":"SIGNWRITING ROTATION-WALLPLANE ALTERNATING HITTING CHEST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9B3"},121268:{"value":"1D9B4","name":"SIGNWRITING MOVEMENT-WALLPLANE WAVE DIAGONAL PATH SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9B4"},121269:{"value":"1D9B5","name":"SIGNWRITING MOVEMENT-WALLPLANE WAVE DIAGONAL PATH MEDIUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9B5"},121270:{"value":"1D9B6","name":"SIGNWRITING MOVEMENT-WALLPLANE WAVE DIAGONAL PATH LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9B6"},121271:{"value":"1D9B7","name":"SIGNWRITING MOVEMENT-FLOORPLANE CURVE HITTING CEILING SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9B7"},121272:{"value":"1D9B8","name":"SIGNWRITING MOVEMENT-FLOORPLANE CURVE HITTING CEILING LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9B8"},121273:{"value":"1D9B9","name":"SIGNWRITING MOVEMENT-FLOORPLANE HUMP HITTING CEILING SMALL DOUBLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9B9"},121274:{"value":"1D9BA","name":"SIGNWRITING MOVEMENT-FLOORPLANE HUMP HITTING CEILING LARGE DOUBLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9BA"},121275:{"value":"1D9BB","name":"SIGNWRITING MOVEMENT-FLOORPLANE HUMP HITTING CEILING SMALL TRIPLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9BB"},121276:{"value":"1D9BC","name":"SIGNWRITING MOVEMENT-FLOORPLANE HUMP HITTING CEILING LARGE TRIPLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9BC"},121277:{"value":"1D9BD","name":"SIGNWRITING MOVEMENT-FLOORPLANE LOOP HITTING CEILING SMALL SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9BD"},121278:{"value":"1D9BE","name":"SIGNWRITING MOVEMENT-FLOORPLANE LOOP HITTING CEILING LARGE SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9BE"},121279:{"value":"1D9BF","name":"SIGNWRITING MOVEMENT-FLOORPLANE LOOP HITTING CEILING SMALL DOUBLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9BF"},121280:{"value":"1D9C0","name":"SIGNWRITING MOVEMENT-FLOORPLANE LOOP HITTING CEILING LARGE DOUBLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9C0"},121281:{"value":"1D9C1","name":"SIGNWRITING MOVEMENT-FLOORPLANE WAVE HITTING CEILING SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9C1"},121282:{"value":"1D9C2","name":"SIGNWRITING MOVEMENT-FLOORPLANE WAVE HITTING CEILING LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9C2"},121283:{"value":"1D9C3","name":"SIGNWRITING ROTATION-FLOORPLANE SINGLE HITTING CEILING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9C3"},121284:{"value":"1D9C4","name":"SIGNWRITING ROTATION-FLOORPLANE DOUBLE HITTING CEILING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9C4"},121285:{"value":"1D9C5","name":"SIGNWRITING ROTATION-FLOORPLANE ALTERNATING HITTING CEILING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9C5"},121286:{"value":"1D9C6","name":"SIGNWRITING MOVEMENT-FLOORPLANE CURVE HITTING FLOOR SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9C6"},121287:{"value":"1D9C7","name":"SIGNWRITING MOVEMENT-FLOORPLANE CURVE HITTING FLOOR LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9C7"},121288:{"value":"1D9C8","name":"SIGNWRITING MOVEMENT-FLOORPLANE HUMP HITTING FLOOR SMALL DOUBLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9C8"},121289:{"value":"1D9C9","name":"SIGNWRITING MOVEMENT-FLOORPLANE HUMP HITTING FLOOR LARGE DOUBLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9C9"},121290:{"value":"1D9CA","name":"SIGNWRITING MOVEMENT-FLOORPLANE HUMP HITTING FLOOR TRIPLE SMALL TRIPLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9CA"},121291:{"value":"1D9CB","name":"SIGNWRITING MOVEMENT-FLOORPLANE HUMP HITTING FLOOR TRIPLE LARGE TRIPLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9CB"},121292:{"value":"1D9CC","name":"SIGNWRITING MOVEMENT-FLOORPLANE LOOP HITTING FLOOR SMALL SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9CC"},121293:{"value":"1D9CD","name":"SIGNWRITING MOVEMENT-FLOORPLANE LOOP HITTING FLOOR LARGE SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9CD"},121294:{"value":"1D9CE","name":"SIGNWRITING MOVEMENT-FLOORPLANE LOOP HITTING FLOOR SMALL DOUBLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9CE"},121295:{"value":"1D9CF","name":"SIGNWRITING MOVEMENT-FLOORPLANE LOOP HITTING FLOOR LARGE DOUBLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9CF"},121296:{"value":"1D9D0","name":"SIGNWRITING MOVEMENT-FLOORPLANE WAVE HITTING FLOOR SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9D0"},121297:{"value":"1D9D1","name":"SIGNWRITING MOVEMENT-FLOORPLANE WAVE HITTING FLOOR LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9D1"},121298:{"value":"1D9D2","name":"SIGNWRITING ROTATION-FLOORPLANE SINGLE HITTING FLOOR","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9D2"},121299:{"value":"1D9D3","name":"SIGNWRITING ROTATION-FLOORPLANE DOUBLE HITTING FLOOR","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9D3"},121300:{"value":"1D9D4","name":"SIGNWRITING ROTATION-FLOORPLANE ALTERNATING HITTING FLOOR","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9D4"},121301:{"value":"1D9D5","name":"SIGNWRITING MOVEMENT-FLOORPLANE CURVE SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9D5"},121302:{"value":"1D9D6","name":"SIGNWRITING MOVEMENT-FLOORPLANE CURVE MEDIUM","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9D6"},121303:{"value":"1D9D7","name":"SIGNWRITING MOVEMENT-FLOORPLANE CURVE LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9D7"},121304:{"value":"1D9D8","name":"SIGNWRITING MOVEMENT-FLOORPLANE CURVE LARGEST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9D8"},121305:{"value":"1D9D9","name":"SIGNWRITING MOVEMENT-FLOORPLANE CURVE COMBINED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9D9"},121306:{"value":"1D9DA","name":"SIGNWRITING MOVEMENT-FLOORPLANE HUMP SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9DA"},121307:{"value":"1D9DB","name":"SIGNWRITING MOVEMENT-FLOORPLANE LOOP SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9DB"},121308:{"value":"1D9DC","name":"SIGNWRITING MOVEMENT-FLOORPLANE WAVE SNAKE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9DC"},121309:{"value":"1D9DD","name":"SIGNWRITING MOVEMENT-FLOORPLANE WAVE SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9DD"},121310:{"value":"1D9DE","name":"SIGNWRITING MOVEMENT-FLOORPLANE WAVE LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9DE"},121311:{"value":"1D9DF","name":"SIGNWRITING ROTATION-FLOORPLANE SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9DF"},121312:{"value":"1D9E0","name":"SIGNWRITING ROTATION-FLOORPLANE DOUBLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9E0"},121313:{"value":"1D9E1","name":"SIGNWRITING ROTATION-FLOORPLANE ALTERNATING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9E1"},121314:{"value":"1D9E2","name":"SIGNWRITING MOVEMENT-FLOORPLANE SHAKING PARALLEL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9E2"},121315:{"value":"1D9E3","name":"SIGNWRITING MOVEMENT-WALLPLANE ARM CIRCLE SMALL SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9E3"},121316:{"value":"1D9E4","name":"SIGNWRITING MOVEMENT-WALLPLANE ARM CIRCLE MEDIUM SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9E4"},121317:{"value":"1D9E5","name":"SIGNWRITING MOVEMENT-WALLPLANE ARM CIRCLE SMALL DOUBLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9E5"},121318:{"value":"1D9E6","name":"SIGNWRITING MOVEMENT-WALLPLANE ARM CIRCLE MEDIUM DOUBLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9E6"},121319:{"value":"1D9E7","name":"SIGNWRITING MOVEMENT-FLOORPLANE ARM CIRCLE HITTING WALL SMALL SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9E7"},121320:{"value":"1D9E8","name":"SIGNWRITING MOVEMENT-FLOORPLANE ARM CIRCLE HITTING WALL MEDIUM SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9E8"},121321:{"value":"1D9E9","name":"SIGNWRITING MOVEMENT-FLOORPLANE ARM CIRCLE HITTING WALL LARGE SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9E9"},121322:{"value":"1D9EA","name":"SIGNWRITING MOVEMENT-FLOORPLANE ARM CIRCLE HITTING WALL SMALL DOUBLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9EA"},121323:{"value":"1D9EB","name":"SIGNWRITING MOVEMENT-FLOORPLANE ARM CIRCLE HITTING WALL MEDIUM DOUBLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9EB"},121324:{"value":"1D9EC","name":"SIGNWRITING MOVEMENT-FLOORPLANE ARM CIRCLE HITTING WALL LARGE DOUBLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9EC"},121325:{"value":"1D9ED","name":"SIGNWRITING MOVEMENT-WALLPLANE WRIST CIRCLE FRONT SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9ED"},121326:{"value":"1D9EE","name":"SIGNWRITING MOVEMENT-WALLPLANE WRIST CIRCLE FRONT DOUBLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9EE"},121327:{"value":"1D9EF","name":"SIGNWRITING MOVEMENT-FLOORPLANE WRIST CIRCLE HITTING WALL SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9EF"},121328:{"value":"1D9F0","name":"SIGNWRITING MOVEMENT-FLOORPLANE WRIST CIRCLE HITTING WALL DOUBLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9F0"},121329:{"value":"1D9F1","name":"SIGNWRITING MOVEMENT-WALLPLANE FINGER CIRCLES SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9F1"},121330:{"value":"1D9F2","name":"SIGNWRITING MOVEMENT-WALLPLANE FINGER CIRCLES DOUBLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9F2"},121331:{"value":"1D9F3","name":"SIGNWRITING MOVEMENT-FLOORPLANE FINGER CIRCLES HITTING WALL SINGLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9F3"},121332:{"value":"1D9F4","name":"SIGNWRITING MOVEMENT-FLOORPLANE FINGER CIRCLES HITTING WALL DOUBLE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9F4"},121333:{"value":"1D9F5","name":"SIGNWRITING DYNAMIC ARROWHEAD SMALL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9F5"},121334:{"value":"1D9F6","name":"SIGNWRITING DYNAMIC ARROWHEAD LARGE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9F6"},121335:{"value":"1D9F7","name":"SIGNWRITING DYNAMIC FAST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9F7"},121336:{"value":"1D9F8","name":"SIGNWRITING DYNAMIC SLOW","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9F8"},121337:{"value":"1D9F9","name":"SIGNWRITING DYNAMIC TENSE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9F9"},121338:{"value":"1D9FA","name":"SIGNWRITING DYNAMIC RELAXED","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9FA"},121339:{"value":"1D9FB","name":"SIGNWRITING DYNAMIC SIMULTANEOUS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9FB"},121340:{"value":"1D9FC","name":"SIGNWRITING DYNAMIC SIMULTANEOUS ALTERNATING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9FC"},121341:{"value":"1D9FD","name":"SIGNWRITING DYNAMIC EVERY OTHER TIME","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9FD"},121342:{"value":"1D9FE","name":"SIGNWRITING DYNAMIC GRADUAL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9FE"},121343:{"value":"1D9FF","name":"SIGNWRITING HEAD","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uD9FF"},121399:{"value":"1DA37","name":"SIGNWRITING AIR BLOW SMALL ROTATIONS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA37"},121400:{"value":"1DA38","name":"SIGNWRITING AIR SUCK SMALL ROTATIONS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA38"},121401:{"value":"1DA39","name":"SIGNWRITING BREATH INHALE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA39"},121402:{"value":"1DA3A","name":"SIGNWRITING BREATH EXHALE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA3A"},121453:{"value":"1DA6D","name":"SIGNWRITING SHOULDER HIP SPINE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA6D"},121454:{"value":"1DA6E","name":"SIGNWRITING SHOULDER HIP POSITIONS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA6E"},121455:{"value":"1DA6F","name":"SIGNWRITING WALLPLANE SHOULDER HIP MOVE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA6F"},121456:{"value":"1DA70","name":"SIGNWRITING FLOORPLANE SHOULDER HIP MOVE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA70"},121457:{"value":"1DA71","name":"SIGNWRITING SHOULDER TILTING FROM WAIST","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA71"},121458:{"value":"1DA72","name":"SIGNWRITING TORSO-WALLPLANE STRAIGHT STRETCH","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA72"},121459:{"value":"1DA73","name":"SIGNWRITING TORSO-WALLPLANE CURVED BEND","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA73"},121460:{"value":"1DA74","name":"SIGNWRITING TORSO-FLOORPLANE TWISTING","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA74"},121462:{"value":"1DA76","name":"SIGNWRITING LIMB COMBINATION","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA76"},121463:{"value":"1DA77","name":"SIGNWRITING LIMB LENGTH-1","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA77"},121464:{"value":"1DA78","name":"SIGNWRITING LIMB LENGTH-2","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA78"},121465:{"value":"1DA79","name":"SIGNWRITING LIMB LENGTH-3","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA79"},121466:{"value":"1DA7A","name":"SIGNWRITING LIMB LENGTH-4","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA7A"},121467:{"value":"1DA7B","name":"SIGNWRITING LIMB LENGTH-5","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA7B"},121468:{"value":"1DA7C","name":"SIGNWRITING LIMB LENGTH-6","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA7C"},121469:{"value":"1DA7D","name":"SIGNWRITING LIMB LENGTH-7","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA7D"},121470:{"value":"1DA7E","name":"SIGNWRITING FINGER","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA7E"},121471:{"value":"1DA7F","name":"SIGNWRITING LOCATION-WALLPLANE SPACE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA7F"},121472:{"value":"1DA80","name":"SIGNWRITING LOCATION-FLOORPLANE SPACE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA80"},121473:{"value":"1DA81","name":"SIGNWRITING LOCATION HEIGHT","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA81"},121474:{"value":"1DA82","name":"SIGNWRITING LOCATION WIDTH","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA82"},121475:{"value":"1DA83","name":"SIGNWRITING LOCATION DEPTH","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA83"},121477:{"value":"1DA85","name":"SIGNWRITING LOCATION TORSO","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA85"},121478:{"value":"1DA86","name":"SIGNWRITING LOCATION LIMBS DIGITS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uDA86"},126976:{"value":"1F000","name":"MAHJONG TILE EAST WIND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF000"},126977:{"value":"1F001","name":"MAHJONG TILE SOUTH WIND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF001"},126978:{"value":"1F002","name":"MAHJONG TILE WEST WIND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF002"},126979:{"value":"1F003","name":"MAHJONG TILE NORTH WIND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF003"},126980:{"value":"1F004","name":"MAHJONG TILE RED DRAGON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF004"},126981:{"value":"1F005","name":"MAHJONG TILE GREEN DRAGON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF005"},126982:{"value":"1F006","name":"MAHJONG TILE WHITE DRAGON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF006"},126983:{"value":"1F007","name":"MAHJONG TILE ONE OF CHARACTERS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF007"},126984:{"value":"1F008","name":"MAHJONG TILE TWO OF CHARACTERS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF008"},126985:{"value":"1F009","name":"MAHJONG TILE THREE OF CHARACTERS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF009"},126986:{"value":"1F00A","name":"MAHJONG TILE FOUR OF CHARACTERS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF00A"},126987:{"value":"1F00B","name":"MAHJONG TILE FIVE OF CHARACTERS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF00B"},126988:{"value":"1F00C","name":"MAHJONG TILE SIX OF CHARACTERS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF00C"},126989:{"value":"1F00D","name":"MAHJONG TILE SEVEN OF CHARACTERS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF00D"},126990:{"value":"1F00E","name":"MAHJONG TILE EIGHT OF CHARACTERS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF00E"},126991:{"value":"1F00F","name":"MAHJONG TILE NINE OF CHARACTERS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF00F"},126992:{"value":"1F010","name":"MAHJONG TILE ONE OF BAMBOOS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF010"},126993:{"value":"1F011","name":"MAHJONG TILE TWO OF BAMBOOS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF011"},126994:{"value":"1F012","name":"MAHJONG TILE THREE OF BAMBOOS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF012"},126995:{"value":"1F013","name":"MAHJONG TILE FOUR OF BAMBOOS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF013"},126996:{"value":"1F014","name":"MAHJONG TILE FIVE OF BAMBOOS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF014"},126997:{"value":"1F015","name":"MAHJONG TILE SIX OF BAMBOOS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF015"},126998:{"value":"1F016","name":"MAHJONG TILE SEVEN OF BAMBOOS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF016"},126999:{"value":"1F017","name":"MAHJONG TILE EIGHT OF BAMBOOS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF017"},127000:{"value":"1F018","name":"MAHJONG TILE NINE OF BAMBOOS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF018"},127001:{"value":"1F019","name":"MAHJONG TILE ONE OF CIRCLES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF019"},127002:{"value":"1F01A","name":"MAHJONG TILE TWO OF CIRCLES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF01A"},127003:{"value":"1F01B","name":"MAHJONG TILE THREE OF CIRCLES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF01B"},127004:{"value":"1F01C","name":"MAHJONG TILE FOUR OF CIRCLES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF01C"},127005:{"value":"1F01D","name":"MAHJONG TILE FIVE OF CIRCLES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF01D"},127006:{"value":"1F01E","name":"MAHJONG TILE SIX OF CIRCLES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF01E"},127007:{"value":"1F01F","name":"MAHJONG TILE SEVEN OF CIRCLES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF01F"},127008:{"value":"1F020","name":"MAHJONG TILE EIGHT OF CIRCLES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF020"},127009:{"value":"1F021","name":"MAHJONG TILE NINE OF CIRCLES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF021"},127010:{"value":"1F022","name":"MAHJONG TILE PLUM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF022"},127011:{"value":"1F023","name":"MAHJONG TILE ORCHID","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF023"},127012:{"value":"1F024","name":"MAHJONG TILE BAMBOO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF024"},127013:{"value":"1F025","name":"MAHJONG TILE CHRYSANTHEMUM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF025"},127014:{"value":"1F026","name":"MAHJONG TILE SPRING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF026"},127015:{"value":"1F027","name":"MAHJONG TILE SUMMER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF027"},127016:{"value":"1F028","name":"MAHJONG TILE AUTUMN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF028"},127017:{"value":"1F029","name":"MAHJONG TILE WINTER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF029"},127018:{"value":"1F02A","name":"MAHJONG TILE JOKER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF02A"},127019:{"value":"1F02B","name":"MAHJONG TILE BACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF02B"},127024:{"value":"1F030","name":"DOMINO TILE HORIZONTAL BACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF030"},127025:{"value":"1F031","name":"DOMINO TILE HORIZONTAL-00-00","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF031"},127026:{"value":"1F032","name":"DOMINO TILE HORIZONTAL-00-01","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF032"},127027:{"value":"1F033","name":"DOMINO TILE HORIZONTAL-00-02","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF033"},127028:{"value":"1F034","name":"DOMINO TILE HORIZONTAL-00-03","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF034"},127029:{"value":"1F035","name":"DOMINO TILE HORIZONTAL-00-04","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF035"},127030:{"value":"1F036","name":"DOMINO TILE HORIZONTAL-00-05","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF036"},127031:{"value":"1F037","name":"DOMINO TILE HORIZONTAL-00-06","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF037"},127032:{"value":"1F038","name":"DOMINO TILE HORIZONTAL-01-00","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF038"},127033:{"value":"1F039","name":"DOMINO TILE HORIZONTAL-01-01","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF039"},127034:{"value":"1F03A","name":"DOMINO TILE HORIZONTAL-01-02","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF03A"},127035:{"value":"1F03B","name":"DOMINO TILE HORIZONTAL-01-03","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF03B"},127036:{"value":"1F03C","name":"DOMINO TILE HORIZONTAL-01-04","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF03C"},127037:{"value":"1F03D","name":"DOMINO TILE HORIZONTAL-01-05","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF03D"},127038:{"value":"1F03E","name":"DOMINO TILE HORIZONTAL-01-06","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF03E"},127039:{"value":"1F03F","name":"DOMINO TILE HORIZONTAL-02-00","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF03F"},127040:{"value":"1F040","name":"DOMINO TILE HORIZONTAL-02-01","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF040"},127041:{"value":"1F041","name":"DOMINO TILE HORIZONTAL-02-02","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF041"},127042:{"value":"1F042","name":"DOMINO TILE HORIZONTAL-02-03","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF042"},127043:{"value":"1F043","name":"DOMINO TILE HORIZONTAL-02-04","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF043"},127044:{"value":"1F044","name":"DOMINO TILE HORIZONTAL-02-05","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF044"},127045:{"value":"1F045","name":"DOMINO TILE HORIZONTAL-02-06","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF045"},127046:{"value":"1F046","name":"DOMINO TILE HORIZONTAL-03-00","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF046"},127047:{"value":"1F047","name":"DOMINO TILE HORIZONTAL-03-01","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF047"},127048:{"value":"1F048","name":"DOMINO TILE HORIZONTAL-03-02","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF048"},127049:{"value":"1F049","name":"DOMINO TILE HORIZONTAL-03-03","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF049"},127050:{"value":"1F04A","name":"DOMINO TILE HORIZONTAL-03-04","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF04A"},127051:{"value":"1F04B","name":"DOMINO TILE HORIZONTAL-03-05","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF04B"},127052:{"value":"1F04C","name":"DOMINO TILE HORIZONTAL-03-06","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF04C"},127053:{"value":"1F04D","name":"DOMINO TILE HORIZONTAL-04-00","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF04D"},127054:{"value":"1F04E","name":"DOMINO TILE HORIZONTAL-04-01","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF04E"},127055:{"value":"1F04F","name":"DOMINO TILE HORIZONTAL-04-02","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF04F"},127056:{"value":"1F050","name":"DOMINO TILE HORIZONTAL-04-03","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF050"},127057:{"value":"1F051","name":"DOMINO TILE HORIZONTAL-04-04","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF051"},127058:{"value":"1F052","name":"DOMINO TILE HORIZONTAL-04-05","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF052"},127059:{"value":"1F053","name":"DOMINO TILE HORIZONTAL-04-06","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF053"},127060:{"value":"1F054","name":"DOMINO TILE HORIZONTAL-05-00","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF054"},127061:{"value":"1F055","name":"DOMINO TILE HORIZONTAL-05-01","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF055"},127062:{"value":"1F056","name":"DOMINO TILE HORIZONTAL-05-02","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF056"},127063:{"value":"1F057","name":"DOMINO TILE HORIZONTAL-05-03","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF057"},127064:{"value":"1F058","name":"DOMINO TILE HORIZONTAL-05-04","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF058"},127065:{"value":"1F059","name":"DOMINO TILE HORIZONTAL-05-05","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF059"},127066:{"value":"1F05A","name":"DOMINO TILE HORIZONTAL-05-06","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF05A"},127067:{"value":"1F05B","name":"DOMINO TILE HORIZONTAL-06-00","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF05B"},127068:{"value":"1F05C","name":"DOMINO TILE HORIZONTAL-06-01","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF05C"},127069:{"value":"1F05D","name":"DOMINO TILE HORIZONTAL-06-02","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF05D"},127070:{"value":"1F05E","name":"DOMINO TILE HORIZONTAL-06-03","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF05E"},127071:{"value":"1F05F","name":"DOMINO TILE HORIZONTAL-06-04","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF05F"},127072:{"value":"1F060","name":"DOMINO TILE HORIZONTAL-06-05","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF060"},127073:{"value":"1F061","name":"DOMINO TILE HORIZONTAL-06-06","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF061"},127074:{"value":"1F062","name":"DOMINO TILE VERTICAL BACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF062"},127075:{"value":"1F063","name":"DOMINO TILE VERTICAL-00-00","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF063"},127076:{"value":"1F064","name":"DOMINO TILE VERTICAL-00-01","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF064"},127077:{"value":"1F065","name":"DOMINO TILE VERTICAL-00-02","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF065"},127078:{"value":"1F066","name":"DOMINO TILE VERTICAL-00-03","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF066"},127079:{"value":"1F067","name":"DOMINO TILE VERTICAL-00-04","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF067"},127080:{"value":"1F068","name":"DOMINO TILE VERTICAL-00-05","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF068"},127081:{"value":"1F069","name":"DOMINO TILE VERTICAL-00-06","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF069"},127082:{"value":"1F06A","name":"DOMINO TILE VERTICAL-01-00","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF06A"},127083:{"value":"1F06B","name":"DOMINO TILE VERTICAL-01-01","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF06B"},127084:{"value":"1F06C","name":"DOMINO TILE VERTICAL-01-02","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF06C"},127085:{"value":"1F06D","name":"DOMINO TILE VERTICAL-01-03","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF06D"},127086:{"value":"1F06E","name":"DOMINO TILE VERTICAL-01-04","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF06E"},127087:{"value":"1F06F","name":"DOMINO TILE VERTICAL-01-05","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF06F"},127088:{"value":"1F070","name":"DOMINO TILE VERTICAL-01-06","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF070"},127089:{"value":"1F071","name":"DOMINO TILE VERTICAL-02-00","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF071"},127090:{"value":"1F072","name":"DOMINO TILE VERTICAL-02-01","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF072"},127091:{"value":"1F073","name":"DOMINO TILE VERTICAL-02-02","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF073"},127092:{"value":"1F074","name":"DOMINO TILE VERTICAL-02-03","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF074"},127093:{"value":"1F075","name":"DOMINO TILE VERTICAL-02-04","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF075"},127094:{"value":"1F076","name":"DOMINO TILE VERTICAL-02-05","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF076"},127095:{"value":"1F077","name":"DOMINO TILE VERTICAL-02-06","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF077"},127096:{"value":"1F078","name":"DOMINO TILE VERTICAL-03-00","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF078"},127097:{"value":"1F079","name":"DOMINO TILE VERTICAL-03-01","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF079"},127098:{"value":"1F07A","name":"DOMINO TILE VERTICAL-03-02","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF07A"},127099:{"value":"1F07B","name":"DOMINO TILE VERTICAL-03-03","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF07B"},127100:{"value":"1F07C","name":"DOMINO TILE VERTICAL-03-04","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF07C"},127101:{"value":"1F07D","name":"DOMINO TILE VERTICAL-03-05","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF07D"},127102:{"value":"1F07E","name":"DOMINO TILE VERTICAL-03-06","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF07E"},127103:{"value":"1F07F","name":"DOMINO TILE VERTICAL-04-00","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF07F"},127104:{"value":"1F080","name":"DOMINO TILE VERTICAL-04-01","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF080"},127105:{"value":"1F081","name":"DOMINO TILE VERTICAL-04-02","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF081"},127106:{"value":"1F082","name":"DOMINO TILE VERTICAL-04-03","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF082"},127107:{"value":"1F083","name":"DOMINO TILE VERTICAL-04-04","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF083"},127108:{"value":"1F084","name":"DOMINO TILE VERTICAL-04-05","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF084"},127109:{"value":"1F085","name":"DOMINO TILE VERTICAL-04-06","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF085"},127110:{"value":"1F086","name":"DOMINO TILE VERTICAL-05-00","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF086"},127111:{"value":"1F087","name":"DOMINO TILE VERTICAL-05-01","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF087"},127112:{"value":"1F088","name":"DOMINO TILE VERTICAL-05-02","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF088"},127113:{"value":"1F089","name":"DOMINO TILE VERTICAL-05-03","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF089"},127114:{"value":"1F08A","name":"DOMINO TILE VERTICAL-05-04","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF08A"},127115:{"value":"1F08B","name":"DOMINO TILE VERTICAL-05-05","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF08B"},127116:{"value":"1F08C","name":"DOMINO TILE VERTICAL-05-06","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF08C"},127117:{"value":"1F08D","name":"DOMINO TILE VERTICAL-06-00","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF08D"},127118:{"value":"1F08E","name":"DOMINO TILE VERTICAL-06-01","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF08E"},127119:{"value":"1F08F","name":"DOMINO TILE VERTICAL-06-02","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF08F"},127120:{"value":"1F090","name":"DOMINO TILE VERTICAL-06-03","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF090"},127121:{"value":"1F091","name":"DOMINO TILE VERTICAL-06-04","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF091"},127122:{"value":"1F092","name":"DOMINO TILE VERTICAL-06-05","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF092"},127123:{"value":"1F093","name":"DOMINO TILE VERTICAL-06-06","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF093"},127136:{"value":"1F0A0","name":"PLAYING CARD BACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0A0"},127137:{"value":"1F0A1","name":"PLAYING CARD ACE OF SPADES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0A1"},127138:{"value":"1F0A2","name":"PLAYING CARD TWO OF SPADES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0A2"},127139:{"value":"1F0A3","name":"PLAYING CARD THREE OF SPADES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0A3"},127140:{"value":"1F0A4","name":"PLAYING CARD FOUR OF SPADES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0A4"},127141:{"value":"1F0A5","name":"PLAYING CARD FIVE OF SPADES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0A5"},127142:{"value":"1F0A6","name":"PLAYING CARD SIX OF SPADES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0A6"},127143:{"value":"1F0A7","name":"PLAYING CARD SEVEN OF SPADES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0A7"},127144:{"value":"1F0A8","name":"PLAYING CARD EIGHT OF SPADES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0A8"},127145:{"value":"1F0A9","name":"PLAYING CARD NINE OF SPADES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0A9"},127146:{"value":"1F0AA","name":"PLAYING CARD TEN OF SPADES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0AA"},127147:{"value":"1F0AB","name":"PLAYING CARD JACK OF SPADES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0AB"},127148:{"value":"1F0AC","name":"PLAYING CARD KNIGHT OF SPADES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0AC"},127149:{"value":"1F0AD","name":"PLAYING CARD QUEEN OF SPADES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0AD"},127150:{"value":"1F0AE","name":"PLAYING CARD KING OF SPADES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0AE"},127153:{"value":"1F0B1","name":"PLAYING CARD ACE OF HEARTS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0B1"},127154:{"value":"1F0B2","name":"PLAYING CARD TWO OF HEARTS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0B2"},127155:{"value":"1F0B3","name":"PLAYING CARD THREE OF HEARTS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0B3"},127156:{"value":"1F0B4","name":"PLAYING CARD FOUR OF HEARTS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0B4"},127157:{"value":"1F0B5","name":"PLAYING CARD FIVE OF HEARTS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0B5"},127158:{"value":"1F0B6","name":"PLAYING CARD SIX OF HEARTS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0B6"},127159:{"value":"1F0B7","name":"PLAYING CARD SEVEN OF HEARTS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0B7"},127160:{"value":"1F0B8","name":"PLAYING CARD EIGHT OF HEARTS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0B8"},127161:{"value":"1F0B9","name":"PLAYING CARD NINE OF HEARTS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0B9"},127162:{"value":"1F0BA","name":"PLAYING CARD TEN OF HEARTS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0BA"},127163:{"value":"1F0BB","name":"PLAYING CARD JACK OF HEARTS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0BB"},127164:{"value":"1F0BC","name":"PLAYING CARD KNIGHT OF HEARTS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0BC"},127165:{"value":"1F0BD","name":"PLAYING CARD QUEEN OF HEARTS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0BD"},127166:{"value":"1F0BE","name":"PLAYING CARD KING OF HEARTS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0BE"},127167:{"value":"1F0BF","name":"PLAYING CARD RED JOKER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0BF"},127169:{"value":"1F0C1","name":"PLAYING CARD ACE OF DIAMONDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0C1"},127170:{"value":"1F0C2","name":"PLAYING CARD TWO OF DIAMONDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0C2"},127171:{"value":"1F0C3","name":"PLAYING CARD THREE OF DIAMONDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0C3"},127172:{"value":"1F0C4","name":"PLAYING CARD FOUR OF DIAMONDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0C4"},127173:{"value":"1F0C5","name":"PLAYING CARD FIVE OF DIAMONDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0C5"},127174:{"value":"1F0C6","name":"PLAYING CARD SIX OF DIAMONDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0C6"},127175:{"value":"1F0C7","name":"PLAYING CARD SEVEN OF DIAMONDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0C7"},127176:{"value":"1F0C8","name":"PLAYING CARD EIGHT OF DIAMONDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0C8"},127177:{"value":"1F0C9","name":"PLAYING CARD NINE OF DIAMONDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0C9"},127178:{"value":"1F0CA","name":"PLAYING CARD TEN OF DIAMONDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0CA"},127179:{"value":"1F0CB","name":"PLAYING CARD JACK OF DIAMONDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0CB"},127180:{"value":"1F0CC","name":"PLAYING CARD KNIGHT OF DIAMONDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0CC"},127181:{"value":"1F0CD","name":"PLAYING CARD QUEEN OF DIAMONDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0CD"},127182:{"value":"1F0CE","name":"PLAYING CARD KING OF DIAMONDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0CE"},127183:{"value":"1F0CF","name":"PLAYING CARD BLACK JOKER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0CF"},127185:{"value":"1F0D1","name":"PLAYING CARD ACE OF CLUBS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0D1"},127186:{"value":"1F0D2","name":"PLAYING CARD TWO OF CLUBS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0D2"},127187:{"value":"1F0D3","name":"PLAYING CARD THREE OF CLUBS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0D3"},127188:{"value":"1F0D4","name":"PLAYING CARD FOUR OF CLUBS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0D4"},127189:{"value":"1F0D5","name":"PLAYING CARD FIVE OF CLUBS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0D5"},127190:{"value":"1F0D6","name":"PLAYING CARD SIX OF CLUBS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0D6"},127191:{"value":"1F0D7","name":"PLAYING CARD SEVEN OF CLUBS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0D7"},127192:{"value":"1F0D8","name":"PLAYING CARD EIGHT OF CLUBS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0D8"},127193:{"value":"1F0D9","name":"PLAYING CARD NINE OF CLUBS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0D9"},127194:{"value":"1F0DA","name":"PLAYING CARD TEN OF CLUBS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0DA"},127195:{"value":"1F0DB","name":"PLAYING CARD JACK OF CLUBS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0DB"},127196:{"value":"1F0DC","name":"PLAYING CARD KNIGHT OF CLUBS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0DC"},127197:{"value":"1F0DD","name":"PLAYING CARD QUEEN OF CLUBS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0DD"},127198:{"value":"1F0DE","name":"PLAYING CARD KING OF CLUBS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0DE"},127199:{"value":"1F0DF","name":"PLAYING CARD WHITE JOKER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0DF"},127200:{"value":"1F0E0","name":"PLAYING CARD FOOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0E0"},127201:{"value":"1F0E1","name":"PLAYING CARD TRUMP-1","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0E1"},127202:{"value":"1F0E2","name":"PLAYING CARD TRUMP-2","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0E2"},127203:{"value":"1F0E3","name":"PLAYING CARD TRUMP-3","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0E3"},127204:{"value":"1F0E4","name":"PLAYING CARD TRUMP-4","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0E4"},127205:{"value":"1F0E5","name":"PLAYING CARD TRUMP-5","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0E5"},127206:{"value":"1F0E6","name":"PLAYING CARD TRUMP-6","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0E6"},127207:{"value":"1F0E7","name":"PLAYING CARD TRUMP-7","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0E7"},127208:{"value":"1F0E8","name":"PLAYING CARD TRUMP-8","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0E8"},127209:{"value":"1F0E9","name":"PLAYING CARD TRUMP-9","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0E9"},127210:{"value":"1F0EA","name":"PLAYING CARD TRUMP-10","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0EA"},127211:{"value":"1F0EB","name":"PLAYING CARD TRUMP-11","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0EB"},127212:{"value":"1F0EC","name":"PLAYING CARD TRUMP-12","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0EC"},127213:{"value":"1F0ED","name":"PLAYING CARD TRUMP-13","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0ED"},127214:{"value":"1F0EE","name":"PLAYING CARD TRUMP-14","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0EE"},127215:{"value":"1F0EF","name":"PLAYING CARD TRUMP-15","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0EF"},127216:{"value":"1F0F0","name":"PLAYING CARD TRUMP-16","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0F0"},127217:{"value":"1F0F1","name":"PLAYING CARD TRUMP-17","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0F1"},127218:{"value":"1F0F2","name":"PLAYING CARD TRUMP-18","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0F2"},127219:{"value":"1F0F3","name":"PLAYING CARD TRUMP-19","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0F3"},127220:{"value":"1F0F4","name":"PLAYING CARD TRUMP-20","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0F4"},127221:{"value":"1F0F5","name":"PLAYING CARD TRUMP-21","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF0F5"},127248:{"value":"1F110","name":"PARENTHESIZED LATIN CAPITAL LETTER A","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0041 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF110"},127249:{"value":"1F111","name":"PARENTHESIZED LATIN CAPITAL LETTER B","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0042 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF111"},127250:{"value":"1F112","name":"PARENTHESIZED LATIN CAPITAL LETTER C","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0043 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF112"},127251:{"value":"1F113","name":"PARENTHESIZED LATIN CAPITAL LETTER D","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0044 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF113"},127252:{"value":"1F114","name":"PARENTHESIZED LATIN CAPITAL LETTER E","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0045 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF114"},127253:{"value":"1F115","name":"PARENTHESIZED LATIN CAPITAL LETTER F","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0046 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF115"},127254:{"value":"1F116","name":"PARENTHESIZED LATIN CAPITAL LETTER G","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0047 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF116"},127255:{"value":"1F117","name":"PARENTHESIZED LATIN CAPITAL LETTER H","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0048 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF117"},127256:{"value":"1F118","name":"PARENTHESIZED LATIN CAPITAL LETTER I","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0049 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF118"},127257:{"value":"1F119","name":"PARENTHESIZED LATIN CAPITAL LETTER J","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 004A 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF119"},127258:{"value":"1F11A","name":"PARENTHESIZED LATIN CAPITAL LETTER K","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 004B 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF11A"},127259:{"value":"1F11B","name":"PARENTHESIZED LATIN CAPITAL LETTER L","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 004C 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF11B"},127260:{"value":"1F11C","name":"PARENTHESIZED LATIN CAPITAL LETTER M","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 004D 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF11C"},127261:{"value":"1F11D","name":"PARENTHESIZED LATIN CAPITAL LETTER N","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 004E 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF11D"},127262:{"value":"1F11E","name":"PARENTHESIZED LATIN CAPITAL LETTER O","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 004F 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF11E"},127263:{"value":"1F11F","name":"PARENTHESIZED LATIN CAPITAL LETTER P","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0050 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF11F"},127264:{"value":"1F120","name":"PARENTHESIZED LATIN CAPITAL LETTER Q","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0051 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF120"},127265:{"value":"1F121","name":"PARENTHESIZED LATIN CAPITAL LETTER R","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0052 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF121"},127266:{"value":"1F122","name":"PARENTHESIZED LATIN CAPITAL LETTER S","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0053 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF122"},127267:{"value":"1F123","name":"PARENTHESIZED LATIN CAPITAL LETTER T","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0054 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF123"},127268:{"value":"1F124","name":"PARENTHESIZED LATIN CAPITAL LETTER U","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0055 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF124"},127269:{"value":"1F125","name":"PARENTHESIZED LATIN CAPITAL LETTER V","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0056 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF125"},127270:{"value":"1F126","name":"PARENTHESIZED LATIN CAPITAL LETTER W","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0057 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF126"},127271:{"value":"1F127","name":"PARENTHESIZED LATIN CAPITAL LETTER X","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0058 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF127"},127272:{"value":"1F128","name":"PARENTHESIZED LATIN CAPITAL LETTER Y","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 0059 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF128"},127273:{"value":"1F129","name":"PARENTHESIZED LATIN CAPITAL LETTER Z","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 0028 005A 0029","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF129"},127274:{"value":"1F12A","name":"TORTOISE SHELL BRACKETED LATIN CAPITAL LETTER S","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 3014 0053 3015","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF12A"},127275:{"value":"1F12B","name":"CIRCLED ITALIC LATIN CAPITAL LETTER C","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0043","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF12B"},127276:{"value":"1F12C","name":"CIRCLED ITALIC LATIN CAPITAL LETTER R","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0052","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF12C"},127277:{"value":"1F12D","name":"CIRCLED CD","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0043 0044","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF12D"},127278:{"value":"1F12E","name":"CIRCLED WZ","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 0057 005A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF12E"},127280:{"value":"1F130","name":"SQUARED LATIN CAPITAL LETTER A","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0041","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF130"},127281:{"value":"1F131","name":"SQUARED LATIN CAPITAL LETTER B","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0042","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF131"},127282:{"value":"1F132","name":"SQUARED LATIN CAPITAL LETTER C","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0043","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF132"},127283:{"value":"1F133","name":"SQUARED LATIN CAPITAL LETTER D","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0044","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF133"},127284:{"value":"1F134","name":"SQUARED LATIN CAPITAL LETTER E","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0045","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF134"},127285:{"value":"1F135","name":"SQUARED LATIN CAPITAL LETTER F","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0046","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF135"},127286:{"value":"1F136","name":"SQUARED LATIN CAPITAL LETTER G","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0047","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF136"},127287:{"value":"1F137","name":"SQUARED LATIN CAPITAL LETTER H","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0048","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF137"},127288:{"value":"1F138","name":"SQUARED LATIN CAPITAL LETTER I","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0049","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF138"},127289:{"value":"1F139","name":"SQUARED LATIN CAPITAL LETTER J","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 004A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF139"},127290:{"value":"1F13A","name":"SQUARED LATIN CAPITAL LETTER K","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 004B","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF13A"},127291:{"value":"1F13B","name":"SQUARED LATIN CAPITAL LETTER L","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 004C","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF13B"},127292:{"value":"1F13C","name":"SQUARED LATIN CAPITAL LETTER M","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 004D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF13C"},127293:{"value":"1F13D","name":"SQUARED LATIN CAPITAL LETTER N","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 004E","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF13D"},127294:{"value":"1F13E","name":"SQUARED LATIN CAPITAL LETTER O","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 004F","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF13E"},127295:{"value":"1F13F","name":"SQUARED LATIN CAPITAL LETTER P","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0050","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF13F"},127296:{"value":"1F140","name":"SQUARED LATIN CAPITAL LETTER Q","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0051","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF140"},127297:{"value":"1F141","name":"SQUARED LATIN CAPITAL LETTER R","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0052","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF141"},127298:{"value":"1F142","name":"SQUARED LATIN CAPITAL LETTER S","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0053","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF142"},127299:{"value":"1F143","name":"SQUARED LATIN CAPITAL LETTER T","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0054","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF143"},127300:{"value":"1F144","name":"SQUARED LATIN CAPITAL LETTER U","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0055","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF144"},127301:{"value":"1F145","name":"SQUARED LATIN CAPITAL LETTER V","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0056","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF145"},127302:{"value":"1F146","name":"SQUARED LATIN CAPITAL LETTER W","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0057","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF146"},127303:{"value":"1F147","name":"SQUARED LATIN CAPITAL LETTER X","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0058","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF147"},127304:{"value":"1F148","name":"SQUARED LATIN CAPITAL LETTER Y","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0059","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF148"},127305:{"value":"1F149","name":"SQUARED LATIN CAPITAL LETTER Z","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 005A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF149"},127306:{"value":"1F14A","name":"SQUARED HV","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0048 0056","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF14A"},127307:{"value":"1F14B","name":"SQUARED MV","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 004D 0056","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF14B"},127308:{"value":"1F14C","name":"SQUARED SD","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0053 0044","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF14C"},127309:{"value":"1F14D","name":"SQUARED SS","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0053 0053","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF14D"},127310:{"value":"1F14E","name":"SQUARED PPV","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0050 0050 0056","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF14E"},127311:{"value":"1F14F","name":"SQUARED WC","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0057 0043","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF14F"},127312:{"value":"1F150","name":"NEGATIVE CIRCLED LATIN CAPITAL LETTER A","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF150"},127313:{"value":"1F151","name":"NEGATIVE CIRCLED LATIN CAPITAL LETTER B","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF151"},127314:{"value":"1F152","name":"NEGATIVE CIRCLED LATIN CAPITAL LETTER C","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF152"},127315:{"value":"1F153","name":"NEGATIVE CIRCLED LATIN CAPITAL LETTER D","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF153"},127316:{"value":"1F154","name":"NEGATIVE CIRCLED LATIN CAPITAL LETTER E","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF154"},127317:{"value":"1F155","name":"NEGATIVE CIRCLED LATIN CAPITAL LETTER F","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF155"},127318:{"value":"1F156","name":"NEGATIVE CIRCLED LATIN CAPITAL LETTER G","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF156"},127319:{"value":"1F157","name":"NEGATIVE CIRCLED LATIN CAPITAL LETTER H","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF157"},127320:{"value":"1F158","name":"NEGATIVE CIRCLED LATIN CAPITAL LETTER I","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF158"},127321:{"value":"1F159","name":"NEGATIVE CIRCLED LATIN CAPITAL LETTER J","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF159"},127322:{"value":"1F15A","name":"NEGATIVE CIRCLED LATIN CAPITAL LETTER K","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF15A"},127323:{"value":"1F15B","name":"NEGATIVE CIRCLED LATIN CAPITAL LETTER L","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF15B"},127324:{"value":"1F15C","name":"NEGATIVE CIRCLED LATIN CAPITAL LETTER M","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF15C"},127325:{"value":"1F15D","name":"NEGATIVE CIRCLED LATIN CAPITAL LETTER N","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF15D"},127326:{"value":"1F15E","name":"NEGATIVE CIRCLED LATIN CAPITAL LETTER O","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF15E"},127327:{"value":"1F15F","name":"NEGATIVE CIRCLED LATIN CAPITAL LETTER P","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF15F"},127328:{"value":"1F160","name":"NEGATIVE CIRCLED LATIN CAPITAL LETTER Q","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF160"},127329:{"value":"1F161","name":"NEGATIVE CIRCLED LATIN CAPITAL LETTER R","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF161"},127330:{"value":"1F162","name":"NEGATIVE CIRCLED LATIN CAPITAL LETTER S","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF162"},127331:{"value":"1F163","name":"NEGATIVE CIRCLED LATIN CAPITAL LETTER T","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF163"},127332:{"value":"1F164","name":"NEGATIVE CIRCLED LATIN CAPITAL LETTER U","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF164"},127333:{"value":"1F165","name":"NEGATIVE CIRCLED LATIN CAPITAL LETTER V","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF165"},127334:{"value":"1F166","name":"NEGATIVE CIRCLED LATIN CAPITAL LETTER W","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF166"},127335:{"value":"1F167","name":"NEGATIVE CIRCLED LATIN CAPITAL LETTER X","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF167"},127336:{"value":"1F168","name":"NEGATIVE CIRCLED LATIN CAPITAL LETTER Y","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF168"},127337:{"value":"1F169","name":"NEGATIVE CIRCLED LATIN CAPITAL LETTER Z","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF169"},127338:{"value":"1F16A","name":"RAISED MC SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"<super> 004D 0043","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF16A"},127339:{"value":"1F16B","name":"RAISED MD SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"<super> 004D 0044","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF16B"},127344:{"value":"1F170","name":"NEGATIVE SQUARED LATIN CAPITAL LETTER A","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF170"},127345:{"value":"1F171","name":"NEGATIVE SQUARED LATIN CAPITAL LETTER B","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF171"},127346:{"value":"1F172","name":"NEGATIVE SQUARED LATIN CAPITAL LETTER C","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF172"},127347:{"value":"1F173","name":"NEGATIVE SQUARED LATIN CAPITAL LETTER D","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF173"},127348:{"value":"1F174","name":"NEGATIVE SQUARED LATIN CAPITAL LETTER E","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF174"},127349:{"value":"1F175","name":"NEGATIVE SQUARED LATIN CAPITAL LETTER F","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF175"},127350:{"value":"1F176","name":"NEGATIVE SQUARED LATIN CAPITAL LETTER G","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF176"},127351:{"value":"1F177","name":"NEGATIVE SQUARED LATIN CAPITAL LETTER H","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF177"},127352:{"value":"1F178","name":"NEGATIVE SQUARED LATIN CAPITAL LETTER I","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF178"},127353:{"value":"1F179","name":"NEGATIVE SQUARED LATIN CAPITAL LETTER J","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF179"},127354:{"value":"1F17A","name":"NEGATIVE SQUARED LATIN CAPITAL LETTER K","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF17A"},127355:{"value":"1F17B","name":"NEGATIVE SQUARED LATIN CAPITAL LETTER L","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF17B"},127356:{"value":"1F17C","name":"NEGATIVE SQUARED LATIN CAPITAL LETTER M","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF17C"},127357:{"value":"1F17D","name":"NEGATIVE SQUARED LATIN CAPITAL LETTER N","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF17D"},127358:{"value":"1F17E","name":"NEGATIVE SQUARED LATIN CAPITAL LETTER O","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF17E"},127359:{"value":"1F17F","name":"NEGATIVE SQUARED LATIN CAPITAL LETTER P","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF17F"},127360:{"value":"1F180","name":"NEGATIVE SQUARED LATIN CAPITAL LETTER Q","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF180"},127361:{"value":"1F181","name":"NEGATIVE SQUARED LATIN CAPITAL LETTER R","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF181"},127362:{"value":"1F182","name":"NEGATIVE SQUARED LATIN CAPITAL LETTER S","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF182"},127363:{"value":"1F183","name":"NEGATIVE SQUARED LATIN CAPITAL LETTER T","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF183"},127364:{"value":"1F184","name":"NEGATIVE SQUARED LATIN CAPITAL LETTER U","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF184"},127365:{"value":"1F185","name":"NEGATIVE SQUARED LATIN CAPITAL LETTER V","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF185"},127366:{"value":"1F186","name":"NEGATIVE SQUARED LATIN CAPITAL LETTER W","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF186"},127367:{"value":"1F187","name":"NEGATIVE SQUARED LATIN CAPITAL LETTER X","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF187"},127368:{"value":"1F188","name":"NEGATIVE SQUARED LATIN CAPITAL LETTER Y","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF188"},127369:{"value":"1F189","name":"NEGATIVE SQUARED LATIN CAPITAL LETTER Z","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF189"},127370:{"value":"1F18A","name":"CROSSED NEGATIVE SQUARED LATIN CAPITAL LETTER P","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF18A"},127371:{"value":"1F18B","name":"NEGATIVE SQUARED IC","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF18B"},127372:{"value":"1F18C","name":"NEGATIVE SQUARED PA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF18C"},127373:{"value":"1F18D","name":"NEGATIVE SQUARED SA","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF18D"},127374:{"value":"1F18E","name":"NEGATIVE SQUARED AB","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF18E"},127375:{"value":"1F18F","name":"NEGATIVE SQUARED WC","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF18F"},127376:{"value":"1F190","name":"SQUARE DJ","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 0044 004A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF190"},127377:{"value":"1F191","name":"SQUARED CL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF191"},127378:{"value":"1F192","name":"SQUARED COOL","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF192"},127379:{"value":"1F193","name":"SQUARED FREE","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF193"},127380:{"value":"1F194","name":"SQUARED ID","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF194"},127381:{"value":"1F195","name":"SQUARED NEW","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF195"},127382:{"value":"1F196","name":"SQUARED NG","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF196"},127383:{"value":"1F197","name":"SQUARED OK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF197"},127384:{"value":"1F198","name":"SQUARED SOS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF198"},127385:{"value":"1F199","name":"SQUARED UP WITH EXCLAMATION MARK","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF199"},127386:{"value":"1F19A","name":"SQUARED VS","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF19A"},127462:{"value":"1F1E6","name":"REGIONAL INDICATOR SYMBOL LETTER A","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF1E6"},127463:{"value":"1F1E7","name":"REGIONAL INDICATOR SYMBOL LETTER B","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF1E7"},127464:{"value":"1F1E8","name":"REGIONAL INDICATOR SYMBOL LETTER C","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF1E8"},127465:{"value":"1F1E9","name":"REGIONAL INDICATOR SYMBOL LETTER D","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF1E9"},127466:{"value":"1F1EA","name":"REGIONAL INDICATOR SYMBOL LETTER E","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF1EA"},127467:{"value":"1F1EB","name":"REGIONAL INDICATOR SYMBOL LETTER F","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF1EB"},127468:{"value":"1F1EC","name":"REGIONAL INDICATOR SYMBOL LETTER G","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF1EC"},127469:{"value":"1F1ED","name":"REGIONAL INDICATOR SYMBOL LETTER H","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF1ED"},127470:{"value":"1F1EE","name":"REGIONAL INDICATOR SYMBOL LETTER I","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF1EE"},127471:{"value":"1F1EF","name":"REGIONAL INDICATOR SYMBOL LETTER J","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF1EF"},127472:{"value":"1F1F0","name":"REGIONAL INDICATOR SYMBOL LETTER K","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF1F0"},127473:{"value":"1F1F1","name":"REGIONAL INDICATOR SYMBOL LETTER L","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF1F1"},127474:{"value":"1F1F2","name":"REGIONAL INDICATOR SYMBOL LETTER M","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF1F2"},127475:{"value":"1F1F3","name":"REGIONAL INDICATOR SYMBOL LETTER N","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF1F3"},127476:{"value":"1F1F4","name":"REGIONAL INDICATOR SYMBOL LETTER O","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF1F4"},127477:{"value":"1F1F5","name":"REGIONAL INDICATOR SYMBOL LETTER P","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF1F5"},127478:{"value":"1F1F6","name":"REGIONAL INDICATOR SYMBOL LETTER Q","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF1F6"},127479:{"value":"1F1F7","name":"REGIONAL INDICATOR SYMBOL LETTER R","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF1F7"},127480:{"value":"1F1F8","name":"REGIONAL INDICATOR SYMBOL LETTER S","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF1F8"},127481:{"value":"1F1F9","name":"REGIONAL INDICATOR SYMBOL LETTER T","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF1F9"},127482:{"value":"1F1FA","name":"REGIONAL INDICATOR SYMBOL LETTER U","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF1FA"},127483:{"value":"1F1FB","name":"REGIONAL INDICATOR SYMBOL LETTER V","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF1FB"},127484:{"value":"1F1FC","name":"REGIONAL INDICATOR SYMBOL LETTER W","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF1FC"},127485:{"value":"1F1FD","name":"REGIONAL INDICATOR SYMBOL LETTER X","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF1FD"},127486:{"value":"1F1FE","name":"REGIONAL INDICATOR SYMBOL LETTER Y","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF1FE"},127487:{"value":"1F1FF","name":"REGIONAL INDICATOR SYMBOL LETTER Z","category":"So","class":"0","bidirectional_category":"L","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF1FF"},127488:{"value":"1F200","name":"SQUARE HIRAGANA HOKA","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 307B 304B","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF200"},127489:{"value":"1F201","name":"SQUARED KATAKANA KOKO","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30B3 30B3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF201"},127490:{"value":"1F202","name":"SQUARED KATAKANA SA","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30B5","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF202"},127504:{"value":"1F210","name":"SQUARED CJK UNIFIED IDEOGRAPH-624B","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 624B","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF210"},127505:{"value":"1F211","name":"SQUARED CJK UNIFIED IDEOGRAPH-5B57","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 5B57","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF211"},127506:{"value":"1F212","name":"SQUARED CJK UNIFIED IDEOGRAPH-53CC","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 53CC","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF212"},127507:{"value":"1F213","name":"SQUARED KATAKANA DE","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 30C7","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF213"},127508:{"value":"1F214","name":"SQUARED CJK UNIFIED IDEOGRAPH-4E8C","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 4E8C","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF214"},127509:{"value":"1F215","name":"SQUARED CJK UNIFIED IDEOGRAPH-591A","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 591A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF215"},127510:{"value":"1F216","name":"SQUARED CJK UNIFIED IDEOGRAPH-89E3","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 89E3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF216"},127511:{"value":"1F217","name":"SQUARED CJK UNIFIED IDEOGRAPH-5929","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 5929","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF217"},127512:{"value":"1F218","name":"SQUARED CJK UNIFIED IDEOGRAPH-4EA4","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 4EA4","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF218"},127513:{"value":"1F219","name":"SQUARED CJK UNIFIED IDEOGRAPH-6620","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 6620","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF219"},127514:{"value":"1F21A","name":"SQUARED CJK UNIFIED IDEOGRAPH-7121","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 7121","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF21A"},127515:{"value":"1F21B","name":"SQUARED CJK UNIFIED IDEOGRAPH-6599","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 6599","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF21B"},127516:{"value":"1F21C","name":"SQUARED CJK UNIFIED IDEOGRAPH-524D","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 524D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF21C"},127517:{"value":"1F21D","name":"SQUARED CJK UNIFIED IDEOGRAPH-5F8C","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 5F8C","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF21D"},127518:{"value":"1F21E","name":"SQUARED CJK UNIFIED IDEOGRAPH-518D","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 518D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF21E"},127519:{"value":"1F21F","name":"SQUARED CJK UNIFIED IDEOGRAPH-65B0","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 65B0","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF21F"},127520:{"value":"1F220","name":"SQUARED CJK UNIFIED IDEOGRAPH-521D","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 521D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF220"},127521:{"value":"1F221","name":"SQUARED CJK UNIFIED IDEOGRAPH-7D42","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 7D42","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF221"},127522:{"value":"1F222","name":"SQUARED CJK UNIFIED IDEOGRAPH-751F","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 751F","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF222"},127523:{"value":"1F223","name":"SQUARED CJK UNIFIED IDEOGRAPH-8CA9","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 8CA9","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF223"},127524:{"value":"1F224","name":"SQUARED CJK UNIFIED IDEOGRAPH-58F0","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 58F0","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF224"},127525:{"value":"1F225","name":"SQUARED CJK UNIFIED IDEOGRAPH-5439","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 5439","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF225"},127526:{"value":"1F226","name":"SQUARED CJK UNIFIED IDEOGRAPH-6F14","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 6F14","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF226"},127527:{"value":"1F227","name":"SQUARED CJK UNIFIED IDEOGRAPH-6295","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 6295","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF227"},127528:{"value":"1F228","name":"SQUARED CJK UNIFIED IDEOGRAPH-6355","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 6355","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF228"},127529:{"value":"1F229","name":"SQUARED CJK UNIFIED IDEOGRAPH-4E00","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 4E00","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF229"},127530:{"value":"1F22A","name":"SQUARED CJK UNIFIED IDEOGRAPH-4E09","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 4E09","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF22A"},127531:{"value":"1F22B","name":"SQUARED CJK UNIFIED IDEOGRAPH-904A","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 904A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF22B"},127532:{"value":"1F22C","name":"SQUARED CJK UNIFIED IDEOGRAPH-5DE6","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 5DE6","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF22C"},127533:{"value":"1F22D","name":"SQUARED CJK UNIFIED IDEOGRAPH-4E2D","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 4E2D","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF22D"},127534:{"value":"1F22E","name":"SQUARED CJK UNIFIED IDEOGRAPH-53F3","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 53F3","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF22E"},127535:{"value":"1F22F","name":"SQUARED CJK UNIFIED IDEOGRAPH-6307","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 6307","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF22F"},127536:{"value":"1F230","name":"SQUARED CJK UNIFIED IDEOGRAPH-8D70","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 8D70","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF230"},127537:{"value":"1F231","name":"SQUARED CJK UNIFIED IDEOGRAPH-6253","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 6253","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF231"},127538:{"value":"1F232","name":"SQUARED CJK UNIFIED IDEOGRAPH-7981","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 7981","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF232"},127539:{"value":"1F233","name":"SQUARED CJK UNIFIED IDEOGRAPH-7A7A","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 7A7A","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF233"},127540:{"value":"1F234","name":"SQUARED CJK UNIFIED IDEOGRAPH-5408","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 5408","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF234"},127541:{"value":"1F235","name":"SQUARED CJK UNIFIED IDEOGRAPH-6E80","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 6E80","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF235"},127542:{"value":"1F236","name":"SQUARED CJK UNIFIED IDEOGRAPH-6709","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 6709","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF236"},127543:{"value":"1F237","name":"SQUARED CJK UNIFIED IDEOGRAPH-6708","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 6708","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF237"},127544:{"value":"1F238","name":"SQUARED CJK UNIFIED IDEOGRAPH-7533","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 7533","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF238"},127545:{"value":"1F239","name":"SQUARED CJK UNIFIED IDEOGRAPH-5272","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 5272","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF239"},127546:{"value":"1F23A","name":"SQUARED CJK UNIFIED IDEOGRAPH-55B6","category":"So","class":"0","bidirectional_category":"L","mapping":"<square> 55B6","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF23A"},127552:{"value":"1F240","name":"TORTOISE SHELL BRACKETED CJK UNIFIED IDEOGRAPH-672C","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 3014 672C 3015","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF240"},127553:{"value":"1F241","name":"TORTOISE SHELL BRACKETED CJK UNIFIED IDEOGRAPH-4E09","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 3014 4E09 3015","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF241"},127554:{"value":"1F242","name":"TORTOISE SHELL BRACKETED CJK UNIFIED IDEOGRAPH-4E8C","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 3014 4E8C 3015","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF242"},127555:{"value":"1F243","name":"TORTOISE SHELL BRACKETED CJK UNIFIED IDEOGRAPH-5B89","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 3014 5B89 3015","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF243"},127556:{"value":"1F244","name":"TORTOISE SHELL BRACKETED CJK UNIFIED IDEOGRAPH-70B9","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 3014 70B9 3015","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF244"},127557:{"value":"1F245","name":"TORTOISE SHELL BRACKETED CJK UNIFIED IDEOGRAPH-6253","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 3014 6253 3015","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF245"},127558:{"value":"1F246","name":"TORTOISE SHELL BRACKETED CJK UNIFIED IDEOGRAPH-76D7","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 3014 76D7 3015","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF246"},127559:{"value":"1F247","name":"TORTOISE SHELL BRACKETED CJK UNIFIED IDEOGRAPH-52DD","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 3014 52DD 3015","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF247"},127560:{"value":"1F248","name":"TORTOISE SHELL BRACKETED CJK UNIFIED IDEOGRAPH-6557","category":"So","class":"0","bidirectional_category":"L","mapping":"<compat> 3014 6557 3015","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF248"},127568:{"value":"1F250","name":"CIRCLED IDEOGRAPH ADVANTAGE","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 5F97","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF250"},127569:{"value":"1F251","name":"CIRCLED IDEOGRAPH ACCEPT","category":"So","class":"0","bidirectional_category":"L","mapping":"<circle> 53EF","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF251"},127744:{"value":"1F300","name":"CYCLONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF300"},127745:{"value":"1F301","name":"FOGGY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF301"},127746:{"value":"1F302","name":"CLOSED UMBRELLA","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF302"},127747:{"value":"1F303","name":"NIGHT WITH STARS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF303"},127748:{"value":"1F304","name":"SUNRISE OVER MOUNTAINS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF304"},127749:{"value":"1F305","name":"SUNRISE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF305"},127750:{"value":"1F306","name":"CITYSCAPE AT DUSK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF306"},127751:{"value":"1F307","name":"SUNSET OVER BUILDINGS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF307"},127752:{"value":"1F308","name":"RAINBOW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF308"},127753:{"value":"1F309","name":"BRIDGE AT NIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF309"},127754:{"value":"1F30A","name":"WATER WAVE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF30A"},127755:{"value":"1F30B","name":"VOLCANO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF30B"},127756:{"value":"1F30C","name":"MILKY WAY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF30C"},127757:{"value":"1F30D","name":"EARTH GLOBE EUROPE-AFRICA","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF30D"},127758:{"value":"1F30E","name":"EARTH GLOBE AMERICAS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF30E"},127759:{"value":"1F30F","name":"EARTH GLOBE ASIA-AUSTRALIA","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF30F"},127760:{"value":"1F310","name":"GLOBE WITH MERIDIANS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF310"},127761:{"value":"1F311","name":"NEW MOON SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF311"},127762:{"value":"1F312","name":"WAXING CRESCENT MOON SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF312"},127763:{"value":"1F313","name":"FIRST QUARTER MOON SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF313"},127764:{"value":"1F314","name":"WAXING GIBBOUS MOON SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF314"},127765:{"value":"1F315","name":"FULL MOON SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF315"},127766:{"value":"1F316","name":"WANING GIBBOUS MOON SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF316"},127767:{"value":"1F317","name":"LAST QUARTER MOON SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF317"},127768:{"value":"1F318","name":"WANING CRESCENT MOON SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF318"},127769:{"value":"1F319","name":"CRESCENT MOON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF319"},127770:{"value":"1F31A","name":"NEW MOON WITH FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF31A"},127771:{"value":"1F31B","name":"FIRST QUARTER MOON WITH FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF31B"},127772:{"value":"1F31C","name":"LAST QUARTER MOON WITH FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF31C"},127773:{"value":"1F31D","name":"FULL MOON WITH FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF31D"},127774:{"value":"1F31E","name":"SUN WITH FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF31E"},127775:{"value":"1F31F","name":"GLOWING STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF31F"},127776:{"value":"1F320","name":"SHOOTING STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF320"},127777:{"value":"1F321","name":"THERMOMETER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF321"},127778:{"value":"1F322","name":"BLACK DROPLET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF322"},127779:{"value":"1F323","name":"WHITE SUN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF323"},127780:{"value":"1F324","name":"WHITE SUN WITH SMALL CLOUD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF324"},127781:{"value":"1F325","name":"WHITE SUN BEHIND CLOUD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF325"},127782:{"value":"1F326","name":"WHITE SUN BEHIND CLOUD WITH RAIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF326"},127783:{"value":"1F327","name":"CLOUD WITH RAIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF327"},127784:{"value":"1F328","name":"CLOUD WITH SNOW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF328"},127785:{"value":"1F329","name":"CLOUD WITH LIGHTNING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF329"},127786:{"value":"1F32A","name":"CLOUD WITH TORNADO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF32A"},127787:{"value":"1F32B","name":"FOG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF32B"},127788:{"value":"1F32C","name":"WIND BLOWING FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF32C"},127789:{"value":"1F32D","name":"HOT DOG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF32D"},127790:{"value":"1F32E","name":"TACO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF32E"},127791:{"value":"1F32F","name":"BURRITO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF32F"},127792:{"value":"1F330","name":"CHESTNUT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF330"},127793:{"value":"1F331","name":"SEEDLING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF331"},127794:{"value":"1F332","name":"EVERGREEN TREE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF332"},127795:{"value":"1F333","name":"DECIDUOUS TREE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF333"},127796:{"value":"1F334","name":"PALM TREE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF334"},127797:{"value":"1F335","name":"CACTUS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF335"},127798:{"value":"1F336","name":"HOT PEPPER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF336"},127799:{"value":"1F337","name":"TULIP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF337"},127800:{"value":"1F338","name":"CHERRY BLOSSOM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF338"},127801:{"value":"1F339","name":"ROSE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF339"},127802:{"value":"1F33A","name":"HIBISCUS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF33A"},127803:{"value":"1F33B","name":"SUNFLOWER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF33B"},127804:{"value":"1F33C","name":"BLOSSOM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF33C"},127805:{"value":"1F33D","name":"EAR OF MAIZE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF33D"},127806:{"value":"1F33E","name":"EAR OF RICE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF33E"},127807:{"value":"1F33F","name":"HERB","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF33F"},127808:{"value":"1F340","name":"FOUR LEAF CLOVER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF340"},127809:{"value":"1F341","name":"MAPLE LEAF","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF341"},127810:{"value":"1F342","name":"FALLEN LEAF","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF342"},127811:{"value":"1F343","name":"LEAF FLUTTERING IN WIND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF343"},127812:{"value":"1F344","name":"MUSHROOM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF344"},127813:{"value":"1F345","name":"TOMATO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF345"},127814:{"value":"1F346","name":"AUBERGINE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF346"},127815:{"value":"1F347","name":"GRAPES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF347"},127816:{"value":"1F348","name":"MELON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF348"},127817:{"value":"1F349","name":"WATERMELON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF349"},127818:{"value":"1F34A","name":"TANGERINE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF34A"},127819:{"value":"1F34B","name":"LEMON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF34B"},127820:{"value":"1F34C","name":"BANANA","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF34C"},127821:{"value":"1F34D","name":"PINEAPPLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF34D"},127822:{"value":"1F34E","name":"RED APPLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF34E"},127823:{"value":"1F34F","name":"GREEN APPLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF34F"},127824:{"value":"1F350","name":"PEAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF350"},127825:{"value":"1F351","name":"PEACH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF351"},127826:{"value":"1F352","name":"CHERRIES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF352"},127827:{"value":"1F353","name":"STRAWBERRY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF353"},127828:{"value":"1F354","name":"HAMBURGER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF354"},127829:{"value":"1F355","name":"SLICE OF PIZZA","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF355"},127830:{"value":"1F356","name":"MEAT ON BONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF356"},127831:{"value":"1F357","name":"POULTRY LEG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF357"},127832:{"value":"1F358","name":"RICE CRACKER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF358"},127833:{"value":"1F359","name":"RICE BALL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF359"},127834:{"value":"1F35A","name":"COOKED RICE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF35A"},127835:{"value":"1F35B","name":"CURRY AND RICE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF35B"},127836:{"value":"1F35C","name":"STEAMING BOWL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF35C"},127837:{"value":"1F35D","name":"SPAGHETTI","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF35D"},127838:{"value":"1F35E","name":"BREAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF35E"},127839:{"value":"1F35F","name":"FRENCH FRIES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF35F"},127840:{"value":"1F360","name":"ROASTED SWEET POTATO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF360"},127841:{"value":"1F361","name":"DANGO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF361"},127842:{"value":"1F362","name":"ODEN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF362"},127843:{"value":"1F363","name":"SUSHI","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF363"},127844:{"value":"1F364","name":"FRIED SHRIMP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF364"},127845:{"value":"1F365","name":"FISH CAKE WITH SWIRL DESIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF365"},127846:{"value":"1F366","name":"SOFT ICE CREAM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF366"},127847:{"value":"1F367","name":"SHAVED ICE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF367"},127848:{"value":"1F368","name":"ICE CREAM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF368"},127849:{"value":"1F369","name":"DOUGHNUT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF369"},127850:{"value":"1F36A","name":"COOKIE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF36A"},127851:{"value":"1F36B","name":"CHOCOLATE BAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF36B"},127852:{"value":"1F36C","name":"CANDY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF36C"},127853:{"value":"1F36D","name":"LOLLIPOP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF36D"},127854:{"value":"1F36E","name":"CUSTARD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF36E"},127855:{"value":"1F36F","name":"HONEY POT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF36F"},127856:{"value":"1F370","name":"SHORTCAKE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF370"},127857:{"value":"1F371","name":"BENTO BOX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF371"},127858:{"value":"1F372","name":"POT OF FOOD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF372"},127859:{"value":"1F373","name":"COOKING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF373"},127860:{"value":"1F374","name":"FORK AND KNIFE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF374"},127861:{"value":"1F375","name":"TEACUP WITHOUT HANDLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF375"},127862:{"value":"1F376","name":"SAKE BOTTLE AND CUP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF376"},127863:{"value":"1F377","name":"WINE GLASS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF377"},127864:{"value":"1F378","name":"COCKTAIL GLASS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF378"},127865:{"value":"1F379","name":"TROPICAL DRINK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF379"},127866:{"value":"1F37A","name":"BEER MUG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF37A"},127867:{"value":"1F37B","name":"CLINKING BEER MUGS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF37B"},127868:{"value":"1F37C","name":"BABY BOTTLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF37C"},127869:{"value":"1F37D","name":"FORK AND KNIFE WITH PLATE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF37D"},127870:{"value":"1F37E","name":"BOTTLE WITH POPPING CORK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF37E"},127871:{"value":"1F37F","name":"POPCORN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF37F"},127872:{"value":"1F380","name":"RIBBON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF380"},127873:{"value":"1F381","name":"WRAPPED PRESENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF381"},127874:{"value":"1F382","name":"BIRTHDAY CAKE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF382"},127875:{"value":"1F383","name":"JACK-O-LANTERN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF383"},127876:{"value":"1F384","name":"CHRISTMAS TREE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF384"},127877:{"value":"1F385","name":"FATHER CHRISTMAS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF385"},127878:{"value":"1F386","name":"FIREWORKS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF386"},127879:{"value":"1F387","name":"FIREWORK SPARKLER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF387"},127880:{"value":"1F388","name":"BALLOON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF388"},127881:{"value":"1F389","name":"PARTY POPPER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF389"},127882:{"value":"1F38A","name":"CONFETTI BALL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF38A"},127883:{"value":"1F38B","name":"TANABATA TREE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF38B"},127884:{"value":"1F38C","name":"CROSSED FLAGS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF38C"},127885:{"value":"1F38D","name":"PINE DECORATION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF38D"},127886:{"value":"1F38E","name":"JAPANESE DOLLS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF38E"},127887:{"value":"1F38F","name":"CARP STREAMER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF38F"},127888:{"value":"1F390","name":"WIND CHIME","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF390"},127889:{"value":"1F391","name":"MOON VIEWING CEREMONY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF391"},127890:{"value":"1F392","name":"SCHOOL SATCHEL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF392"},127891:{"value":"1F393","name":"GRADUATION CAP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF393"},127892:{"value":"1F394","name":"HEART WITH TIP ON THE LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF394"},127893:{"value":"1F395","name":"BOUQUET OF FLOWERS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF395"},127894:{"value":"1F396","name":"MILITARY MEDAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF396"},127895:{"value":"1F397","name":"REMINDER RIBBON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF397"},127896:{"value":"1F398","name":"MUSICAL KEYBOARD WITH JACKS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF398"},127897:{"value":"1F399","name":"STUDIO MICROPHONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF399"},127898:{"value":"1F39A","name":"LEVEL SLIDER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF39A"},127899:{"value":"1F39B","name":"CONTROL KNOBS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF39B"},127900:{"value":"1F39C","name":"BEAMED ASCENDING MUSICAL NOTES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF39C"},127901:{"value":"1F39D","name":"BEAMED DESCENDING MUSICAL NOTES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF39D"},127902:{"value":"1F39E","name":"FILM FRAMES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF39E"},127903:{"value":"1F39F","name":"ADMISSION TICKETS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF39F"},127904:{"value":"1F3A0","name":"CAROUSEL HORSE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3A0"},127905:{"value":"1F3A1","name":"FERRIS WHEEL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3A1"},127906:{"value":"1F3A2","name":"ROLLER COASTER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3A2"},127907:{"value":"1F3A3","name":"FISHING POLE AND FISH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3A3"},127908:{"value":"1F3A4","name":"MICROPHONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3A4"},127909:{"value":"1F3A5","name":"MOVIE CAMERA","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3A5"},127910:{"value":"1F3A6","name":"CINEMA","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3A6"},127911:{"value":"1F3A7","name":"HEADPHONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3A7"},127912:{"value":"1F3A8","name":"ARTIST PALETTE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3A8"},127913:{"value":"1F3A9","name":"TOP HAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3A9"},127914:{"value":"1F3AA","name":"CIRCUS TENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3AA"},127915:{"value":"1F3AB","name":"TICKET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3AB"},127916:{"value":"1F3AC","name":"CLAPPER BOARD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3AC"},127917:{"value":"1F3AD","name":"PERFORMING ARTS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3AD"},127918:{"value":"1F3AE","name":"VIDEO GAME","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3AE"},127919:{"value":"1F3AF","name":"DIRECT HIT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3AF"},127920:{"value":"1F3B0","name":"SLOT MACHINE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3B0"},127921:{"value":"1F3B1","name":"BILLIARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3B1"},127922:{"value":"1F3B2","name":"GAME DIE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3B2"},127923:{"value":"1F3B3","name":"BOWLING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3B3"},127924:{"value":"1F3B4","name":"FLOWER PLAYING CARDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3B4"},127925:{"value":"1F3B5","name":"MUSICAL NOTE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3B5"},127926:{"value":"1F3B6","name":"MULTIPLE MUSICAL NOTES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3B6"},127927:{"value":"1F3B7","name":"SAXOPHONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3B7"},127928:{"value":"1F3B8","name":"GUITAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3B8"},127929:{"value":"1F3B9","name":"MUSICAL KEYBOARD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3B9"},127930:{"value":"1F3BA","name":"TRUMPET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3BA"},127931:{"value":"1F3BB","name":"VIOLIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3BB"},127932:{"value":"1F3BC","name":"MUSICAL SCORE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3BC"},127933:{"value":"1F3BD","name":"RUNNING SHIRT WITH SASH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3BD"},127934:{"value":"1F3BE","name":"TENNIS RACQUET AND BALL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3BE"},127935:{"value":"1F3BF","name":"SKI AND SKI BOOT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3BF"},127936:{"value":"1F3C0","name":"BASKETBALL AND HOOP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3C0"},127937:{"value":"1F3C1","name":"CHEQUERED FLAG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3C1"},127938:{"value":"1F3C2","name":"SNOWBOARDER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3C2"},127939:{"value":"1F3C3","name":"RUNNER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3C3"},127940:{"value":"1F3C4","name":"SURFER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3C4"},127941:{"value":"1F3C5","name":"SPORTS MEDAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3C5"},127942:{"value":"1F3C6","name":"TROPHY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3C6"},127943:{"value":"1F3C7","name":"HORSE RACING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3C7"},127944:{"value":"1F3C8","name":"AMERICAN FOOTBALL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3C8"},127945:{"value":"1F3C9","name":"RUGBY FOOTBALL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3C9"},127946:{"value":"1F3CA","name":"SWIMMER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3CA"},127947:{"value":"1F3CB","name":"WEIGHT LIFTER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3CB"},127948:{"value":"1F3CC","name":"GOLFER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3CC"},127949:{"value":"1F3CD","name":"RACING MOTORCYCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3CD"},127950:{"value":"1F3CE","name":"RACING CAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3CE"},127951:{"value":"1F3CF","name":"CRICKET BAT AND BALL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3CF"},127952:{"value":"1F3D0","name":"VOLLEYBALL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3D0"},127953:{"value":"1F3D1","name":"FIELD HOCKEY STICK AND BALL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3D1"},127954:{"value":"1F3D2","name":"ICE HOCKEY STICK AND PUCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3D2"},127955:{"value":"1F3D3","name":"TABLE TENNIS PADDLE AND BALL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3D3"},127956:{"value":"1F3D4","name":"SNOW CAPPED MOUNTAIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3D4"},127957:{"value":"1F3D5","name":"CAMPING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3D5"},127958:{"value":"1F3D6","name":"BEACH WITH UMBRELLA","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3D6"},127959:{"value":"1F3D7","name":"BUILDING CONSTRUCTION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3D7"},127960:{"value":"1F3D8","name":"HOUSE BUILDINGS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3D8"},127961:{"value":"1F3D9","name":"CITYSCAPE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3D9"},127962:{"value":"1F3DA","name":"DERELICT HOUSE BUILDING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3DA"},127963:{"value":"1F3DB","name":"CLASSICAL BUILDING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3DB"},127964:{"value":"1F3DC","name":"DESERT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3DC"},127965:{"value":"1F3DD","name":"DESERT ISLAND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3DD"},127966:{"value":"1F3DE","name":"NATIONAL PARK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3DE"},127967:{"value":"1F3DF","name":"STADIUM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3DF"},127968:{"value":"1F3E0","name":"HOUSE BUILDING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3E0"},127969:{"value":"1F3E1","name":"HOUSE WITH GARDEN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3E1"},127970:{"value":"1F3E2","name":"OFFICE BUILDING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3E2"},127971:{"value":"1F3E3","name":"JAPANESE POST OFFICE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3E3"},127972:{"value":"1F3E4","name":"EUROPEAN POST OFFICE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3E4"},127973:{"value":"1F3E5","name":"HOSPITAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3E5"},127974:{"value":"1F3E6","name":"BANK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3E6"},127975:{"value":"1F3E7","name":"AUTOMATED TELLER MACHINE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3E7"},127976:{"value":"1F3E8","name":"HOTEL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3E8"},127977:{"value":"1F3E9","name":"LOVE HOTEL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3E9"},127978:{"value":"1F3EA","name":"CONVENIENCE STORE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3EA"},127979:{"value":"1F3EB","name":"SCHOOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3EB"},127980:{"value":"1F3EC","name":"DEPARTMENT STORE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3EC"},127981:{"value":"1F3ED","name":"FACTORY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3ED"},127982:{"value":"1F3EE","name":"IZAKAYA LANTERN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3EE"},127983:{"value":"1F3EF","name":"JAPANESE CASTLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3EF"},127984:{"value":"1F3F0","name":"EUROPEAN CASTLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3F0"},127985:{"value":"1F3F1","name":"WHITE PENNANT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3F1"},127986:{"value":"1F3F2","name":"BLACK PENNANT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3F2"},127987:{"value":"1F3F3","name":"WAVING WHITE FLAG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3F3"},127988:{"value":"1F3F4","name":"WAVING BLACK FLAG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3F4"},127989:{"value":"1F3F5","name":"ROSETTE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3F5"},127990:{"value":"1F3F6","name":"BLACK ROSETTE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3F6"},127991:{"value":"1F3F7","name":"LABEL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3F7"},127992:{"value":"1F3F8","name":"BADMINTON RACQUET AND SHUTTLECOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3F8"},127993:{"value":"1F3F9","name":"BOW AND ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3F9"},127994:{"value":"1F3FA","name":"AMPHORA","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF3FA"},128000:{"value":"1F400","name":"RAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF400"},128001:{"value":"1F401","name":"MOUSE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF401"},128002:{"value":"1F402","name":"OX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF402"},128003:{"value":"1F403","name":"WATER BUFFALO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF403"},128004:{"value":"1F404","name":"COW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF404"},128005:{"value":"1F405","name":"TIGER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF405"},128006:{"value":"1F406","name":"LEOPARD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF406"},128007:{"value":"1F407","name":"RABBIT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF407"},128008:{"value":"1F408","name":"CAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF408"},128009:{"value":"1F409","name":"DRAGON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF409"},128010:{"value":"1F40A","name":"CROCODILE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF40A"},128011:{"value":"1F40B","name":"WHALE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF40B"},128012:{"value":"1F40C","name":"SNAIL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF40C"},128013:{"value":"1F40D","name":"SNAKE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF40D"},128014:{"value":"1F40E","name":"HORSE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF40E"},128015:{"value":"1F40F","name":"RAM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF40F"},128016:{"value":"1F410","name":"GOAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF410"},128017:{"value":"1F411","name":"SHEEP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF411"},128018:{"value":"1F412","name":"MONKEY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF412"},128019:{"value":"1F413","name":"ROOSTER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF413"},128020:{"value":"1F414","name":"CHICKEN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF414"},128021:{"value":"1F415","name":"DOG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF415"},128022:{"value":"1F416","name":"PIG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF416"},128023:{"value":"1F417","name":"BOAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF417"},128024:{"value":"1F418","name":"ELEPHANT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF418"},128025:{"value":"1F419","name":"OCTOPUS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF419"},128026:{"value":"1F41A","name":"SPIRAL SHELL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF41A"},128027:{"value":"1F41B","name":"BUG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF41B"},128028:{"value":"1F41C","name":"ANT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF41C"},128029:{"value":"1F41D","name":"HONEYBEE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF41D"},128030:{"value":"1F41E","name":"LADY BEETLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF41E"},128031:{"value":"1F41F","name":"FISH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF41F"},128032:{"value":"1F420","name":"TROPICAL FISH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF420"},128033:{"value":"1F421","name":"BLOWFISH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF421"},128034:{"value":"1F422","name":"TURTLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF422"},128035:{"value":"1F423","name":"HATCHING CHICK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF423"},128036:{"value":"1F424","name":"BABY CHICK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF424"},128037:{"value":"1F425","name":"FRONT-FACING BABY CHICK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF425"},128038:{"value":"1F426","name":"BIRD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF426"},128039:{"value":"1F427","name":"PENGUIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF427"},128040:{"value":"1F428","name":"KOALA","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF428"},128041:{"value":"1F429","name":"POODLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF429"},128042:{"value":"1F42A","name":"DROMEDARY CAMEL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF42A"},128043:{"value":"1F42B","name":"BACTRIAN CAMEL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF42B"},128044:{"value":"1F42C","name":"DOLPHIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF42C"},128045:{"value":"1F42D","name":"MOUSE FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF42D"},128046:{"value":"1F42E","name":"COW FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF42E"},128047:{"value":"1F42F","name":"TIGER FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF42F"},128048:{"value":"1F430","name":"RABBIT FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF430"},128049:{"value":"1F431","name":"CAT FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF431"},128050:{"value":"1F432","name":"DRAGON FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF432"},128051:{"value":"1F433","name":"SPOUTING WHALE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF433"},128052:{"value":"1F434","name":"HORSE FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF434"},128053:{"value":"1F435","name":"MONKEY FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF435"},128054:{"value":"1F436","name":"DOG FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF436"},128055:{"value":"1F437","name":"PIG FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF437"},128056:{"value":"1F438","name":"FROG FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF438"},128057:{"value":"1F439","name":"HAMSTER FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF439"},128058:{"value":"1F43A","name":"WOLF FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF43A"},128059:{"value":"1F43B","name":"BEAR FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF43B"},128060:{"value":"1F43C","name":"PANDA FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF43C"},128061:{"value":"1F43D","name":"PIG NOSE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF43D"},128062:{"value":"1F43E","name":"PAW PRINTS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF43E"},128063:{"value":"1F43F","name":"CHIPMUNK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF43F"},128064:{"value":"1F440","name":"EYES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF440"},128065:{"value":"1F441","name":"EYE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF441"},128066:{"value":"1F442","name":"EAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF442"},128067:{"value":"1F443","name":"NOSE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF443"},128068:{"value":"1F444","name":"MOUTH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF444"},128069:{"value":"1F445","name":"TONGUE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF445"},128070:{"value":"1F446","name":"WHITE UP POINTING BACKHAND INDEX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF446"},128071:{"value":"1F447","name":"WHITE DOWN POINTING BACKHAND INDEX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF447"},128072:{"value":"1F448","name":"WHITE LEFT POINTING BACKHAND INDEX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF448"},128073:{"value":"1F449","name":"WHITE RIGHT POINTING BACKHAND INDEX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF449"},128074:{"value":"1F44A","name":"FISTED HAND SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF44A"},128075:{"value":"1F44B","name":"WAVING HAND SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF44B"},128076:{"value":"1F44C","name":"OK HAND SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF44C"},128077:{"value":"1F44D","name":"THUMBS UP SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF44D"},128078:{"value":"1F44E","name":"THUMBS DOWN SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF44E"},128079:{"value":"1F44F","name":"CLAPPING HANDS SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF44F"},128080:{"value":"1F450","name":"OPEN HANDS SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF450"},128081:{"value":"1F451","name":"CROWN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF451"},128082:{"value":"1F452","name":"WOMANS HAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF452"},128083:{"value":"1F453","name":"EYEGLASSES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF453"},128084:{"value":"1F454","name":"NECKTIE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF454"},128085:{"value":"1F455","name":"T-SHIRT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF455"},128086:{"value":"1F456","name":"JEANS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF456"},128087:{"value":"1F457","name":"DRESS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF457"},128088:{"value":"1F458","name":"KIMONO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF458"},128089:{"value":"1F459","name":"BIKINI","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF459"},128090:{"value":"1F45A","name":"WOMANS CLOTHES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF45A"},128091:{"value":"1F45B","name":"PURSE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF45B"},128092:{"value":"1F45C","name":"HANDBAG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF45C"},128093:{"value":"1F45D","name":"POUCH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF45D"},128094:{"value":"1F45E","name":"MANS SHOE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF45E"},128095:{"value":"1F45F","name":"ATHLETIC SHOE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF45F"},128096:{"value":"1F460","name":"HIGH-HEELED SHOE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF460"},128097:{"value":"1F461","name":"WOMANS SANDAL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF461"},128098:{"value":"1F462","name":"WOMANS BOOTS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF462"},128099:{"value":"1F463","name":"FOOTPRINTS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF463"},128100:{"value":"1F464","name":"BUST IN SILHOUETTE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF464"},128101:{"value":"1F465","name":"BUSTS IN SILHOUETTE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF465"},128102:{"value":"1F466","name":"BOY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF466"},128103:{"value":"1F467","name":"GIRL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF467"},128104:{"value":"1F468","name":"MAN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF468"},128105:{"value":"1F469","name":"WOMAN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF469"},128106:{"value":"1F46A","name":"FAMILY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF46A"},128107:{"value":"1F46B","name":"MAN AND WOMAN HOLDING HANDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF46B"},128108:{"value":"1F46C","name":"TWO MEN HOLDING HANDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF46C"},128109:{"value":"1F46D","name":"TWO WOMEN HOLDING HANDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF46D"},128110:{"value":"1F46E","name":"POLICE OFFICER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF46E"},128111:{"value":"1F46F","name":"WOMAN WITH BUNNY EARS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF46F"},128112:{"value":"1F470","name":"BRIDE WITH VEIL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF470"},128113:{"value":"1F471","name":"PERSON WITH BLOND HAIR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF471"},128114:{"value":"1F472","name":"MAN WITH GUA PI MAO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF472"},128115:{"value":"1F473","name":"MAN WITH TURBAN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF473"},128116:{"value":"1F474","name":"OLDER MAN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF474"},128117:{"value":"1F475","name":"OLDER WOMAN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF475"},128118:{"value":"1F476","name":"BABY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF476"},128119:{"value":"1F477","name":"CONSTRUCTION WORKER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF477"},128120:{"value":"1F478","name":"PRINCESS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF478"},128121:{"value":"1F479","name":"JAPANESE OGRE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF479"},128122:{"value":"1F47A","name":"JAPANESE GOBLIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF47A"},128123:{"value":"1F47B","name":"GHOST","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF47B"},128124:{"value":"1F47C","name":"BABY ANGEL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF47C"},128125:{"value":"1F47D","name":"EXTRATERRESTRIAL ALIEN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF47D"},128126:{"value":"1F47E","name":"ALIEN MONSTER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF47E"},128127:{"value":"1F47F","name":"IMP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF47F"},128128:{"value":"1F480","name":"SKULL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF480"},128129:{"value":"1F481","name":"INFORMATION DESK PERSON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF481"},128130:{"value":"1F482","name":"GUARDSMAN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF482"},128131:{"value":"1F483","name":"DANCER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF483"},128132:{"value":"1F484","name":"LIPSTICK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF484"},128133:{"value":"1F485","name":"NAIL POLISH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF485"},128134:{"value":"1F486","name":"FACE MASSAGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF486"},128135:{"value":"1F487","name":"HAIRCUT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF487"},128136:{"value":"1F488","name":"BARBER POLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF488"},128137:{"value":"1F489","name":"SYRINGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF489"},128138:{"value":"1F48A","name":"PILL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF48A"},128139:{"value":"1F48B","name":"KISS MARK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF48B"},128140:{"value":"1F48C","name":"LOVE LETTER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF48C"},128141:{"value":"1F48D","name":"RING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF48D"},128142:{"value":"1F48E","name":"GEM STONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF48E"},128143:{"value":"1F48F","name":"KISS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF48F"},128144:{"value":"1F490","name":"BOUQUET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF490"},128145:{"value":"1F491","name":"COUPLE WITH HEART","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF491"},128146:{"value":"1F492","name":"WEDDING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF492"},128147:{"value":"1F493","name":"BEATING HEART","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF493"},128148:{"value":"1F494","name":"BROKEN HEART","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF494"},128149:{"value":"1F495","name":"TWO HEARTS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF495"},128150:{"value":"1F496","name":"SPARKLING HEART","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF496"},128151:{"value":"1F497","name":"GROWING HEART","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF497"},128152:{"value":"1F498","name":"HEART WITH ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF498"},128153:{"value":"1F499","name":"BLUE HEART","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF499"},128154:{"value":"1F49A","name":"GREEN HEART","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF49A"},128155:{"value":"1F49B","name":"YELLOW HEART","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF49B"},128156:{"value":"1F49C","name":"PURPLE HEART","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF49C"},128157:{"value":"1F49D","name":"HEART WITH RIBBON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF49D"},128158:{"value":"1F49E","name":"REVOLVING HEARTS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF49E"},128159:{"value":"1F49F","name":"HEART DECORATION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF49F"},128160:{"value":"1F4A0","name":"DIAMOND SHAPE WITH A DOT INSIDE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4A0"},128161:{"value":"1F4A1","name":"ELECTRIC LIGHT BULB","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4A1"},128162:{"value":"1F4A2","name":"ANGER SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4A2"},128163:{"value":"1F4A3","name":"BOMB","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4A3"},128164:{"value":"1F4A4","name":"SLEEPING SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4A4"},128165:{"value":"1F4A5","name":"COLLISION SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4A5"},128166:{"value":"1F4A6","name":"SPLASHING SWEAT SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4A6"},128167:{"value":"1F4A7","name":"DROPLET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4A7"},128168:{"value":"1F4A8","name":"DASH SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4A8"},128169:{"value":"1F4A9","name":"PILE OF POO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4A9"},128170:{"value":"1F4AA","name":"FLEXED BICEPS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4AA"},128171:{"value":"1F4AB","name":"DIZZY SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4AB"},128172:{"value":"1F4AC","name":"SPEECH BALLOON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4AC"},128173:{"value":"1F4AD","name":"THOUGHT BALLOON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4AD"},128174:{"value":"1F4AE","name":"WHITE FLOWER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4AE"},128175:{"value":"1F4AF","name":"HUNDRED POINTS SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4AF"},128176:{"value":"1F4B0","name":"MONEY BAG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4B0"},128177:{"value":"1F4B1","name":"CURRENCY EXCHANGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4B1"},128178:{"value":"1F4B2","name":"HEAVY DOLLAR SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4B2"},128179:{"value":"1F4B3","name":"CREDIT CARD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4B3"},128180:{"value":"1F4B4","name":"BANKNOTE WITH YEN SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4B4"},128181:{"value":"1F4B5","name":"BANKNOTE WITH DOLLAR SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4B5"},128182:{"value":"1F4B6","name":"BANKNOTE WITH EURO SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4B6"},128183:{"value":"1F4B7","name":"BANKNOTE WITH POUND SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4B7"},128184:{"value":"1F4B8","name":"MONEY WITH WINGS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4B8"},128185:{"value":"1F4B9","name":"CHART WITH UPWARDS TREND AND YEN SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4B9"},128186:{"value":"1F4BA","name":"SEAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4BA"},128187:{"value":"1F4BB","name":"PERSONAL COMPUTER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4BB"},128188:{"value":"1F4BC","name":"BRIEFCASE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4BC"},128189:{"value":"1F4BD","name":"MINIDISC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4BD"},128190:{"value":"1F4BE","name":"FLOPPY DISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4BE"},128191:{"value":"1F4BF","name":"OPTICAL DISC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4BF"},128192:{"value":"1F4C0","name":"DVD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4C0"},128193:{"value":"1F4C1","name":"FILE FOLDER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4C1"},128194:{"value":"1F4C2","name":"OPEN FILE FOLDER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4C2"},128195:{"value":"1F4C3","name":"PAGE WITH CURL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4C3"},128196:{"value":"1F4C4","name":"PAGE FACING UP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4C4"},128197:{"value":"1F4C5","name":"CALENDAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4C5"},128198:{"value":"1F4C6","name":"TEAR-OFF CALENDAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4C6"},128199:{"value":"1F4C7","name":"CARD INDEX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4C7"},128200:{"value":"1F4C8","name":"CHART WITH UPWARDS TREND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4C8"},128201:{"value":"1F4C9","name":"CHART WITH DOWNWARDS TREND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4C9"},128202:{"value":"1F4CA","name":"BAR CHART","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4CA"},128203:{"value":"1F4CB","name":"CLIPBOARD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4CB"},128204:{"value":"1F4CC","name":"PUSHPIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4CC"},128205:{"value":"1F4CD","name":"ROUND PUSHPIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4CD"},128206:{"value":"1F4CE","name":"PAPERCLIP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4CE"},128207:{"value":"1F4CF","name":"STRAIGHT RULER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4CF"},128208:{"value":"1F4D0","name":"TRIANGULAR RULER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4D0"},128209:{"value":"1F4D1","name":"BOOKMARK TABS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4D1"},128210:{"value":"1F4D2","name":"LEDGER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4D2"},128211:{"value":"1F4D3","name":"NOTEBOOK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4D3"},128212:{"value":"1F4D4","name":"NOTEBOOK WITH DECORATIVE COVER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4D4"},128213:{"value":"1F4D5","name":"CLOSED BOOK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4D5"},128214:{"value":"1F4D6","name":"OPEN BOOK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4D6"},128215:{"value":"1F4D7","name":"GREEN BOOK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4D7"},128216:{"value":"1F4D8","name":"BLUE BOOK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4D8"},128217:{"value":"1F4D9","name":"ORANGE BOOK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4D9"},128218:{"value":"1F4DA","name":"BOOKS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4DA"},128219:{"value":"1F4DB","name":"NAME BADGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4DB"},128220:{"value":"1F4DC","name":"SCROLL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4DC"},128221:{"value":"1F4DD","name":"MEMO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4DD"},128222:{"value":"1F4DE","name":"TELEPHONE RECEIVER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4DE"},128223:{"value":"1F4DF","name":"PAGER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4DF"},128224:{"value":"1F4E0","name":"FAX MACHINE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4E0"},128225:{"value":"1F4E1","name":"SATELLITE ANTENNA","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4E1"},128226:{"value":"1F4E2","name":"PUBLIC ADDRESS LOUDSPEAKER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4E2"},128227:{"value":"1F4E3","name":"CHEERING MEGAPHONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4E3"},128228:{"value":"1F4E4","name":"OUTBOX TRAY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4E4"},128229:{"value":"1F4E5","name":"INBOX TRAY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4E5"},128230:{"value":"1F4E6","name":"PACKAGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4E6"},128231:{"value":"1F4E7","name":"E-MAIL SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4E7"},128232:{"value":"1F4E8","name":"INCOMING ENVELOPE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4E8"},128233:{"value":"1F4E9","name":"ENVELOPE WITH DOWNWARDS ARROW ABOVE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4E9"},128234:{"value":"1F4EA","name":"CLOSED MAILBOX WITH LOWERED FLAG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4EA"},128235:{"value":"1F4EB","name":"CLOSED MAILBOX WITH RAISED FLAG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4EB"},128236:{"value":"1F4EC","name":"OPEN MAILBOX WITH RAISED FLAG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4EC"},128237:{"value":"1F4ED","name":"OPEN MAILBOX WITH LOWERED FLAG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4ED"},128238:{"value":"1F4EE","name":"POSTBOX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4EE"},128239:{"value":"1F4EF","name":"POSTAL HORN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4EF"},128240:{"value":"1F4F0","name":"NEWSPAPER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4F0"},128241:{"value":"1F4F1","name":"MOBILE PHONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4F1"},128242:{"value":"1F4F2","name":"MOBILE PHONE WITH RIGHTWARDS ARROW AT LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4F2"},128243:{"value":"1F4F3","name":"VIBRATION MODE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4F3"},128244:{"value":"1F4F4","name":"MOBILE PHONE OFF","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4F4"},128245:{"value":"1F4F5","name":"NO MOBILE PHONES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4F5"},128246:{"value":"1F4F6","name":"ANTENNA WITH BARS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4F6"},128247:{"value":"1F4F7","name":"CAMERA","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4F7"},128248:{"value":"1F4F8","name":"CAMERA WITH FLASH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4F8"},128249:{"value":"1F4F9","name":"VIDEO CAMERA","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4F9"},128250:{"value":"1F4FA","name":"TELEVISION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4FA"},128251:{"value":"1F4FB","name":"RADIO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4FB"},128252:{"value":"1F4FC","name":"VIDEOCASSETTE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4FC"},128253:{"value":"1F4FD","name":"FILM PROJECTOR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4FD"},128254:{"value":"1F4FE","name":"PORTABLE STEREO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4FE"},128255:{"value":"1F4FF","name":"PRAYER BEADS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF4FF"},128256:{"value":"1F500","name":"TWISTED RIGHTWARDS ARROWS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF500"},128257:{"value":"1F501","name":"CLOCKWISE RIGHTWARDS AND LEFTWARDS OPEN CIRCLE ARROWS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF501"},128258:{"value":"1F502","name":"CLOCKWISE RIGHTWARDS AND LEFTWARDS OPEN CIRCLE ARROWS WITH CIRCLED ONE OVERLAY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF502"},128259:{"value":"1F503","name":"CLOCKWISE DOWNWARDS AND UPWARDS OPEN CIRCLE ARROWS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF503"},128260:{"value":"1F504","name":"ANTICLOCKWISE DOWNWARDS AND UPWARDS OPEN CIRCLE ARROWS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF504"},128261:{"value":"1F505","name":"LOW BRIGHTNESS SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF505"},128262:{"value":"1F506","name":"HIGH BRIGHTNESS SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF506"},128263:{"value":"1F507","name":"SPEAKER WITH CANCELLATION STROKE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF507"},128264:{"value":"1F508","name":"SPEAKER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF508"},128265:{"value":"1F509","name":"SPEAKER WITH ONE SOUND WAVE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF509"},128266:{"value":"1F50A","name":"SPEAKER WITH THREE SOUND WAVES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF50A"},128267:{"value":"1F50B","name":"BATTERY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF50B"},128268:{"value":"1F50C","name":"ELECTRIC PLUG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF50C"},128269:{"value":"1F50D","name":"LEFT-POINTING MAGNIFYING GLASS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF50D"},128270:{"value":"1F50E","name":"RIGHT-POINTING MAGNIFYING GLASS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF50E"},128271:{"value":"1F50F","name":"LOCK WITH INK PEN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF50F"},128272:{"value":"1F510","name":"CLOSED LOCK WITH KEY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF510"},128273:{"value":"1F511","name":"KEY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF511"},128274:{"value":"1F512","name":"LOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF512"},128275:{"value":"1F513","name":"OPEN LOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF513"},128276:{"value":"1F514","name":"BELL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF514"},128277:{"value":"1F515","name":"BELL WITH CANCELLATION STROKE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF515"},128278:{"value":"1F516","name":"BOOKMARK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF516"},128279:{"value":"1F517","name":"LINK SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF517"},128280:{"value":"1F518","name":"RADIO BUTTON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF518"},128281:{"value":"1F519","name":"BACK WITH LEFTWARDS ARROW ABOVE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF519"},128282:{"value":"1F51A","name":"END WITH LEFTWARDS ARROW ABOVE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF51A"},128283:{"value":"1F51B","name":"ON WITH EXCLAMATION MARK WITH LEFT RIGHT ARROW ABOVE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF51B"},128284:{"value":"1F51C","name":"SOON WITH RIGHTWARDS ARROW ABOVE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF51C"},128285:{"value":"1F51D","name":"TOP WITH UPWARDS ARROW ABOVE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF51D"},128286:{"value":"1F51E","name":"NO ONE UNDER EIGHTEEN SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF51E"},128287:{"value":"1F51F","name":"KEYCAP TEN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF51F"},128288:{"value":"1F520","name":"INPUT SYMBOL FOR LATIN CAPITAL LETTERS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF520"},128289:{"value":"1F521","name":"INPUT SYMBOL FOR LATIN SMALL LETTERS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF521"},128290:{"value":"1F522","name":"INPUT SYMBOL FOR NUMBERS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF522"},128291:{"value":"1F523","name":"INPUT SYMBOL FOR SYMBOLS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF523"},128292:{"value":"1F524","name":"INPUT SYMBOL FOR LATIN LETTERS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF524"},128293:{"value":"1F525","name":"FIRE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF525"},128294:{"value":"1F526","name":"ELECTRIC TORCH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF526"},128295:{"value":"1F527","name":"WRENCH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF527"},128296:{"value":"1F528","name":"HAMMER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF528"},128297:{"value":"1F529","name":"NUT AND BOLT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF529"},128298:{"value":"1F52A","name":"HOCHO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF52A"},128299:{"value":"1F52B","name":"PISTOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF52B"},128300:{"value":"1F52C","name":"MICROSCOPE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF52C"},128301:{"value":"1F52D","name":"TELESCOPE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF52D"},128302:{"value":"1F52E","name":"CRYSTAL BALL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF52E"},128303:{"value":"1F52F","name":"SIX POINTED STAR WITH MIDDLE DOT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF52F"},128304:{"value":"1F530","name":"JAPANESE SYMBOL FOR BEGINNER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF530"},128305:{"value":"1F531","name":"TRIDENT EMBLEM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF531"},128306:{"value":"1F532","name":"BLACK SQUARE BUTTON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF532"},128307:{"value":"1F533","name":"WHITE SQUARE BUTTON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF533"},128308:{"value":"1F534","name":"LARGE RED CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF534"},128309:{"value":"1F535","name":"LARGE BLUE CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF535"},128310:{"value":"1F536","name":"LARGE ORANGE DIAMOND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF536"},128311:{"value":"1F537","name":"LARGE BLUE DIAMOND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF537"},128312:{"value":"1F538","name":"SMALL ORANGE DIAMOND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF538"},128313:{"value":"1F539","name":"SMALL BLUE DIAMOND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF539"},128314:{"value":"1F53A","name":"UP-POINTING RED TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF53A"},128315:{"value":"1F53B","name":"DOWN-POINTING RED TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF53B"},128316:{"value":"1F53C","name":"UP-POINTING SMALL RED TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF53C"},128317:{"value":"1F53D","name":"DOWN-POINTING SMALL RED TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF53D"},128318:{"value":"1F53E","name":"LOWER RIGHT SHADOWED WHITE CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF53E"},128319:{"value":"1F53F","name":"UPPER RIGHT SHADOWED WHITE CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF53F"},128320:{"value":"1F540","name":"CIRCLED CROSS POMMEE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF540"},128321:{"value":"1F541","name":"CROSS POMMEE WITH HALF-CIRCLE BELOW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF541"},128322:{"value":"1F542","name":"CROSS POMMEE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF542"},128323:{"value":"1F543","name":"NOTCHED LEFT SEMICIRCLE WITH THREE DOTS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF543"},128324:{"value":"1F544","name":"NOTCHED RIGHT SEMICIRCLE WITH THREE DOTS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF544"},128325:{"value":"1F545","name":"SYMBOL FOR MARKS CHAPTER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF545"},128326:{"value":"1F546","name":"WHITE LATIN CROSS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF546"},128327:{"value":"1F547","name":"HEAVY LATIN CROSS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF547"},128328:{"value":"1F548","name":"CELTIC CROSS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF548"},128329:{"value":"1F549","name":"OM SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF549"},128330:{"value":"1F54A","name":"DOVE OF PEACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF54A"},128331:{"value":"1F54B","name":"KAABA","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF54B"},128332:{"value":"1F54C","name":"MOSQUE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF54C"},128333:{"value":"1F54D","name":"SYNAGOGUE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF54D"},128334:{"value":"1F54E","name":"MENORAH WITH NINE BRANCHES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF54E"},128335:{"value":"1F54F","name":"BOWL OF HYGIEIA","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF54F"},128336:{"value":"1F550","name":"CLOCK FACE ONE OCLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF550"},128337:{"value":"1F551","name":"CLOCK FACE TWO OCLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF551"},128338:{"value":"1F552","name":"CLOCK FACE THREE OCLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF552"},128339:{"value":"1F553","name":"CLOCK FACE FOUR OCLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF553"},128340:{"value":"1F554","name":"CLOCK FACE FIVE OCLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF554"},128341:{"value":"1F555","name":"CLOCK FACE SIX OCLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF555"},128342:{"value":"1F556","name":"CLOCK FACE SEVEN OCLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF556"},128343:{"value":"1F557","name":"CLOCK FACE EIGHT OCLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF557"},128344:{"value":"1F558","name":"CLOCK FACE NINE OCLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF558"},128345:{"value":"1F559","name":"CLOCK FACE TEN OCLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF559"},128346:{"value":"1F55A","name":"CLOCK FACE ELEVEN OCLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF55A"},128347:{"value":"1F55B","name":"CLOCK FACE TWELVE OCLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF55B"},128348:{"value":"1F55C","name":"CLOCK FACE ONE-THIRTY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF55C"},128349:{"value":"1F55D","name":"CLOCK FACE TWO-THIRTY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF55D"},128350:{"value":"1F55E","name":"CLOCK FACE THREE-THIRTY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF55E"},128351:{"value":"1F55F","name":"CLOCK FACE FOUR-THIRTY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF55F"},128352:{"value":"1F560","name":"CLOCK FACE FIVE-THIRTY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF560"},128353:{"value":"1F561","name":"CLOCK FACE SIX-THIRTY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF561"},128354:{"value":"1F562","name":"CLOCK FACE SEVEN-THIRTY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF562"},128355:{"value":"1F563","name":"CLOCK FACE EIGHT-THIRTY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF563"},128356:{"value":"1F564","name":"CLOCK FACE NINE-THIRTY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF564"},128357:{"value":"1F565","name":"CLOCK FACE TEN-THIRTY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF565"},128358:{"value":"1F566","name":"CLOCK FACE ELEVEN-THIRTY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF566"},128359:{"value":"1F567","name":"CLOCK FACE TWELVE-THIRTY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF567"},128360:{"value":"1F568","name":"RIGHT SPEAKER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF568"},128361:{"value":"1F569","name":"RIGHT SPEAKER WITH ONE SOUND WAVE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF569"},128362:{"value":"1F56A","name":"RIGHT SPEAKER WITH THREE SOUND WAVES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF56A"},128363:{"value":"1F56B","name":"BULLHORN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF56B"},128364:{"value":"1F56C","name":"BULLHORN WITH SOUND WAVES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF56C"},128365:{"value":"1F56D","name":"RINGING BELL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF56D"},128366:{"value":"1F56E","name":"BOOK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF56E"},128367:{"value":"1F56F","name":"CANDLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF56F"},128368:{"value":"1F570","name":"MANTELPIECE CLOCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF570"},128369:{"value":"1F571","name":"BLACK SKULL AND CROSSBONES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF571"},128370:{"value":"1F572","name":"NO PIRACY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF572"},128371:{"value":"1F573","name":"HOLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF573"},128372:{"value":"1F574","name":"MAN IN BUSINESS SUIT LEVITATING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF574"},128373:{"value":"1F575","name":"SLEUTH OR SPY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF575"},128374:{"value":"1F576","name":"DARK SUNGLASSES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF576"},128375:{"value":"1F577","name":"SPIDER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF577"},128376:{"value":"1F578","name":"SPIDER WEB","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF578"},128377:{"value":"1F579","name":"JOYSTICK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF579"},128379:{"value":"1F57B","name":"LEFT HAND TELEPHONE RECEIVER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF57B"},128380:{"value":"1F57C","name":"TELEPHONE RECEIVER WITH PAGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF57C"},128381:{"value":"1F57D","name":"RIGHT HAND TELEPHONE RECEIVER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF57D"},128382:{"value":"1F57E","name":"WHITE TOUCHTONE TELEPHONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF57E"},128383:{"value":"1F57F","name":"BLACK TOUCHTONE TELEPHONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF57F"},128384:{"value":"1F580","name":"TELEPHONE ON TOP OF MODEM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF580"},128385:{"value":"1F581","name":"CLAMSHELL MOBILE PHONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF581"},128386:{"value":"1F582","name":"BACK OF ENVELOPE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF582"},128387:{"value":"1F583","name":"STAMPED ENVELOPE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF583"},128388:{"value":"1F584","name":"ENVELOPE WITH LIGHTNING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF584"},128389:{"value":"1F585","name":"FLYING ENVELOPE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF585"},128390:{"value":"1F586","name":"PEN OVER STAMPED ENVELOPE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF586"},128391:{"value":"1F587","name":"LINKED PAPERCLIPS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF587"},128392:{"value":"1F588","name":"BLACK PUSHPIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF588"},128393:{"value":"1F589","name":"LOWER LEFT PENCIL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF589"},128394:{"value":"1F58A","name":"LOWER LEFT BALLPOINT PEN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF58A"},128395:{"value":"1F58B","name":"LOWER LEFT FOUNTAIN PEN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF58B"},128396:{"value":"1F58C","name":"LOWER LEFT PAINTBRUSH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF58C"},128397:{"value":"1F58D","name":"LOWER LEFT CRAYON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF58D"},128398:{"value":"1F58E","name":"LEFT WRITING HAND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF58E"},128399:{"value":"1F58F","name":"TURNED OK HAND SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF58F"},128400:{"value":"1F590","name":"RAISED HAND WITH FINGERS SPLAYED","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF590"},128401:{"value":"1F591","name":"REVERSED RAISED HAND WITH FINGERS SPLAYED","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF591"},128402:{"value":"1F592","name":"REVERSED THUMBS UP SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF592"},128403:{"value":"1F593","name":"REVERSED THUMBS DOWN SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF593"},128404:{"value":"1F594","name":"REVERSED VICTORY HAND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF594"},128405:{"value":"1F595","name":"REVERSED HAND WITH MIDDLE FINGER EXTENDED","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF595"},128406:{"value":"1F596","name":"RAISED HAND WITH PART BETWEEN MIDDLE AND RING FINGERS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF596"},128407:{"value":"1F597","name":"WHITE DOWN POINTING LEFT HAND INDEX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF597"},128408:{"value":"1F598","name":"SIDEWAYS WHITE LEFT POINTING INDEX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF598"},128409:{"value":"1F599","name":"SIDEWAYS WHITE RIGHT POINTING INDEX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF599"},128410:{"value":"1F59A","name":"SIDEWAYS BLACK LEFT POINTING INDEX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF59A"},128411:{"value":"1F59B","name":"SIDEWAYS BLACK RIGHT POINTING INDEX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF59B"},128412:{"value":"1F59C","name":"BLACK LEFT POINTING BACKHAND INDEX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF59C"},128413:{"value":"1F59D","name":"BLACK RIGHT POINTING BACKHAND INDEX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF59D"},128414:{"value":"1F59E","name":"SIDEWAYS WHITE UP POINTING INDEX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF59E"},128415:{"value":"1F59F","name":"SIDEWAYS WHITE DOWN POINTING INDEX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF59F"},128416:{"value":"1F5A0","name":"SIDEWAYS BLACK UP POINTING INDEX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5A0"},128417:{"value":"1F5A1","name":"SIDEWAYS BLACK DOWN POINTING INDEX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5A1"},128418:{"value":"1F5A2","name":"BLACK UP POINTING BACKHAND INDEX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5A2"},128419:{"value":"1F5A3","name":"BLACK DOWN POINTING BACKHAND INDEX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5A3"},128421:{"value":"1F5A5","name":"DESKTOP COMPUTER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5A5"},128422:{"value":"1F5A6","name":"KEYBOARD AND MOUSE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5A6"},128423:{"value":"1F5A7","name":"THREE NETWORKED COMPUTERS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5A7"},128424:{"value":"1F5A8","name":"PRINTER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5A8"},128425:{"value":"1F5A9","name":"POCKET CALCULATOR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5A9"},128426:{"value":"1F5AA","name":"BLACK HARD SHELL FLOPPY DISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5AA"},128427:{"value":"1F5AB","name":"WHITE HARD SHELL FLOPPY DISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5AB"},128428:{"value":"1F5AC","name":"SOFT SHELL FLOPPY DISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5AC"},128429:{"value":"1F5AD","name":"TAPE CARTRIDGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5AD"},128430:{"value":"1F5AE","name":"WIRED KEYBOARD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5AE"},128431:{"value":"1F5AF","name":"ONE BUTTON MOUSE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5AF"},128432:{"value":"1F5B0","name":"TWO BUTTON MOUSE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5B0"},128433:{"value":"1F5B1","name":"THREE BUTTON MOUSE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5B1"},128434:{"value":"1F5B2","name":"TRACKBALL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5B2"},128435:{"value":"1F5B3","name":"OLD PERSONAL COMPUTER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5B3"},128436:{"value":"1F5B4","name":"HARD DISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5B4"},128437:{"value":"1F5B5","name":"SCREEN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5B5"},128438:{"value":"1F5B6","name":"PRINTER ICON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5B6"},128439:{"value":"1F5B7","name":"FAX ICON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5B7"},128440:{"value":"1F5B8","name":"OPTICAL DISC ICON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5B8"},128441:{"value":"1F5B9","name":"DOCUMENT WITH TEXT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5B9"},128442:{"value":"1F5BA","name":"DOCUMENT WITH TEXT AND PICTURE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5BA"},128443:{"value":"1F5BB","name":"DOCUMENT WITH PICTURE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5BB"},128444:{"value":"1F5BC","name":"FRAME WITH PICTURE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5BC"},128445:{"value":"1F5BD","name":"FRAME WITH TILES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5BD"},128446:{"value":"1F5BE","name":"FRAME WITH AN X","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5BE"},128447:{"value":"1F5BF","name":"BLACK FOLDER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5BF"},128448:{"value":"1F5C0","name":"FOLDER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5C0"},128449:{"value":"1F5C1","name":"OPEN FOLDER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5C1"},128450:{"value":"1F5C2","name":"CARD INDEX DIVIDERS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5C2"},128451:{"value":"1F5C3","name":"CARD FILE BOX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5C3"},128452:{"value":"1F5C4","name":"FILE CABINET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5C4"},128453:{"value":"1F5C5","name":"EMPTY NOTE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5C5"},128454:{"value":"1F5C6","name":"EMPTY NOTE PAGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5C6"},128455:{"value":"1F5C7","name":"EMPTY NOTE PAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5C7"},128456:{"value":"1F5C8","name":"NOTE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5C8"},128457:{"value":"1F5C9","name":"NOTE PAGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5C9"},128458:{"value":"1F5CA","name":"NOTE PAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5CA"},128459:{"value":"1F5CB","name":"EMPTY DOCUMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5CB"},128460:{"value":"1F5CC","name":"EMPTY PAGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5CC"},128461:{"value":"1F5CD","name":"EMPTY PAGES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5CD"},128462:{"value":"1F5CE","name":"DOCUMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5CE"},128463:{"value":"1F5CF","name":"PAGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5CF"},128464:{"value":"1F5D0","name":"PAGES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5D0"},128465:{"value":"1F5D1","name":"WASTEBASKET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5D1"},128466:{"value":"1F5D2","name":"SPIRAL NOTE PAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5D2"},128467:{"value":"1F5D3","name":"SPIRAL CALENDAR PAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5D3"},128468:{"value":"1F5D4","name":"DESKTOP WINDOW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5D4"},128469:{"value":"1F5D5","name":"MINIMIZE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5D5"},128470:{"value":"1F5D6","name":"MAXIMIZE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5D6"},128471:{"value":"1F5D7","name":"OVERLAP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5D7"},128472:{"value":"1F5D8","name":"CLOCKWISE RIGHT AND LEFT SEMICIRCLE ARROWS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5D8"},128473:{"value":"1F5D9","name":"CANCELLATION X","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5D9"},128474:{"value":"1F5DA","name":"INCREASE FONT SIZE SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5DA"},128475:{"value":"1F5DB","name":"DECREASE FONT SIZE SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5DB"},128476:{"value":"1F5DC","name":"COMPRESSION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5DC"},128477:{"value":"1F5DD","name":"OLD KEY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5DD"},128478:{"value":"1F5DE","name":"ROLLED-UP NEWSPAPER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5DE"},128479:{"value":"1F5DF","name":"PAGE WITH CIRCLED TEXT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5DF"},128480:{"value":"1F5E0","name":"STOCK CHART","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5E0"},128481:{"value":"1F5E1","name":"DAGGER KNIFE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5E1"},128482:{"value":"1F5E2","name":"LIPS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5E2"},128483:{"value":"1F5E3","name":"SPEAKING HEAD IN SILHOUETTE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5E3"},128484:{"value":"1F5E4","name":"THREE RAYS ABOVE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5E4"},128485:{"value":"1F5E5","name":"THREE RAYS BELOW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5E5"},128486:{"value":"1F5E6","name":"THREE RAYS LEFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5E6"},128487:{"value":"1F5E7","name":"THREE RAYS RIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5E7"},128488:{"value":"1F5E8","name":"LEFT SPEECH BUBBLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5E8"},128489:{"value":"1F5E9","name":"RIGHT SPEECH BUBBLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5E9"},128490:{"value":"1F5EA","name":"TWO SPEECH BUBBLES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5EA"},128491:{"value":"1F5EB","name":"THREE SPEECH BUBBLES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5EB"},128492:{"value":"1F5EC","name":"LEFT THOUGHT BUBBLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5EC"},128493:{"value":"1F5ED","name":"RIGHT THOUGHT BUBBLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5ED"},128494:{"value":"1F5EE","name":"LEFT ANGER BUBBLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5EE"},128495:{"value":"1F5EF","name":"RIGHT ANGER BUBBLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5EF"},128496:{"value":"1F5F0","name":"MOOD BUBBLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5F0"},128497:{"value":"1F5F1","name":"LIGHTNING MOOD BUBBLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5F1"},128498:{"value":"1F5F2","name":"LIGHTNING MOOD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5F2"},128499:{"value":"1F5F3","name":"BALLOT BOX WITH BALLOT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5F3"},128500:{"value":"1F5F4","name":"BALLOT SCRIPT X","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5F4"},128501:{"value":"1F5F5","name":"BALLOT BOX WITH SCRIPT X","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5F5"},128502:{"value":"1F5F6","name":"BALLOT BOLD SCRIPT X","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5F6"},128503:{"value":"1F5F7","name":"BALLOT BOX WITH BOLD SCRIPT X","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5F7"},128504:{"value":"1F5F8","name":"LIGHT CHECK MARK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5F8"},128505:{"value":"1F5F9","name":"BALLOT BOX WITH BOLD CHECK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5F9"},128506:{"value":"1F5FA","name":"WORLD MAP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5FA"},128507:{"value":"1F5FB","name":"MOUNT FUJI","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5FB"},128508:{"value":"1F5FC","name":"TOKYO TOWER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5FC"},128509:{"value":"1F5FD","name":"STATUE OF LIBERTY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5FD"},128510:{"value":"1F5FE","name":"SILHOUETTE OF JAPAN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5FE"},128511:{"value":"1F5FF","name":"MOYAI","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF5FF"},128512:{"value":"1F600","name":"GRINNING FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF600"},128513:{"value":"1F601","name":"GRINNING FACE WITH SMILING EYES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF601"},128514:{"value":"1F602","name":"FACE WITH TEARS OF JOY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF602"},128515:{"value":"1F603","name":"SMILING FACE WITH OPEN MOUTH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF603"},128516:{"value":"1F604","name":"SMILING FACE WITH OPEN MOUTH AND SMILING EYES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF604"},128517:{"value":"1F605","name":"SMILING FACE WITH OPEN MOUTH AND COLD SWEAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF605"},128518:{"value":"1F606","name":"SMILING FACE WITH OPEN MOUTH AND TIGHTLY-CLOSED EYES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF606"},128519:{"value":"1F607","name":"SMILING FACE WITH HALO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF607"},128520:{"value":"1F608","name":"SMILING FACE WITH HORNS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF608"},128521:{"value":"1F609","name":"WINKING FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF609"},128522:{"value":"1F60A","name":"SMILING FACE WITH SMILING EYES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF60A"},128523:{"value":"1F60B","name":"FACE SAVOURING DELICIOUS FOOD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF60B"},128524:{"value":"1F60C","name":"RELIEVED FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF60C"},128525:{"value":"1F60D","name":"SMILING FACE WITH HEART-SHAPED EYES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF60D"},128526:{"value":"1F60E","name":"SMILING FACE WITH SUNGLASSES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF60E"},128527:{"value":"1F60F","name":"SMIRKING FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF60F"},128528:{"value":"1F610","name":"NEUTRAL FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF610"},128529:{"value":"1F611","name":"EXPRESSIONLESS FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF611"},128530:{"value":"1F612","name":"UNAMUSED FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF612"},128531:{"value":"1F613","name":"FACE WITH COLD SWEAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF613"},128532:{"value":"1F614","name":"PENSIVE FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF614"},128533:{"value":"1F615","name":"CONFUSED FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF615"},128534:{"value":"1F616","name":"CONFOUNDED FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF616"},128535:{"value":"1F617","name":"KISSING FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF617"},128536:{"value":"1F618","name":"FACE THROWING A KISS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF618"},128537:{"value":"1F619","name":"KISSING FACE WITH SMILING EYES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF619"},128538:{"value":"1F61A","name":"KISSING FACE WITH CLOSED EYES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF61A"},128539:{"value":"1F61B","name":"FACE WITH STUCK-OUT TONGUE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF61B"},128540:{"value":"1F61C","name":"FACE WITH STUCK-OUT TONGUE AND WINKING EYE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF61C"},128541:{"value":"1F61D","name":"FACE WITH STUCK-OUT TONGUE AND TIGHTLY-CLOSED EYES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF61D"},128542:{"value":"1F61E","name":"DISAPPOINTED FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF61E"},128543:{"value":"1F61F","name":"WORRIED FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF61F"},128544:{"value":"1F620","name":"ANGRY FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF620"},128545:{"value":"1F621","name":"POUTING FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF621"},128546:{"value":"1F622","name":"CRYING FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF622"},128547:{"value":"1F623","name":"PERSEVERING FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF623"},128548:{"value":"1F624","name":"FACE WITH LOOK OF TRIUMPH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF624"},128549:{"value":"1F625","name":"DISAPPOINTED BUT RELIEVED FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF625"},128550:{"value":"1F626","name":"FROWNING FACE WITH OPEN MOUTH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF626"},128551:{"value":"1F627","name":"ANGUISHED FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF627"},128552:{"value":"1F628","name":"FEARFUL FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF628"},128553:{"value":"1F629","name":"WEARY FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF629"},128554:{"value":"1F62A","name":"SLEEPY FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF62A"},128555:{"value":"1F62B","name":"TIRED FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF62B"},128556:{"value":"1F62C","name":"GRIMACING FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF62C"},128557:{"value":"1F62D","name":"LOUDLY CRYING FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF62D"},128558:{"value":"1F62E","name":"FACE WITH OPEN MOUTH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF62E"},128559:{"value":"1F62F","name":"HUSHED FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF62F"},128560:{"value":"1F630","name":"FACE WITH OPEN MOUTH AND COLD SWEAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF630"},128561:{"value":"1F631","name":"FACE SCREAMING IN FEAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF631"},128562:{"value":"1F632","name":"ASTONISHED FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF632"},128563:{"value":"1F633","name":"FLUSHED FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF633"},128564:{"value":"1F634","name":"SLEEPING FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF634"},128565:{"value":"1F635","name":"DIZZY FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF635"},128566:{"value":"1F636","name":"FACE WITHOUT MOUTH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF636"},128567:{"value":"1F637","name":"FACE WITH MEDICAL MASK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF637"},128568:{"value":"1F638","name":"GRINNING CAT FACE WITH SMILING EYES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF638"},128569:{"value":"1F639","name":"CAT FACE WITH TEARS OF JOY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF639"},128570:{"value":"1F63A","name":"SMILING CAT FACE WITH OPEN MOUTH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF63A"},128571:{"value":"1F63B","name":"SMILING CAT FACE WITH HEART-SHAPED EYES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF63B"},128572:{"value":"1F63C","name":"CAT FACE WITH WRY SMILE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF63C"},128573:{"value":"1F63D","name":"KISSING CAT FACE WITH CLOSED EYES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF63D"},128574:{"value":"1F63E","name":"POUTING CAT FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF63E"},128575:{"value":"1F63F","name":"CRYING CAT FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF63F"},128576:{"value":"1F640","name":"WEARY CAT FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF640"},128577:{"value":"1F641","name":"SLIGHTLY FROWNING FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF641"},128578:{"value":"1F642","name":"SLIGHTLY SMILING FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF642"},128579:{"value":"1F643","name":"UPSIDE-DOWN FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF643"},128580:{"value":"1F644","name":"FACE WITH ROLLING EYES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF644"},128581:{"value":"1F645","name":"FACE WITH NO GOOD GESTURE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF645"},128582:{"value":"1F646","name":"FACE WITH OK GESTURE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF646"},128583:{"value":"1F647","name":"PERSON BOWING DEEPLY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF647"},128584:{"value":"1F648","name":"SEE-NO-EVIL MONKEY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF648"},128585:{"value":"1F649","name":"HEAR-NO-EVIL MONKEY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF649"},128586:{"value":"1F64A","name":"SPEAK-NO-EVIL MONKEY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF64A"},128587:{"value":"1F64B","name":"HAPPY PERSON RAISING ONE HAND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF64B"},128588:{"value":"1F64C","name":"PERSON RAISING BOTH HANDS IN CELEBRATION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF64C"},128589:{"value":"1F64D","name":"PERSON FROWNING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF64D"},128590:{"value":"1F64E","name":"PERSON WITH POUTING FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF64E"},128591:{"value":"1F64F","name":"PERSON WITH FOLDED HANDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF64F"},128592:{"value":"1F650","name":"NORTH WEST POINTING LEAF","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF650"},128593:{"value":"1F651","name":"SOUTH WEST POINTING LEAF","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF651"},128594:{"value":"1F652","name":"NORTH EAST POINTING LEAF","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF652"},128595:{"value":"1F653","name":"SOUTH EAST POINTING LEAF","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF653"},128596:{"value":"1F654","name":"TURNED NORTH WEST POINTING LEAF","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF654"},128597:{"value":"1F655","name":"TURNED SOUTH WEST POINTING LEAF","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF655"},128598:{"value":"1F656","name":"TURNED NORTH EAST POINTING LEAF","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF656"},128599:{"value":"1F657","name":"TURNED SOUTH EAST POINTING LEAF","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF657"},128600:{"value":"1F658","name":"NORTH WEST POINTING VINE LEAF","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF658"},128601:{"value":"1F659","name":"SOUTH WEST POINTING VINE LEAF","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF659"},128602:{"value":"1F65A","name":"NORTH EAST POINTING VINE LEAF","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF65A"},128603:{"value":"1F65B","name":"SOUTH EAST POINTING VINE LEAF","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF65B"},128604:{"value":"1F65C","name":"HEAVY NORTH WEST POINTING VINE LEAF","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF65C"},128605:{"value":"1F65D","name":"HEAVY SOUTH WEST POINTING VINE LEAF","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF65D"},128606:{"value":"1F65E","name":"HEAVY NORTH EAST POINTING VINE LEAF","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF65E"},128607:{"value":"1F65F","name":"HEAVY SOUTH EAST POINTING VINE LEAF","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF65F"},128608:{"value":"1F660","name":"NORTH WEST POINTING BUD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF660"},128609:{"value":"1F661","name":"SOUTH WEST POINTING BUD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF661"},128610:{"value":"1F662","name":"NORTH EAST POINTING BUD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF662"},128611:{"value":"1F663","name":"SOUTH EAST POINTING BUD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF663"},128612:{"value":"1F664","name":"HEAVY NORTH WEST POINTING BUD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF664"},128613:{"value":"1F665","name":"HEAVY SOUTH WEST POINTING BUD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF665"},128614:{"value":"1F666","name":"HEAVY NORTH EAST POINTING BUD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF666"},128615:{"value":"1F667","name":"HEAVY SOUTH EAST POINTING BUD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF667"},128616:{"value":"1F668","name":"HOLLOW QUILT SQUARE ORNAMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF668"},128617:{"value":"1F669","name":"HOLLOW QUILT SQUARE ORNAMENT IN BLACK SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF669"},128618:{"value":"1F66A","name":"SOLID QUILT SQUARE ORNAMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF66A"},128619:{"value":"1F66B","name":"SOLID QUILT SQUARE ORNAMENT IN BLACK SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF66B"},128620:{"value":"1F66C","name":"LEFTWARDS ROCKET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF66C"},128621:{"value":"1F66D","name":"UPWARDS ROCKET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF66D"},128622:{"value":"1F66E","name":"RIGHTWARDS ROCKET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF66E"},128623:{"value":"1F66F","name":"DOWNWARDS ROCKET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF66F"},128624:{"value":"1F670","name":"SCRIPT LIGATURE ET ORNAMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF670"},128625:{"value":"1F671","name":"HEAVY SCRIPT LIGATURE ET ORNAMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF671"},128626:{"value":"1F672","name":"LIGATURE OPEN ET ORNAMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF672"},128627:{"value":"1F673","name":"HEAVY LIGATURE OPEN ET ORNAMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF673"},128628:{"value":"1F674","name":"HEAVY AMPERSAND ORNAMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF674"},128629:{"value":"1F675","name":"SWASH AMPERSAND ORNAMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF675"},128630:{"value":"1F676","name":"SANS-SERIF HEAVY DOUBLE TURNED COMMA QUOTATION MARK ORNAMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF676"},128631:{"value":"1F677","name":"SANS-SERIF HEAVY DOUBLE COMMA QUOTATION MARK ORNAMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF677"},128632:{"value":"1F678","name":"SANS-SERIF HEAVY LOW DOUBLE COMMA QUOTATION MARK ORNAMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF678"},128633:{"value":"1F679","name":"HEAVY INTERROBANG ORNAMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF679"},128634:{"value":"1F67A","name":"SANS-SERIF INTERROBANG ORNAMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF67A"},128635:{"value":"1F67B","name":"HEAVY SANS-SERIF INTERROBANG ORNAMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF67B"},128636:{"value":"1F67C","name":"VERY HEAVY SOLIDUS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF67C"},128637:{"value":"1F67D","name":"VERY HEAVY REVERSE SOLIDUS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF67D"},128638:{"value":"1F67E","name":"CHECKER BOARD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF67E"},128639:{"value":"1F67F","name":"REVERSE CHECKER BOARD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF67F"},128640:{"value":"1F680","name":"ROCKET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF680"},128641:{"value":"1F681","name":"HELICOPTER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF681"},128642:{"value":"1F682","name":"STEAM LOCOMOTIVE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF682"},128643:{"value":"1F683","name":"RAILWAY CAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF683"},128644:{"value":"1F684","name":"HIGH-SPEED TRAIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF684"},128645:{"value":"1F685","name":"HIGH-SPEED TRAIN WITH BULLET NOSE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF685"},128646:{"value":"1F686","name":"TRAIN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF686"},128647:{"value":"1F687","name":"METRO","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF687"},128648:{"value":"1F688","name":"LIGHT RAIL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF688"},128649:{"value":"1F689","name":"STATION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF689"},128650:{"value":"1F68A","name":"TRAM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF68A"},128651:{"value":"1F68B","name":"TRAM CAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF68B"},128652:{"value":"1F68C","name":"BUS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF68C"},128653:{"value":"1F68D","name":"ONCOMING BUS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF68D"},128654:{"value":"1F68E","name":"TROLLEYBUS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF68E"},128655:{"value":"1F68F","name":"BUS STOP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF68F"},128656:{"value":"1F690","name":"MINIBUS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF690"},128657:{"value":"1F691","name":"AMBULANCE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF691"},128658:{"value":"1F692","name":"FIRE ENGINE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF692"},128659:{"value":"1F693","name":"POLICE CAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF693"},128660:{"value":"1F694","name":"ONCOMING POLICE CAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF694"},128661:{"value":"1F695","name":"TAXI","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF695"},128662:{"value":"1F696","name":"ONCOMING TAXI","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF696"},128663:{"value":"1F697","name":"AUTOMOBILE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF697"},128664:{"value":"1F698","name":"ONCOMING AUTOMOBILE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF698"},128665:{"value":"1F699","name":"RECREATIONAL VEHICLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF699"},128666:{"value":"1F69A","name":"DELIVERY TRUCK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF69A"},128667:{"value":"1F69B","name":"ARTICULATED LORRY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF69B"},128668:{"value":"1F69C","name":"TRACTOR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF69C"},128669:{"value":"1F69D","name":"MONORAIL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF69D"},128670:{"value":"1F69E","name":"MOUNTAIN RAILWAY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF69E"},128671:{"value":"1F69F","name":"SUSPENSION RAILWAY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF69F"},128672:{"value":"1F6A0","name":"MOUNTAIN CABLEWAY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6A0"},128673:{"value":"1F6A1","name":"AERIAL TRAMWAY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6A1"},128674:{"value":"1F6A2","name":"SHIP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6A2"},128675:{"value":"1F6A3","name":"ROWBOAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6A3"},128676:{"value":"1F6A4","name":"SPEEDBOAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6A4"},128677:{"value":"1F6A5","name":"HORIZONTAL TRAFFIC LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6A5"},128678:{"value":"1F6A6","name":"VERTICAL TRAFFIC LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6A6"},128679:{"value":"1F6A7","name":"CONSTRUCTION SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6A7"},128680:{"value":"1F6A8","name":"POLICE CARS REVOLVING LIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6A8"},128681:{"value":"1F6A9","name":"TRIANGULAR FLAG ON POST","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6A9"},128682:{"value":"1F6AA","name":"DOOR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6AA"},128683:{"value":"1F6AB","name":"NO ENTRY SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6AB"},128684:{"value":"1F6AC","name":"SMOKING SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6AC"},128685:{"value":"1F6AD","name":"NO SMOKING SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6AD"},128686:{"value":"1F6AE","name":"PUT LITTER IN ITS PLACE SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6AE"},128687:{"value":"1F6AF","name":"DO NOT LITTER SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6AF"},128688:{"value":"1F6B0","name":"POTABLE WATER SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6B0"},128689:{"value":"1F6B1","name":"NON-POTABLE WATER SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6B1"},128690:{"value":"1F6B2","name":"BICYCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6B2"},128691:{"value":"1F6B3","name":"NO BICYCLES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6B3"},128692:{"value":"1F6B4","name":"BICYCLIST","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6B4"},128693:{"value":"1F6B5","name":"MOUNTAIN BICYCLIST","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6B5"},128694:{"value":"1F6B6","name":"PEDESTRIAN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6B6"},128695:{"value":"1F6B7","name":"NO PEDESTRIANS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6B7"},128696:{"value":"1F6B8","name":"CHILDREN CROSSING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6B8"},128697:{"value":"1F6B9","name":"MENS SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6B9"},128698:{"value":"1F6BA","name":"WOMENS SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6BA"},128699:{"value":"1F6BB","name":"RESTROOM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6BB"},128700:{"value":"1F6BC","name":"BABY SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6BC"},128701:{"value":"1F6BD","name":"TOILET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6BD"},128702:{"value":"1F6BE","name":"WATER CLOSET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6BE"},128703:{"value":"1F6BF","name":"SHOWER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6BF"},128704:{"value":"1F6C0","name":"BATH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6C0"},128705:{"value":"1F6C1","name":"BATHTUB","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6C1"},128706:{"value":"1F6C2","name":"PASSPORT CONTROL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6C2"},128707:{"value":"1F6C3","name":"CUSTOMS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6C3"},128708:{"value":"1F6C4","name":"BAGGAGE CLAIM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6C4"},128709:{"value":"1F6C5","name":"LEFT LUGGAGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6C5"},128710:{"value":"1F6C6","name":"TRIANGLE WITH ROUNDED CORNERS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6C6"},128711:{"value":"1F6C7","name":"PROHIBITED SIGN","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6C7"},128712:{"value":"1F6C8","name":"CIRCLED INFORMATION SOURCE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6C8"},128713:{"value":"1F6C9","name":"BOYS SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6C9"},128714:{"value":"1F6CA","name":"GIRLS SYMBOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6CA"},128715:{"value":"1F6CB","name":"COUCH AND LAMP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6CB"},128716:{"value":"1F6CC","name":"SLEEPING ACCOMMODATION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6CC"},128717:{"value":"1F6CD","name":"SHOPPING BAGS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6CD"},128718:{"value":"1F6CE","name":"BELLHOP BELL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6CE"},128719:{"value":"1F6CF","name":"BED","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6CF"},128720:{"value":"1F6D0","name":"PLACE OF WORSHIP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6D0"},128736:{"value":"1F6E0","name":"HAMMER AND WRENCH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6E0"},128737:{"value":"1F6E1","name":"SHIELD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6E1"},128738:{"value":"1F6E2","name":"OIL DRUM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6E2"},128739:{"value":"1F6E3","name":"MOTORWAY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6E3"},128740:{"value":"1F6E4","name":"RAILWAY TRACK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6E4"},128741:{"value":"1F6E5","name":"MOTOR BOAT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6E5"},128742:{"value":"1F6E6","name":"UP-POINTING MILITARY AIRPLANE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6E6"},128743:{"value":"1F6E7","name":"UP-POINTING AIRPLANE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6E7"},128744:{"value":"1F6E8","name":"UP-POINTING SMALL AIRPLANE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6E8"},128745:{"value":"1F6E9","name":"SMALL AIRPLANE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6E9"},128746:{"value":"1F6EA","name":"NORTHEAST-POINTING AIRPLANE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6EA"},128747:{"value":"1F6EB","name":"AIRPLANE DEPARTURE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6EB"},128748:{"value":"1F6EC","name":"AIRPLANE ARRIVING","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6EC"},128752:{"value":"1F6F0","name":"SATELLITE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6F0"},128753:{"value":"1F6F1","name":"ONCOMING FIRE ENGINE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6F1"},128754:{"value":"1F6F2","name":"DIESEL LOCOMOTIVE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6F2"},128755:{"value":"1F6F3","name":"PASSENGER SHIP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF6F3"},128768:{"value":"1F700","name":"ALCHEMICAL SYMBOL FOR QUINTESSENCE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF700"},128769:{"value":"1F701","name":"ALCHEMICAL SYMBOL FOR AIR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF701"},128770:{"value":"1F702","name":"ALCHEMICAL SYMBOL FOR FIRE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF702"},128771:{"value":"1F703","name":"ALCHEMICAL SYMBOL FOR EARTH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF703"},128772:{"value":"1F704","name":"ALCHEMICAL SYMBOL FOR WATER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF704"},128773:{"value":"1F705","name":"ALCHEMICAL SYMBOL FOR AQUAFORTIS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF705"},128774:{"value":"1F706","name":"ALCHEMICAL SYMBOL FOR AQUA REGIA","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF706"},128775:{"value":"1F707","name":"ALCHEMICAL SYMBOL FOR AQUA REGIA-2","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF707"},128776:{"value":"1F708","name":"ALCHEMICAL SYMBOL FOR AQUA VITAE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF708"},128777:{"value":"1F709","name":"ALCHEMICAL SYMBOL FOR AQUA VITAE-2","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF709"},128778:{"value":"1F70A","name":"ALCHEMICAL SYMBOL FOR VINEGAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF70A"},128779:{"value":"1F70B","name":"ALCHEMICAL SYMBOL FOR VINEGAR-2","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF70B"},128780:{"value":"1F70C","name":"ALCHEMICAL SYMBOL FOR VINEGAR-3","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF70C"},128781:{"value":"1F70D","name":"ALCHEMICAL SYMBOL FOR SULFUR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF70D"},128782:{"value":"1F70E","name":"ALCHEMICAL SYMBOL FOR PHILOSOPHERS SULFUR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF70E"},128783:{"value":"1F70F","name":"ALCHEMICAL SYMBOL FOR BLACK SULFUR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF70F"},128784:{"value":"1F710","name":"ALCHEMICAL SYMBOL FOR MERCURY SUBLIMATE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF710"},128785:{"value":"1F711","name":"ALCHEMICAL SYMBOL FOR MERCURY SUBLIMATE-2","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF711"},128786:{"value":"1F712","name":"ALCHEMICAL SYMBOL FOR MERCURY SUBLIMATE-3","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF712"},128787:{"value":"1F713","name":"ALCHEMICAL SYMBOL FOR CINNABAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF713"},128788:{"value":"1F714","name":"ALCHEMICAL SYMBOL FOR SALT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF714"},128789:{"value":"1F715","name":"ALCHEMICAL SYMBOL FOR NITRE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF715"},128790:{"value":"1F716","name":"ALCHEMICAL SYMBOL FOR VITRIOL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF716"},128791:{"value":"1F717","name":"ALCHEMICAL SYMBOL FOR VITRIOL-2","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF717"},128792:{"value":"1F718","name":"ALCHEMICAL SYMBOL FOR ROCK SALT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF718"},128793:{"value":"1F719","name":"ALCHEMICAL SYMBOL FOR ROCK SALT-2","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF719"},128794:{"value":"1F71A","name":"ALCHEMICAL SYMBOL FOR GOLD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF71A"},128795:{"value":"1F71B","name":"ALCHEMICAL SYMBOL FOR SILVER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF71B"},128796:{"value":"1F71C","name":"ALCHEMICAL SYMBOL FOR IRON ORE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF71C"},128797:{"value":"1F71D","name":"ALCHEMICAL SYMBOL FOR IRON ORE-2","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF71D"},128798:{"value":"1F71E","name":"ALCHEMICAL SYMBOL FOR CROCUS OF IRON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF71E"},128799:{"value":"1F71F","name":"ALCHEMICAL SYMBOL FOR REGULUS OF IRON","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF71F"},128800:{"value":"1F720","name":"ALCHEMICAL SYMBOL FOR COPPER ORE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF720"},128801:{"value":"1F721","name":"ALCHEMICAL SYMBOL FOR IRON-COPPER ORE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF721"},128802:{"value":"1F722","name":"ALCHEMICAL SYMBOL FOR SUBLIMATE OF COPPER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF722"},128803:{"value":"1F723","name":"ALCHEMICAL SYMBOL FOR CROCUS OF COPPER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF723"},128804:{"value":"1F724","name":"ALCHEMICAL SYMBOL FOR CROCUS OF COPPER-2","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF724"},128805:{"value":"1F725","name":"ALCHEMICAL SYMBOL FOR COPPER ANTIMONIATE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF725"},128806:{"value":"1F726","name":"ALCHEMICAL SYMBOL FOR SALT OF COPPER ANTIMONIATE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF726"},128807:{"value":"1F727","name":"ALCHEMICAL SYMBOL FOR SUBLIMATE OF SALT OF COPPER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF727"},128808:{"value":"1F728","name":"ALCHEMICAL SYMBOL FOR VERDIGRIS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF728"},128809:{"value":"1F729","name":"ALCHEMICAL SYMBOL FOR TIN ORE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF729"},128810:{"value":"1F72A","name":"ALCHEMICAL SYMBOL FOR LEAD ORE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF72A"},128811:{"value":"1F72B","name":"ALCHEMICAL SYMBOL FOR ANTIMONY ORE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF72B"},128812:{"value":"1F72C","name":"ALCHEMICAL SYMBOL FOR SUBLIMATE OF ANTIMONY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF72C"},128813:{"value":"1F72D","name":"ALCHEMICAL SYMBOL FOR SALT OF ANTIMONY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF72D"},128814:{"value":"1F72E","name":"ALCHEMICAL SYMBOL FOR SUBLIMATE OF SALT OF ANTIMONY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF72E"},128815:{"value":"1F72F","name":"ALCHEMICAL SYMBOL FOR VINEGAR OF ANTIMONY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF72F"},128816:{"value":"1F730","name":"ALCHEMICAL SYMBOL FOR REGULUS OF ANTIMONY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF730"},128817:{"value":"1F731","name":"ALCHEMICAL SYMBOL FOR REGULUS OF ANTIMONY-2","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF731"},128818:{"value":"1F732","name":"ALCHEMICAL SYMBOL FOR REGULUS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF732"},128819:{"value":"1F733","name":"ALCHEMICAL SYMBOL FOR REGULUS-2","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF733"},128820:{"value":"1F734","name":"ALCHEMICAL SYMBOL FOR REGULUS-3","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF734"},128821:{"value":"1F735","name":"ALCHEMICAL SYMBOL FOR REGULUS-4","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF735"},128822:{"value":"1F736","name":"ALCHEMICAL SYMBOL FOR ALKALI","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF736"},128823:{"value":"1F737","name":"ALCHEMICAL SYMBOL FOR ALKALI-2","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF737"},128824:{"value":"1F738","name":"ALCHEMICAL SYMBOL FOR MARCASITE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF738"},128825:{"value":"1F739","name":"ALCHEMICAL SYMBOL FOR SAL-AMMONIAC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF739"},128826:{"value":"1F73A","name":"ALCHEMICAL SYMBOL FOR ARSENIC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF73A"},128827:{"value":"1F73B","name":"ALCHEMICAL SYMBOL FOR REALGAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF73B"},128828:{"value":"1F73C","name":"ALCHEMICAL SYMBOL FOR REALGAR-2","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF73C"},128829:{"value":"1F73D","name":"ALCHEMICAL SYMBOL FOR AURIPIGMENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF73D"},128830:{"value":"1F73E","name":"ALCHEMICAL SYMBOL FOR BISMUTH ORE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF73E"},128831:{"value":"1F73F","name":"ALCHEMICAL SYMBOL FOR TARTAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF73F"},128832:{"value":"1F740","name":"ALCHEMICAL SYMBOL FOR TARTAR-2","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF740"},128833:{"value":"1F741","name":"ALCHEMICAL SYMBOL FOR QUICK LIME","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF741"},128834:{"value":"1F742","name":"ALCHEMICAL SYMBOL FOR BORAX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF742"},128835:{"value":"1F743","name":"ALCHEMICAL SYMBOL FOR BORAX-2","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF743"},128836:{"value":"1F744","name":"ALCHEMICAL SYMBOL FOR BORAX-3","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF744"},128837:{"value":"1F745","name":"ALCHEMICAL SYMBOL FOR ALUM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF745"},128838:{"value":"1F746","name":"ALCHEMICAL SYMBOL FOR OIL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF746"},128839:{"value":"1F747","name":"ALCHEMICAL SYMBOL FOR SPIRIT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF747"},128840:{"value":"1F748","name":"ALCHEMICAL SYMBOL FOR TINCTURE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF748"},128841:{"value":"1F749","name":"ALCHEMICAL SYMBOL FOR GUM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF749"},128842:{"value":"1F74A","name":"ALCHEMICAL SYMBOL FOR WAX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF74A"},128843:{"value":"1F74B","name":"ALCHEMICAL SYMBOL FOR POWDER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF74B"},128844:{"value":"1F74C","name":"ALCHEMICAL SYMBOL FOR CALX","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF74C"},128845:{"value":"1F74D","name":"ALCHEMICAL SYMBOL FOR TUTTY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF74D"},128846:{"value":"1F74E","name":"ALCHEMICAL SYMBOL FOR CAPUT MORTUUM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF74E"},128847:{"value":"1F74F","name":"ALCHEMICAL SYMBOL FOR SCEPTER OF JOVE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF74F"},128848:{"value":"1F750","name":"ALCHEMICAL SYMBOL FOR CADUCEUS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF750"},128849:{"value":"1F751","name":"ALCHEMICAL SYMBOL FOR TRIDENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF751"},128850:{"value":"1F752","name":"ALCHEMICAL SYMBOL FOR STARRED TRIDENT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF752"},128851:{"value":"1F753","name":"ALCHEMICAL SYMBOL FOR LODESTONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF753"},128852:{"value":"1F754","name":"ALCHEMICAL SYMBOL FOR SOAP","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF754"},128853:{"value":"1F755","name":"ALCHEMICAL SYMBOL FOR URINE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF755"},128854:{"value":"1F756","name":"ALCHEMICAL SYMBOL FOR HORSE DUNG","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF756"},128855:{"value":"1F757","name":"ALCHEMICAL SYMBOL FOR ASHES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF757"},128856:{"value":"1F758","name":"ALCHEMICAL SYMBOL FOR POT ASHES","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF758"},128857:{"value":"1F759","name":"ALCHEMICAL SYMBOL FOR BRICK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF759"},128858:{"value":"1F75A","name":"ALCHEMICAL SYMBOL FOR POWDERED BRICK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF75A"},128859:{"value":"1F75B","name":"ALCHEMICAL SYMBOL FOR AMALGAM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF75B"},128860:{"value":"1F75C","name":"ALCHEMICAL SYMBOL FOR STRATUM SUPER STRATUM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF75C"},128861:{"value":"1F75D","name":"ALCHEMICAL SYMBOL FOR STRATUM SUPER STRATUM-2","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF75D"},128862:{"value":"1F75E","name":"ALCHEMICAL SYMBOL FOR SUBLIMATION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF75E"},128863:{"value":"1F75F","name":"ALCHEMICAL SYMBOL FOR PRECIPITATE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF75F"},128864:{"value":"1F760","name":"ALCHEMICAL SYMBOL FOR DISTILL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF760"},128865:{"value":"1F761","name":"ALCHEMICAL SYMBOL FOR DISSOLVE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF761"},128866:{"value":"1F762","name":"ALCHEMICAL SYMBOL FOR DISSOLVE-2","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF762"},128867:{"value":"1F763","name":"ALCHEMICAL SYMBOL FOR PURIFY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF763"},128868:{"value":"1F764","name":"ALCHEMICAL SYMBOL FOR PUTREFACTION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF764"},128869:{"value":"1F765","name":"ALCHEMICAL SYMBOL FOR CRUCIBLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF765"},128870:{"value":"1F766","name":"ALCHEMICAL SYMBOL FOR CRUCIBLE-2","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF766"},128871:{"value":"1F767","name":"ALCHEMICAL SYMBOL FOR CRUCIBLE-3","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF767"},128872:{"value":"1F768","name":"ALCHEMICAL SYMBOL FOR CRUCIBLE-4","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF768"},128873:{"value":"1F769","name":"ALCHEMICAL SYMBOL FOR CRUCIBLE-5","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF769"},128874:{"value":"1F76A","name":"ALCHEMICAL SYMBOL FOR ALEMBIC","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF76A"},128875:{"value":"1F76B","name":"ALCHEMICAL SYMBOL FOR BATH OF MARY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF76B"},128876:{"value":"1F76C","name":"ALCHEMICAL SYMBOL FOR BATH OF VAPOURS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF76C"},128877:{"value":"1F76D","name":"ALCHEMICAL SYMBOL FOR RETORT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF76D"},128878:{"value":"1F76E","name":"ALCHEMICAL SYMBOL FOR HOUR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF76E"},128879:{"value":"1F76F","name":"ALCHEMICAL SYMBOL FOR NIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF76F"},128880:{"value":"1F770","name":"ALCHEMICAL SYMBOL FOR DAY-NIGHT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF770"},128881:{"value":"1F771","name":"ALCHEMICAL SYMBOL FOR MONTH","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF771"},128882:{"value":"1F772","name":"ALCHEMICAL SYMBOL FOR HALF DRAM","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF772"},128883:{"value":"1F773","name":"ALCHEMICAL SYMBOL FOR HALF OUNCE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF773"},128896:{"value":"1F780","name":"BLACK LEFT-POINTING ISOSCELES RIGHT TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF780"},128897:{"value":"1F781","name":"BLACK UP-POINTING ISOSCELES RIGHT TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF781"},128898:{"value":"1F782","name":"BLACK RIGHT-POINTING ISOSCELES RIGHT TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF782"},128899:{"value":"1F783","name":"BLACK DOWN-POINTING ISOSCELES RIGHT TRIANGLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF783"},128900:{"value":"1F784","name":"BLACK SLIGHTLY SMALL CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF784"},128901:{"value":"1F785","name":"MEDIUM BOLD WHITE CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF785"},128902:{"value":"1F786","name":"BOLD WHITE CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF786"},128903:{"value":"1F787","name":"HEAVY WHITE CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF787"},128904:{"value":"1F788","name":"VERY HEAVY WHITE CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF788"},128905:{"value":"1F789","name":"EXTREMELY HEAVY WHITE CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF789"},128906:{"value":"1F78A","name":"WHITE CIRCLE CONTAINING BLACK SMALL CIRCLE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF78A"},128907:{"value":"1F78B","name":"ROUND TARGET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF78B"},128908:{"value":"1F78C","name":"BLACK TINY SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF78C"},128909:{"value":"1F78D","name":"BLACK SLIGHTLY SMALL SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF78D"},128910:{"value":"1F78E","name":"LIGHT WHITE SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF78E"},128911:{"value":"1F78F","name":"MEDIUM WHITE SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF78F"},128912:{"value":"1F790","name":"BOLD WHITE SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF790"},128913:{"value":"1F791","name":"HEAVY WHITE SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF791"},128914:{"value":"1F792","name":"VERY HEAVY WHITE SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF792"},128915:{"value":"1F793","name":"EXTREMELY HEAVY WHITE SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF793"},128916:{"value":"1F794","name":"WHITE SQUARE CONTAINING BLACK VERY SMALL SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF794"},128917:{"value":"1F795","name":"WHITE SQUARE CONTAINING BLACK MEDIUM SQUARE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF795"},128918:{"value":"1F796","name":"SQUARE TARGET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF796"},128919:{"value":"1F797","name":"BLACK TINY DIAMOND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF797"},128920:{"value":"1F798","name":"BLACK VERY SMALL DIAMOND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF798"},128921:{"value":"1F799","name":"BLACK MEDIUM SMALL DIAMOND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF799"},128922:{"value":"1F79A","name":"WHITE DIAMOND CONTAINING BLACK VERY SMALL DIAMOND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF79A"},128923:{"value":"1F79B","name":"WHITE DIAMOND CONTAINING BLACK MEDIUM DIAMOND","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF79B"},128924:{"value":"1F79C","name":"DIAMOND TARGET","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF79C"},128925:{"value":"1F79D","name":"BLACK TINY LOZENGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF79D"},128926:{"value":"1F79E","name":"BLACK VERY SMALL LOZENGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF79E"},128927:{"value":"1F79F","name":"BLACK MEDIUM SMALL LOZENGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF79F"},128928:{"value":"1F7A0","name":"WHITE LOZENGE CONTAINING BLACK SMALL LOZENGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7A0"},128929:{"value":"1F7A1","name":"THIN GREEK CROSS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7A1"},128930:{"value":"1F7A2","name":"LIGHT GREEK CROSS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7A2"},128931:{"value":"1F7A3","name":"MEDIUM GREEK CROSS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7A3"},128932:{"value":"1F7A4","name":"BOLD GREEK CROSS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7A4"},128933:{"value":"1F7A5","name":"VERY BOLD GREEK CROSS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7A5"},128934:{"value":"1F7A6","name":"VERY HEAVY GREEK CROSS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7A6"},128935:{"value":"1F7A7","name":"EXTREMELY HEAVY GREEK CROSS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7A7"},128936:{"value":"1F7A8","name":"THIN SALTIRE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7A8"},128937:{"value":"1F7A9","name":"LIGHT SALTIRE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7A9"},128938:{"value":"1F7AA","name":"MEDIUM SALTIRE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7AA"},128939:{"value":"1F7AB","name":"BOLD SALTIRE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7AB"},128940:{"value":"1F7AC","name":"HEAVY SALTIRE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7AC"},128941:{"value":"1F7AD","name":"VERY HEAVY SALTIRE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7AD"},128942:{"value":"1F7AE","name":"EXTREMELY HEAVY SALTIRE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7AE"},128943:{"value":"1F7AF","name":"LIGHT FIVE SPOKED ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7AF"},128944:{"value":"1F7B0","name":"MEDIUM FIVE SPOKED ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7B0"},128945:{"value":"1F7B1","name":"BOLD FIVE SPOKED ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7B1"},128946:{"value":"1F7B2","name":"HEAVY FIVE SPOKED ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7B2"},128947:{"value":"1F7B3","name":"VERY HEAVY FIVE SPOKED ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7B3"},128948:{"value":"1F7B4","name":"EXTREMELY HEAVY FIVE SPOKED ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7B4"},128949:{"value":"1F7B5","name":"LIGHT SIX SPOKED ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7B5"},128950:{"value":"1F7B6","name":"MEDIUM SIX SPOKED ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7B6"},128951:{"value":"1F7B7","name":"BOLD SIX SPOKED ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7B7"},128952:{"value":"1F7B8","name":"HEAVY SIX SPOKED ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7B8"},128953:{"value":"1F7B9","name":"VERY HEAVY SIX SPOKED ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7B9"},128954:{"value":"1F7BA","name":"EXTREMELY HEAVY SIX SPOKED ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7BA"},128955:{"value":"1F7BB","name":"LIGHT EIGHT SPOKED ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7BB"},128956:{"value":"1F7BC","name":"MEDIUM EIGHT SPOKED ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7BC"},128957:{"value":"1F7BD","name":"BOLD EIGHT SPOKED ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7BD"},128958:{"value":"1F7BE","name":"HEAVY EIGHT SPOKED ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7BE"},128959:{"value":"1F7BF","name":"VERY HEAVY EIGHT SPOKED ASTERISK","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7BF"},128960:{"value":"1F7C0","name":"LIGHT THREE POINTED BLACK STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7C0"},128961:{"value":"1F7C1","name":"MEDIUM THREE POINTED BLACK STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7C1"},128962:{"value":"1F7C2","name":"THREE POINTED BLACK STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7C2"},128963:{"value":"1F7C3","name":"MEDIUM THREE POINTED PINWHEEL STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7C3"},128964:{"value":"1F7C4","name":"LIGHT FOUR POINTED BLACK STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7C4"},128965:{"value":"1F7C5","name":"MEDIUM FOUR POINTED BLACK STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7C5"},128966:{"value":"1F7C6","name":"FOUR POINTED BLACK STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7C6"},128967:{"value":"1F7C7","name":"MEDIUM FOUR POINTED PINWHEEL STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7C7"},128968:{"value":"1F7C8","name":"REVERSE LIGHT FOUR POINTED PINWHEEL STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7C8"},128969:{"value":"1F7C9","name":"LIGHT FIVE POINTED BLACK STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7C9"},128970:{"value":"1F7CA","name":"HEAVY FIVE POINTED BLACK STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7CA"},128971:{"value":"1F7CB","name":"MEDIUM SIX POINTED BLACK STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7CB"},128972:{"value":"1F7CC","name":"HEAVY SIX POINTED BLACK STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7CC"},128973:{"value":"1F7CD","name":"SIX POINTED PINWHEEL STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7CD"},128974:{"value":"1F7CE","name":"MEDIUM EIGHT POINTED BLACK STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7CE"},128975:{"value":"1F7CF","name":"HEAVY EIGHT POINTED BLACK STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7CF"},128976:{"value":"1F7D0","name":"VERY HEAVY EIGHT POINTED BLACK STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7D0"},128977:{"value":"1F7D1","name":"HEAVY EIGHT POINTED PINWHEEL STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7D1"},128978:{"value":"1F7D2","name":"LIGHT TWELVE POINTED BLACK STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7D2"},128979:{"value":"1F7D3","name":"HEAVY TWELVE POINTED BLACK STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7D3"},128980:{"value":"1F7D4","name":"HEAVY TWELVE POINTED PINWHEEL STAR","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF7D4"},129024:{"value":"1F800","name":"LEFTWARDS ARROW WITH SMALL TRIANGLE ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF800"},129025:{"value":"1F801","name":"UPWARDS ARROW WITH SMALL TRIANGLE ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF801"},129026:{"value":"1F802","name":"RIGHTWARDS ARROW WITH SMALL TRIANGLE ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF802"},129027:{"value":"1F803","name":"DOWNWARDS ARROW WITH SMALL TRIANGLE ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF803"},129028:{"value":"1F804","name":"LEFTWARDS ARROW WITH MEDIUM TRIANGLE ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF804"},129029:{"value":"1F805","name":"UPWARDS ARROW WITH MEDIUM TRIANGLE ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF805"},129030:{"value":"1F806","name":"RIGHTWARDS ARROW WITH MEDIUM TRIANGLE ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF806"},129031:{"value":"1F807","name":"DOWNWARDS ARROW WITH MEDIUM TRIANGLE ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF807"},129032:{"value":"1F808","name":"LEFTWARDS ARROW WITH LARGE TRIANGLE ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF808"},129033:{"value":"1F809","name":"UPWARDS ARROW WITH LARGE TRIANGLE ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF809"},129034:{"value":"1F80A","name":"RIGHTWARDS ARROW WITH LARGE TRIANGLE ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF80A"},129035:{"value":"1F80B","name":"DOWNWARDS ARROW WITH LARGE TRIANGLE ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF80B"},129040:{"value":"1F810","name":"LEFTWARDS ARROW WITH SMALL EQUILATERAL ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF810"},129041:{"value":"1F811","name":"UPWARDS ARROW WITH SMALL EQUILATERAL ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF811"},129042:{"value":"1F812","name":"RIGHTWARDS ARROW WITH SMALL EQUILATERAL ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF812"},129043:{"value":"1F813","name":"DOWNWARDS ARROW WITH SMALL EQUILATERAL ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF813"},129044:{"value":"1F814","name":"LEFTWARDS ARROW WITH EQUILATERAL ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF814"},129045:{"value":"1F815","name":"UPWARDS ARROW WITH EQUILATERAL ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF815"},129046:{"value":"1F816","name":"RIGHTWARDS ARROW WITH EQUILATERAL ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF816"},129047:{"value":"1F817","name":"DOWNWARDS ARROW WITH EQUILATERAL ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF817"},129048:{"value":"1F818","name":"HEAVY LEFTWARDS ARROW WITH EQUILATERAL ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF818"},129049:{"value":"1F819","name":"HEAVY UPWARDS ARROW WITH EQUILATERAL ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF819"},129050:{"value":"1F81A","name":"HEAVY RIGHTWARDS ARROW WITH EQUILATERAL ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF81A"},129051:{"value":"1F81B","name":"HEAVY DOWNWARDS ARROW WITH EQUILATERAL ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF81B"},129052:{"value":"1F81C","name":"HEAVY LEFTWARDS ARROW WITH LARGE EQUILATERAL ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF81C"},129053:{"value":"1F81D","name":"HEAVY UPWARDS ARROW WITH LARGE EQUILATERAL ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF81D"},129054:{"value":"1F81E","name":"HEAVY RIGHTWARDS ARROW WITH LARGE EQUILATERAL ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF81E"},129055:{"value":"1F81F","name":"HEAVY DOWNWARDS ARROW WITH LARGE EQUILATERAL ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF81F"},129056:{"value":"1F820","name":"LEFTWARDS TRIANGLE-HEADED ARROW WITH NARROW SHAFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF820"},129057:{"value":"1F821","name":"UPWARDS TRIANGLE-HEADED ARROW WITH NARROW SHAFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF821"},129058:{"value":"1F822","name":"RIGHTWARDS TRIANGLE-HEADED ARROW WITH NARROW SHAFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF822"},129059:{"value":"1F823","name":"DOWNWARDS TRIANGLE-HEADED ARROW WITH NARROW SHAFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF823"},129060:{"value":"1F824","name":"LEFTWARDS TRIANGLE-HEADED ARROW WITH MEDIUM SHAFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF824"},129061:{"value":"1F825","name":"UPWARDS TRIANGLE-HEADED ARROW WITH MEDIUM SHAFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF825"},129062:{"value":"1F826","name":"RIGHTWARDS TRIANGLE-HEADED ARROW WITH MEDIUM SHAFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF826"},129063:{"value":"1F827","name":"DOWNWARDS TRIANGLE-HEADED ARROW WITH MEDIUM SHAFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF827"},129064:{"value":"1F828","name":"LEFTWARDS TRIANGLE-HEADED ARROW WITH BOLD SHAFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF828"},129065:{"value":"1F829","name":"UPWARDS TRIANGLE-HEADED ARROW WITH BOLD SHAFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF829"},129066:{"value":"1F82A","name":"RIGHTWARDS TRIANGLE-HEADED ARROW WITH BOLD SHAFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF82A"},129067:{"value":"1F82B","name":"DOWNWARDS TRIANGLE-HEADED ARROW WITH BOLD SHAFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF82B"},129068:{"value":"1F82C","name":"LEFTWARDS TRIANGLE-HEADED ARROW WITH HEAVY SHAFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF82C"},129069:{"value":"1F82D","name":"UPWARDS TRIANGLE-HEADED ARROW WITH HEAVY SHAFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF82D"},129070:{"value":"1F82E","name":"RIGHTWARDS TRIANGLE-HEADED ARROW WITH HEAVY SHAFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF82E"},129071:{"value":"1F82F","name":"DOWNWARDS TRIANGLE-HEADED ARROW WITH HEAVY SHAFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF82F"},129072:{"value":"1F830","name":"LEFTWARDS TRIANGLE-HEADED ARROW WITH VERY HEAVY SHAFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF830"},129073:{"value":"1F831","name":"UPWARDS TRIANGLE-HEADED ARROW WITH VERY HEAVY SHAFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF831"},129074:{"value":"1F832","name":"RIGHTWARDS TRIANGLE-HEADED ARROW WITH VERY HEAVY SHAFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF832"},129075:{"value":"1F833","name":"DOWNWARDS TRIANGLE-HEADED ARROW WITH VERY HEAVY SHAFT","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF833"},129076:{"value":"1F834","name":"LEFTWARDS FINGER-POST ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF834"},129077:{"value":"1F835","name":"UPWARDS FINGER-POST ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF835"},129078:{"value":"1F836","name":"RIGHTWARDS FINGER-POST ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF836"},129079:{"value":"1F837","name":"DOWNWARDS FINGER-POST ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF837"},129080:{"value":"1F838","name":"LEFTWARDS SQUARED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF838"},129081:{"value":"1F839","name":"UPWARDS SQUARED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF839"},129082:{"value":"1F83A","name":"RIGHTWARDS SQUARED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF83A"},129083:{"value":"1F83B","name":"DOWNWARDS SQUARED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF83B"},129084:{"value":"1F83C","name":"LEFTWARDS COMPRESSED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF83C"},129085:{"value":"1F83D","name":"UPWARDS COMPRESSED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF83D"},129086:{"value":"1F83E","name":"RIGHTWARDS COMPRESSED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF83E"},129087:{"value":"1F83F","name":"DOWNWARDS COMPRESSED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF83F"},129088:{"value":"1F840","name":"LEFTWARDS HEAVY COMPRESSED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF840"},129089:{"value":"1F841","name":"UPWARDS HEAVY COMPRESSED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF841"},129090:{"value":"1F842","name":"RIGHTWARDS HEAVY COMPRESSED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF842"},129091:{"value":"1F843","name":"DOWNWARDS HEAVY COMPRESSED ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF843"},129092:{"value":"1F844","name":"LEFTWARDS HEAVY ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF844"},129093:{"value":"1F845","name":"UPWARDS HEAVY ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF845"},129094:{"value":"1F846","name":"RIGHTWARDS HEAVY ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF846"},129095:{"value":"1F847","name":"DOWNWARDS HEAVY ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF847"},129104:{"value":"1F850","name":"LEFTWARDS SANS-SERIF ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF850"},129105:{"value":"1F851","name":"UPWARDS SANS-SERIF ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF851"},129106:{"value":"1F852","name":"RIGHTWARDS SANS-SERIF ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF852"},129107:{"value":"1F853","name":"DOWNWARDS SANS-SERIF ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF853"},129108:{"value":"1F854","name":"NORTH WEST SANS-SERIF ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF854"},129109:{"value":"1F855","name":"NORTH EAST SANS-SERIF ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF855"},129110:{"value":"1F856","name":"SOUTH EAST SANS-SERIF ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF856"},129111:{"value":"1F857","name":"SOUTH WEST SANS-SERIF ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF857"},129112:{"value":"1F858","name":"LEFT RIGHT SANS-SERIF ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF858"},129113:{"value":"1F859","name":"UP DOWN SANS-SERIF ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF859"},129120:{"value":"1F860","name":"WIDE-HEADED LEFTWARDS LIGHT BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF860"},129121:{"value":"1F861","name":"WIDE-HEADED UPWARDS LIGHT BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF861"},129122:{"value":"1F862","name":"WIDE-HEADED RIGHTWARDS LIGHT BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF862"},129123:{"value":"1F863","name":"WIDE-HEADED DOWNWARDS LIGHT BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF863"},129124:{"value":"1F864","name":"WIDE-HEADED NORTH WEST LIGHT BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF864"},129125:{"value":"1F865","name":"WIDE-HEADED NORTH EAST LIGHT BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF865"},129126:{"value":"1F866","name":"WIDE-HEADED SOUTH EAST LIGHT BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF866"},129127:{"value":"1F867","name":"WIDE-HEADED SOUTH WEST LIGHT BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF867"},129128:{"value":"1F868","name":"WIDE-HEADED LEFTWARDS BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF868"},129129:{"value":"1F869","name":"WIDE-HEADED UPWARDS BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF869"},129130:{"value":"1F86A","name":"WIDE-HEADED RIGHTWARDS BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF86A"},129131:{"value":"1F86B","name":"WIDE-HEADED DOWNWARDS BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF86B"},129132:{"value":"1F86C","name":"WIDE-HEADED NORTH WEST BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF86C"},129133:{"value":"1F86D","name":"WIDE-HEADED NORTH EAST BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF86D"},129134:{"value":"1F86E","name":"WIDE-HEADED SOUTH EAST BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF86E"},129135:{"value":"1F86F","name":"WIDE-HEADED SOUTH WEST BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF86F"},129136:{"value":"1F870","name":"WIDE-HEADED LEFTWARDS MEDIUM BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF870"},129137:{"value":"1F871","name":"WIDE-HEADED UPWARDS MEDIUM BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF871"},129138:{"value":"1F872","name":"WIDE-HEADED RIGHTWARDS MEDIUM BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF872"},129139:{"value":"1F873","name":"WIDE-HEADED DOWNWARDS MEDIUM BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF873"},129140:{"value":"1F874","name":"WIDE-HEADED NORTH WEST MEDIUM BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF874"},129141:{"value":"1F875","name":"WIDE-HEADED NORTH EAST MEDIUM BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF875"},129142:{"value":"1F876","name":"WIDE-HEADED SOUTH EAST MEDIUM BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF876"},129143:{"value":"1F877","name":"WIDE-HEADED SOUTH WEST MEDIUM BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF877"},129144:{"value":"1F878","name":"WIDE-HEADED LEFTWARDS HEAVY BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF878"},129145:{"value":"1F879","name":"WIDE-HEADED UPWARDS HEAVY BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF879"},129146:{"value":"1F87A","name":"WIDE-HEADED RIGHTWARDS HEAVY BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF87A"},129147:{"value":"1F87B","name":"WIDE-HEADED DOWNWARDS HEAVY BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF87B"},129148:{"value":"1F87C","name":"WIDE-HEADED NORTH WEST HEAVY BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF87C"},129149:{"value":"1F87D","name":"WIDE-HEADED NORTH EAST HEAVY BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF87D"},129150:{"value":"1F87E","name":"WIDE-HEADED SOUTH EAST HEAVY BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF87E"},129151:{"value":"1F87F","name":"WIDE-HEADED SOUTH WEST HEAVY BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF87F"},129152:{"value":"1F880","name":"WIDE-HEADED LEFTWARDS VERY HEAVY BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF880"},129153:{"value":"1F881","name":"WIDE-HEADED UPWARDS VERY HEAVY BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF881"},129154:{"value":"1F882","name":"WIDE-HEADED RIGHTWARDS VERY HEAVY BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF882"},129155:{"value":"1F883","name":"WIDE-HEADED DOWNWARDS VERY HEAVY BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF883"},129156:{"value":"1F884","name":"WIDE-HEADED NORTH WEST VERY HEAVY BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF884"},129157:{"value":"1F885","name":"WIDE-HEADED NORTH EAST VERY HEAVY BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF885"},129158:{"value":"1F886","name":"WIDE-HEADED SOUTH EAST VERY HEAVY BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF886"},129159:{"value":"1F887","name":"WIDE-HEADED SOUTH WEST VERY HEAVY BARB ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF887"},129168:{"value":"1F890","name":"LEFTWARDS TRIANGLE ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF890"},129169:{"value":"1F891","name":"UPWARDS TRIANGLE ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF891"},129170:{"value":"1F892","name":"RIGHTWARDS TRIANGLE ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF892"},129171:{"value":"1F893","name":"DOWNWARDS TRIANGLE ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF893"},129172:{"value":"1F894","name":"LEFTWARDS WHITE ARROW WITHIN TRIANGLE ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF894"},129173:{"value":"1F895","name":"UPWARDS WHITE ARROW WITHIN TRIANGLE ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF895"},129174:{"value":"1F896","name":"RIGHTWARDS WHITE ARROW WITHIN TRIANGLE ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF896"},129175:{"value":"1F897","name":"DOWNWARDS WHITE ARROW WITHIN TRIANGLE ARROWHEAD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF897"},129176:{"value":"1F898","name":"LEFTWARDS ARROW WITH NOTCHED TAIL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF898"},129177:{"value":"1F899","name":"UPWARDS ARROW WITH NOTCHED TAIL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF899"},129178:{"value":"1F89A","name":"RIGHTWARDS ARROW WITH NOTCHED TAIL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF89A"},129179:{"value":"1F89B","name":"DOWNWARDS ARROW WITH NOTCHED TAIL","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF89B"},129180:{"value":"1F89C","name":"HEAVY ARROW SHAFT WIDTH ONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF89C"},129181:{"value":"1F89D","name":"HEAVY ARROW SHAFT WIDTH TWO THIRDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF89D"},129182:{"value":"1F89E","name":"HEAVY ARROW SHAFT WIDTH ONE HALF","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF89E"},129183:{"value":"1F89F","name":"HEAVY ARROW SHAFT WIDTH ONE THIRD","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF89F"},129184:{"value":"1F8A0","name":"LEFTWARDS BOTTOM-SHADED WHITE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF8A0"},129185:{"value":"1F8A1","name":"RIGHTWARDS BOTTOM SHADED WHITE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF8A1"},129186:{"value":"1F8A2","name":"LEFTWARDS TOP SHADED WHITE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF8A2"},129187:{"value":"1F8A3","name":"RIGHTWARDS TOP SHADED WHITE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF8A3"},129188:{"value":"1F8A4","name":"LEFTWARDS LEFT-SHADED WHITE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF8A4"},129189:{"value":"1F8A5","name":"RIGHTWARDS RIGHT-SHADED WHITE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF8A5"},129190:{"value":"1F8A6","name":"LEFTWARDS RIGHT-SHADED WHITE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF8A6"},129191:{"value":"1F8A7","name":"RIGHTWARDS LEFT-SHADED WHITE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF8A7"},129192:{"value":"1F8A8","name":"LEFTWARDS BACK-TILTED SHADOWED WHITE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF8A8"},129193:{"value":"1F8A9","name":"RIGHTWARDS BACK-TILTED SHADOWED WHITE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF8A9"},129194:{"value":"1F8AA","name":"LEFTWARDS FRONT-TILTED SHADOWED WHITE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF8AA"},129195:{"value":"1F8AB","name":"RIGHTWARDS FRONT-TILTED SHADOWED WHITE ARROW","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF8AB"},129196:{"value":"1F8AC","name":"WHITE ARROW SHAFT WIDTH ONE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF8AC"},129197:{"value":"1F8AD","name":"WHITE ARROW SHAFT WIDTH TWO THIRDS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF8AD"},129296:{"value":"1F910","name":"ZIPPER-MOUTH FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF910"},129297:{"value":"1F911","name":"MONEY-MOUTH FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF911"},129298:{"value":"1F912","name":"FACE WITH THERMOMETER","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF912"},129299:{"value":"1F913","name":"NERD FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF913"},129300:{"value":"1F914","name":"THINKING FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF914"},129301:{"value":"1F915","name":"FACE WITH HEAD-BANDAGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF915"},129302:{"value":"1F916","name":"ROBOT FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF916"},129303:{"value":"1F917","name":"HUGGING FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF917"},129304:{"value":"1F918","name":"SIGN OF THE HORNS","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF918"},129408:{"value":"1F980","name":"CRAB","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF980"},129409:{"value":"1F981","name":"LION FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF981"},129410:{"value":"1F982","name":"SCORPION","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF982"},129411:{"value":"1F983","name":"TURKEY","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF983"},129412:{"value":"1F984","name":"UNICORN FACE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF984"},129472:{"value":"1F9C0","name":"CHEESE WEDGE","category":"So","class":"0","bidirectional_category":"ON","mapping":"","decimal_digit_value":"","digit_value":"","numeric_value":"","mirrored":"N","unicode_name":"","comment":"","uppercase_mapping":"","lowercase_mapping":"","titlecase_mapping":"","symbol":"\uF9C0"}};
},{}],192:[function(require,module,exports){
(function (global){

/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],193:[function(require,module,exports){
module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}
},{}],194:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = require('inherits');

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./support/isBuffer":193,"_process":158,"inherits":95}],195:[function(require,module,exports){
(function (process){
var path = require('path');
var clone = require('clone');
var cloneStats = require('clone-stats');
var cloneBuffer = require('./lib/cloneBuffer');
var isBuffer = require('./lib/isBuffer');
var isStream = require('./lib/isStream');
var isNull = require('./lib/isNull');
var inspectStream = require('./lib/inspectStream');
var Stream = require('stream');
var replaceExt = require('replace-ext');

function File(file) {
  if (!file) {
    file = {};
  }

  // Record path change
  var history = file.path ? [file.path] : file.history;
  this.history = history || [];

  this.cwd = file.cwd || process.cwd();
  this.base = file.base || this.cwd;

  // Stat = files stats object
  this.stat = file.stat || null;

  // Contents = stream, buffer, or null if not read
  this.contents = file.contents || null;

  this._isVinyl = true;
}

File.prototype.isBuffer = function() {
  return isBuffer(this.contents);
};

File.prototype.isStream = function() {
  return isStream(this.contents);
};

File.prototype.isNull = function() {
  return isNull(this.contents);
};

// TODO: Should this be moved to vinyl-fs?
File.prototype.isDirectory = function() {
  return this.isNull() && this.stat && this.stat.isDirectory();
};

File.prototype.clone = function(opt) {
  if (typeof opt === 'boolean') {
    opt = {
      deep: opt,
      contents: true,
    };
  } else if (!opt) {
    opt = {
      deep: true,
      contents: true,
    };
  } else {
    opt.deep = opt.deep === true;
    opt.contents = opt.contents !== false;
  }

  // Clone our file contents
  var contents;
  if (this.isStream()) {
    contents = this.contents.pipe(new Stream.PassThrough());
    this.contents = this.contents.pipe(new Stream.PassThrough());
  } else if (this.isBuffer()) {
    contents = opt.contents ? cloneBuffer(this.contents) : this.contents;
  }

  var file = new File({
    cwd: this.cwd,
    base: this.base,
    stat: (this.stat ? cloneStats(this.stat) : null),
    history: this.history.slice(),
    contents: contents,
  });

  // Clone our custom properties
  Object.keys(this).forEach(function(key) {
    // Ignore built-in fields
    if (key === '_contents' || key === 'stat' ||
      key === 'history' || key === 'path' ||
      key === 'base' || key === 'cwd') {
      return;
    }
    file[key] = opt.deep ? clone(this[key], true) : this[key];
  }, this);
  return file;
};

File.prototype.pipe = function(stream, opt) {
  if (!opt) {
    opt = {};
  }
  if (typeof opt.end === 'undefined') {
    opt.end = true;
  }

  if (this.isStream()) {
    return this.contents.pipe(stream, opt);
  }
  if (this.isBuffer()) {
    if (opt.end) {
      stream.end(this.contents);
    } else {
      stream.write(this.contents);
    }
    return stream;
  }

  // Check if isNull
  if (opt.end) {
    stream.end();
  }
  return stream;
};

File.prototype.inspect = function() {
  var inspect = [];

  // Use relative path if possible
  var filePath = (this.base && this.path) ? this.relative : this.path;

  if (filePath) {
    inspect.push('"' + filePath + '"');
  }

  if (this.isBuffer()) {
    inspect.push(this.contents.inspect());
  }

  if (this.isStream()) {
    inspect.push(inspectStream(this.contents));
  }

  return '<File ' + inspect.join(' ') + '>';
};

File.isVinyl = function(file) {
  return (file && file._isVinyl === true) || false;
};

// Virtual attributes
// Or stuff with extra logic
Object.defineProperty(File.prototype, 'contents', {
  get: function() {
    return this._contents;
  },
  set: function(val) {
    if (!isBuffer(val) && !isStream(val) && !isNull(val)) {
      throw new Error('File.contents can only be a Buffer, a Stream, or null.');
    }
    this._contents = val;
  },
});

// TODO: Should this be moved to vinyl-fs?
Object.defineProperty(File.prototype, 'relative', {
  get: function() {
    if (!this.base) {
      throw new Error('No base specified! Can not get relative.');
    }
    if (!this.path) {
      throw new Error('No path specified! Can not get relative.');
    }
    return path.relative(this.base, this.path);
  },
  set: function() {
    throw new Error('File.relative is generated from the base and path attributes. Do not modify it.');
  },
});

Object.defineProperty(File.prototype, 'dirname', {
  get: function() {
    if (!this.path) {
      throw new Error('No path specified! Can not get dirname.');
    }
    return path.dirname(this.path);
  },
  set: function(dirname) {
    if (!this.path) {
      throw new Error('No path specified! Can not set dirname.');
    }
    this.path = path.join(dirname, path.basename(this.path));
  },
});

Object.defineProperty(File.prototype, 'basename', {
  get: function() {
    if (!this.path) {
      throw new Error('No path specified! Can not get basename.');
    }
    return path.basename(this.path);
  },
  set: function(basename) {
    if (!this.path) {
      throw new Error('No path specified! Can not set basename.');
    }
    this.path = path.join(path.dirname(this.path), basename);
  },
});

// Property for getting/setting stem of the filename.
Object.defineProperty(File.prototype, 'stem', {
  get: function() {
    if (!this.path) {
      throw new Error('No path specified! Can not get stem.');
    }
    return path.basename(this.path, this.extname);
  },
  set: function(stem) {
    if (!this.path) {
      throw new Error('No PassThrough specified! Can not set stem.');
    }
    this.path = path.join(path.dirname(this.path), stem + this.extname);
  },
});

Object.defineProperty(File.prototype, 'extname', {
  get: function() {
    if (!this.path) {
      throw new Error('No path specified! Can not get extname.');
    }
    return path.extname(this.path);
  },
  set: function(extname) {
    if (!this.path) {
      throw new Error('No path specified! Can not set extname.');
    }
    this.path = replaceExt(this.path, extname);
  },
});

Object.defineProperty(File.prototype, 'path', {
  get: function() {
    return this.history[this.history.length - 1];
  },
  set: function(path) {
    if (typeof path !== 'string') {
      throw new Error('path should be string');
    }

    // Record history only when path changed
    if (path && path !== this.path) {
      this.history.push(path);
    }
  },
});

module.exports = File;

}).call(this,require('_process'))
},{"./lib/cloneBuffer":196,"./lib/inspectStream":197,"./lib/isBuffer":198,"./lib/isNull":199,"./lib/isStream":200,"_process":158,"clone":49,"clone-stats":48,"path":155,"replace-ext":177,"stream":189}],196:[function(require,module,exports){
var Buffer = require('buffer').Buffer;

module.exports = function(buf) {
  var out = new Buffer(buf.length);
  buf.copy(out);
  return out;
};

},{"buffer":45}],197:[function(require,module,exports){
var isStream = require('./isStream');

module.exports = function(stream) {
  if (!isStream(stream)) {
    return;
  }

  var streamType = stream.constructor.name;
  // Avoid StreamStream
  if (streamType === 'Stream') {
    streamType = '';
  }

  return '<' + streamType + 'Stream>';
};

},{"./isStream":200}],198:[function(require,module,exports){
module.exports = require('buffer').Buffer.isBuffer;

},{"buffer":45}],199:[function(require,module,exports){
module.exports = function(v) {
  return v === null;
};

},{}],200:[function(require,module,exports){
var Stream = require('stream').Stream;

module.exports = function(o) {
  return !!o && o instanceof Stream;
};

},{"stream":189}],201:[function(require,module,exports){
var indexOf = require('indexof');

var Object_keys = function (obj) {
    if (Object.keys) return Object.keys(obj)
    else {
        var res = [];
        for (var key in obj) res.push(key)
        return res;
    }
};

var forEach = function (xs, fn) {
    if (xs.forEach) return xs.forEach(fn)
    else for (var i = 0; i < xs.length; i++) {
        fn(xs[i], i, xs);
    }
};

var defineProp = (function() {
    try {
        Object.defineProperty({}, '_', {});
        return function(obj, name, value) {
            Object.defineProperty(obj, name, {
                writable: true,
                enumerable: false,
                configurable: true,
                value: value
            })
        };
    } catch(e) {
        return function(obj, name, value) {
            obj[name] = value;
        };
    }
}());

var globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',
'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',
'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',
'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',
'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];

function Context() {}
Context.prototype = {};

var Script = exports.Script = function NodeScript (code) {
    if (!(this instanceof Script)) return new Script(code);
    this.code = code;
};

Script.prototype.runInContext = function (context) {
    if (!(context instanceof Context)) {
        throw new TypeError("needs a 'context' argument.");
    }
    
    var iframe = document.createElement('iframe');
    if (!iframe.style) iframe.style = {};
    iframe.style.display = 'none';
    
    document.body.appendChild(iframe);
    
    var win = iframe.contentWindow;
    var wEval = win.eval, wExecScript = win.execScript;

    if (!wEval && wExecScript) {
        // win.eval() magically appears when this is called in IE:
        wExecScript.call(win, 'null');
        wEval = win.eval;
    }
    
    forEach(Object_keys(context), function (key) {
        win[key] = context[key];
    });
    forEach(globals, function (key) {
        if (context[key]) {
            win[key] = context[key];
        }
    });
    
    var winKeys = Object_keys(win);

    var res = wEval.call(win, this.code);
    
    forEach(Object_keys(win), function (key) {
        // Avoid copying circular objects like `top` and `window` by only
        // updating existing context properties or new properties in the `win`
        // that was only introduced after the eval.
        if (key in context || indexOf(winKeys, key) === -1) {
            context[key] = win[key];
        }
    });

    forEach(globals, function (key) {
        if (!(key in context)) {
            defineProp(context, key, win[key]);
        }
    });
    
    document.body.removeChild(iframe);
    
    return res;
};

Script.prototype.runInThisContext = function () {
    return eval(this.code); // maybe...
};

Script.prototype.runInNewContext = function (context) {
    var ctx = Script.createContext(context);
    var res = this.runInContext(ctx);

    forEach(Object_keys(ctx), function (key) {
        context[key] = ctx[key];
    });

    return res;
};

forEach(Object_keys(Script.prototype), function (name) {
    exports[name] = Script[name] = function (code) {
        var s = Script(code);
        return s[name].apply(s, [].slice.call(arguments, 1));
    };
});

exports.createScript = function (code) {
    return exports.Script(code);
};

exports.createContext = Script.createContext = function (context) {
    var copy = new Context();
    if(typeof context === 'object') {
        forEach(Object_keys(context), function (key) {
            copy[key] = context[key];
        });
    }
    return copy;
};

},{"indexof":94}],202:[function(require,module,exports){
require('es6-shim');

var Q = require('q');
var _ = require('lodash');
var JSZip = require('jszip');

var fs = require('fs');

var initServices = require('./scripts/init/services');
var initElements = require('./scripts/init/elements');
var initRouter   = require('./scripts/init/router');
var initAPI      = require('./scripts/init/api');

function readConfig() {
  var defer = Q.defer();

  defer.resolve({
    
  });

  return defer.promise;
}

// The application wrapper
var habemus = document.querySelector('#habemus');

// Only start setting up thing when WebComponentsReady event is fired
window.addEventListener('WebComponentsReady', function () {

  readConfig().then(function (config) {

    // Services
    var services   = initServices(habemus, config);        
    // Components
    var elements   = initElements(habemus, config);
    // Router
    var router     = initRouter(habemus, config, services, elements);
    // Set up global scope
    initAPI(habemus, config, services, elements);

    // Reference to the habemus itself
    habemus.habemus = habemus;
  })
  .done();
});

habemus.set('previewMode', 'desktop');

// Export the component scope
module.exports = habemus;


// TEST-CONTROLS
// var fileInput = document.querySelector('#file');

// fileInput.addEventListener('change', function () {

//   var reader = new FileReader();

//   reader.onload = function () {
//     var contents = reader.result;

//     try {

//       var zip = new JSZip();
//       zip.load(contents);
//     } catch (e) {
//       alert('invalid file');

//       return;
//     }

//     for (filepath in zip.files) {
//       if (zip.files.hasOwnProperty(filepath)) {

//         var file = zip.files[filepath];

//         if (file.dir) {
//           // do nothing
//           // console.log('found dir entry in zip file')
//         } else {
//           var fileContents = zip.files[filepath].asArrayBuffer();

//           // write the file
//           fs.writeFilep('/canvas/' + filepath, fileContents)
//             .then(function () {

//               console.log('written!');
//             }, function (err) {
//               console.warn(err);
//             })
//             .done();
//         }
//       }
//     }

//     // habemus.openFile('index.html');

//     // document.querySelector('#previewer').src = 'canvas/index.html';
//   };

//   // start reading
//   reader.readAsArrayBuffer(fileInput.files[0]);

// });


// document.querySelector('#clear').addEventListener('click', function () {
//   fs.rimraf('/projects').then(function () {
//     console.log('clear done!');
//   }, function (err) {
//     console.warn('clear error', err);
//   });
// });


// document.querySelector('#new').addEventListener('click', function () {
//   var filepath = prompt('nome do arquivo:');

//   if (filepath) {
//     fs.writeFile('/' + filepath, '').done();
//   }
// })
},{"./scripts/init/api":203,"./scripts/init/elements":204,"./scripts/init/router":205,"./scripts/init/services":206,"es6-shim":84,"fs":43,"jszip":115,"lodash":130,"q":165}],203:[function(require,module,exports){
var path = require('path');

// third-party
var slug = require('slug');
var JSZip = require('jszip');
var Q     = require('q');

// Constants
var PROJECTS_PATH = '/projects';

module.exports = function (habemus, options) {

  /**
   * The file that is currently open
   */
  habemus.set('activeFilepath', '');
  habemus.set('openFilepath', '');
  
  habemus.openFile = function (filepath) {
    habemus.activeFilepath = filepath;
    habemus.notifyPath('activeFilepath', filepath);

    habemus.openFilepath = filepath.replace(new RegExp('^' + habemus.getActiveProjectRootPath()), '');
    habemus.notifyPath('openFilepath', habemus.openFilepath);
  }

  ///////////////////////////////////
  // PROJECT RELATED FUNCTIONALITY //
  habemus.set('projectsPath', PROJECTS_PATH);

  habemus.set('activeProject', '');

  habemus.getActiveProjectRootPath = function () {
    return path.join(habemus.get('projectsPath'), habemus.get('activeProject'));
  }

  // [1] make sure the projects dir exists
  habemus.loadAvailableProjects = function () {
    habemus.services.fs.mkdirp(PROJECTS_PATH)
      .then(function () {
        return habemus.services.fs.readdir(PROJECTS_PATH);
      })
      .then(function (projectsPathContents) {

        var availableProjects = projectsPathContents.map(function (projectName) {
          return {
            name: projectName
          }
        });

        habemus.set('availableProjects', availableProjects);
        habemus.notifyPath('availableProjects', availableProjects);
      });
  };

  habemus.openProject = function (projectName) {

    habemus.set('activeProject', projectName);

    // BUG: polymer does not adequately fire property-changed events
    // on the auto-binding templates.
    // this event is listened by the file-browser
    // once the file-browser is moved to its own element
    // stuff will work more seamlessly.
    habemus.fire('habemus-active-project-changed');

    // notify service worker
    habemus.services.serviceWorkerRPC.notify('habemus-active-project-changed');
  };

  habemus.createProject = function (projectName) {

    if (!projectName) {
      throw new Error('projectName is required');
    } 

    var projectDirPath = path.join(habemus.get('projectsPath'), projectName);

    return habemus.services.fs.mkdirp(projectDirPath)
      .then(function () {
        // open the project that was created
        habemus.openProject(projectName);

        return habemus.loadAvailableProjects();
      }, function (err) {
        console.warn(err);
        alert('an error ocurred when creating a new project')
      });
  }



  /////////////////
  // UI DIRECTED //
  habemus.uiToggleProjectList = function () {
    this.$['project-list'].toggle();
  };

  habemus.uiOpenProject = function (e) {
    var projectName = e.model.item.name;

    habemus.openProject(projectName);

    this.$['project-list'].close();
    console.log('open %s', projectName);
  };

  habemus.uiCreateProject = function () {
    this.$['project-list'].close();

    var projectName = prompt('Qual o nome do projeto?');

    if (projectName) {
      projectName = slug(projectName);

      habemus.createProject(projectName);
    } else {
      alert('O projeto precisa de um nome!');
    }
  }

  habemus.uiCreateProjectFromZip = function (e) {
    var projectName = prompt('Qual o nome do projeto?');

    if (projectName) {
      projectName = slug(projectName);

      habemus.createProject(projectName)
        .then(function () {
          // read

          var defer = Q.defer();
          var reader = new FileReader();

          reader.onload = function () {
            defer.resolve(reader.result);
          };

          // start reading
          reader.readAsArrayBuffer(e.target.files[0]);

          return defer.promise;
          
        }, function (err) {
          console.warn(err);
          alert('houve um erro ao criar o projeto');
        })
        .then(function (contents) {
          var newProjectRoot = path.join(habemus.get('projectsPath'), projectName);

          try {
            var zip = new JSZip();
            zip.load(contents);
          } catch (e) {
            alert('invalid file');
            return;
          }

          var writePromises = [];

          for (filepath in zip.files) {
            if (zip.files.hasOwnProperty(filepath)) {

              var file = zip.files[filepath];

              if (file.dir) {
                // do nothing
                // console.log('found dir entry in zip file')
              } else if (/^__MACOSX/.test(filepath)) {
                // skip
              } else {
                var fileContents = zip.files[filepath].asArrayBuffer();

                // write the file
                var writePromise = habemus.services.fs.writeFilep(path.join(newProjectRoot, filepath), fileContents)
                  .then(function () {

                    console.log('written!');
                  }, function (err) {
                    console.warn(err);
                  });

                // add the promise to the array of promises
                writePromises.push(writePromise);
              }
            }
          }

          return Q.all(writePromises);
        })
        .then(function () {
          return habemus.openProject(projectName);
        });
    }
  }


  // initialize!!!
  habemus.loadAvailableProjects();
};
},{"jszip":115,"path":155,"q":165,"slug":188}],204:[function(require,module,exports){
module.exports = function (habemus, options) {

  var editorEl = document.querySelector('#editor');
  var editor   = require('../ui/editor')(habemus, editorEl);

  var fileTreeEl = document.querySelector('#file-browser');
  var fileTree   = require('../ui/file-browser')(habemus, fileTreeEl); 

  var previewerEl = document.querySelector('#previewer');
  var previewer   = require('../ui/previewer')(habemus, previewerEl);

  habemus.set('elements.editor', editor);
  habemus.set('elements.fileTree', fileTree);
  habemus.set('elements.previewer', previewer);

  return habemus.get('elements');
};
},{"../ui/editor":215,"../ui/file-browser":216,"../ui/previewer":217}],205:[function(require,module,exports){
module.exports = function (habemus, options) {

};
},{}],206:[function(require,module,exports){
var WebFs     = require('../services/web-fs');

module.exports = function (habemus, options) {
  var webFs     = new WebFs();
  var serviceWorkerRPC = require('../services/service-worker-rpc');

  serviceWorkerRPC.expose({
    getActiveProjectRootPath: function () {
      return habemus.getActiveProjectRootPath();
    }
  });

  habemus.services = {
    webFs: webFs,
    serviceWorkerRPC: serviceWorkerRPC,
    fs: require('../services/fs')
  };

};
},{"../services/fs":212,"../services/service-worker-rpc":213,"../services/web-fs":214}],207:[function(require,module,exports){
var startingSlashRegExp = /^\/*/;
var trailingSlashRegExp = /\/*$/;
var slashesRegExp = /(^\/*)|(\/*$)/g;

function trimStart(p) {
  return p.replace(startingSlashRegExp, '');
}

function trimTrailing(p) {
  return p.replace(trailingSlashRegExp, '');
}

function trim(p) {
  return p.replace(slashesRegExp, '');
}

function splitPath(p) {
  return trim(p).split('/');
};

exports.trimStart = trimStart;
exports.trimTrailing = trimTrailing;
exports.trim = trim;
exports.splitPath = splitPath;
},{}],208:[function(require,module,exports){
'use strict';

var _ = require('lodash');
var util = require('util');

var aux = require('./auxiliary');

var EntryData = require('./entry');
var FileData  = require('./file');

function _directoryDefaultEntrySortFn(a, b) {

  if (a.type === 'directory' && b.type === 'file') {
    return -1;
  } else if (a.type === 'file' && b.type === 'directory') {
    return 1;
  } else {
    // both are of the same level, compare names
    return a.name < b.name ? -1 : 1;
  }

}

function DirectoryData(name, parent, data) {

  EntryData.call(this, 'directory', name, parent, data);

  // array containing entries of the directory
  this.entries = [];
}

util.inherits(DirectoryData, EntryData);

DirectoryData.prototype.addDirectory = function (dirname, data) {
  var dir = new DirectoryData(dirname, this, data);

  this._addEntry(dir);

  return dir;
};

/**
 * Adds a file to the given path.
 * @param {String} filePath [description]
 * @param {Object} data     [description]
 * @return {FileData} [description]
 */
DirectoryData.prototype.addFile = function (filePath, data) {
  // break the filePath into parts so its easier to manipulate it
  var parts = Array.isArray(filePath) ? filePath : aux.splitPath(filePath);

  // get the current part
  var currentPart = parts.shift();

  // check if this is the leaf
  var isLeaf = (parts.length === 0);

  // try to find the first entry
  var entry = _.find(this.entries, function (e) {
    return e.name === currentPart;
  });

  if (entry) {

    // entry exists
    // if we are adding a leaf, simply set data onto file
    if (isLeaf) {
      entry.data = data;
      return entry;
    } else {
      // further addition request
      return entry.addFile(parts, data);
    }

  } else {

    // entry does not exist, thus, create it
    if (isLeaf) {
      // create a file object and add it
      var fileData = new FileData(currentPart, this, data);

      fileData.on('progress', function (progress) {
        console.log('aaa', progress)
      });

      this._addEntry(fileData);

      return fileData;
    } else {

      // create a directory object and tell it to add the file
      var dir = this.addDirectory(currentPart, data);

      return dir.addFile(parts, data);
    }
  }
};

DirectoryData.prototype._getEntry = function (entryPath) {
  // break the entryPath into parts so its easier to manipulate it
  var parts = Array.isArray(entryPath) ? entryPath : aux.splitPath(entryPath);

  var currentPart = parts.shift();

  var isLeaf = (parts.length === 0);

  if (currentPart === '') {
    return this;
  }

  // try to find current part
  var entry = _.find(this.entries, function (e) {
    return e.name === currentPart;
  });

  if (entry) {
    return isLeaf ? entry : entry._getEntry(parts);
  } else {
    // throw new Error('entry not found');
  }
};

DirectoryData.prototype.getFile = function (filePath) {
  var entry = this._getEntry(filePath);

  if (entry instanceof FileData) {
    return entry;
  }
};

DirectoryData.prototype.getDirectory = function (directoryPath) {
  var entry = this._getEntry(directoryPath);

  if (entry instanceof DirectoryData) {
    return entry;
  }
};

DirectoryData.prototype._addEntry = function (entry) {
  this.entries.push(entry);
  this.sortEntries();
}

DirectoryData.prototype.sortEntries = function (fn) {

  var sortFn = fn || _directoryDefaultEntrySortFn;

  this.entries.sort(sortFn);
};

Object.defineProperty(DirectoryData.prototype, 'isEmpty', {
  get: function () {
    return (this.entries.length === 0);
  },

  set: function () {
    throw new Error('set prohibited');
  }
})

module.exports = DirectoryData;
},{"./auxiliary":207,"./entry":209,"./file":210,"lodash":130,"util":194}],209:[function(require,module,exports){
// native
var EventEmitter = require('events').EventEmitter;
var util         = require('util');

// external
var _ = require('lodash');

function EntryData(type, name, parent, data) {

  if (!type) {
    throw new Error('EntryData requires a type');
  }

  if (!name) {
    throw new Error('EntryData requires a name');
  }

  this.type   = type;
  this.name   = name;
  this.parent = parent;

  this.data   = data || {};
}

util.inherits(EntryData, EventEmitter);

Object.defineProperty(EntryData.prototype, 'isDirectory', {
  get: function () {
    return this.type === 'directory';
  }
});

Object.defineProperty(EntryData.prototype, 'path', {
  get: function () {
    var parts   = [];
    var current = this;

    while (current.parent) {
      parts.unshift(current.name);
      current = current.parent;
    }

    return '/' + parts.join('/');
  }
});

Object.defineProperty(EntryData.prototype, 'isFile', {
  get: function () {
    return this.type === 'file';
  }
});

module.exports = EntryData;
},{"events":85,"lodash":130,"util":194}],210:[function(require,module,exports){
var util = require('util');

var EntryData = require('./entry');

function FileData(name, parent, data) {

  EntryData.call(this, 'file', name, parent, data);
}

util.inherits(FileData, EntryData);

module.exports = FileData;
},{"./entry":209,"util":194}],211:[function(require,module,exports){
// native
var EventEmitter = require('events');
var util         = require('util');

// third-party
var Q = require('q');
var json = require('json-message');
var objectPath = require('object-path');

function RPCNode(options) {
  // check for required options
  if (!options.apiVersion) { throw new Error('apiVersion is required'); }

  if (options.sendMessage) {
    this.sendMessage = options.sendMessage;
  }

  if (!this.sendMessage) { throw new Error('sendMessage method must be implemented'); }

  // create an instance of the jsonMessageAPI
  this.messageAPI = json(options.apiVersion);

  // bind the handleMessage method to the instance
  this.handleMessage = this.handleMessage.bind(this);

  /**
   * Indicates the type of the RPCNode instance
   * may be 'client', 'server' or '*'
   * @type {String}
   */
  this.type = options.type || '*';

  if (this.type === 'server' || this.type === '*') {
    this.api = {};
  }

  if (this.type === 'client' || this.type === '*') {
    this._sentRequests = {};
  }
}

util.inherits(RPCNode, EventEmitter);

/**
 * Executes a method on the remote server.
 * @param  {String} method
 * @param  {Array} parameters
 * @return {Promise}
 */
RPCNode.prototype.exec = function (method, parameters) {

  var request = this.messageAPI.request.rpc(method, parameters);

  this.sendMessage(request);

  // create a deferred object
  var deferred = Q.defer();

  // json-message assures the deferred property won't be stringified
  request.deferred = deferred;

  this._sentRequests[request.id] = request;

  // return the promise
  return deferred.promise;
};

/**
 * Emits an event on remote nodes
 * @param  {String} eventName 
 * @param  {Object} data
 */
RPCNode.prototype.notify = function (eventName, data) {
  var notification = this.messageAPI.notification.event(eventName, data);

  this.sendMessage(notification);
}

/**
 * Handles 
 * @param  {String|Object} message
 */
RPCNode.prototype.handleMessage = function (message) {

  if (!message) { return; }

  // make sure the message is in object format
  message = (typeof message === 'string') ? JSON.parse(message) : message;

  // check for the type of the message
  switch (message.type) {
    case 'rpc-request':
      this.handleRequest(message);
      break;
    case 'response':
      this.handleResponse(message);
      break;
    case 'notification':
      this.handleNotification(message);
      break;
  }

};

/**
 * Handles a response
 * @param  {Object} response
 */
RPCNode.prototype.handleResponse = function (response) {

  // retrieve original request for the response
  var request = this._sentRequests[response.id];

  if (!request) {
    // console.warn('could not find the original request for %s', response.id);
    return;
  }

  if (response.error) {
    request.deferred.reject(response.error);
  } else {
    request.deferred.resolve(response.data);
  }

  // remove reference to the request
  delete this._sentRequests[response.id];
};

/**
 * Handles a request
 * @param  {Object} request
 */
RPCNode.prototype.handleRequest = function (request) {

  if (this.type === 'client') { throw new Error('RPCNode client is not capable of handling requests'); }

  // create a response object
  var response = this.messageAPI.response.item(request);

  // get the function
  var fn = objectPath.get(this.api, request.method);

  if (typeof fn !== 'function') {

    response.err(500, 'method not defined');

    this.sendMessage(response);
  } else {

    Q(fn.apply(this, request.params))
      .then(function (result) {

        response.data = result;

        this.sendMessage(response);
      }.bind(this), function (err) {

        response.err(500, err.toString());

        this.sendMessage(response);
      }.bind(this))
      .done();
  }

};

/**
 * Handles a notification message.
 * Emits an event with the eventName and its data.
 */
RPCNode.prototype.handleNotification = function (notification) {

  // emit the event locally
  this.emit(notification.eventName, notification.data);
};

/**
 * Exposes methods to be used by remote client
 */
RPCNode.prototype.expose = function () {

  if (this.type === 'client') { throw new Error('client RPCNode instance is not capable of exposing api'); }

  if (arguments.length === 1 && typeof arguments[0] === 'object') {
    // get all methods from the object and expose them
    for (methodName in arguments[0]) {
      if (arguments[0].hasOwnProperty(methodName)) {
        this.api[methodName] = arguments[0][methodName];
      }
    }
    
  } else if (arguments.length === 2) {
    this.api[arguments[0]] = arguments[1];
  }
}

module.exports = RPCNode;
},{"events":85,"json-message":98,"object-path":134,"q":165,"util":194}],212:[function(require,module,exports){
// own
var rpc = require('../service-worker-rpc');


function _defineProxyFn(obj, methodName) {

  obj[methodName] = function () {
    var args = Array.prototype.slice.call(arguments, 0);
    return rpc.exec('fs.' + methodName, args);
  };

}

var METHODS = [
  'readFile',
  'writeFile',

  'readdir',
  'mkdir',

  'unlink',

  // aditional
  'mkdirp',
  'writeFilep',
  'rimraf',
];

METHODS.forEach(_defineProxyFn.bind(null, exports));
},{"../service-worker-rpc":213}],213:[function(require,module,exports){
// native
var util = require('util');

var RPCNode = require('../../lib/rpc-node');

// sw registration (should be done only once)
navigator.serviceWorker.register('/sw.bundle.js', { scope: '/' })
  // Wait until the service worker is active.
  .then(function(registration) {
    // console.log('ServiceWorker registration successful with scope: ', registration.scope);

    return navigator.serviceWorker.ready;
  })
  .then(function () {
    if (navigator.serviceWorker.controller) {
      // console.log('The service worker is currently handling network operations.');
    } else {
      // console.log('Please reload this page to allow the service worker to handle network operations.');
    }
  })
  .catch(function(error) {
    // Something went wrong during registration. The service-worker.js file
    // might be unavailable or contain a syntax error.
    console.warn('sw error', error)
  });

function ServiceWorkerRPC(options) {

  RPCNode.call(this, {
    apiVersion: '0.0.0'
  });

  // Set up a listener for messages posted from the service worker.
  navigator.serviceWorker.addEventListener('message', function (event) {
    this.handleMessage(event.data);
  }.bind(this));
}

util.inherits(ServiceWorkerRPC, RPCNode);

ServiceWorkerRPC.prototype.sendMessage = function (message) {
  navigator.serviceWorker.controller.postMessage(message.toJSON());
};

module.exports = new ServiceWorkerRPC();
},{"../../lib/rpc-node":211,"util":194}],214:[function(require,module,exports){
(function (Buffer){
// native
var EventEmitter = require('events');
var util         = require('util');
var path         = require('path');



// var fs = require('fs');

// fs.writeFile('test', 'hahsajdhasjdhas', function () {

//   fs.readFile('test', function (contents) {
//     console.log('read!')
//     console.log(contents)
//   })

// });



// third-party
var File = require('vinyl');
var Q     = require('q');

// own
var DirectoryModel = require('../../lib/file-system/directory');

function WebFs() {

  EventEmitter.call(this);

  this.fs = new DirectoryModel('/');
};

util.inherits(WebFs, EventEmitter);

WebFs.prototype.readdir = function (dirpath) {
  var defer = Q.defer();

  var directory = this.fs.getDirectory(dirpath);

  if (!directory) {
    defer.reject(new Error('not found ' + dirpath));
  } else {
    defer.resolve(directory.entries);
  }

  return defer.promise;
};

WebFs.prototype.writeFile = function (filepath, contents, options) {

  var defer = Q.defer();

  // get the directory of the file
  var dirpath = path.dirname(filepath);

  var file = new File({
    cwd: '/',
    base: dirpath,
    path: filepath,
    contents: Buffer.isBuffer(contents) ? contents : new Buffer(contents),
  });

  this.fs.addFile(filepath, file);

  // this.emit('write', file);

  this.emit('file-change', {
    filepath: filepath,
    file: file
  });

  // https://nodejs.org/docs/latest/api/fs.html#fs_fs_watch_filename_options_listener
  // The listener callback gets two arguments (event, filename). 
  // event is either 'rename' or 'change',
  // and filename is the name of the file which triggered the event.


  defer.resolve(file);

  return defer.promise;
};

WebFs.prototype.readFile = function (filepath) {
  var defer = Q.defer();

  if (typeof filepath !== 'string') { defer.reject(new TypeError('filepath must be a string')); }

  var file = this.fs.getFile(filepath);

  if (!file) {
    defer.reject(new Error('File does not exist: ' + filepath));
  } else {
    defer.resolve(file.data);
  }

  return defer.promise;
};

WebFs.prototype.unlink = function (filepath) {
  var defer = Q.defer();

  var file = this._entries[filepath];

  if (file) {
    this.emit('unlink', file);
    delete file;
    defer.resolve();

  } else {

    defer.reject(new Error('file does not exist'));
  }

  return defer.promise;
};

module.exports = WebFs;
}).call(this,require("buffer").Buffer)
},{"../../lib/file-system/directory":208,"buffer":45,"events":85,"path":155,"q":165,"util":194,"vinyl":195}],215:[function(require,module,exports){
(function (Buffer){
// native
var path = require('path');

// constants
var MODES = {
  js: 'javascript',
  json: 'json',
  css: 'css',
  html: 'html',
  md: 'markdown',
};

function getModeFromPath(filepath) {
  var extension = path.extname(filepath).replace(/^\./, '');

  return MODES[extension] || extension;
}

module.exports = function (habemus, element, options) {
  
  var EDITOR_PATH;

  function _openFile(filepath) {

    habemus.services.fs.readFile(filepath)
      .then(function (contents) {
        EDITOR_PATH = filepath
        // 
        var aceMode = 'ace/mode/' + getModeFromPath(filepath);

        // create a session
        var editSession = ace.createEditSession(new Buffer(contents).toString(), aceMode);

        editor.setSession(editSession);
      }, function (err) {
        console.warn('could not load file at %s', filepath, err);
      });
  }

  function _closeAll() {
    // set editor path to false so that it is not able to save anymore
    EDITOR_PATH = undefined;

    var editSession = ace.createEditSession('', 'markdown');

    editor.setSession(editSession);
  }

  var editor = ace.edit(element);
  editor.setTheme("ace/theme/chrome");

  habemus.addEventListener('active-filepath-changed', function () {
    _openFile(habemus.get('activeFilepath'));
  });

  habemus.addEventListener('habemus-active-project-changed', function () {
    _closeAll();
  });


  editor.on('change', function () {

    // save only if there is a path to be saved
    if (EDITOR_PATH) {
      var value = editor.getValue();
      habemus.services.fs.writeFile(EDITOR_PATH, value);
    }
  });

  var _originalCursorChange = editor.onCursorChange.bind(editor);

  editor.onCursorChange = function (e) {

    var position       = editor.getCursorPosition();
    var editedDocument = editor.getSession().getDocument();

    var charPos = editedDocument.getLines(0, position.row - 1).reduce(function (res, line) {
      return res + line.length + 1;
    }, 0);

    charPos = charPos + position.column;

    habemus.services.serviceWorkerRPC.notify('cursor-position-change', {
      filepath: EDITOR_PATH,
      position: charPos
    });

    _originalCursorChange(e);
  };

  editor.on('cursorChange', function (e) {
    console.log('cursorChange', e);
  });
};
}).call(this,require("buffer").Buffer)
},{"buffer":45,"path":155}],216:[function(require,module,exports){
// native
var path = require('path');

// third-party
var Q = require('q');

var ROOT = '/canvas';

// auxiliary function
function inferTypeByPath(p) {
  return (path.extname(p) === '') ? 'directory' : 'file';
}

function readBrowserFile(fileObject) {
  var defer = Q.defer();
  var reader = new FileReader();

  reader.onload = function () {
    defer.resolve(reader.result);
  };

  // start reading
  reader.readAsArrayBuffer(fileObject);

  return defer.promise;
}
 
module.exports = function (habemus, element, options) {

  if (!element) { throw new Error('element is required'); }

  // wrap the element in jquery so that we can use jstree
  var $element = $(element);

  habemus.addEventListener('habemus-active-project-changed', function () {

    instantiateJSTree();
    $element.jstree('refresh');
  });

  $element.on('activate_node.jstree', function (e, data) {

    var node = data.node;
    var nodePath = node.id;

    // get its type
    var nodeType = inferTypeByPath(nodePath);

    if (nodeType === 'file') {
      habemus.openFile(node.id);
    }
  });

  var directoryNodeSelector = '.jstree-node:not(.jstree-leaf)';


  $(document).on('dragover', function (e) {
    e.preventDefault();
    e.stopPropagation();
  });
  $(document).on('dragleave', function (e) {
    e.preventDefault();
    e.stopPropagation();
  });

  $element.delegate(directoryNodeSelector, 'dragover', function (e) {

    $(e.currentTarget).addClass('drop-target');

    $element.jstree('open_node', $(e.currentTarget));

    e.preventDefault();
    e.stopPropagation();
  });

  $element.delegate(directoryNodeSelector, 'dragenter', function (e) {
    e.preventDefault();
    e.stopPropagation();
  });

  $element.delegate(directoryNodeSelector, 'dragleave', function (e) {
    $(e.currentTarget).removeClass('drop-target');
  })

  $element.delegate(directoryNodeSelector, 'drop', function (e) {
    e.preventDefault();
    e.stopPropagation();

    // the id is used by jstree to store the filepath
    var dirpath = e.currentTarget.id;
    var dt      = e.originalEvent.dataTransfer;
    var files   = Array.prototype.slice.call(dt.files, 0);

    var writePromises = files.map(function (fileObject) {
      var filepath = path.join(dirpath, fileObject.name);

      return readBrowserFile(fileObject).then(function (contents) {
          return habemus.services.fs.writeFile(filepath, contents);
        })
        .then(function () {
          console.log('written');
        });
    });

    console.log(writePromises);

    var allWrites = Q.all(writePromises);

    allWrites.then(function () {

      setTimeout(function () {
        console.log('refresh');
        $element.jstree('refresh_node', $(e.currentTarget));
      }, 500);
    })
  });

  function instantiateJSTree() {

    $element.jstree({
      core: {
        check_callback: true,
        data: function (node, cb) {

          var nodePath;

          if (node.id === '#') {
            
              var activeProject = habemus.get('activeProject');
              var id = habemus.getActiveProjectRootPath();
              cb([
                {
                  text: activeProject,
                  id: id,
                  children: true,
                }
              ]);

          } else {
            nodePath = node.id;


            function genJSTreeData(dirContents) {

              return dirContents.map(function (name) {

                var isDirectory = inferTypeByPath(name) === 'directory';

                return {
                  text: name,
                  id: path.join(nodePath, name),
                  // has children if is a directory
                  children: isDirectory,
                  icon: isDirectory ? undefined : 'jstree-file'
                };
              });
            }

            habemus.services.fs.readdir(nodePath)
              .then(function (dirContents) {
                cb(genJSTreeData(dirContents))
              }, function (err) {
                console.warn(err);
              })
              .done();
          }
        },
      },

      plugins: ["contextmenu", "wholerow"],

      contextmenu: {
        items: function(node) {

          // auxiliary functions
          function _refreshNode() {
            $element.jstree('refresh_node', node);
            $element.jstree('open_node', node);
          }

          function _warn(err) {
            console.warn('error on context menu action', err);
          }


          var nodePath = node.id;
          var nodeType = inferTypeByPath(nodePath);

          if (nodeType === 'directory') {

            // DIRECTORIES
            return {
              renameDirectory: {
                label: 'renomear',
                action: function(obj) {

                  var newName = prompt('Nome do diretorio');

                  if (newName) {
                    $element.jstree('rename_node', node, newName);
                  }
                },
              },
              createFile: {
                label: 'criar arquivo',
                action: function (obj) {

                  var fileBasename = prompt('Nome do arquivo');

                  if (fileBasename) {
                    var filepath = path.join(nodePath, fileBasename);

                    habemus.services.fs.writeFile(filepath, '')
                      .then(function () {
                        _refreshNode();
                      }, _warn);
                  }
                },
              },
              createDirectory: {
                label: 'nova pasta',
                action: function (obj) {

                  var directoryBasename = prompt('Nome da pasta');

                  if (directoryBasename) {
                    var directoryPath = path.join(nodePath, directoryBasename);

                    habemus.services.fs.mkdir(directoryPath)
                      .then(_refreshNode, _warn);
                  }
                }
              },

              removeDirectory: {
                label: 'remover pasta',
                action: function (obj) {

                  var confirmation = confirm('Todos os arquivos serão perdidos, você tem certeza?');

                  if (confirmation) {
                    habemus.services.fs.rimraf(nodePath)
                      .then(function () {
                        $element.jstree('refresh');
                      }, _warn);
                  }
                }
              }
            }

          } else {


            // FILES
            return {
              renameFile: {
                label: 'renomear',
                action: function(obj) {

                  var newName = prompt('Nome do arquivo');

                  if (newName) {
                    $element.jstree('rename_node', node, newName);
                  }
                },
              },

              removeFile: {
                label: 'remover arquivo',
                action: function (obj) {

                  var confirmation = confirm('Confirma apagar o arquivo ' + nodePath + '? Isto não poderá ser desfeito.');

                  if (confirmation) {
                    habemus.services.fs.unlink(nodePath)
                      .then(function () {
                        $element.jstree('refresh');

                      }, _warn);
                  }
                }
              }
            }

          }

        }
      }
    });
  }

}
},{"path":155,"q":165}],217:[function(require,module,exports){
module.exports = function (habemus, iframe) {

  if (!iframe) { throw new Error('iframe required'); }

  habemus.addEventListener('habemus-active-project-changed', function () {
    iframe.src = '/canvas/index.html';
  });
  
  habemus.services.serviceWorkerRPC.expose({
    reload: function () {

      iframe.contentWindow.location.reload(true)
      // document.location.reload(true);

      return true;
    }
  })
}
},{}]},{},[202])(202)
});